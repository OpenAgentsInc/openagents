name: Release oa-bridge binaries

on:
  push:
    tags:
      - 'v*'

permissions:
  contents: write

jobs:
  macos:
    name: macOS ${{ matrix.os }}
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [macos-13, macos-14]
    steps:
      - uses: actions/checkout@v4
      - uses: dtolnay/rust-toolchain@stable
      - name: Sanity check sources
        run: |
          set -euxo pipefail
          if rg -n "stable_item_id" crates/oa-bridge >/dev/null; then
            echo "Found stale symbol stable_item_id in bridge sources" >&2
            rg -n "stable_item_id" crates/oa-bridge || true
            exit 1
          fi
          if rg -n "try_finalize_stream_kind\([^,]+,[^,]+,[^,]+,[^)]*\)" crates/oa-bridge >/dev/null; then
            echo "Found old 4-arg try_finalize_stream_kind calls" >&2
            rg -n "try_finalize_stream_kind\([^,]+,[^,]+,[^,]+,[^)]*\)" crates/oa-bridge || true
            exit 1
          fi
      - name: Build (release)
        run: |
          cargo clean
          cargo build --release -p oa-bridge
      - name: Package artifact
        run: |
          set -euxo pipefail
          cd target/release
          BIN=oa-bridge
          if [ '${{ matrix.os }}' = 'macos-14' ]; then
            NAME=oa-bridge-aarch64-apple-darwin.zip
          else
            NAME=oa-bridge-x86_64-apple-darwin.zip
          fi
          zip -9 ${NAME} ${BIN}
          echo "ASSET_PATH=$(pwd)/${NAME}" >> $GITHUB_ENV
      - name: Upload release asset
        uses: softprops/action-gh-release@v2
        with:
          files: ${{ env.ASSET_PATH }}

  linux-amd64:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: dtolnay/rust-toolchain@stable
      - name: Install build deps (Linux)
        run: |
          sudo apt-get update
          sudo apt-get install -y libssl-dev pkg-config
      - name: Build (release)
        run: cargo build --release -p oa-bridge
      - name: Package artifact
        run: |
          set -euxo pipefail
          cd target/release
          BIN=oa-bridge
          NAME=oa-bridge-x86_64-unknown-linux-gnu.zip
          zip -9 ${NAME} ${BIN}
          echo "ASSET_PATH=$(pwd)/${NAME}" >> $GITHUB_ENV
      - name: Upload release asset
        uses: softprops/action-gh-release@v2
        with:
          files: ${{ env.ASSET_PATH }}

  linux-arm64:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: dtolnay/rust-toolchain@stable
      - name: Install cross
        uses: taiki-e/install-action@v2
        with:
          tool: cross
      - name: Build (aarch64-unknown-linux-gnu via cross)
        run: |
          set -euxo pipefail
          cross build --release -p oa-bridge --target aarch64-unknown-linux-gnu
      - name: Package artifact
        run: |
          set -euxo pipefail
          cd target/aarch64-unknown-linux-gnu/release
          BIN=oa-bridge
          NAME=oa-bridge-aarch64-unknown-linux-gnu.zip
          zip -9 ${NAME} ${BIN}
          echo "ASSET_PATH=$(pwd)/${NAME}" >> $GITHUB_ENV
      - name: Upload release asset
        uses: softprops/action-gh-release@v2
        with:
          files: ${{ env.ASSET_PATH }}

  windows:
    runs-on: windows-latest
    steps:
      - uses: actions/checkout@v4
      - uses: dtolnay/rust-toolchain@stable
      # Skip bash sanity checks on Windows (PowerShell doesn't support bash 'if' syntax)
      - name: Build (release)
        run: |
          cargo clean
          cargo build --release -p oa-bridge
      - name: Package artifact
        shell: pwsh
        run: |
          $ErrorActionPreference = 'Stop'
          $Bin = Join-Path target\release oa-bridge.exe
          $Name = 'oa-bridge-x86_64-pc-windows-msvc.zip'
          Compress-Archive -Path $Bin -DestinationPath $Name -Force
          echo "ASSET_PATH=$PWD\$Name" | Out-File -FilePath $env:GITHUB_ENV -Encoding utf8 -Append
      - name: Upload release asset
        uses: softprops/action-gh-release@v2
        with:
          files: ${{ env.ASSET_PATH }}
