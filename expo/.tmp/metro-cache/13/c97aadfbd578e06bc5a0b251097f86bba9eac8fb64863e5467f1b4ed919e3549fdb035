{"dependencies":[],"output":[{"data":{"code":"__d(function (global, require, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {\n  // Clean up tokens after emphasis and strikethrough postprocessing:\n  // merge adjacent text nodes into one and re-calculate all token levels\n  //\n  // This is necessary because initially emphasis delimiter markers (*, _, ~)\n  // are treated as their own separate text tokens. Then emphasis rule either\n  // leaves them as text (needed to merge with adjacent text) or turns them\n  // into opening/closing tags (which messes up levels inside).\n  //\n  'use strict';\n\n  module.exports = function text_collapse(state) {\n    var curr,\n      last,\n      level = 0,\n      tokens = state.tokens,\n      max = state.tokens.length;\n    for (curr = last = 0; curr < max; curr++) {\n      // re-calculate levels after emphasis/strikethrough turns some text nodes\n      // into opening/closing tags\n      if (tokens[curr].nesting < 0) level--; // closing tag\n      tokens[curr].level = level;\n      if (tokens[curr].nesting > 0) level++; // opening tag\n\n      if (tokens[curr].type === 'text' && curr + 1 < max && tokens[curr + 1].type === 'text') {\n        // collapse two adjacent text nodes\n        tokens[curr + 1].content = tokens[curr].content + tokens[curr + 1].content;\n      } else {\n        if (curr !== last) {\n          tokens[last] = tokens[curr];\n        }\n        last++;\n      }\n    }\n    if (curr !== last) {\n      tokens.length = last;\n    }\n  };\n});","lineCount":39,"map":[[2,2,1,0],[3,2,2,0],[4,2,3,0],[5,2,4,0],[6,2,5,0],[7,2,6,0],[8,2,7,0],[9,2,8,0],[10,2,9,0],[10,14,9,12],[12,2,12,0,"module"],[12,8,12,6],[12,9,12,7,"exports"],[12,16,12,14],[12,19,12,17],[12,28,12,26,"text_collapse"],[12,41,12,39,"text_collapse"],[12,42,12,40,"state"],[12,47,12,45],[12,49,12,47],[13,4,13,2],[13,8,13,6,"curr"],[13,12,13,10],[14,6,13,12,"last"],[14,10,13,16],[15,6,14,6,"level"],[15,11,14,11],[15,14,14,14],[15,15,14,15],[16,6,15,6,"tokens"],[16,12,15,12],[16,15,15,15,"state"],[16,20,15,20],[16,21,15,21,"tokens"],[16,27,15,27],[17,6,16,6,"max"],[17,9,16,9],[17,12,16,12,"state"],[17,17,16,17],[17,18,16,18,"tokens"],[17,24,16,24],[17,25,16,25,"length"],[17,31,16,31],[18,4,18,2],[18,9,18,7,"curr"],[18,13,18,11],[18,16,18,14,"last"],[18,20,18,18],[18,23,18,21],[18,24,18,22],[18,26,18,24,"curr"],[18,30,18,28],[18,33,18,31,"max"],[18,36,18,34],[18,38,18,36,"curr"],[18,42,18,40],[18,44,18,42],[18,46,18,44],[19,6,19,4],[20,6,20,4],[21,6,21,4],[21,10,21,8,"tokens"],[21,16,21,14],[21,17,21,15,"curr"],[21,21,21,19],[21,22,21,20],[21,23,21,21,"nesting"],[21,30,21,28],[21,33,21,31],[21,34,21,32],[21,36,21,34,"level"],[21,41,21,39],[21,43,21,41],[21,44,21,42],[21,45,21,43],[22,6,22,4,"tokens"],[22,12,22,10],[22,13,22,11,"curr"],[22,17,22,15],[22,18,22,16],[22,19,22,17,"level"],[22,24,22,22],[22,27,22,25,"level"],[22,32,22,30],[23,6,23,4],[23,10,23,8,"tokens"],[23,16,23,14],[23,17,23,15,"curr"],[23,21,23,19],[23,22,23,20],[23,23,23,21,"nesting"],[23,30,23,28],[23,33,23,31],[23,34,23,32],[23,36,23,34,"level"],[23,41,23,39],[23,43,23,41],[23,44,23,42],[23,45,23,43],[25,6,25,4],[25,10,25,8,"tokens"],[25,16,25,14],[25,17,25,15,"curr"],[25,21,25,19],[25,22,25,20],[25,23,25,21,"type"],[25,27,25,25],[25,32,25,30],[25,38,25,36],[25,42,26,8,"curr"],[25,46,26,12],[25,49,26,15],[25,50,26,16],[25,53,26,19,"max"],[25,56,26,22],[25,60,27,8,"tokens"],[25,66,27,14],[25,67,27,15,"curr"],[25,71,27,19],[25,74,27,22],[25,75,27,23],[25,76,27,24],[25,77,27,25,"type"],[25,81,27,29],[25,86,27,34],[25,92,27,40],[25,94,27,42],[26,8,29,6],[27,8,30,6,"tokens"],[27,14,30,12],[27,15,30,13,"curr"],[27,19,30,17],[27,22,30,20],[27,23,30,21],[27,24,30,22],[27,25,30,23,"content"],[27,32,30,30],[27,35,30,33,"tokens"],[27,41,30,39],[27,42,30,40,"curr"],[27,46,30,44],[27,47,30,45],[27,48,30,46,"content"],[27,55,30,53],[27,58,30,56,"tokens"],[27,64,30,62],[27,65,30,63,"curr"],[27,69,30,67],[27,72,30,70],[27,73,30,71],[27,74,30,72],[27,75,30,73,"content"],[27,82,30,80],[28,6,31,4],[28,7,31,5],[28,13,31,11],[29,8,32,6],[29,12,32,10,"curr"],[29,16,32,14],[29,21,32,19,"last"],[29,25,32,23],[29,27,32,25],[30,10,32,27,"tokens"],[30,16,32,33],[30,17,32,34,"last"],[30,21,32,38],[30,22,32,39],[30,25,32,42,"tokens"],[30,31,32,48],[30,32,32,49,"curr"],[30,36,32,53],[30,37,32,54],[31,8,32,56],[32,8,34,6,"last"],[32,12,34,10],[32,14,34,12],[33,6,35,4],[34,4,36,2],[35,4,38,2],[35,8,38,6,"curr"],[35,12,38,10],[35,17,38,15,"last"],[35,21,38,19],[35,23,38,21],[36,6,39,4,"tokens"],[36,12,39,10],[36,13,39,11,"length"],[36,19,39,17],[36,22,39,20,"last"],[36,26,39,24],[37,4,40,2],[38,2,41,0],[38,3,41,1],[39,0,41,2],[39,3]],"functionMap":{"names":["<global>","text_collapse"],"mappings":"AAA;iBCW;CD6B"},"hasCjsExports":true},"type":"js/module"}]}