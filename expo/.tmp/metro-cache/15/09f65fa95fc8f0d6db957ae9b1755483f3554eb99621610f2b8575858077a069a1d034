{"dependencies":[{"name":"react","data":{"asyncType":null,"isESMImport":false,"locs":[{"start":{"line":4,"column":16,"index":126},"end":{"line":4,"column":32,"index":142}}],"key":"XN65eZP/QkNMzaBAXbG/zPyidpY=","exportNames":["*"],"imports":1}},{"name":"../Route","data":{"asyncType":null,"isESMImport":false,"locs":[{"start":{"line":5,"column":16,"index":160},"end":{"line":5,"column":35,"index":179}}],"key":"ic98XhoR1v7tz4h3RiVql/NxHng=","exportNames":["*"],"imports":1}},{"name":"../global-state/router-store","data":{"asyncType":null,"isESMImport":false,"locs":[{"start":{"line":6,"column":23,"index":204},"end":{"line":6,"column":62,"index":243}}],"key":"ghHUzF1VPw0wdSsECTEZrb/SNiA=","exportNames":["*"],"imports":1}},{"name":"../matchers","data":{"asyncType":null,"isESMImport":false,"locs":[{"start":{"line":7,"column":19,"index":264},"end":{"line":7,"column":41,"index":286}}],"key":"lD+VV93WPi10A3qv5+9m649ytvA=","exportNames":["*"],"imports":1}}],"output":[{"data":{"code":"__d(function (global, require, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {\n  \"use strict\";\n\n  Object.defineProperty(exports, \"__esModule\", {\n    value: true\n  });\n  exports.useSitemap = useSitemap;\n  var react_1 = require(_dependencyMap[0]);\n  var Route_1 = require(_dependencyMap[1]);\n  var router_store_1 = require(_dependencyMap[2]);\n  var matchers_1 = require(_dependencyMap[3]);\n  var routeSegments = (route, parents) => [...parents, ...route.route.split('/')];\n  var routeHref = (route, parents) => '/' + routeSegments(route, parents).map(segment => {\n    // add an extra layer of entropy to the url for deep dynamic routes\n    if ((0, matchers_1.matchDynamicName)(segment)?.deep) {\n      return segment + '/' + Date.now();\n    }\n    // index must be erased but groups can be preserved.\n    return segment === 'index' ? '' : segment;\n  }).filter(Boolean).join('/');\n  var routeFilename = route => {\n    var segments = route.contextKey.split('/');\n    // join last two segments for layout routes\n    if (route.contextKey.match(/_layout\\.[jt]sx?$/)) {\n      return segments[segments.length - 2] + '/' + segments[segments.length - 1];\n    }\n    var routeSegmentsCount = route.route.split('/').length;\n    // Join the segment count in reverse order\n    // This presents files without layout routes as children with all relevant segments.\n    return segments.slice(-routeSegmentsCount).join('/');\n  };\n  var mapForRoute = (route, parents) => ({\n    contextKey: route.contextKey,\n    filename: routeFilename(route),\n    href: routeHref(route, parents),\n    isInitial: route.initialRouteName === route.route,\n    isInternal: route.internal ?? false,\n    isGenerated: route.generated ?? false,\n    children: [...route.children].sort(Route_1.sortRoutes).map(child => mapForRoute(child, routeSegments(route, parents)))\n  });\n  function useSitemap() {\n    var sitemap = (0, react_1.useMemo)(() => router_store_1.store.routeNode ? mapForRoute(router_store_1.store.routeNode, []) : null, [router_store_1.store.routeNode]);\n    return sitemap;\n  }\n});","lineCount":45,"map":[[2,2,1,0],[2,14,1,12],[4,2,2,0,"Object"],[4,8,2,6],[4,9,2,7,"defineProperty"],[4,23,2,21],[4,24,2,22,"exports"],[4,31,2,29],[4,33,2,31],[4,45,2,43],[4,47,2,45],[5,4,2,47,"value"],[5,9,2,52],[5,11,2,54],[6,2,2,59],[6,3,2,60],[6,4,2,61],[7,2,3,0,"exports"],[7,9,3,7],[7,10,3,8,"useSitemap"],[7,20,3,18],[7,23,3,21,"useSitemap"],[7,33,3,31],[8,2,4,0],[8,6,4,6,"react_1"],[8,13,4,13],[8,16,4,16,"require"],[8,23,4,23],[8,24,4,23,"_dependencyMap"],[8,38,4,23],[8,41,4,31],[8,42,4,32],[9,2,5,0],[9,6,5,6,"Route_1"],[9,13,5,13],[9,16,5,16,"require"],[9,23,5,23],[9,24,5,23,"_dependencyMap"],[9,38,5,23],[9,41,5,34],[9,42,5,35],[10,2,6,0],[10,6,6,6,"router_store_1"],[10,20,6,20],[10,23,6,23,"require"],[10,30,6,30],[10,31,6,30,"_dependencyMap"],[10,45,6,30],[10,48,6,61],[10,49,6,62],[11,2,7,0],[11,6,7,6,"matchers_1"],[11,16,7,16],[11,19,7,19,"require"],[11,26,7,26],[11,27,7,26,"_dependencyMap"],[11,41,7,26],[11,44,7,40],[11,45,7,41],[12,2,8,0],[12,6,8,6,"routeSegments"],[12,19,8,19],[12,22,8,22,"routeSegments"],[12,23,8,23,"route"],[12,28,8,28],[12,30,8,30,"parents"],[12,37,8,37],[12,42,8,42],[12,43,9,4],[12,46,9,7,"parents"],[12,53,9,14],[12,55,10,4],[12,58,10,7,"route"],[12,63,10,12],[12,64,10,13,"route"],[12,69,10,18],[12,70,10,19,"split"],[12,75,10,24],[12,76,10,25],[12,79,10,28],[12,80,10,29],[12,81,11,1],[13,2,12,0],[13,6,12,6,"routeHref"],[13,15,12,15],[13,18,12,18,"routeHref"],[13,19,12,19,"route"],[13,24,12,24],[13,26,12,26,"parents"],[13,33,12,33],[13,38,12,38],[13,41,12,41],[13,44,13,4,"routeSegments"],[13,57,13,17],[13,58,13,18,"route"],[13,63,13,23],[13,65,13,25,"parents"],[13,72,13,32],[13,73,13,33],[13,74,14,9,"map"],[13,77,14,12],[13,78,14,14,"segment"],[13,85,14,21],[13,89,14,26],[14,4,15,8],[15,4,16,8],[15,8,16,12],[15,9,16,13],[15,10,16,14],[15,12,16,16,"matchers_1"],[15,22,16,26],[15,23,16,27,"matchDynamicName"],[15,39,16,43],[15,41,16,45,"segment"],[15,48,16,52],[15,49,16,53],[15,51,16,55,"deep"],[15,55,16,59],[15,57,16,61],[16,6,17,12],[16,13,17,19,"segment"],[16,20,17,26],[16,23,17,29],[16,26,17,32],[16,29,17,35,"Date"],[16,33,17,39],[16,34,17,40,"now"],[16,37,17,43],[16,38,17,44],[16,39,17,45],[17,4,18,8],[18,4,19,8],[19,4,20,8],[19,11,20,15,"segment"],[19,18,20,22],[19,23,20,27],[19,30,20,34],[19,33,20,37],[19,35,20,39],[19,38,20,42,"segment"],[19,45,20,49],[20,2,21,4],[20,3,21,5],[20,4,21,6],[20,5,22,9,"filter"],[20,11,22,15],[20,12,22,16,"Boolean"],[20,19,22,23],[20,20,22,24],[20,21,23,9,"join"],[20,25,23,13],[20,26,23,14],[20,29,23,17],[20,30,23,18],[21,2,24,0],[21,6,24,6,"routeFilename"],[21,19,24,19],[21,22,24,23,"route"],[21,27,24,28],[21,31,24,33],[22,4,25,4],[22,8,25,10,"segments"],[22,16,25,18],[22,19,25,21,"route"],[22,24,25,26],[22,25,25,27,"contextKey"],[22,35,25,37],[22,36,25,38,"split"],[22,41,25,43],[22,42,25,44],[22,45,25,47],[22,46,25,48],[23,4,26,4],[24,4,27,4],[24,8,27,8,"route"],[24,13,27,13],[24,14,27,14,"contextKey"],[24,24,27,24],[24,25,27,25,"match"],[24,30,27,30],[24,31,27,31],[24,50,27,50],[24,51,27,51],[24,53,27,53],[25,6,28,8],[25,13,28,15,"segments"],[25,21,28,23],[25,22,28,24,"segments"],[25,30,28,32],[25,31,28,33,"length"],[25,37,28,39],[25,40,28,42],[25,41,28,43],[25,42,28,44],[25,45,28,47],[25,48,28,50],[25,51,28,53,"segments"],[25,59,28,61],[25,60,28,62,"segments"],[25,68,28,70],[25,69,28,71,"length"],[25,75,28,77],[25,78,28,80],[25,79,28,81],[25,80,28,82],[26,4,29,4],[27,4,30,4],[27,8,30,10,"routeSegmentsCount"],[27,26,30,28],[27,29,30,31,"route"],[27,34,30,36],[27,35,30,37,"route"],[27,40,30,42],[27,41,30,43,"split"],[27,46,30,48],[27,47,30,49],[27,50,30,52],[27,51,30,53],[27,52,30,54,"length"],[27,58,30,60],[28,4,31,4],[29,4,32,4],[30,4,33,4],[30,11,33,11,"segments"],[30,19,33,19],[30,20,33,20,"slice"],[30,25,33,25],[30,26,33,26],[30,27,33,27,"routeSegmentsCount"],[30,45,33,45],[30,46,33,46],[30,47,33,47,"join"],[30,51,33,51],[30,52,33,52],[30,55,33,55],[30,56,33,56],[31,2,34,0],[31,3,34,1],[32,2,35,0],[32,6,35,6,"mapForRoute"],[32,17,35,17],[32,20,35,20,"mapForRoute"],[32,21,35,21,"route"],[32,26,35,26],[32,28,35,28,"parents"],[32,35,35,35],[32,41,35,41],[33,4,36,4,"contextKey"],[33,14,36,14],[33,16,36,16,"route"],[33,21,36,21],[33,22,36,22,"contextKey"],[33,32,36,32],[34,4,37,4,"filename"],[34,12,37,12],[34,14,37,14,"routeFilename"],[34,27,37,27],[34,28,37,28,"route"],[34,33,37,33],[34,34,37,34],[35,4,38,4,"href"],[35,8,38,8],[35,10,38,10,"routeHref"],[35,19,38,19],[35,20,38,20,"route"],[35,25,38,25],[35,27,38,27,"parents"],[35,34,38,34],[35,35,38,35],[36,4,39,4,"isInitial"],[36,13,39,13],[36,15,39,15,"route"],[36,20,39,20],[36,21,39,21,"initialRouteName"],[36,37,39,37],[36,42,39,42,"route"],[36,47,39,47],[36,48,39,48,"route"],[36,53,39,53],[37,4,40,4,"isInternal"],[37,14,40,14],[37,16,40,16,"route"],[37,21,40,21],[37,22,40,22,"internal"],[37,30,40,30],[37,34,40,34],[37,39,40,39],[38,4,41,4,"isGenerated"],[38,15,41,15],[38,17,41,17,"route"],[38,22,41,22],[38,23,41,23,"generated"],[38,32,41,32],[38,36,41,36],[38,41,41,41],[39,4,42,4,"children"],[39,12,42,12],[39,14,42,14],[39,15,42,15],[39,18,42,18,"route"],[39,23,42,23],[39,24,42,24,"children"],[39,32,42,32],[39,33,42,33],[39,34,43,9,"sort"],[39,38,43,13],[39,39,43,14,"Route_1"],[39,46,43,21],[39,47,43,22,"sortRoutes"],[39,57,43,32],[39,58,43,33],[39,59,44,9,"map"],[39,62,44,12],[39,63,44,14,"child"],[39,68,44,19],[39,72,44,24,"mapForRoute"],[39,83,44,35],[39,84,44,36,"child"],[39,89,44,41],[39,91,44,43,"routeSegments"],[39,104,44,56],[39,105,44,57,"route"],[39,110,44,62],[39,112,44,64,"parents"],[39,119,44,71],[39,120,44,72],[39,121,44,73],[40,2,45,0],[40,3,45,1],[40,4,45,2],[41,2,46,0],[41,11,46,9,"useSitemap"],[41,21,46,19,"useSitemap"],[41,22,46,19],[41,24,46,22],[42,4,47,4],[42,8,47,10,"sitemap"],[42,15,47,17],[42,18,47,20],[42,19,47,21],[42,20,47,22],[42,22,47,24,"react_1"],[42,29,47,31],[42,30,47,32,"useMemo"],[42,37,47,39],[42,39,47,41],[42,45,47,48,"router_store_1"],[42,59,47,62],[42,60,47,63,"store"],[42,65,47,68],[42,66,47,69,"routeNode"],[42,75,47,78],[42,78,47,81,"mapForRoute"],[42,89,47,92],[42,90,47,93,"router_store_1"],[42,104,47,107],[42,105,47,108,"store"],[42,110,47,113],[42,111,47,114,"routeNode"],[42,120,47,123],[42,122,47,125],[42,124,47,127],[42,125,47,128],[42,128,47,131],[42,132,47,136],[42,134,47,138],[42,135,47,139,"router_store_1"],[42,149,47,153],[42,150,47,154,"store"],[42,155,47,159],[42,156,47,160,"routeNode"],[42,165,47,169],[42,166,47,170],[42,167,47,171],[43,4,48,4],[43,11,48,11,"sitemap"],[43,18,48,18],[44,2,49,0],[45,0,49,1],[45,3]],"functionMap":{"names":["<global>","routeSegments","routeHref","routeSegments.map$argument_0","routeFilename","mapForRoute","sort.map$argument_0","useSitemap","<anonymous>"],"mappings":"AAA;sBCO;CDG;kBEC;aCE;KDO;kBFE;sBIC;CJU;oBKC;aCS,4DD;ELC;AOC;yCCC,+FD;CPE"},"hasCjsExports":true},"type":"js/module"}]}