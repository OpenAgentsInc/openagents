{"dependencies":[{"name":"./ExpoUpdates","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":1,"column":0,"index":0},"end":{"line":1,"column":46,"index":46}}],"key":"xvfiwKXsFVvB05bziLrxffeS3bo=","exportNames":["*"],"imports":1}}],"output":[{"data":{"code":"__d(function (global, require, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {\n  \"use strict\";\n\n  Object.defineProperty(exports, '__esModule', {\n    value: true\n  });\n  function _interopDefault(e) {\n    return e && e.__esModule ? e : {\n      default: e\n    };\n  }\n  Object.defineProperty(exports, \"latestContext\", {\n    enumerable: true,\n    get: function () {\n      return latestContext;\n    }\n  });\n  Object.defineProperty(exports, \"addUpdatesStateChangeListener\", {\n    enumerable: true,\n    get: function () {\n      return addUpdatesStateChangeListener;\n    }\n  });\n  Object.defineProperty(exports, \"emitTestStateChangeEvent\", {\n    enumerable: true,\n    get: function () {\n      return emitTestStateChangeEvent;\n    }\n  });\n  Object.defineProperty(exports, \"resetLatestContext\", {\n    enumerable: true,\n    get: function () {\n      return resetLatestContext;\n    }\n  });\n  var _ExpoUpdates = require(_dependencyMap[0]);\n  var ExpoUpdatesModule = _interopDefault(_ExpoUpdates);\n  var latestContext = transformNativeStateMachineContext(ExpoUpdatesModule.default.initialContext);\n  ExpoUpdatesModule.default.addListener('Expo.nativeUpdatesStateChangeEvent', _handleNativeStateChangeEvent);\n  var _updatesStateChangeListeners = new Set();\n  // Reemits native state change events\n  function _handleNativeStateChangeEvent(params) {\n    var newParams = typeof params === 'string' ? JSON.parse(params) : {\n      ...params\n    };\n    var transformedContext = transformNativeStateMachineContext(newParams.context);\n    // only process state change events if they are in order\n    if (transformedContext.sequenceNumber <= latestContext.sequenceNumber) {\n      return;\n    }\n    newParams.context = transformedContext;\n    latestContext = transformedContext;\n    _updatesStateChangeListeners.forEach(listener => listener(newParams));\n  }\n  /**\n   * Add listener for state change events\n   * @hidden\n   */\n  var addUpdatesStateChangeListener = listener => {\n    _updatesStateChangeListeners.add(listener);\n    return {\n      remove() {\n        _updatesStateChangeListeners.delete(listener);\n      }\n    };\n  };\n  /**\n   * Allows JS test to emit a simulated native state change event (used in unit testing)\n   * @hidden\n   */\n  var emitTestStateChangeEvent = event => {\n    _handleNativeStateChangeEvent(event);\n  };\n  /**\n   * Allows JS test to reset latest context (and sequence number)\n   * @hidden\n   */\n  var resetLatestContext = () => {\n    latestContext = transformNativeStateMachineContext(ExpoUpdatesModule.default.initialContext);\n  };\n  function transformNativeStateMachineContext(originalNativeContext) {\n    var nativeContext = {\n      ...originalNativeContext\n    };\n    if (nativeContext.latestManifestString) {\n      nativeContext.latestManifest = JSON.parse(nativeContext.latestManifestString);\n      delete nativeContext.latestManifestString;\n    }\n    if (nativeContext.downloadedManifestString) {\n      nativeContext.downloadedManifest = JSON.parse(nativeContext.downloadedManifestString);\n      delete nativeContext.downloadedManifestString;\n    }\n    if (nativeContext.lastCheckForUpdateTimeString) {\n      nativeContext.lastCheckForUpdateTime = new Date(nativeContext.lastCheckForUpdateTimeString);\n      delete nativeContext.lastCheckForUpdateTimeString;\n    }\n    if (nativeContext.rollbackString) {\n      nativeContext.rollback = JSON.parse(nativeContext.rollbackString);\n      delete nativeContext.rollbackString;\n    }\n    return nativeContext;\n  }\n});","lineCount":103,"map":[[12,2,2,0,"Object"],[12,8,2,0],[12,9,2,0,"defineProperty"],[12,23,2,0],[12,24,2,0,"exports"],[12,31,2,0],[13,4,2,0,"enumerable"],[13,14,2,0],[14,4,2,0,"get"],[14,7,2,0],[14,18,2,0,"get"],[14,19,2,0],[15,6,2,0],[15,13,2,0,"latestContext"],[15,26,2,0],[16,4,2,0],[17,2,2,0],[18,2,21,0,"Object"],[18,8,21,0],[18,9,21,0,"defineProperty"],[18,23,21,0],[18,24,21,0,"exports"],[18,31,21,0],[19,4,21,0,"enumerable"],[19,14,21,0],[20,4,21,0,"get"],[20,7,21,0],[20,18,21,0,"get"],[20,19,21,0],[21,6,21,0],[21,13,21,0,"addUpdatesStateChangeListener"],[21,42,21,0],[22,4,21,0],[23,2,21,0],[24,2,33,0,"Object"],[24,8,33,0],[24,9,33,0,"defineProperty"],[24,23,33,0],[24,24,33,0,"exports"],[24,31,33,0],[25,4,33,0,"enumerable"],[25,14,33,0],[26,4,33,0,"get"],[26,7,33,0],[26,18,33,0,"get"],[26,19,33,0],[27,6,33,0],[27,13,33,0,"emitTestStateChangeEvent"],[27,37,33,0],[28,4,33,0],[29,2,33,0],[30,2,40,0,"Object"],[30,8,40,0],[30,9,40,0,"defineProperty"],[30,23,40,0],[30,24,40,0,"exports"],[30,31,40,0],[31,4,40,0,"enumerable"],[31,14,40,0],[32,4,40,0,"get"],[32,7,40,0],[32,18,40,0,"get"],[32,19,40,0],[33,6,40,0],[33,13,40,0,"resetLatestContext"],[33,31,40,0],[34,4,40,0],[35,2,40,0],[36,2,1,0],[36,6,1,0,"_ExpoUpdates"],[36,18,1,0],[36,21,1,0,"require"],[36,28,1,0],[36,29,1,0,"_dependencyMap"],[36,43,1,0],[37,2,1,0],[37,6,1,0,"ExpoUpdatesModule"],[37,23,1,0],[37,26,1,0,"_interopDefault"],[37,41,1,0],[37,42,1,0,"_ExpoUpdates"],[37,54,1,0],[38,2,2,7],[38,6,2,11,"latestContext"],[38,19,2,24],[38,22,2,27,"transformNativeStateMachineContext"],[38,56,2,61],[38,57,2,62,"ExpoUpdatesModule"],[38,74,2,79],[38,75,2,79,"default"],[38,82,2,79],[38,83,2,80,"initialContext"],[38,97,2,94],[38,98,2,95],[39,2,3,0,"ExpoUpdatesModule"],[39,19,3,17],[39,20,3,17,"default"],[39,27,3,17],[39,28,3,18,"addListener"],[39,39,3,29],[39,40,3,30],[39,76,3,66],[39,78,3,68,"_handleNativeStateChangeEvent"],[39,107,3,97],[39,108,3,98],[40,2,4,0],[40,6,4,6,"_updatesStateChangeListeners"],[40,34,4,34],[40,37,4,37],[40,41,4,41,"Set"],[40,44,4,44],[40,45,4,45],[40,46,4,46],[41,2,5,0],[42,2,6,0],[42,11,6,9,"_handleNativeStateChangeEvent"],[42,40,6,38,"_handleNativeStateChangeEvent"],[42,41,6,39,"params"],[42,47,6,45],[42,49,6,47],[43,4,7,4],[43,8,7,10,"newParams"],[43,17,7,19],[43,20,7,22],[43,27,7,29,"params"],[43,33,7,35],[43,38,7,40],[43,46,7,48],[43,49,7,51,"JSON"],[43,53,7,55],[43,54,7,56,"parse"],[43,59,7,61],[43,60,7,62,"params"],[43,66,7,68],[43,67,7,69],[43,70,7,72],[44,6,7,74],[44,9,7,77,"params"],[45,4,7,84],[45,5,7,85],[46,4,8,4],[46,8,8,10,"transformedContext"],[46,26,8,28],[46,29,8,31,"transformNativeStateMachineContext"],[46,63,8,65],[46,64,8,66,"newParams"],[46,73,8,75],[46,74,8,76,"context"],[46,81,8,83],[46,82,8,84],[47,4,9,4],[48,4,10,4],[48,8,10,8,"transformedContext"],[48,26,10,26],[48,27,10,27,"sequenceNumber"],[48,41,10,41],[48,45,10,45,"latestContext"],[48,58,10,58],[48,59,10,59,"sequenceNumber"],[48,73,10,73],[48,75,10,75],[49,6,11,8],[50,4,12,4],[51,4,13,4,"newParams"],[51,13,13,13],[51,14,13,14,"context"],[51,21,13,21],[51,24,13,24,"transformedContext"],[51,42,13,42],[52,4,14,4,"latestContext"],[52,17,14,17],[52,20,14,20,"transformedContext"],[52,38,14,38],[53,4,15,4,"_updatesStateChangeListeners"],[53,32,15,32],[53,33,15,33,"forEach"],[53,40,15,40],[53,41,15,42,"listener"],[53,49,15,50],[53,53,15,55,"listener"],[53,61,15,63],[53,62,15,64,"newParams"],[53,71,15,73],[53,72,15,74],[53,73,15,75],[54,2,16,0],[55,2,17,0],[56,0,18,0],[57,0,19,0],[58,0,20,0],[59,2,21,7],[59,6,21,13,"addUpdatesStateChangeListener"],[59,35,21,42],[59,38,21,46,"listener"],[59,46,21,54],[59,50,21,59],[60,4,22,4,"_updatesStateChangeListeners"],[60,32,22,32],[60,33,22,33,"add"],[60,36,22,36],[60,37,22,37,"listener"],[60,45,22,45],[60,46,22,46],[61,4,23,4],[61,11,23,11],[62,6,24,8,"remove"],[62,12,24,14,"remove"],[62,13,24,14],[62,15,24,17],[63,8,25,12,"_updatesStateChangeListeners"],[63,36,25,40],[63,37,25,41,"delete"],[63,43,25,47],[63,44,25,48,"listener"],[63,52,25,56],[63,53,25,57],[64,6,26,8],[65,4,27,4],[65,5,27,5],[66,2,28,0],[66,3,28,1],[67,2,29,0],[68,0,30,0],[69,0,31,0],[70,0,32,0],[71,2,33,7],[71,6,33,13,"emitTestStateChangeEvent"],[71,30,33,37],[71,33,33,41,"event"],[71,38,33,46],[71,42,33,51],[72,4,34,4,"_handleNativeStateChangeEvent"],[72,33,34,33],[72,34,34,34,"event"],[72,39,34,39],[72,40,34,40],[73,2,35,0],[73,3,35,1],[74,2,36,0],[75,0,37,0],[76,0,38,0],[77,0,39,0],[78,2,40,7],[78,6,40,13,"resetLatestContext"],[78,24,40,31],[78,27,40,34,"resetLatestContext"],[78,28,40,34],[78,33,40,40],[79,4,41,4,"latestContext"],[79,17,41,17],[79,20,41,20,"transformNativeStateMachineContext"],[79,54,41,54],[79,55,41,55,"ExpoUpdatesModule"],[79,72,41,72],[79,73,41,72,"default"],[79,80,41,72],[79,81,41,73,"initialContext"],[79,95,41,87],[79,96,41,88],[80,2,42,0],[80,3,42,1],[81,2,43,0],[81,11,43,9,"transformNativeStateMachineContext"],[81,45,43,43,"transformNativeStateMachineContext"],[81,46,43,44,"originalNativeContext"],[81,67,43,65],[81,69,43,67],[82,4,44,4],[82,8,44,10,"nativeContext"],[82,21,44,23],[82,24,44,26],[83,6,44,28],[83,9,44,31,"originalNativeContext"],[84,4,44,53],[84,5,44,54],[85,4,45,4],[85,8,45,8,"nativeContext"],[85,21,45,21],[85,22,45,22,"latestManifestString"],[85,42,45,42],[85,44,45,44],[86,6,46,8,"nativeContext"],[86,19,46,21],[86,20,46,22,"latestManifest"],[86,34,46,36],[86,37,46,39,"JSON"],[86,41,46,43],[86,42,46,44,"parse"],[86,47,46,49],[86,48,46,50,"nativeContext"],[86,61,46,63],[86,62,46,64,"latestManifestString"],[86,82,46,84],[86,83,46,85],[87,6,47,8],[87,13,47,15,"nativeContext"],[87,26,47,28],[87,27,47,29,"latestManifestString"],[87,47,47,49],[88,4,48,4],[89,4,49,4],[89,8,49,8,"nativeContext"],[89,21,49,21],[89,22,49,22,"downloadedManifestString"],[89,46,49,46],[89,48,49,48],[90,6,50,8,"nativeContext"],[90,19,50,21],[90,20,50,22,"downloadedManifest"],[90,38,50,40],[90,41,50,43,"JSON"],[90,45,50,47],[90,46,50,48,"parse"],[90,51,50,53],[90,52,50,54,"nativeContext"],[90,65,50,67],[90,66,50,68,"downloadedManifestString"],[90,90,50,92],[90,91,50,93],[91,6,51,8],[91,13,51,15,"nativeContext"],[91,26,51,28],[91,27,51,29,"downloadedManifestString"],[91,51,51,53],[92,4,52,4],[93,4,53,4],[93,8,53,8,"nativeContext"],[93,21,53,21],[93,22,53,22,"lastCheckForUpdateTimeString"],[93,50,53,50],[93,52,53,52],[94,6,54,8,"nativeContext"],[94,19,54,21],[94,20,54,22,"lastCheckForUpdateTime"],[94,42,54,44],[94,45,54,47],[94,49,54,51,"Date"],[94,53,54,55],[94,54,54,56,"nativeContext"],[94,67,54,69],[94,68,54,70,"lastCheckForUpdateTimeString"],[94,96,54,98],[94,97,54,99],[95,6,55,8],[95,13,55,15,"nativeContext"],[95,26,55,28],[95,27,55,29,"lastCheckForUpdateTimeString"],[95,55,55,57],[96,4,56,4],[97,4,57,4],[97,8,57,8,"nativeContext"],[97,21,57,21],[97,22,57,22,"rollbackString"],[97,36,57,36],[97,38,57,38],[98,6,58,8,"nativeContext"],[98,19,58,21],[98,20,58,22,"rollback"],[98,28,58,30],[98,31,58,33,"JSON"],[98,35,58,37],[98,36,58,38,"parse"],[98,41,58,43],[98,42,58,44,"nativeContext"],[98,55,58,57],[98,56,58,58,"rollbackString"],[98,70,58,72],[98,71,58,73],[99,6,59,8],[99,13,59,15,"nativeContext"],[99,26,59,28],[99,27,59,29,"rollbackString"],[99,41,59,43],[100,4,60,4],[101,4,61,4],[101,11,61,11,"nativeContext"],[101,24,61,24],[102,2,62,0],[103,0,62,1],[103,3]],"functionMap":{"names":["<global>","_handleNativeStateChangeEvent","_updatesStateChangeListeners.forEach$argument_0","addUpdatesStateChangeListener","remove","emitTestStateChangeEvent","resetLatestContext","transformNativeStateMachineContext"],"mappings":"AAA;ACK;yCCS,iCD;CDC;6CGK;QCG;SDE;CHE;wCKK;CLE;kCMK;CNE;AOC;CPmB"},"hasCjsExports":false},"type":"js/module"}]}