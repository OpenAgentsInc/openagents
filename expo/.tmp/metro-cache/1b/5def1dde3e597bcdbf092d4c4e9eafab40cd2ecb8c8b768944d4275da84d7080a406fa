{"dependencies":[{"name":"@babel/runtime/helpers/slicedToArray","data":{"asyncType":null,"isESMImport":false,"locs":[],"key":"5y7e5+zC7teYEEC6niD9f5zII1M=","exportNames":["*"],"imports":1}},{"name":"invariant","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":11,"column":0},"end":{"line":11,"column":34}}],"key":"4HPAaDQ25ZwZ2dzTLatXuUucZUM=","exportNames":["*"],"imports":1}}],"output":[{"data":{"code":"__d(function (global, require, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {\n  \"use strict\";\n\n  Object.defineProperty(exports, '__esModule', {\n    value: true\n  });\n  function _interopDefault(e) {\n    return e && e.__esModule ? e : {\n      default: e\n    };\n  }\n  Object.defineProperty(exports, \"default\", {\n    enumerable: true,\n    get: function () {\n      return processTransformOrigin;\n    }\n  });\n  var _babelRuntimeHelpersSlicedToArray = require(_dependencyMap[0]);\n  var _slicedToArray = _interopDefault(_babelRuntimeHelpersSlicedToArray);\n  var _invariant = require(_dependencyMap[1]);\n  var invariant = _interopDefault(_invariant);\n  var INDEX_X = 0;\n  var INDEX_Y = 1;\n  var INDEX_Z = 2;\n  function processTransformOrigin(transformOrigin) {\n    if (typeof transformOrigin === 'string') {\n      var transformOriginString = transformOrigin;\n      var regex = /(top|bottom|left|right|center|\\d+(?:%|px)|0)/gi;\n      var transformOriginArray = ['50%', '50%', 0];\n      var index = INDEX_X;\n      var matches;\n      outer: while (matches = regex.exec(transformOriginString)) {\n        var nextIndex = index + 1;\n        var value = matches[0];\n        var valueLower = value.toLowerCase();\n        switch (valueLower) {\n          case 'left':\n          case 'right':\n            {\n              (0, invariant.default)(index === INDEX_X, 'Transform-origin %s can only be used for x-position', value);\n              transformOriginArray[INDEX_X] = valueLower === 'left' ? 0 : '100%';\n              break;\n            }\n          case 'top':\n          case 'bottom':\n            {\n              (0, invariant.default)(index !== INDEX_Z, 'Transform-origin %s can only be used for y-position', value);\n              transformOriginArray[INDEX_Y] = valueLower === 'top' ? 0 : '100%';\n              if (index === INDEX_X) {\n                var horizontal = regex.exec(transformOriginString);\n                if (horizontal == null) {\n                  break outer;\n                }\n                switch (horizontal[0].toLowerCase()) {\n                  case 'left':\n                    transformOriginArray[INDEX_X] = 0;\n                    break;\n                  case 'right':\n                    transformOriginArray[INDEX_X] = '100%';\n                    break;\n                  case 'center':\n                    transformOriginArray[INDEX_X] = '50%';\n                    break;\n                  default:\n                    (0, invariant.default)(false, 'Could not parse transform-origin: %s', transformOriginString);\n                }\n                nextIndex = INDEX_Z;\n              }\n              break;\n            }\n          case 'center':\n            {\n              (0, invariant.default)(index !== INDEX_Z, 'Transform-origin value %s cannot be used for z-position', value);\n              transformOriginArray[index] = '50%';\n              break;\n            }\n          default:\n            {\n              if (value.endsWith('%')) {\n                transformOriginArray[index] = value;\n              } else {\n                transformOriginArray[index] = parseFloat(value);\n              }\n              break;\n            }\n        }\n        index = nextIndex;\n      }\n      transformOrigin = transformOriginArray;\n    }\n    return transformOrigin;\n  }\n});","lineCount":93,"map":[[12,2,18,15,"Object"],[12,8,18,15],[12,9,18,15,"defineProperty"],[12,23,18,15],[12,24,18,15,"exports"],[12,31,18,15],[13,4,18,15,"enumerable"],[13,14,18,15],[14,4,18,15,"get"],[14,7,18,15],[14,18,18,15,"get"],[14,19,18,15],[15,6,18,15],[15,13,18,15,"processTransformOrigin"],[15,35,18,15],[16,4,18,15],[17,2,18,15],[18,2,113,1],[18,6,113,1,"_babelRuntimeHelpersSlicedToArray"],[18,39,113,1],[18,42,113,1,"require"],[18,49,113,1],[18,50,113,1,"_dependencyMap"],[18,64,113,1],[19,2,113,1],[19,6,113,1,"_slicedToArray"],[19,20,113,1],[19,23,113,1,"_interopDefault"],[19,38,113,1],[19,39,113,1,"_babelRuntimeHelpersSlicedToArray"],[19,72,113,1],[20,2,11,0],[20,6,11,0,"_invariant"],[20,16,11,0],[20,19,11,0,"require"],[20,26,11,0],[20,27,11,0,"_dependencyMap"],[20,41,11,0],[21,2,11,0],[21,6,11,0,"invariant"],[21,15,11,0],[21,18,11,0,"_interopDefault"],[21,33,11,0],[21,34,11,0,"_invariant"],[21,44,11,0],[22,2,13,0],[22,6,13,6,"INDEX_X"],[22,13,13,13],[22,16,13,16],[22,17,13,17],[23,2,14,0],[23,6,14,6,"INDEX_Y"],[23,13,14,13],[23,16,14,16],[23,17,14,17],[24,2,15,0],[24,6,15,6,"INDEX_Z"],[24,13,15,13],[24,16,15,16],[24,17,15,17],[25,2,18,15],[25,11,18,24,"processTransformOrigin"],[25,33,18,46,"processTransformOrigin"],[25,34,19,2,"transformOrigin"],[25,49,19,50],[25,51,20,26],[26,4,21,2],[26,8,21,6],[26,15,21,13,"transformOrigin"],[26,30,21,28],[26,35,21,33],[26,43,21,41],[26,45,21,43],[27,6,22,4],[27,10,22,10,"transformOriginString"],[27,31,22,31],[27,34,22,34,"transformOrigin"],[27,49,22,49],[28,6,23,4],[28,10,23,10,"regex"],[28,15,23,15],[28,18,23,18],[28,66,23,66],[29,6,24,4],[29,10,24,10,"transformOriginArray"],[29,30,24,54],[29,33,24,57],[29,34,24,58],[29,39,24,63],[29,41,24,65],[29,46,24,70],[29,48,24,72],[29,49,24,73],[29,50,24,74],[30,6,26,4],[30,10,26,8,"index"],[30,15,26,13],[30,18,26,16,"INDEX_X"],[30,25,26,23],[31,6,27,4],[31,10,27,8,"matches"],[31,17,27,15],[32,6,28,4,"outer"],[32,11,28,9],[32,13,28,11],[32,20,28,19,"matches"],[32,27,28,26],[32,30,28,29,"regex"],[32,35,28,34],[32,36,28,35,"exec"],[32,40,28,39],[32,41,28,40,"transformOriginString"],[32,62,28,61],[32,63,28,62],[32,65,28,65],[33,8,29,6],[33,12,29,10,"nextIndex"],[33,21,29,19],[33,24,29,22,"index"],[33,29,29,27],[33,32,29,30],[33,33,29,31],[34,8,31,6],[34,12,31,12,"value"],[34,17,31,17],[34,20,31,20,"matches"],[34,27,31,27],[34,28,31,28],[34,29,31,29],[34,30,31,30],[35,8,32,6],[35,12,32,12,"valueLower"],[35,22,32,22],[35,25,32,25,"value"],[35,30,32,30],[35,31,32,31,"toLowerCase"],[35,42,32,42],[35,43,32,43],[35,44,32,44],[36,8,34,6],[36,16,34,14,"valueLower"],[36,26,34,24],[37,10,35,8],[37,15,35,13],[37,21,35,19],[38,10,36,8],[38,15,36,13],[38,22,36,20],[39,12,36,22],[40,14,37,10],[40,18,37,10,"invariant"],[40,27,37,19],[40,28,37,19,"default"],[40,35,37,19],[40,37,38,12,"index"],[40,42,38,17],[40,47,38,22,"INDEX_X"],[40,54,38,29],[40,56,39,12],[40,109,39,65],[40,111,40,12,"value"],[40,116,41,10],[40,117,41,11],[41,14,42,10,"transformOriginArray"],[41,34,42,30],[41,35,42,31,"INDEX_X"],[41,42,42,38],[41,43,42,39],[41,46,42,42,"valueLower"],[41,56,42,52],[41,61,42,57],[41,67,42,63],[41,70,42,66],[41,71,42,67],[41,74,42,70],[41,80,42,76],[42,14,43,10],[43,12,44,8],[44,10,45,8],[44,15,45,13],[44,20,45,18],[45,10,46,8],[45,15,46,13],[45,23,46,21],[46,12,46,23],[47,14,47,10],[47,18,47,10,"invariant"],[47,27,47,19],[47,28,47,19,"default"],[47,35,47,19],[47,37,48,12,"index"],[47,42,48,17],[47,47,48,22,"INDEX_Z"],[47,54,48,29],[47,56,49,12],[47,109,49,65],[47,111,50,12,"value"],[47,116,51,10],[47,117,51,11],[48,14,52,10,"transformOriginArray"],[48,34,52,30],[48,35,52,31,"INDEX_Y"],[48,42,52,38],[48,43,52,39],[48,46,52,42,"valueLower"],[48,56,52,52],[48,61,52,57],[48,66,52,62],[48,69,52,65],[48,70,52,66],[48,73,52,69],[48,79,52,75],[49,14,55,10],[49,18,55,14,"index"],[49,23,55,19],[49,28,55,24,"INDEX_X"],[49,35,55,31],[49,37,55,33],[50,16,56,12],[50,20,56,18,"horizontal"],[50,30,56,28],[50,33,56,31,"regex"],[50,38,56,36],[50,39,56,37,"exec"],[50,43,56,41],[50,44,56,42,"transformOriginString"],[50,65,56,63],[50,66,56,64],[51,16,57,12],[51,20,57,16,"horizontal"],[51,30,57,26],[51,34,57,30],[51,38,57,34],[51,40,57,36],[52,18,58,14],[52,24,58,20,"outer"],[52,29,58,25],[53,16,59,12],[54,16,61,12],[54,24,61,20,"horizontal"],[54,34,61,30],[54,35,61,31],[54,36,61,32],[54,37,61,33],[54,38,61,34,"toLowerCase"],[54,49,61,45],[54,50,61,46],[54,51,61,47],[55,18,62,14],[55,23,62,19],[55,29,62,25],[56,20,63,16,"transformOriginArray"],[56,40,63,36],[56,41,63,37,"INDEX_X"],[56,48,63,44],[56,49,63,45],[56,52,63,48],[56,53,63,49],[57,20,64,16],[58,18,65,14],[58,23,65,19],[58,30,65,26],[59,20,66,16,"transformOriginArray"],[59,40,66,36],[59,41,66,37,"INDEX_X"],[59,48,66,44],[59,49,66,45],[59,52,66,48],[59,58,66,54],[60,20,67,16],[61,18,68,14],[61,23,68,19],[61,31,68,27],[62,20,69,16,"transformOriginArray"],[62,40,69,36],[62,41,69,37,"INDEX_X"],[62,48,69,44],[62,49,69,45],[62,52,69,48],[62,57,69,53],[63,20,70,16],[64,18,71,14],[65,20,72,16],[65,24,72,16,"invariant"],[65,33,72,25],[65,34,72,25,"default"],[65,41,72,25],[65,43,73,18],[65,48,73,23],[65,50,74,18],[65,88,74,56],[65,90,75,18,"transformOriginString"],[65,111,76,16],[65,112,76,17],[66,16,77,12],[67,16,78,12,"nextIndex"],[67,25,78,21],[67,28,78,24,"INDEX_Z"],[67,35,78,31],[68,14,79,10],[69,14,81,10],[70,12,82,8],[71,10,83,8],[71,15,83,13],[71,23,83,21],[72,12,83,23],[73,14,84,10],[73,18,84,10,"invariant"],[73,27,84,19],[73,28,84,19,"default"],[73,35,84,19],[73,37,85,12,"index"],[73,42,85,17],[73,47,85,22,"INDEX_Z"],[73,54,85,29],[73,56,86,12],[73,113,86,69],[73,115,87,12,"value"],[73,120,88,10],[73,121,88,11],[74,14,89,10,"transformOriginArray"],[74,34,89,30],[74,35,89,31,"index"],[74,40,89,36],[74,41,89,37],[74,44,89,40],[74,49,89,45],[75,14,90,10],[76,12,91,8],[77,10,92,8],[78,12,92,17],[79,14,93,10],[79,18,93,14,"value"],[79,23,93,19],[79,24,93,20,"endsWith"],[79,32,93,28],[79,33,93,29],[79,36,93,32],[79,37,93,33],[79,39,93,35],[80,16,94,12,"transformOriginArray"],[80,36,94,32],[80,37,94,33,"index"],[80,42,94,38],[80,43,94,39],[80,46,94,42,"value"],[80,51,94,47],[81,14,95,10],[81,15,95,11],[81,21,95,17],[82,16,96,12,"transformOriginArray"],[82,36,96,32],[82,37,96,33,"index"],[82,42,96,38],[82,43,96,39],[82,46,96,42,"parseFloat"],[82,56,96,52],[82,57,96,53,"value"],[82,62,96,58],[82,63,96,59],[83,14,97,10],[84,14,98,10],[85,12,99,8],[86,8,100,6],[87,8,102,6,"index"],[87,13,102,11],[87,16,102,14,"nextIndex"],[87,25,102,23],[88,6,103,4],[89,6,105,4,"transformOrigin"],[89,21,105,19],[89,24,105,22,"transformOriginArray"],[89,44,105,42],[90,4,106,2],[91,4,112,2],[91,11,112,9,"transformOrigin"],[91,26,112,24],[92,2,113,0],[93,0,113,1],[93,3]],"functionMap":{"names":["<global>","processTransformOrigin","_validateTransformOrigin"],"mappings":"AAA;eCiB;CD+F;AEE"},"hasCjsExports":false},"type":"js/module"}]}