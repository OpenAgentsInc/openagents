{"dependencies":[{"name":"react-native","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":2,"column":0,"index":32},"end":{"line":2,"column":76,"index":108}}],"key":"KyzuX10g6ixS9UfynhmjlvCIG3g=","exportNames":["*"],"imports":1}},{"name":"./handlersRegistry","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":3,"column":0,"index":109},"end":{"line":3,"column":52,"index":161}}],"key":"icHMSVIKxbHLSdF6K64ideInyBg=","exportNames":["*"],"imports":1}},{"name":"../utils","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":4,"column":0,"index":162},"end":{"line":4,"column":35,"index":197}}],"key":"mL7nJyZhzUYx+zMcIt1cBzVuRps=","exportNames":["*"],"imports":1}},{"name":"../RNGestureHandlerModule","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":5,"column":0,"index":198},"end":{"line":5,"column":63,"index":261}}],"key":"bY7FGgfi8WGOEKHKyXsenNEOYXM=","exportNames":["*"],"imports":1}},{"name":"../ghQueueMicrotask","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":6,"column":0,"index":262},"end":{"line":6,"column":55,"index":317}}],"key":"Ty3ERJQ4RajY8XDWg1+a8wq7RdE=","exportNames":["*"],"imports":1}}],"output":[{"data":{"code":"__d(function (global, require, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {\n  \"use strict\";\n\n  Object.defineProperty(exports, '__esModule', {\n    value: true\n  });\n  function _interopDefault(e) {\n    return e && e.__esModule ? e : {\n      default: e\n    };\n  }\n  exports.filterConfig = filterConfig;\n  exports.transformIntoHandlerTags = transformIntoHandlerTags;\n  exports.findNodeHandle = findNodeHandle;\n  exports.scheduleFlushOperations = scheduleFlushOperations;\n  var _reactNative = require(_dependencyMap[0]);\n  var _handlersRegistry = require(_dependencyMap[1]);\n  var _utils = require(_dependencyMap[2]);\n  var _RNGestureHandlerModule = require(_dependencyMap[3]);\n  var RNGestureHandlerModule = _interopDefault(_RNGestureHandlerModule);\n  var _ghQueueMicrotask = require(_dependencyMap[4]);\n  function isConfigParam(param, name) {\n    // param !== Object(param) returns false if `param` is a function\n    // or an object and returns true if `param` is null\n    return param !== undefined && (param !== Object(param) || !('__isNative' in param)) && name !== 'onHandlerStateChange' && name !== 'onGestureEvent';\n  }\n  function filterConfig(props, validProps) {\n    var defaults = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {};\n    var filteredConfig = {\n      ...defaults\n    };\n    for (var key of validProps) {\n      var value = props[key];\n      if (isConfigParam(value, key)) {\n        if (key === 'simultaneousHandlers' || key === 'waitFor') {\n          value = transformIntoHandlerTags(props[key]);\n        } else if (key === 'hitSlop' && typeof value !== 'object') {\n          value = {\n            top: value,\n            left: value,\n            bottom: value,\n            right: value\n          };\n        }\n        filteredConfig[key] = value;\n      }\n    }\n    return filteredConfig;\n  }\n  function transformIntoHandlerTags(handlerIDs) {\n    handlerIDs = (0, _utils.toArray)(handlerIDs);\n    // converts handler string IDs into their numeric tags\n    return handlerIDs.map(handlerID => _handlersRegistry.handlerIDToTag[handlerID] || handlerID.current?.handlerTag || -1).filter(handlerTag => handlerTag > 0);\n  }\n  function findNodeHandle(node) {\n    return (0, _reactNative.findNodeHandle)(node) ?? null;\n  }\n  var flushOperationsScheduled = false;\n  function scheduleFlushOperations() {\n    if (!flushOperationsScheduled) {\n      flushOperationsScheduled = true;\n      (0, _ghQueueMicrotask.ghQueueMicrotask)(() => {\n        RNGestureHandlerModule.default.flushOperations();\n        flushOperationsScheduled = false;\n      });\n    }\n  }\n});","lineCount":68,"map":[[12,2,20,0,"exports"],[12,9,20,0],[12,10,20,0,"filterConfig"],[12,22,20,0],[12,25,20,0,"filterConfig"],[12,37,20,0],[13,2,40,0,"exports"],[13,9,40,0],[13,10,40,0,"transformIntoHandlerTags"],[13,34,40,0],[13,37,40,0,"transformIntoHandlerTags"],[13,61,40,0],[14,2,57,0,"exports"],[14,9,57,0],[14,10,57,0,"findNodeHandle"],[14,24,57,0],[14,27,57,0,"findNodeHandle"],[14,41,57,0],[15,2,67,0,"exports"],[15,9,67,0],[15,10,67,0,"scheduleFlushOperations"],[15,33,67,0],[15,36,67,0,"scheduleFlushOperations"],[15,59,67,0],[16,2,2,0],[16,6,2,0,"_reactNative"],[16,18,2,0],[16,21,2,0,"require"],[16,28,2,0],[16,29,2,0,"_dependencyMap"],[16,43,2,0],[17,2,3,0],[17,6,3,0,"_handlersRegistry"],[17,23,3,0],[17,26,3,0,"require"],[17,33,3,0],[17,34,3,0,"_dependencyMap"],[17,48,3,0],[18,2,4,0],[18,6,4,0,"_utils"],[18,12,4,0],[18,15,4,0,"require"],[18,22,4,0],[18,23,4,0,"_dependencyMap"],[18,37,4,0],[19,2,5,0],[19,6,5,0,"_RNGestureHandlerModule"],[19,29,5,0],[19,32,5,0,"require"],[19,39,5,0],[19,40,5,0,"_dependencyMap"],[19,54,5,0],[20,2,5,0],[20,6,5,0,"RNGestureHandlerModule"],[20,28,5,0],[20,31,5,0,"_interopDefault"],[20,46,5,0],[20,47,5,0,"_RNGestureHandlerModule"],[20,70,5,0],[21,2,6,0],[21,6,6,0,"_ghQueueMicrotask"],[21,23,6,0],[21,26,6,0,"require"],[21,33,6,0],[21,34,6,0,"_dependencyMap"],[21,48,6,0],[22,2,8,0],[22,11,8,9,"isConfigParam"],[22,24,8,22,"isConfigParam"],[22,25,8,23,"param"],[22,30,8,37],[22,32,8,39,"name"],[22,36,8,51],[22,38,8,53],[23,4,9,2],[24,4,10,2],[25,4,11,2],[25,11,12,4,"param"],[25,16,12,9],[25,21,12,14,"undefined"],[25,30,12,23],[25,35,13,5,"param"],[25,40,13,10],[25,45,13,15,"Object"],[25,51,13,21],[25,52,13,22,"param"],[25,57,13,27],[25,58,13,28],[25,62,14,6],[25,64,14,8],[25,76,14,20],[25,80,14,25,"param"],[25,85,14,58],[25,86,14,59],[25,87,14,60],[25,91,15,4,"name"],[25,95,15,8],[25,100,15,13],[25,122,15,35],[25,126,16,4,"name"],[25,130,16,8],[25,135,16,13],[25,151,16,29],[26,2,18,0],[27,2,20,7],[27,11,20,16,"filterConfig"],[27,23,20,28,"filterConfig"],[27,24,21,2,"props"],[27,29,21,32],[27,31,22,2,"validProps"],[27,41,22,22],[27,43,24,2],[28,4,24,2],[28,8,23,2,"defaults"],[28,16,23,35],[28,19,23,35,"arguments"],[28,28,23,35],[28,29,23,35,"length"],[28,35,23,35],[28,43,23,35,"arguments"],[28,52,23,35],[28,60,23,35,"undefined"],[28,69,23,35],[28,72,23,35,"arguments"],[28,81,23,35],[28,87,23,38],[28,88,23,39],[28,89,23,40],[29,4,25,2],[29,8,25,8,"filteredConfig"],[29,22,25,22],[29,25,25,25],[30,6,25,27],[30,9,25,30,"defaults"],[31,4,25,39],[31,5,25,40],[32,4,26,2],[32,9,26,7],[32,13,26,13,"key"],[32,16,26,16],[32,20,26,20,"validProps"],[32,30,26,30],[32,32,26,32],[33,6,27,4],[33,10,27,8,"value"],[33,15,27,13],[33,18,27,16,"props"],[33,23,27,21],[33,24,27,22,"key"],[33,27,27,25],[33,28,27,26],[34,6,28,4],[34,10,28,8,"isConfigParam"],[34,23,28,21],[34,24,28,22,"value"],[34,29,28,27],[34,31,28,29,"key"],[34,34,28,32],[34,35,28,33],[34,37,28,35],[35,8,29,6],[35,12,29,10,"key"],[35,15,29,13],[35,20,29,18],[35,42,29,40],[35,46,29,44,"key"],[35,49,29,47],[35,54,29,52],[35,63,29,61],[35,65,29,63],[36,10,30,8,"value"],[36,15,30,13],[36,18,30,16,"transformIntoHandlerTags"],[36,42,30,40],[36,43,30,41,"props"],[36,48,30,46],[36,49,30,47,"key"],[36,52,30,50],[36,53,30,51],[36,54,30,52],[37,8,31,6],[37,9,31,7],[37,15,31,13],[37,19,31,17,"key"],[37,22,31,20],[37,27,31,25],[37,36,31,34],[37,40,31,38],[37,47,31,45,"value"],[37,52,31,50],[37,57,31,55],[37,65,31,63],[37,67,31,65],[38,10,32,8,"value"],[38,15,32,13],[38,18,32,16],[39,12,32,18,"top"],[39,15,32,21],[39,17,32,23,"value"],[39,22,32,28],[40,12,32,30,"left"],[40,16,32,34],[40,18,32,36,"value"],[40,23,32,41],[41,12,32,43,"bottom"],[41,18,32,49],[41,20,32,51,"value"],[41,25,32,56],[42,12,32,58,"right"],[42,17,32,63],[42,19,32,65,"value"],[43,10,32,71],[43,11,32,72],[44,8,33,6],[45,8,34,6,"filteredConfig"],[45,22,34,20],[45,23,34,21,"key"],[45,26,34,24],[45,27,34,25],[45,30,34,28,"value"],[45,35,34,33],[46,6,35,4],[47,4,36,2],[48,4,37,2],[48,11,37,9,"filteredConfig"],[48,25,37,23],[49,2,38,0],[50,2,40,7],[50,11,40,16,"transformIntoHandlerTags"],[50,35,40,40,"transformIntoHandlerTags"],[50,36,40,41,"handlerIDs"],[50,46,40,56],[50,48,40,58],[51,4,41,2,"handlerIDs"],[51,14,41,12],[51,17,41,15],[51,21,41,15,"toArray"],[51,27,41,22],[51,28,41,22,"toArray"],[51,35,41,22],[51,37,41,23,"handlerIDs"],[51,47,41,33],[51,48,41,34],[52,4,48,2],[53,4,49,2],[53,11,49,9,"handlerIDs"],[53,21,49,19],[53,22,50,5,"map"],[53,25,50,8],[53,26,51,7,"handlerID"],[53,35,51,21],[53,39,52,8,"handlerIDToTag"],[53,56,52,22],[53,57,52,22,"handlerIDToTag"],[53,71,52,22],[53,72,52,23,"handlerID"],[53,81,52,32],[53,82,52,33],[53,86,52,37,"handlerID"],[53,95,52,46],[53,96,52,47,"current"],[53,103,52,54],[53,105,52,56,"handlerTag"],[53,115,52,66],[53,121,53,4],[53,122,53,5],[53,123,54,5,"filter"],[53,129,54,11],[53,130,54,13,"handlerTag"],[53,140,54,31],[53,144,54,36,"handlerTag"],[53,154,54,46],[53,157,54,49],[53,158,54,50],[53,159,54,51],[54,2,55,0],[55,2,57,7],[55,11,57,16,"findNodeHandle"],[55,25,57,30,"findNodeHandle"],[55,26,58,2,"node"],[55,30,58,77],[55,32,59,73],[56,4,63,2],[56,11,63,9],[56,15,63,9,"findNodeHandleRN"],[56,27,63,25],[56,28,63,25,"findNodeHandle"],[56,42,63,25],[56,44,63,26,"node"],[56,48,63,30],[56,49,63,31],[56,53,63,35],[56,57,63,39],[57,2,64,0],[58,2,65,0],[58,6,65,4,"flushOperationsScheduled"],[58,30,65,28],[58,33,65,31],[58,38,65,36],[59,2,67,7],[59,11,67,16,"scheduleFlushOperations"],[59,34,67,39,"scheduleFlushOperations"],[59,35,67,39],[59,37,67,42],[60,4,68,2],[60,8,68,6],[60,9,68,7,"flushOperationsScheduled"],[60,33,68,31],[60,35,68,33],[61,6,69,4,"flushOperationsScheduled"],[61,30,69,28],[61,33,69,31],[61,37,69,35],[62,6,70,4],[62,10,70,4,"ghQueueMicrotask"],[62,27,70,20],[62,28,70,20,"ghQueueMicrotask"],[62,44,70,20],[62,46,70,21],[62,52,70,27],[63,8,71,6,"RNGestureHandlerModule"],[63,30,71,28],[63,31,71,28,"default"],[63,38,71,28],[63,39,71,29,"flushOperations"],[63,54,71,44],[63,55,71,45],[63,56,71,46],[64,8,73,6,"flushOperationsScheduled"],[64,32,73,30],[64,35,73,33],[64,40,73,38],[65,6,74,4],[65,7,74,5],[65,8,74,6],[66,4,75,2],[67,2,76,0],[68,0,76,1],[68,3]],"functionMap":{"names":["<global>","isConfigParam","filterConfig","transformIntoHandlerTags","handlerIDs.map$argument_0","handlerIDs.map.filter$argument_0","findNodeHandle","scheduleFlushOperations","ghQueueMicrotask$argument_0"],"mappings":"AAA;ACO;CDU;OEE;CFkB;OGE;WCK,0CD;cEC,uBF;MCK;wEDC;YEE,sCF;CHC;OME;CNO;OOG;qBCG;KDI;CPE"},"hasCjsExports":false},"type":"js/module"}]}