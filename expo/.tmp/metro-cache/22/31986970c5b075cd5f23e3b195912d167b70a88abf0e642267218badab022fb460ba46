{"dependencies":[{"name":"@babel/runtime/helpers/objectWithoutProperties","data":{"asyncType":null,"isESMImport":false,"locs":[],"key":"fnQVLibs90KHiJ7y48fLgPWzDS0=","exportNames":["*"],"imports":1}},{"name":"react","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":1,"column":0,"index":0},"end":{"line":1,"column":26,"index":26}}],"key":"RtGiGa+/H7VrI7GDQDLhO1UbpU8=","exportNames":["*"],"imports":1}},{"name":"react-native","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":2,"column":0,"index":27},"end":{"line":8,"column":22,"index":165}}],"key":"KyzuX10g6ixS9UfynhmjlvCIG3g=","exportNames":["*"],"imports":1}},{"name":"react/jsx-runtime","data":{"asyncType":null,"isESMImport":false,"locs":[],"key":"3suYSPX9nHbHZ1xNTsKXtKj0atE=","exportNames":["*"],"imports":1}}],"output":[{"data":{"code":"__d(function (global, require, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {\n  \"use strict\";\n\n  var _excluded = [\"style\", \"hideTransitionAnimation\", \"translucent\", \"backgroundColor\"];\n  Object.defineProperty(exports, '__esModule', {\n    value: true\n  });\n  function _interopDefault(e) {\n    return e && e.__esModule ? e : {\n      default: e\n    };\n  }\n  exports.StatusBar = StatusBar;\n  exports.setStatusBarStyle = setStatusBarStyle;\n  exports.setStatusBarHidden = setStatusBarHidden;\n  exports.setStatusBarBackgroundColor = setStatusBarBackgroundColor;\n  exports.setStatusBarNetworkActivityIndicatorVisible = setStatusBarNetworkActivityIndicatorVisible;\n  exports.setStatusBarTranslucent = setStatusBarTranslucent;\n  var _babelRuntimeHelpersObjectWithoutProperties = require(_dependencyMap[0]);\n  var _objectWithoutProperties = _interopDefault(_babelRuntimeHelpersObjectWithoutProperties);\n  var _react = require(_dependencyMap[1]);\n  var React = _interopDefault(_react);\n  var _reactNative = require(_dependencyMap[2]);\n  var _reactJsxRuntime = require(_dependencyMap[3]);\n  /**\n   * A component that allows you to configure your status bar without directly calling imperative\n   * methods like `setBarStyle`.\n   *\n   * You will likely have multiple `StatusBar` components mounted in the same app at the same time.\n   * For example, if you have multiple screens in your app, you may end up using one per screen.\n   * The props of each `StatusBar` component will be merged in the order that they were mounted.\n   * This component is built on top of the [StatusBar](https://reactnative.dev/docs/statusbar)\n   * component exported from React Native, and it provides defaults that work better for Expo users.\n   */\n  function StatusBar(_ref) {\n    var style = _ref.style,\n      hideTransitionAnimation = _ref.hideTransitionAnimation,\n      _ref$translucent = _ref.translucent,\n      translucent = _ref$translucent === undefined ? true : _ref$translucent,\n      backgroundColorProp = _ref.backgroundColor,\n      props = (0, _objectWithoutProperties.default)(_ref, _excluded);\n    // Pick appropriate default value depending on current theme, so if we are\n    // locked to light mode we don't end up with a light status bar\n    var colorScheme = (0, _reactNative.useColorScheme)();\n    var barStyle = React.default.useMemo(() => styleToBarStyle(style, colorScheme), [style, colorScheme]);\n\n    // If translucent and no backgroundColor is provided, then use transparent\n    // background\n    var backgroundColor = backgroundColorProp;\n    if (translucent && !backgroundColor) {\n      backgroundColor = 'transparent';\n    }\n    return /*#__PURE__*/(0, _reactJsxRuntime.jsx)(_reactNative.StatusBar, {\n      ...props,\n      translucent: translucent,\n      barStyle: barStyle,\n      backgroundColor: backgroundColor,\n      showHideTransition: hideTransitionAnimation === 'none' ? undefined : hideTransitionAnimation\n    });\n  }\n\n  // @needsAudit\n  /**\n   * Set the bar style of the status bar.\n   * @param style The color of the status bar text.\n   * @param animated If the transition should be animated.\n   */\n  function setStatusBarStyle(style, animated) {\n    _reactNative.StatusBar.setBarStyle(styleToBarStyle(style), animated);\n  }\n\n  // @needsAudit\n  /**\n   * Toggle visibility of the status bar.\n   * @param hidden If the status bar should be hidden.\n   * @param animation Animation to use when toggling hidden, defaults to `'none'`.\n   */\n  function setStatusBarHidden(hidden, animation) {\n    _reactNative.StatusBar.setHidden(hidden, animation);\n  }\n\n  // @needsAudit\n  /**\n   * Set the background color of the status bar.\n   * @param backgroundColor The background color of the status bar.\n   * @param animated `true` to animate the background color change, `false` to change immediately.\n   * @platform android\n   */\n  function setStatusBarBackgroundColor(backgroundColor, animated) {\n    _reactNative.StatusBar.setBackgroundColor(backgroundColor, animated);\n  }\n\n  // @needsAudit\n  /**\n   * Toggle visibility of the network activity indicator.\n   * @param visible If the network activity indicator should be visible.\n   * @platform ios\n   */\n  function setStatusBarNetworkActivityIndicatorVisible(visible) {\n    _reactNative.StatusBar.setNetworkActivityIndicatorVisible(visible);\n  }\n\n  // @needsAudit\n  /**\n   * Set the translucency of the status bar.\n   * @param translucent Whether the app can draw under the status bar. When `true`, content will be\n   * rendered under the status bar. This is always `true` on iOS and cannot be changed.\n   * @platform android\n   */\n  function setStatusBarTranslucent(translucent) {\n    _reactNative.StatusBar.setTranslucent(translucent);\n  }\n  function styleToBarStyle() {\n    var style = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : 'auto';\n    var colorScheme = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : _reactNative.Appearance?.getColorScheme() ?? 'light';\n    if (!colorScheme) {\n      colorScheme = 'light';\n    }\n    var resolvedStyle = style;\n    if (style === 'auto') {\n      resolvedStyle = colorScheme === 'light' ? 'dark' : 'light';\n    } else if (style === 'inverted') {\n      resolvedStyle = colorScheme === 'light' ? 'light' : 'dark';\n    }\n    return resolvedStyle === 'light' ? 'light-content' : 'dark-content';\n  }\n});","lineCount":127,"map":[[13,2,22,0,"exports"],[13,9,22,0],[13,10,22,0,"StatusBar"],[13,19,22,0],[13,22,22,0,"StatusBar"],[13,31,22,0],[14,2,58,0,"exports"],[14,9,58,0],[14,10,58,0,"setStatusBarStyle"],[14,27,58,0],[14,30,58,0,"setStatusBarStyle"],[14,47,58,0],[15,2,68,0,"exports"],[15,9,68,0],[15,10,68,0,"setStatusBarHidden"],[15,28,68,0],[15,31,68,0,"setStatusBarHidden"],[15,49,68,0],[16,2,79,0,"exports"],[16,9,79,0],[16,10,79,0,"setStatusBarBackgroundColor"],[16,37,79,0],[16,40,79,0,"setStatusBarBackgroundColor"],[16,67,79,0],[17,2,89,0,"exports"],[17,9,89,0],[17,10,89,0,"setStatusBarNetworkActivityIndicatorVisible"],[17,53,89,0],[17,56,89,0,"setStatusBarNetworkActivityIndicatorVisible"],[17,99,89,0],[18,2,100,0,"exports"],[18,9,100,0],[18,10,100,0,"setStatusBarTranslucent"],[18,33,100,0],[18,36,100,0,"setStatusBarTranslucent"],[18,59,100,0],[19,2,102,1],[19,6,102,1,"_babelRuntimeHelpersObjectWithoutProperties"],[19,49,102,1],[19,52,102,1,"require"],[19,59,102,1],[19,60,102,1,"_dependencyMap"],[19,74,102,1],[20,2,102,1],[20,6,102,1,"_objectWithoutProperties"],[20,30,102,1],[20,33,102,1,"_interopDefault"],[20,48,102,1],[20,49,102,1,"_babelRuntimeHelpersObjectWithoutProperties"],[20,92,102,1],[21,2,1,0],[21,6,1,0,"_react"],[21,12,1,0],[21,15,1,0,"require"],[21,22,1,0],[21,23,1,0,"_dependencyMap"],[21,37,1,0],[22,2,1,0],[22,6,1,0,"React"],[22,11,1,0],[22,14,1,0,"_interopDefault"],[22,29,1,0],[22,30,1,0,"_react"],[22,36,1,0],[23,2,2,0],[23,6,2,0,"_reactNative"],[23,18,2,0],[23,21,2,0,"require"],[23,28,2,0],[23,29,2,0,"_dependencyMap"],[23,43,2,0],[24,2,8,22],[24,6,8,22,"_reactJsxRuntime"],[24,22,8,22],[24,25,8,22,"require"],[24,32,8,22],[24,33,8,22,"_dependencyMap"],[24,47,8,22],[25,2,12,0],[26,0,13,0],[27,0,14,0],[28,0,15,0],[29,0,16,0],[30,0,17,0],[31,0,18,0],[32,0,19,0],[33,0,20,0],[34,0,21,0],[35,2,22,7],[35,11,22,16,"StatusBar"],[35,20,22,25,"StatusBar"],[35,21,22,25,"_ref"],[35,25,22,25],[35,27,28,19],[36,4,28,19],[36,8,23,2,"style"],[36,13,23,7],[36,16,23,7,"_ref"],[36,20,23,7],[36,21,23,2,"style"],[36,26,23,7],[37,6,24,2,"hideTransitionAnimation"],[37,29,24,25],[37,32,24,25,"_ref"],[37,36,24,25],[37,37,24,2,"hideTransitionAnimation"],[37,60,24,25],[38,6,24,25,"_ref$translucent"],[38,22,24,25],[38,25,24,25,"_ref"],[38,29,24,25],[38,30,25,2,"translucent"],[38,41,25,13],[39,6,25,2,"translucent"],[39,17,25,13],[39,20,25,13,"_ref$translucent"],[39,36,25,13],[39,41,25,13,"undefined"],[39,50,25,13],[39,53,25,16],[39,57,25,20],[39,60,25,20,"_ref$translucent"],[39,76,25,20],[40,6,26,19,"backgroundColorProp"],[40,25,26,38],[40,28,26,38,"_ref"],[40,32,26,38],[40,33,26,2,"backgroundColor"],[40,48,26,17],[41,6,27,5,"props"],[41,11,27,10],[41,18,27,10,"_objectWithoutProperties"],[41,42,27,10],[41,43,27,10,"default"],[41,50,27,10],[41,52,27,10,"_ref"],[41,56,27,10],[41,58,27,10,"_excluded"],[41,67,27,10],[42,4,29,2],[43,4,30,2],[44,4,31,2],[44,8,31,8,"colorScheme"],[44,19,31,19],[44,22,31,22],[44,26,31,22,"useColorScheme"],[44,38,31,36],[44,39,31,36,"useColorScheme"],[44,53,31,36],[44,55,31,37],[44,56,31,38],[45,4,32,2],[45,8,32,8,"barStyle"],[45,16,32,16],[45,19,32,19,"React"],[45,24,32,24],[45,25,32,24,"default"],[45,32,32,24],[45,33,32,25,"useMemo"],[45,40,32,32],[45,41,32,33],[45,47,32,39,"styleToBarStyle"],[45,62,32,54],[45,63,32,55,"style"],[45,68,32,60],[45,70,32,62,"colorScheme"],[45,81,32,73],[45,82,32,74],[45,84,32,76],[45,85,32,77,"style"],[45,90,32,82],[45,92,32,84,"colorScheme"],[45,103,32,95],[45,104,32,96],[45,105,32,97],[47,4,34,2],[48,4,35,2],[49,4,36,2],[49,8,36,6,"backgroundColor"],[49,23,36,21],[49,26,36,24,"backgroundColorProp"],[49,45,36,43],[50,4,37,2],[50,8,37,6,"translucent"],[50,19,37,17],[50,23,37,21],[50,24,37,22,"backgroundColor"],[50,39,37,37],[50,41,37,39],[51,6,38,4,"backgroundColor"],[51,21,38,19],[51,24,38,22],[51,37,38,35],[52,4,39,2],[53,4,41,2],[53,24,42,4],[53,28,42,4,"_reactJsxRuntime"],[53,44,42,4],[53,45,42,4,"jsx"],[53,48,42,4],[53,50,42,5,"_reactNative"],[53,62,42,20],[53,63,42,20,"StatusBar"],[53,72,42,20],[54,6,42,20],[54,9,43,10,"props"],[54,14,43,15],[55,6,44,6,"translucent"],[55,17,44,17],[55,19,44,19,"translucent"],[55,30,44,31],[56,6,45,6,"barStyle"],[56,14,45,14],[56,16,45,16,"barStyle"],[56,24,45,25],[57,6,46,6,"backgroundColor"],[57,21,46,21],[57,23,46,23,"backgroundColor"],[57,38,46,39],[58,6,47,6,"showHideTransition"],[58,24,47,24],[58,26,47,26,"hideTransitionAnimation"],[58,49,47,49],[58,54,47,54],[58,60,47,60],[58,63,47,63,"undefined"],[58,72,47,72],[58,75,47,75,"hideTransitionAnimation"],[59,4,47,99],[59,5,48,5],[59,6,48,6],[60,2,50,0],[62,2,52,0],[63,2,53,0],[64,0,54,0],[65,0,55,0],[66,0,56,0],[67,0,57,0],[68,2,58,7],[68,11,58,16,"setStatusBarStyle"],[68,28,58,33,"setStatusBarStyle"],[68,29,58,34,"style"],[68,34,58,55],[68,36,58,57,"animated"],[68,44,58,75],[68,46,58,77],[69,4,59,2,"NativeStatusBar"],[69,16,59,17],[69,17,59,17,"StatusBar"],[69,26,59,17],[69,27,59,18,"setBarStyle"],[69,38,59,29],[69,39,59,30,"styleToBarStyle"],[69,54,59,45],[69,55,59,46,"style"],[69,60,59,51],[69,61,59,52],[69,63,59,54,"animated"],[69,71,59,62],[69,72,59,63],[70,2,60,0],[72,2,62,0],[73,2,63,0],[74,0,64,0],[75,0,65,0],[76,0,66,0],[77,0,67,0],[78,2,68,7],[78,11,68,16,"setStatusBarHidden"],[78,29,68,34,"setStatusBarHidden"],[78,30,68,35,"hidden"],[78,36,68,50],[78,38,68,52,"animation"],[78,47,68,82],[78,49,68,84],[79,4,69,2,"NativeStatusBar"],[79,16,69,17],[79,17,69,17,"StatusBar"],[79,26,69,17],[79,27,69,18,"setHidden"],[79,36,69,27],[79,37,69,28,"hidden"],[79,43,69,34],[79,45,69,36,"animation"],[79,54,69,45],[79,55,69,46],[80,2,70,0],[82,2,72,0],[83,2,73,0],[84,0,74,0],[85,0,75,0],[86,0,76,0],[87,0,77,0],[88,0,78,0],[89,2,79,7],[89,11,79,16,"setStatusBarBackgroundColor"],[89,38,79,43,"setStatusBarBackgroundColor"],[89,39,79,44,"backgroundColor"],[89,54,79,71],[89,56,79,73,"animated"],[89,64,79,91],[89,66,79,93],[90,4,80,2,"NativeStatusBar"],[90,16,80,17],[90,17,80,17,"StatusBar"],[90,26,80,17],[90,27,80,18,"setBackgroundColor"],[90,45,80,36],[90,46,80,37,"backgroundColor"],[90,61,80,52],[90,63,80,54,"animated"],[90,71,80,62],[90,72,80,63],[91,2,81,0],[93,2,83,0],[94,2,84,0],[95,0,85,0],[96,0,86,0],[97,0,87,0],[98,0,88,0],[99,2,89,7],[99,11,89,16,"setStatusBarNetworkActivityIndicatorVisible"],[99,54,89,59,"setStatusBarNetworkActivityIndicatorVisible"],[99,55,89,60,"visible"],[99,62,89,76],[99,64,89,78],[100,4,90,2,"NativeStatusBar"],[100,16,90,17],[100,17,90,17,"StatusBar"],[100,26,90,17],[100,27,90,18,"setNetworkActivityIndicatorVisible"],[100,61,90,52],[100,62,90,53,"visible"],[100,69,90,60],[100,70,90,61],[101,2,91,0],[103,2,93,0],[104,2,94,0],[105,0,95,0],[106,0,96,0],[107,0,97,0],[108,0,98,0],[109,0,99,0],[110,2,100,7],[110,11,100,16,"setStatusBarTranslucent"],[110,34,100,39,"setStatusBarTranslucent"],[110,35,100,40,"translucent"],[110,46,100,60],[110,48,100,62],[111,4,101,2,"NativeStatusBar"],[111,16,101,17],[111,17,101,17,"StatusBar"],[111,26,101,17],[111,27,101,18,"setTranslucent"],[111,41,101,32],[111,42,101,33,"translucent"],[111,53,101,44],[111,54,101,45],[112,2,102,0],[113,2,104,0],[113,11,104,9,"styleToBarStyle"],[113,26,104,24,"styleToBarStyle"],[113,27,104,24],[113,29,107,36],[114,4,107,36],[114,8,105,2,"style"],[114,13,105,23],[114,16,105,23,"arguments"],[114,25,105,23],[114,26,105,23,"length"],[114,32,105,23],[114,40,105,23,"arguments"],[114,49,105,23],[114,57,105,23,"undefined"],[114,66,105,23],[114,69,105,23,"arguments"],[114,78,105,23],[114,84,105,26],[114,90,105,32],[115,4,105,32],[115,8,106,2,"colorScheme"],[115,19,106,30],[115,22,106,30,"arguments"],[115,31,106,30],[115,32,106,30,"length"],[115,38,106,30],[115,46,106,30,"arguments"],[115,55,106,30],[115,63,106,30,"undefined"],[115,72,106,30],[115,75,106,30,"arguments"],[115,84,106,30],[115,90,106,33,"Appearance"],[115,102,106,43],[115,103,106,43,"Appearance"],[115,113,106,43],[115,115,106,45,"getColorScheme"],[115,129,106,59],[115,130,106,60],[115,131,106,61],[115,135,106,65],[115,142,106,72],[116,4,108,2],[116,8,108,6],[116,9,108,7,"colorScheme"],[116,20,108,18],[116,22,108,20],[117,6,109,4,"colorScheme"],[117,17,109,15],[117,20,109,18],[117,27,109,25],[118,4,110,2],[119,4,112,2],[119,8,112,6,"resolvedStyle"],[119,21,112,19],[119,24,112,22,"style"],[119,29,112,27],[120,4,113,2],[120,8,113,6,"style"],[120,13,113,11],[120,18,113,16],[120,24,113,22],[120,26,113,24],[121,6,114,4,"resolvedStyle"],[121,19,114,17],[121,22,114,20,"colorScheme"],[121,33,114,31],[121,38,114,36],[121,45,114,43],[121,48,114,46],[121,54,114,52],[121,57,114,55],[121,64,114,62],[122,4,115,2],[122,5,115,3],[122,11,115,9],[122,15,115,13,"style"],[122,20,115,18],[122,25,115,23],[122,35,115,33],[122,37,115,35],[123,6,116,4,"resolvedStyle"],[123,19,116,17],[123,22,116,20,"colorScheme"],[123,33,116,31],[123,38,116,36],[123,45,116,43],[123,48,116,46],[123,55,116,53],[123,58,116,56],[123,64,116,62],[124,4,117,2],[125,4,119,2],[125,11,119,9,"resolvedStyle"],[125,24,119,22],[125,29,119,27],[125,36,119,34],[125,39,119,37],[125,54,119,52],[125,57,119,55],[125,71,119,69],[126,2,120,0],[127,0,120,1],[127,3]],"functionMap":{"names":["<global>","StatusBar","React.useMemo$argument_0","setStatusBarStyle","setStatusBarHidden","setStatusBarBackgroundColor","setStatusBarNetworkActivityIndicatorVisible","setStatusBarTranslucent","styleToBarStyle"],"mappings":"AAA;OCqB;iCCU,yCD;CDkB;OGQ;CHE;OIQ;CJE;OKS;CLE;OMQ;CNE;OOS;CPE;AQE;CRgB"},"hasCjsExports":false},"type":"js/module"}]}