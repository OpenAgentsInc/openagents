{"dependencies":[],"output":[{"data":{"code":"__d(function (global, require, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {\n  // markdown-it default options\n\n  'use strict';\n\n  module.exports = {\n    options: {\n      html: false,\n      // Enable HTML tags in source\n      xhtmlOut: false,\n      // Use '/' to close single tags (<br />)\n      breaks: false,\n      // Convert '\\n' in paragraphs into <br>\n      langPrefix: 'language-',\n      // CSS language prefix for fenced blocks\n      linkify: false,\n      // autoconvert URL-like texts to links\n\n      // Enable some language-neutral replacements + quotes beautification\n      typographer: false,\n      // Double + single quotes replacement pairs, when typographer enabled,\n      // and smartquotes on. Could be either a String or an Array.\n      //\n      // For example, you can use '«»„“' for Russian, '„“‚‘' for German,\n      // and ['«\\xA0', '\\xA0»', '‹\\xA0', '\\xA0›'] for French (including nbsp).\n      quotes: '\\u201c\\u201d\\u2018\\u2019',\n      /* “”‘’ */\n\n      // Highlighter function. Should return escaped HTML,\n      // or '' if the source string is not changed and should be escaped externaly.\n      // If result starts with <pre... internal wrapper is skipped.\n      //\n      // function (/*str, lang*/) { return ''; }\n      //\n      highlight: null,\n      maxNesting: 100 // Internal protection, recursion limit\n    },\n    components: {\n      core: {},\n      block: {},\n      inline: {}\n    }\n  };\n});","lineCount":44,"map":[[2,2,1,0],[4,2,3,0],[4,14,3,12],[6,2,6,0,"module"],[6,8,6,6],[6,9,6,7,"exports"],[6,16,6,14],[6,19,6,17],[7,4,7,2,"options"],[7,11,7,9],[7,13,7,11],[8,6,8,4,"html"],[8,10,8,8],[8,12,8,18],[8,17,8,23],[9,6,8,32],[10,6,9,4,"xhtmlOut"],[10,14,9,12],[10,16,9,18],[10,21,9,23],[11,6,9,32],[12,6,10,4,"breaks"],[12,12,10,10],[12,14,10,18],[12,19,10,23],[13,6,10,32],[14,6,11,4,"langPrefix"],[14,16,11,14],[14,18,11,18],[14,29,11,29],[15,6,11,32],[16,6,12,4,"linkify"],[16,13,12,11],[16,15,12,18],[16,20,12,23],[17,6,12,32],[19,6,14,4],[20,6,15,4,"typographer"],[20,17,15,15],[20,19,15,18],[20,24,15,23],[21,6,17,4],[22,6,18,4],[23,6,19,4],[24,6,20,4],[25,6,21,4],[26,6,22,4,"quotes"],[26,12,22,10],[26,14,22,12],[26,40,22,38],[27,6,22,40],[29,6,24,4],[30,6,25,4],[31,6,26,4],[32,6,27,4],[33,6,28,4],[34,6,29,4],[35,6,30,4,"highlight"],[35,15,30,13],[35,17,30,15],[35,21,30,19],[36,6,32,4,"maxNesting"],[36,16,32,14],[36,18,32,18],[36,21,32,21],[36,22,32,33],[37,4,33,2],[37,5,33,3],[38,4,35,2,"components"],[38,14,35,12],[38,16,35,14],[39,6,37,4,"core"],[39,10,37,8],[39,12,37,10],[39,13,37,11],[39,14,37,12],[40,6,38,4,"block"],[40,11,38,9],[40,13,38,11],[40,14,38,12],[40,15,38,13],[41,6,39,4,"inline"],[41,12,39,10],[41,14,39,12],[41,15,39,13],[42,4,40,2],[43,2,41,0],[43,3,41,1],[44,0,41,2],[44,3]],"functionMap":{"names":["<global>"],"mappings":"AAA"},"hasCjsExports":true},"type":"js/module"}]}