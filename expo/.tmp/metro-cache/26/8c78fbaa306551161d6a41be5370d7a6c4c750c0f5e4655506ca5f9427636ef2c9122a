{"dependencies":[{"name":"react","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":1,"column":0,"index":0},"end":{"line":1,"column":26,"index":26}}],"key":"RtGiGa+/H7VrI7GDQDLhO1UbpU8=","exportNames":["*"],"imports":1}}],"output":[{"data":{"code":"__d(function (global, require, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {\n  \"use strict\";\n\n  Object.defineProperty(exports, '__esModule', {\n    value: true\n  });\n  function _interopDefault(e) {\n    return e && e.__esModule ? e : {\n      default: e\n    };\n  }\n  exports.toArray = toArray;\n  exports.withPrevAndCurrent = withPrevAndCurrent;\n  exports.hasProperty = hasProperty;\n  exports.isTestEnv = isTestEnv;\n  exports.tagMessage = tagMessage;\n  exports.isFabric = isFabric;\n  exports.isReact19 = isReact19;\n  exports.isRemoteDebuggingEnabled = isRemoteDebuggingEnabled;\n  exports.deepEqual = deepEqual;\n  Object.defineProperty(exports, \"INT32_MAX\", {\n    enumerable: true,\n    get: function () {\n      return INT32_MAX;\n    }\n  });\n  var _react = require(_dependencyMap[0]);\n  var React = _interopDefault(_react);\n  function toArray(object) {\n    if (!Array.isArray(object)) {\n      return [object];\n    }\n    return object;\n  }\n  function withPrevAndCurrent(array, mapFn) {\n    var previousArr = [null];\n    var currentArr = [...array];\n    var transformedArr = [];\n    currentArr.forEach((current, i) => {\n      // This type cast is fine and solves problem mentioned in https://github.com/software-mansion/react-native-gesture-handler/pull/2867 (namely that `previous` can be undefined).\n      // Unfortunately, linter on our CI does not allow this type of casting as it is unnecessary. To bypass that we use eslint-disable.\n      // eslint-disable-next-line @typescript-eslint/no-unnecessary-type-assertion\n      var previous = previousArr[i];\n      var transformed = mapFn(previous, current);\n      previousArr.push(transformed);\n      transformedArr.push(transformed);\n    });\n    return transformedArr;\n  }\n  function hasProperty(object, key) {\n    return Object.prototype.hasOwnProperty.call(object, key);\n  }\n  function isTestEnv() {\n    // @ts-ignore Do not use `@types/node` because it will prioritise Node types over RN types which breaks the types (ex. setTimeout) in React Native projects.\n    return hasProperty(global, 'process') && false;\n  }\n  function tagMessage(msg) {\n    return `[react-native-gesture-handler] ${msg}`;\n  }\n\n  // Helper method to check whether Fabric is enabled, however global.nativeFabricUIManager\n  // may not be initialized before the first render\n  function isFabric() {\n    // @ts-expect-error nativeFabricUIManager is not yet included in the RN types\n    return !!global?.nativeFabricUIManager;\n  }\n  function isReact19() {\n    return React.default.version.startsWith('19.');\n  }\n  function isRemoteDebuggingEnabled() {\n    // react-native-reanimated checks if in remote debugging in the same way\n    // @ts-ignore global is available but node types are not included\n    var localGlobal = global;\n    return (!localGlobal.nativeCallSyncHook || !!localGlobal.__REMOTEDEV__) && !localGlobal.RN$Bridgeless;\n  }\n\n  /**\n   * Recursively compares two objects for deep equality.\n   *\n   * **Note:** This function does not support cyclic references.\n   *\n   * @param obj1 - The first object to compare.\n   * @param obj2 - The second object to compare.\n   * @returns `true` if the objects are deeply equal, `false` otherwise.\n   */\n  function deepEqual(obj1, obj2) {\n    if (obj1 === obj2) {\n      return true;\n    }\n    if (typeof obj1 !== 'object' || typeof obj2 !== 'object' || obj1 === null || obj2 === null) {\n      return false;\n    }\n    var keys1 = Object.keys(obj1);\n    var keys2 = Object.keys(obj2);\n    if (keys1.length !== keys2.length) {\n      return false;\n    }\n    for (var key of keys1) {\n      if (!keys2.includes(key) || !deepEqual(obj1[key], obj2[key])) {\n        return false;\n      }\n    }\n    return true;\n  }\n  var INT32_MAX = 2147483647;\n});","lineCount":106,"map":[[12,2,3,0,"exports"],[12,9,3,0],[12,10,3,0,"toArray"],[12,17,3,0],[12,20,3,0,"toArray"],[12,27,3,0],[13,2,15,0,"exports"],[13,9,15,0],[13,10,15,0,"withPrevAndCurrent"],[13,28,15,0],[13,31,15,0,"withPrevAndCurrent"],[13,49,15,0],[14,2,34,0,"exports"],[14,9,34,0],[14,10,34,0,"hasProperty"],[14,21,34,0],[14,24,34,0,"hasProperty"],[14,35,34,0],[15,2,38,0,"exports"],[15,9,38,0],[15,10,38,0,"isTestEnv"],[15,19,38,0],[15,22,38,0,"isTestEnv"],[15,31,38,0],[16,2,43,0,"exports"],[16,9,43,0],[16,10,43,0,"tagMessage"],[16,20,43,0],[16,23,43,0,"tagMessage"],[16,33,43,0],[17,2,49,0,"exports"],[17,9,49,0],[17,10,49,0,"isFabric"],[17,18,49,0],[17,21,49,0,"isFabric"],[17,29,49,0],[18,2,54,0,"exports"],[18,9,54,0],[18,10,54,0,"isReact19"],[18,19,54,0],[18,22,54,0,"isReact19"],[18,31,54,0],[19,2,58,0,"exports"],[19,9,58,0],[19,10,58,0,"isRemoteDebuggingEnabled"],[19,34,58,0],[19,37,58,0,"isRemoteDebuggingEnabled"],[19,61,58,0],[20,2,77,0,"exports"],[20,9,77,0],[20,10,77,0,"deepEqual"],[20,19,77,0],[20,22,77,0,"deepEqual"],[20,31,77,0],[21,2,107,0,"Object"],[21,8,107,0],[21,9,107,0,"defineProperty"],[21,23,107,0],[21,24,107,0,"exports"],[21,31,107,0],[22,4,107,0,"enumerable"],[22,14,107,0],[23,4,107,0,"get"],[23,7,107,0],[23,18,107,0,"get"],[23,19,107,0],[24,6,107,0],[24,13,107,0,"INT32_MAX"],[24,22,107,0],[25,4,107,0],[26,2,107,0],[27,2,1,0],[27,6,1,0,"_react"],[27,12,1,0],[27,15,1,0,"require"],[27,22,1,0],[27,23,1,0,"_dependencyMap"],[27,37,1,0],[28,2,1,0],[28,6,1,0,"React"],[28,11,1,0],[28,14,1,0,"_interopDefault"],[28,29,1,0],[28,30,1,0,"_react"],[28,36,1,0],[29,2,3,7],[29,11,3,16,"toArray"],[29,18,3,23,"toArray"],[29,19,3,27,"object"],[29,25,3,42],[29,27,3,49],[30,4,4,2],[30,8,4,6],[30,9,4,7,"Array"],[30,14,4,12],[30,15,4,13,"isArray"],[30,22,4,20],[30,23,4,21,"object"],[30,29,4,27],[30,30,4,28],[30,32,4,30],[31,6,5,4],[31,13,5,11],[31,14,5,12,"object"],[31,20,5,18],[31,21,5,19],[32,4,6,2],[33,4,8,2],[33,11,8,9,"object"],[33,17,8,15],[34,2,9,0],[35,2,15,7],[35,11,15,16,"withPrevAndCurrent"],[35,29,15,34,"withPrevAndCurrent"],[35,30,16,2,"array"],[35,35,16,12],[35,37,17,2,"mapFn"],[35,42,17,48],[35,44,18,17],[36,4,19,2],[36,8,19,8,"previousArr"],[36,19,19,43],[36,22,19,46],[36,23,19,47],[36,27,19,51],[36,28,19,52],[37,4,20,2],[37,8,20,8,"currentArr"],[37,18,20,18],[37,21,20,21],[37,22,20,22],[37,25,20,25,"array"],[37,30,20,30],[37,31,20,31],[38,4,21,2],[38,8,21,8,"transformedArr"],[38,22,21,37],[38,25,21,40],[38,27,21,42],[39,4,22,2,"currentArr"],[39,14,22,12],[39,15,22,13,"forEach"],[39,22,22,20],[39,23,22,21],[39,24,22,22,"current"],[39,31,22,29],[39,33,22,31,"i"],[39,34,22,32],[39,39,22,37],[40,6,23,4],[41,6,24,4],[42,6,25,4],[43,6,26,4],[43,10,26,10,"previous"],[43,18,26,18],[43,21,26,21,"previousArr"],[43,32,26,32],[43,33,26,33,"i"],[43,34,26,34],[43,35,26,57],[44,6,27,4],[44,10,27,10,"transformed"],[44,21,27,21],[44,24,27,24,"mapFn"],[44,29,27,29],[44,30,27,30,"previous"],[44,38,27,38],[44,40,27,40,"current"],[44,47,27,47],[44,48,27,48],[45,6,28,4,"previousArr"],[45,17,28,15],[45,18,28,16,"push"],[45,22,28,20],[45,23,28,21,"transformed"],[45,34,28,32],[45,35,28,33],[46,6,29,4,"transformedArr"],[46,20,29,18],[46,21,29,19,"push"],[46,25,29,23],[46,26,29,24,"transformed"],[46,37,29,35],[46,38,29,36],[47,4,30,2],[47,5,30,3],[47,6,30,4],[48,4,31,2],[48,11,31,9,"transformedArr"],[48,25,31,23],[49,2,32,0],[50,2,34,7],[50,11,34,16,"hasProperty"],[50,22,34,27,"hasProperty"],[50,23,34,28,"object"],[50,29,34,42],[50,31,34,44,"key"],[50,34,34,55],[50,36,34,57],[51,4,35,2],[51,11,35,9,"Object"],[51,17,35,15],[51,18,35,16,"prototype"],[51,27,35,25],[51,28,35,26,"hasOwnProperty"],[51,42,35,40],[51,43,35,41,"call"],[51,47,35,45],[51,48,35,46,"object"],[51,54,35,52],[51,56,35,54,"key"],[51,59,35,57],[51,60,35,58],[52,2,36,0],[53,2,38,7],[53,11,38,16,"isTestEnv"],[53,20,38,25,"isTestEnv"],[53,21,38,25],[53,23,38,37],[54,4,39,2],[55,4,40,2],[55,11,40,9,"hasProperty"],[55,22,40,20],[55,23,40,21,"global"],[55,29,40,27],[55,31,40,29],[55,40,40,38],[55,41,40,39],[55,50,40,74],[56,2,41,0],[57,2,43,7],[57,11,43,16,"tagMessage"],[57,21,43,26,"tagMessage"],[57,22,43,27,"msg"],[57,25,43,38],[57,27,43,40],[58,4,44,2],[58,11,44,9],[58,45,44,43,"msg"],[58,48,44,46],[58,50,44,48],[59,2,45,0],[61,2,47,0],[62,2,48,0],[63,2,49,7],[63,11,49,16,"isFabric"],[63,19,49,24,"isFabric"],[63,20,49,24],[63,22,49,36],[64,4,50,2],[65,4,51,2],[65,11,51,9],[65,12,51,10],[65,13,51,11,"global"],[65,19,51,17],[65,21,51,19,"nativeFabricUIManager"],[65,42,51,40],[66,2,52,0],[67,2,54,7],[67,11,54,16,"isReact19"],[67,20,54,25,"isReact19"],[67,21,54,25],[67,23,54,28],[68,4,55,2],[68,11,55,9,"React"],[68,16,55,14],[68,17,55,14,"default"],[68,24,55,14],[68,25,55,15,"version"],[68,32,55,22],[68,33,55,23,"startsWith"],[68,43,55,33],[68,44,55,34],[68,49,55,39],[68,50,55,40],[69,2,56,0],[70,2,58,7],[70,11,58,16,"isRemoteDebuggingEnabled"],[70,35,58,40,"isRemoteDebuggingEnabled"],[70,36,58,40],[70,38,58,52],[71,4,59,2],[72,4,60,2],[73,4,61,2],[73,8,61,8,"localGlobal"],[73,19,61,19],[73,22,61,22,"global"],[73,28,61,35],[74,4,62,2],[74,11,63,4],[74,12,63,5],[74,13,63,6,"localGlobal"],[74,24,63,17],[74,25,63,18,"nativeCallSyncHook"],[74,43,63,36],[74,47,63,40],[74,48,63,41],[74,49,63,42,"localGlobal"],[74,60,63,53],[74,61,63,54,"__REMOTEDEV__"],[74,74,63,67],[74,79,64,4],[74,80,64,5,"localGlobal"],[74,91,64,16],[74,92,64,17,"RN$Bridgeless"],[74,105,64,30],[75,2,66,0],[77,2,68,0],[78,0,69,0],[79,0,70,0],[80,0,71,0],[81,0,72,0],[82,0,73,0],[83,0,74,0],[84,0,75,0],[85,0,76,0],[86,2,77,7],[86,11,77,16,"deepEqual"],[86,20,77,25,"deepEqual"],[86,21,77,26,"obj1"],[86,25,77,35],[86,27,77,37,"obj2"],[86,31,77,46],[86,33,77,48],[87,4,78,2],[87,8,78,6,"obj1"],[87,12,78,10],[87,17,78,15,"obj2"],[87,21,78,19],[87,23,78,21],[88,6,79,4],[88,13,79,11],[88,17,79,15],[89,4,80,2],[90,4,82,2],[90,8,83,4],[90,15,83,11,"obj1"],[90,19,83,15],[90,24,83,20],[90,32,83,28],[90,36,84,4],[90,43,84,11,"obj2"],[90,47,84,15],[90,52,84,20],[90,60,84,28],[90,64,85,4,"obj1"],[90,68,85,8],[90,73,85,13],[90,77,85,17],[90,81,86,4,"obj2"],[90,85,86,8],[90,90,86,13],[90,94,86,17],[90,96,87,4],[91,6,88,4],[91,13,88,11],[91,18,88,16],[92,4,89,2],[93,4,91,2],[93,8,91,8,"keys1"],[93,13,91,13],[93,16,91,16,"Object"],[93,22,91,22],[93,23,91,23,"keys"],[93,27,91,27],[93,28,91,28,"obj1"],[93,32,91,32],[93,33,91,33],[94,4,92,2],[94,8,92,8,"keys2"],[94,13,92,13],[94,16,92,16,"Object"],[94,22,92,22],[94,23,92,23,"keys"],[94,27,92,27],[94,28,92,28,"obj2"],[94,32,92,32],[94,33,92,33],[95,4,94,2],[95,8,94,6,"keys1"],[95,13,94,11],[95,14,94,12,"length"],[95,20,94,18],[95,25,94,23,"keys2"],[95,30,94,28],[95,31,94,29,"length"],[95,37,94,35],[95,39,94,37],[96,6,95,4],[96,13,95,11],[96,18,95,16],[97,4,96,2],[98,4,98,2],[98,9,98,7],[98,13,98,13,"key"],[98,16,98,16],[98,20,98,20,"keys1"],[98,25,98,25],[98,27,98,27],[99,6,99,4],[99,10,99,8],[99,11,99,9,"keys2"],[99,16,99,14],[99,17,99,15,"includes"],[99,25,99,23],[99,26,99,24,"key"],[99,29,99,27],[99,30,99,28],[99,34,99,32],[99,35,99,33,"deepEqual"],[99,44,99,42],[99,45,99,43,"obj1"],[99,49,99,47],[99,50,99,48,"key"],[99,53,99,51],[99,54,99,52],[99,56,99,54,"obj2"],[99,60,99,58],[99,61,99,59,"key"],[99,64,99,62],[99,65,99,63],[99,66,99,64],[99,68,99,66],[100,8,100,6],[100,15,100,13],[100,20,100,18],[101,6,101,4],[102,4,102,2],[103,4,104,2],[103,11,104,9],[103,15,104,13],[104,2,105,0],[105,2,107,7],[105,6,107,13,"INT32_MAX"],[105,15,107,22],[105,28,107,36],[106,0,107,37],[106,3]],"functionMap":{"names":["<global>","toArray","withPrevAndCurrent","currentArr.forEach$argument_0","hasProperty","isTestEnv","tagMessage","isFabric","isReact19","isRemoteDebuggingEnabled","deepEqual"],"mappings":"AAA;OCE;CDM;OEM;qBCO;GDQ;CFE;OIE;CJE;OKE;CLG;OME;CNE;OOI;CPG;OQE;CRE;OSE;CTQ;OUW;CV4B"},"hasCjsExports":false},"type":"js/module"}]}