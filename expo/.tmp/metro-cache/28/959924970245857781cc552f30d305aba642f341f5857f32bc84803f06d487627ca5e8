{"dependencies":[{"name":"../../common","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":3,"column":0,"index":15},"end":{"line":3,"column":47,"index":62}}],"key":"IDJz4HWb8BkS18xB4AVSbpQcs+Y=","exportNames":["*"],"imports":1}},{"name":"./guards","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":5,"column":0,"index":122},"end":{"line":5,"column":64,"index":186}}],"key":"7IcP4BBHm964AYW9pG0bpLbIQnw=","exportNames":["*"],"imports":1}}],"output":[{"data":{"code":"__d(function (global, require, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {\n  'use strict';\n\n  Object.defineProperty(exports, '__esModule', {\n    value: true\n  });\n  exports.splitByComma = splitByComma;\n  exports.splitByWhitespace = splitByWhitespace;\n  exports.parseSingleTransitionShorthand = parseSingleTransitionShorthand;\n  var _common = require(_dependencyMap[0]);\n  var _guards = require(_dependencyMap[1]);\n  function splitByComma(str) {\n    // split by comma not enclosed in parentheses\n    var parts = [];\n    var current = '';\n    var depth = 0;\n    for (var char of str) {\n      if (char === '(') {\n        depth++;\n      } else if (char === ')') {\n        depth--;\n      } else if (char === ',' && depth === 0) {\n        parts.push(current.trim());\n        current = '';\n        continue;\n      }\n      current += char;\n    }\n    parts.push(current.trim());\n    return parts;\n  }\n  function splitByWhitespace(str) {\n    // split by whitespace not enclosed in parentheses\n    return str.split(/\\s+(?![^()]*\\))/);\n  }\n  function parseSingleTransitionShorthand(value) {\n    var result = {};\n    var parts = splitByWhitespace(value);\n    for (var part of parts) {\n      if (part === 'all') {\n        result.transitionProperty = 'all';\n        continue;\n      }\n      if (part === 'normal' || part === 'allow-discrete') {\n        result.transitionBehavior = part;\n        continue;\n      }\n      if ((0, _guards.isTimeUnit)(part)) {\n        var timeUnit = part;\n        if (result.transitionDuration === undefined) {\n          result.transitionDuration = timeUnit;\n          continue;\n        }\n        if (result.transitionDelay === undefined) {\n          result.transitionDelay = timeUnit;\n          continue;\n        }\n      }\n      if (result.transitionTimingFunction === undefined && (0, _guards.smellsLikeTimingFunction)(part)) {\n        result.transitionTimingFunction = part;\n        continue;\n      }\n      if (result.transitionProperty === undefined) {\n        result.transitionProperty = part;\n        continue;\n      }\n      throw new _common.ReanimatedError(`Invalid transition shorthand: ${value}`);\n    }\n    return result;\n  }\n});","lineCount":71,"map":[[2,2,1,0],[2,14,1,12],[4,2,1,13,"Object"],[4,8,1,13],[4,9,1,13,"defineProperty"],[4,23,1,13],[4,24,1,13,"exports"],[4,31,1,13],[5,4,1,13,"value"],[5,9,1,13],[6,2,1,13],[7,2,7,0,"exports"],[7,9,7,0],[7,10,7,0,"splitByComma"],[7,22,7,0],[7,25,7,0,"splitByComma"],[7,37,7,0],[8,2,28,0,"exports"],[8,9,28,0],[8,10,28,0,"splitByWhitespace"],[8,27,28,0],[8,30,28,0,"splitByWhitespace"],[8,47,28,0],[9,2,41,0,"exports"],[9,9,41,0],[9,10,41,0,"parseSingleTransitionShorthand"],[9,40,41,0],[9,43,41,0,"parseSingleTransitionShorthand"],[9,73,41,0],[10,2,3,0],[10,6,3,0,"_common"],[10,13,3,0],[10,16,3,0,"require"],[10,23,3,0],[10,24,3,0,"_dependencyMap"],[10,38,3,0],[11,2,5,0],[11,6,5,0,"_guards"],[11,13,5,0],[11,16,5,0,"require"],[11,23,5,0],[11,24,5,0,"_dependencyMap"],[11,38,5,0],[12,2,7,7],[12,11,7,16,"splitByComma"],[12,23,7,28,"splitByComma"],[12,24,7,29,"str"],[12,27,7,40],[12,29,7,42],[13,4,8,2],[14,4,9,2],[14,8,9,8,"parts"],[14,13,9,23],[14,16,9,26],[14,18,9,28],[15,4,10,2],[15,8,10,6,"current"],[15,15,10,13],[15,18,10,16],[15,20,10,18],[16,4,11,2],[16,8,11,6,"depth"],[16,13,11,11],[16,16,11,14],[16,17,11,15],[17,4,12,2],[17,9,12,7],[17,13,12,13,"char"],[17,17,12,17],[17,21,12,21,"str"],[17,24,12,24],[17,26,12,26],[18,6,13,4],[18,10,13,8,"char"],[18,14,13,12],[18,19,13,17],[18,22,13,20],[18,24,13,22],[19,8,14,6,"depth"],[19,13,14,11],[19,15,14,13],[20,6,15,4],[20,7,15,5],[20,13,15,11],[20,17,15,15,"char"],[20,21,15,19],[20,26,15,24],[20,29,15,27],[20,31,15,29],[21,8,16,6,"depth"],[21,13,16,11],[21,15,16,13],[22,6,17,4],[22,7,17,5],[22,13,17,11],[22,17,17,15,"char"],[22,21,17,19],[22,26,17,24],[22,29,17,27],[22,33,17,31,"depth"],[22,38,17,36],[22,43,17,41],[22,44,17,42],[22,46,17,44],[23,8,18,6,"parts"],[23,13,18,11],[23,14,18,12,"push"],[23,18,18,16],[23,19,18,17,"current"],[23,26,18,24],[23,27,18,25,"trim"],[23,31,18,29],[23,32,18,30],[23,33,18,31],[23,34,18,32],[24,8,19,6,"current"],[24,15,19,13],[24,18,19,16],[24,20,19,18],[25,8,20,6],[26,6,21,4],[27,6,22,4,"current"],[27,13,22,11],[27,17,22,15,"char"],[27,21,22,19],[28,4,23,2],[29,4,24,2,"parts"],[29,9,24,7],[29,10,24,8,"push"],[29,14,24,12],[29,15,24,13,"current"],[29,22,24,20],[29,23,24,21,"trim"],[29,27,24,25],[29,28,24,26],[29,29,24,27],[29,30,24,28],[30,4,25,2],[30,11,25,9,"parts"],[30,16,25,14],[31,2,26,0],[32,2,28,7],[32,11,28,16,"splitByWhitespace"],[32,28,28,33,"splitByWhitespace"],[32,29,28,34,"str"],[32,32,28,45],[32,34,28,47],[33,4,29,2],[34,4,30,2],[34,11,30,9,"str"],[34,14,30,12],[34,15,30,13,"split"],[34,20,30,18],[34,21,30,19],[34,38,30,36],[34,39,30,37],[35,2,31,0],[36,2,41,7],[36,11,41,16,"parseSingleTransitionShorthand"],[36,41,41,46,"parseSingleTransitionShorthand"],[36,42,42,2,"value"],[36,47,42,15],[36,49,43,41],[37,4,44,2],[37,8,44,8,"result"],[37,14,44,53],[37,17,44,56],[37,18,44,57],[37,19,44,58],[38,4,45,2],[38,8,45,8,"parts"],[38,13,45,13],[38,16,45,16,"splitByWhitespace"],[38,33,45,33],[38,34,45,34,"value"],[38,39,45,39],[38,40,45,40],[39,4,47,2],[39,9,47,7],[39,13,47,13,"part"],[39,17,47,17],[39,21,47,21,"parts"],[39,26,47,26],[39,28,47,28],[40,6,48,4],[40,10,48,8,"part"],[40,14,48,12],[40,19,48,17],[40,24,48,22],[40,26,48,24],[41,8,49,6,"result"],[41,14,49,12],[41,15,49,13,"transitionProperty"],[41,33,49,31],[41,36,49,34],[41,41,49,39],[42,8,50,6],[43,6,51,4],[44,6,52,4],[44,10,52,8,"part"],[44,14,52,12],[44,19,52,17],[44,27,52,25],[44,31,52,29,"part"],[44,35,52,33],[44,40,52,38],[44,56,52,54],[44,58,52,56],[45,8,53,6,"result"],[45,14,53,12],[45,15,53,13,"transitionBehavior"],[45,33,53,31],[45,36,53,34,"part"],[45,40,53,38],[46,8,54,6],[47,6,55,4],[48,6,56,4],[48,10,56,8],[48,14,56,8,"isTimeUnit"],[48,21,56,18],[48,22,56,18,"isTimeUnit"],[48,32,56,18],[48,34,56,19,"part"],[48,38,56,23],[48,39,56,24],[48,41,56,26],[49,8,57,6],[49,12,57,12,"timeUnit"],[49,20,57,20],[49,23,57,23,"part"],[49,27,57,27],[50,8,58,6],[50,12,58,10,"result"],[50,18,58,16],[50,19,58,17,"transitionDuration"],[50,37,58,35],[50,42,58,40,"undefined"],[50,51,58,49],[50,53,58,51],[51,10,59,8,"result"],[51,16,59,14],[51,17,59,15,"transitionDuration"],[51,35,59,33],[51,38,59,36,"timeUnit"],[51,46,59,44],[52,10,60,8],[53,8,61,6],[54,8,62,6],[54,12,62,10,"result"],[54,18,62,16],[54,19,62,17,"transitionDelay"],[54,34,62,32],[54,39,62,37,"undefined"],[54,48,62,46],[54,50,62,48],[55,10,63,8,"result"],[55,16,63,14],[55,17,63,15,"transitionDelay"],[55,32,63,30],[55,35,63,33,"timeUnit"],[55,43,63,41],[56,10,64,8],[57,8,65,6],[58,6,66,4],[59,6,67,4],[59,10,68,6,"result"],[59,16,68,12],[59,17,68,13,"transitionTimingFunction"],[59,41,68,37],[59,46,68,42,"undefined"],[59,55,68,51],[59,59,69,6],[59,63,69,6,"smellsLikeTimingFunction"],[59,70,69,30],[59,71,69,30,"smellsLikeTimingFunction"],[59,95,69,30],[59,97,69,31,"part"],[59,101,69,35],[59,102,69,36],[59,104,70,6],[60,8,71,6,"result"],[60,14,71,12],[60,15,71,13,"transitionTimingFunction"],[60,39,71,37],[60,42,71,40,"part"],[60,46,71,44],[61,8,72,6],[62,6,73,4],[63,6,74,4],[63,10,74,8,"result"],[63,16,74,14],[63,17,74,15,"transitionProperty"],[63,35,74,33],[63,40,74,38,"undefined"],[63,49,74,47],[63,51,74,49],[64,8,75,6,"result"],[64,14,75,12],[64,15,75,13,"transitionProperty"],[64,33,75,31],[64,36,75,34,"part"],[64,40,75,38],[65,8,76,6],[66,6,77,4],[67,6,78,4],[67,12,78,10],[67,16,78,14,"ReanimatedError"],[67,23,78,29],[67,24,78,29,"ReanimatedError"],[67,39,78,29],[67,40,78,30],[67,73,78,63,"value"],[67,78,78,68],[67,80,78,70],[67,81,78,71],[68,4,79,2],[69,4,81,2],[69,11,81,9,"result"],[69,17,81,15],[70,2,82,0],[71,0,82,1],[71,3]],"functionMap":{"names":["<global>","splitByComma","splitByWhitespace","parseSingleTransitionShorthand"],"mappings":"AAA;OCM;CDmB;OEE;CFG;OGU;CHyC"},"hasCjsExports":false},"type":"js/module"}]}