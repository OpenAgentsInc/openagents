{"dependencies":[],"output":[{"data":{"code":"__d(function (global, require, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {\n  'use strict';\n\n  var encodeCache = {};\n\n  // Create a lookup array where anything but characters in `chars` string\n  // and alphanumeric chars is percent-encoded.\n  //\n  function getEncodeCache(exclude) {\n    var i,\n      ch,\n      cache = encodeCache[exclude];\n    if (cache) {\n      return cache;\n    }\n    cache = encodeCache[exclude] = [];\n    for (i = 0; i < 128; i++) {\n      ch = String.fromCharCode(i);\n      if (/^[0-9a-z]$/i.test(ch)) {\n        // always allow unencoded alphanumeric characters\n        cache.push(ch);\n      } else {\n        cache.push('%' + ('0' + i.toString(16).toUpperCase()).slice(-2));\n      }\n    }\n    for (i = 0; i < exclude.length; i++) {\n      cache[exclude.charCodeAt(i)] = exclude[i];\n    }\n    return cache;\n  }\n\n  // Encode unsafe characters with percent-encoding, skipping already\n  // encoded sequences.\n  //\n  //  - string       - string to encode\n  //  - exclude      - list of characters to ignore (in addition to a-zA-Z0-9)\n  //  - keepEscaped  - don't encode '%' in a correct escape sequence (default: true)\n  //\n  function encode(string, exclude, keepEscaped) {\n    var i,\n      l,\n      code,\n      nextCode,\n      cache,\n      result = '';\n    if (typeof exclude !== 'string') {\n      // encode(string, keepEscaped)\n      keepEscaped = exclude;\n      exclude = encode.defaultChars;\n    }\n    if (typeof keepEscaped === 'undefined') {\n      keepEscaped = true;\n    }\n    cache = getEncodeCache(exclude);\n    for (i = 0, l = string.length; i < l; i++) {\n      code = string.charCodeAt(i);\n      if (keepEscaped && code === 0x25 /* % */ && i + 2 < l) {\n        if (/^[0-9a-f]{2}$/i.test(string.slice(i + 1, i + 3))) {\n          result += string.slice(i, i + 3);\n          i += 2;\n          continue;\n        }\n      }\n      if (code < 128) {\n        result += cache[code];\n        continue;\n      }\n      if (code >= 0xD800 && code <= 0xDFFF) {\n        if (code >= 0xD800 && code <= 0xDBFF && i + 1 < l) {\n          nextCode = string.charCodeAt(i + 1);\n          if (nextCode >= 0xDC00 && nextCode <= 0xDFFF) {\n            result += encodeURIComponent(string[i] + string[i + 1]);\n            i++;\n            continue;\n          }\n        }\n        result += '%EF%BF%BD';\n        continue;\n      }\n      result += encodeURIComponent(string[i]);\n    }\n    return result;\n  }\n  encode.defaultChars = \";/?:@&=+$,-_.!~*'()#\";\n  encode.componentChars = \"-_.!~*'()\";\n  module.exports = encode;\n});","lineCount":87,"map":[[2,2,2,0],[2,14,2,12],[4,2,5,0],[4,6,5,4,"encodeCache"],[4,17,5,15],[4,20,5,18],[4,21,5,19],[4,22,5,20],[6,2,8,0],[7,2,9,0],[8,2,10,0],[9,2,11,0],[9,11,11,9,"getEncodeCache"],[9,25,11,23,"getEncodeCache"],[9,26,11,24,"exclude"],[9,33,11,31],[9,35,11,33],[10,4,12,2],[10,8,12,6,"i"],[10,9,12,7],[11,6,12,9,"ch"],[11,8,12,11],[12,6,12,13,"cache"],[12,11,12,18],[12,14,12,21,"encodeCache"],[12,25,12,32],[12,26,12,33,"exclude"],[12,33,12,40],[12,34,12,41],[13,4,13,2],[13,8,13,6,"cache"],[13,13,13,11],[13,15,13,13],[14,6,13,15],[14,13,13,22,"cache"],[14,18,13,27],[15,4,13,29],[16,4,15,2,"cache"],[16,9,15,7],[16,12,15,10,"encodeCache"],[16,23,15,21],[16,24,15,22,"exclude"],[16,31,15,29],[16,32,15,30],[16,35,15,33],[16,37,15,35],[17,4,17,2],[17,9,17,7,"i"],[17,10,17,8],[17,13,17,11],[17,14,17,12],[17,16,17,14,"i"],[17,17,17,15],[17,20,17,18],[17,23,17,21],[17,25,17,23,"i"],[17,26,17,24],[17,28,17,26],[17,30,17,28],[18,6,18,4,"ch"],[18,8,18,6],[18,11,18,9,"String"],[18,17,18,15],[18,18,18,16,"fromCharCode"],[18,30,18,28],[18,31,18,29,"i"],[18,32,18,30],[18,33,18,31],[19,6,20,4],[19,10,20,8],[19,23,20,21],[19,24,20,22,"test"],[19,28,20,26],[19,29,20,27,"ch"],[19,31,20,29],[19,32,20,30],[19,34,20,32],[20,8,21,6],[21,8,22,6,"cache"],[21,13,22,11],[21,14,22,12,"push"],[21,18,22,16],[21,19,22,17,"ch"],[21,21,22,19],[21,22,22,20],[22,6,23,4],[22,7,23,5],[22,13,23,11],[23,8,24,6,"cache"],[23,13,24,11],[23,14,24,12,"push"],[23,18,24,16],[23,19,24,17],[23,22,24,20],[23,25,24,23],[23,26,24,24],[23,29,24,27],[23,32,24,30,"i"],[23,33,24,31],[23,34,24,32,"toString"],[23,42,24,40],[23,43,24,41],[23,45,24,43],[23,46,24,44],[23,47,24,45,"toUpperCase"],[23,58,24,56],[23,59,24,57],[23,60,24,58],[23,62,24,60,"slice"],[23,67,24,65],[23,70,24,68],[23,71,24,69],[23,72,24,70],[24,6,25,4],[25,4,26,2],[26,4,28,2],[26,9,28,7,"i"],[26,10,28,8],[26,13,28,11],[26,14,28,12],[26,16,28,14,"i"],[26,17,28,15],[26,20,28,18,"exclude"],[26,27,28,25],[26,28,28,26,"length"],[26,34,28,32],[26,36,28,34,"i"],[26,37,28,35],[26,39,28,37],[26,41,28,39],[27,6,29,4,"cache"],[27,11,29,9],[27,12,29,10,"exclude"],[27,19,29,17],[27,20,29,18,"charCodeAt"],[27,30,29,28],[27,31,29,29,"i"],[27,32,29,30],[27,33,29,31],[27,34,29,32],[27,37,29,35,"exclude"],[27,44,29,42],[27,45,29,43,"i"],[27,46,29,44],[27,47,29,45],[28,4,30,2],[29,4,32,2],[29,11,32,9,"cache"],[29,16,32,14],[30,2,33,0],[32,2,36,0],[33,2,37,0],[34,2,38,0],[35,2,39,0],[36,2,40,0],[37,2,41,0],[38,2,42,0],[39,2,43,0],[39,11,43,9,"encode"],[39,17,43,15,"encode"],[39,18,43,16,"string"],[39,24,43,22],[39,26,43,24,"exclude"],[39,33,43,31],[39,35,43,33,"keepEscaped"],[39,46,43,44],[39,48,43,46],[40,4,44,2],[40,8,44,6,"i"],[40,9,44,7],[41,6,44,9,"l"],[41,7,44,10],[42,6,44,12,"code"],[42,10,44,16],[43,6,44,18,"nextCode"],[43,14,44,26],[44,6,44,28,"cache"],[44,11,44,33],[45,6,45,6,"result"],[45,12,45,12],[45,15,45,15],[45,17,45,17],[46,4,47,2],[46,8,47,6],[46,15,47,13,"exclude"],[46,22,47,20],[46,27,47,25],[46,35,47,33],[46,37,47,35],[47,6,48,4],[48,6,49,4,"keepEscaped"],[48,17,49,15],[48,20,49,19,"exclude"],[48,27,49,26],[49,6,50,4,"exclude"],[49,13,50,11],[49,16,50,14,"encode"],[49,22,50,20],[49,23,50,21,"defaultChars"],[49,35,50,33],[50,4,51,2],[51,4,53,2],[51,8,53,6],[51,15,53,13,"keepEscaped"],[51,26,53,24],[51,31,53,29],[51,42,53,40],[51,44,53,42],[52,6,54,4,"keepEscaped"],[52,17,54,15],[52,20,54,18],[52,24,54,22],[53,4,55,2],[54,4,57,2,"cache"],[54,9,57,7],[54,12,57,10,"getEncodeCache"],[54,26,57,24],[54,27,57,25,"exclude"],[54,34,57,32],[54,35,57,33],[55,4,59,2],[55,9,59,7,"i"],[55,10,59,8],[55,13,59,11],[55,14,59,12],[55,16,59,14,"l"],[55,17,59,15],[55,20,59,18,"string"],[55,26,59,24],[55,27,59,25,"length"],[55,33,59,31],[55,35,59,33,"i"],[55,36,59,34],[55,39,59,37,"l"],[55,40,59,38],[55,42,59,40,"i"],[55,43,59,41],[55,45,59,43],[55,47,59,45],[56,6,60,4,"code"],[56,10,60,8],[56,13,60,11,"string"],[56,19,60,17],[56,20,60,18,"charCodeAt"],[56,30,60,28],[56,31,60,29,"i"],[56,32,60,30],[56,33,60,31],[57,6,62,4],[57,10,62,8,"keepEscaped"],[57,21,62,19],[57,25,62,23,"code"],[57,29,62,27],[57,34,62,32],[57,38,62,36],[57,39,62,37],[57,50,62,48,"i"],[57,51,62,49],[57,54,62,52],[57,55,62,53],[57,58,62,56,"l"],[57,59,62,57],[57,61,62,59],[58,8,63,6],[58,12,63,10],[58,28,63,26],[58,29,63,27,"test"],[58,33,63,31],[58,34,63,32,"string"],[58,40,63,38],[58,41,63,39,"slice"],[58,46,63,44],[58,47,63,45,"i"],[58,48,63,46],[58,51,63,49],[58,52,63,50],[58,54,63,52,"i"],[58,55,63,53],[58,58,63,56],[58,59,63,57],[58,60,63,58],[58,61,63,59],[58,63,63,61],[59,10,64,8,"result"],[59,16,64,14],[59,20,64,18,"string"],[59,26,64,24],[59,27,64,25,"slice"],[59,32,64,30],[59,33,64,31,"i"],[59,34,64,32],[59,36,64,34,"i"],[59,37,64,35],[59,40,64,38],[59,41,64,39],[59,42,64,40],[60,10,65,8,"i"],[60,11,65,9],[60,15,65,13],[60,16,65,14],[61,10,66,8],[62,8,67,6],[63,6,68,4],[64,6,70,4],[64,10,70,8,"code"],[64,14,70,12],[64,17,70,15],[64,20,70,18],[64,22,70,20],[65,8,71,6,"result"],[65,14,71,12],[65,18,71,16,"cache"],[65,23,71,21],[65,24,71,22,"code"],[65,28,71,26],[65,29,71,27],[66,8,72,6],[67,6,73,4],[68,6,75,4],[68,10,75,8,"code"],[68,14,75,12],[68,18,75,16],[68,24,75,22],[68,28,75,26,"code"],[68,32,75,30],[68,36,75,34],[68,42,75,40],[68,44,75,42],[69,8,76,6],[69,12,76,10,"code"],[69,16,76,14],[69,20,76,18],[69,26,76,24],[69,30,76,28,"code"],[69,34,76,32],[69,38,76,36],[69,44,76,42],[69,48,76,46,"i"],[69,49,76,47],[69,52,76,50],[69,53,76,51],[69,56,76,54,"l"],[69,57,76,55],[69,59,76,57],[70,10,77,8,"nextCode"],[70,18,77,16],[70,21,77,19,"string"],[70,27,77,25],[70,28,77,26,"charCodeAt"],[70,38,77,36],[70,39,77,37,"i"],[70,40,77,38],[70,43,77,41],[70,44,77,42],[70,45,77,43],[71,10,78,8],[71,14,78,12,"nextCode"],[71,22,78,20],[71,26,78,24],[71,32,78,30],[71,36,78,34,"nextCode"],[71,44,78,42],[71,48,78,46],[71,54,78,52],[71,56,78,54],[72,12,79,10,"result"],[72,18,79,16],[72,22,79,20,"encodeURIComponent"],[72,40,79,38],[72,41,79,39,"string"],[72,47,79,45],[72,48,79,46,"i"],[72,49,79,47],[72,50,79,48],[72,53,79,51,"string"],[72,59,79,57],[72,60,79,58,"i"],[72,61,79,59],[72,64,79,62],[72,65,79,63],[72,66,79,64],[72,67,79,65],[73,12,80,10,"i"],[73,13,80,11],[73,15,80,13],[74,12,81,10],[75,10,82,8],[76,8,83,6],[77,8,84,6,"result"],[77,14,84,12],[77,18,84,16],[77,29,84,27],[78,8,85,6],[79,6,86,4],[80,6,88,4,"result"],[80,12,88,10],[80,16,88,14,"encodeURIComponent"],[80,34,88,32],[80,35,88,33,"string"],[80,41,88,39],[80,42,88,40,"i"],[80,43,88,41],[80,44,88,42],[80,45,88,43],[81,4,89,2],[82,4,91,2],[82,11,91,9,"result"],[82,17,91,15],[83,2,92,0],[84,2,94,0,"encode"],[84,8,94,6],[84,9,94,7,"defaultChars"],[84,21,94,19],[84,24,94,24],[84,46,94,46],[85,2,95,0,"encode"],[85,8,95,6],[85,9,95,7,"componentChars"],[85,23,95,21],[85,26,95,24],[85,37,95,35],[86,2,98,0,"module"],[86,8,98,6],[86,9,98,7,"exports"],[86,16,98,14],[86,19,98,17,"encode"],[86,25,98,23],[87,0,98,24],[87,3]],"functionMap":{"names":["<global>","getEncodeCache","encode"],"mappings":"AAA;ACU;CDsB;AEU;CFiD"},"hasCjsExports":true},"type":"js/module"}]}