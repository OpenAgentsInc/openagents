{"dependencies":[{"name":"@babel/runtime/helpers/slicedToArray","data":{"asyncType":null,"isESMImport":false,"locs":[],"key":"5y7e5+zC7teYEEC6niD9f5zII1M=","exportNames":["*"],"imports":1}},{"name":"@babel/runtime/helpers/asyncToGenerator","data":{"asyncType":null,"isESMImport":false,"locs":[],"key":"YisBBiy2Xm9DEVdFebZ2nbgAHBo=","exportNames":["*"],"imports":1}},{"name":"expo-modules-core","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":1,"column":0,"index":0},"end":{"line":1,"column":56,"index":56}}],"key":"fU8WLIPqoAGygnPbZ/QJiQQfXEY=","exportNames":["*"],"imports":1}},{"name":"react","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":2,"column":0,"index":57},"end":{"line":2,"column":44,"index":101}}],"key":"RtGiGa+/H7VrI7GDQDLhO1UbpU8=","exportNames":["*"],"imports":1}},{"name":"react-native","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":3,"column":0,"index":102},"end":{"line":3,"column":40,"index":142}}],"key":"KyzuX10g6ixS9UfynhmjlvCIG3g=","exportNames":["*"],"imports":1}},{"name":"./ExpoLinking","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":4,"column":0,"index":143},"end":{"line":4,"column":40,"index":183}}],"key":"9p576A/DjaRztdSFcD8Nohub+Qg=","exportNames":["*"],"imports":1}},{"name":"./RNLinking","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":5,"column":0,"index":184},"end":{"line":5,"column":36,"index":220}}],"key":"2y1SxYi56UhLqVRPo+LPBad0ytc=","exportNames":["*"],"imports":1}},{"name":"./createURL","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":6,"column":0,"index":221},"end":{"line":6,"column":36,"index":257}}],"key":"vA/KQURWJdMSJD6QjTsub0VGQQ0=","exportNames":["*"],"imports":1}},{"name":"./validateURL","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":7,"column":0,"index":258},"end":{"line":7,"column":44,"index":302}}],"key":"QglbFjhSs1PLl8wx6icnjPl9qpg=","exportNames":["*"],"imports":1}},{"name":"./Linking.types","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":143,"column":0,"index":5389},"end":{"line":143,"column":32,"index":5421}}],"key":"UNHzwDbHrazdE82g65F1azNEReY=","exportNames":["*"],"imports":1}},{"name":"./Schemes","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":144,"column":0,"index":5422},"end":{"line":144,"column":26,"index":5448}}],"key":"n/tFEHLQPHdXg5i1nrK9VhhMvhA=","exportNames":["*"],"imports":1}}],"output":[{"data":{"code":"__d(function (global, require, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {\n  \"use strict\";\n\n  Object.defineProperty(exports, '__esModule', {\n    value: true\n  });\n  function _interopDefault(e) {\n    return e && e.__esModule ? e : {\n      default: e\n    };\n  }\n  Object.defineProperty(exports, \"parse\", {\n    enumerable: true,\n    get: function () {\n      return _createURL.parse;\n    }\n  });\n  Object.defineProperty(exports, \"createURL\", {\n    enumerable: true,\n    get: function () {\n      return _createURL.createURL;\n    }\n  });\n  exports.addEventListener = addEventListener;\n  exports.parseInitialURLAsync = parseInitialURLAsync;\n  exports.sendIntent = sendIntent;\n  exports.openSettings = openSettings;\n  exports.getInitialURL = getInitialURL;\n  exports.getLinkingURL = getLinkingURL;\n  exports.openURL = openURL;\n  exports.canOpenURL = canOpenURL;\n  exports.useURL = useURL;\n  exports.useLinkingURL = useLinkingURL;\n  var _babelRuntimeHelpersSlicedToArray = require(_dependencyMap[0]);\n  var _slicedToArray = _interopDefault(_babelRuntimeHelpersSlicedToArray);\n  var _babelRuntimeHelpersAsyncToGenerator = require(_dependencyMap[1]);\n  var _asyncToGenerator = _interopDefault(_babelRuntimeHelpersAsyncToGenerator);\n  var _expoModulesCore = require(_dependencyMap[2]);\n  var _react = require(_dependencyMap[3]);\n  require(_dependencyMap[4]);\n  var _ExpoLinking = require(_dependencyMap[5]);\n  var ExpoLinking = _interopDefault(_ExpoLinking);\n  var _RNLinking = require(_dependencyMap[6]);\n  var RNLinking = _interopDefault(_RNLinking);\n  var _createURL = require(_dependencyMap[7]);\n  var _validateURL = require(_dependencyMap[8]);\n  var _LinkingTypes = require(_dependencyMap[9]);\n  Object.keys(_LinkingTypes).forEach(function (k) {\n    if (k !== 'default' && !Object.prototype.hasOwnProperty.call(exports, k)) {\n      Object.defineProperty(exports, k, {\n        enumerable: true,\n        get: function () {\n          return _LinkingTypes[k];\n        }\n      });\n    }\n  });\n  var _Schemes = require(_dependencyMap[10]);\n  Object.keys(_Schemes).forEach(function (k) {\n    if (k !== 'default' && !Object.prototype.hasOwnProperty.call(exports, k)) {\n      Object.defineProperty(exports, k, {\n        enumerable: true,\n        get: function () {\n          return _Schemes[k];\n        }\n      });\n    }\n  });\n  // @needsAudit\n  /**\n   * Add a handler to `Linking` changes by listening to the `url` event type and providing the handler.\n   * It is recommended to use the [`useURL()`](#useurl) hook instead.\n   * @param type The only valid type is `'url'`.\n   * @param handler An [`URLListener`](#urllistener) function that takes an `event` object of the type\n   * [`EventType`](#eventtype).\n   * @return An EmitterSubscription that has the remove method from EventSubscription\n   * @see [React Native documentation on Linking](https://reactnative.dev/docs/linking#addeventlistener).\n   */\n  function addEventListener(type, handler) {\n    return RNLinking.default.addEventListener(type, handler);\n  }\n  // @needsAudit\n  /**\n   * Helper method which wraps React Native's `Linking.getInitialURL()` in `Linking.parse()`.\n   * Parses the deep link information out of the URL used to open the experience initially.\n   * If no link opened the app, all the fields will be `null`.\n   * > On the web it parses the current window URL.\n   * @return A promise that resolves with `ParsedURL` object.\n   */\n  function parseInitialURLAsync() {\n    return _parseInitialURLAsync.apply(this, arguments);\n  } // @needsAudit\n  /**\n   * Launch an Android intent with extras.\n   * > Use [`expo-intent-launcher`](./intent-launcher) instead. `sendIntent` is only included in\n   * > `Linking` for API compatibility with React Native's Linking API.\n   * @platform android\n   */\n  function _parseInitialURLAsync() {\n    _parseInitialURLAsync = (0, _asyncToGenerator.default)(function* () {\n      var initialUrl = yield RNLinking.default.getInitialURL();\n      if (!initialUrl) {\n        return {\n          scheme: null,\n          hostname: null,\n          path: null,\n          queryParams: null\n        };\n      }\n      return (0, _createURL.parse)(initialUrl);\n    });\n    return _parseInitialURLAsync.apply(this, arguments);\n  }\n  function sendIntent(_x, _x2) {\n    return _sendIntent.apply(this, arguments);\n  } // @needsAudit\n  /**\n   * Open the operating system settings app and displays the appâ€™s custom settings, if it has any.\n   */\n  function _sendIntent() {\n    _sendIntent = (0, _asyncToGenerator.default)(function* (action, extras) {\n      throw new _expoModulesCore.UnavailabilityError('Linking', 'sendIntent');\n    });\n    return _sendIntent.apply(this, arguments);\n  }\n  function openSettings() {\n    return _openSettings.apply(this, arguments);\n  } // @needsAudit\n  /**\n   * Get the URL that was used to launch the app if it was launched by a link.\n   * @return The URL string that launched your app, or `null`.\n   */\n  function _openSettings() {\n    _openSettings = (0, _asyncToGenerator.default)(function* () {\n      if (RNLinking.default.openSettings) {\n        return yield RNLinking.default.openSettings();\n      }\n      yield openURL('app-settings:');\n    });\n    return _openSettings.apply(this, arguments);\n  }\n  function getInitialURL() {\n    return _getInitialURL.apply(this, arguments);\n  }\n  /**\n   * Get the URL that was used to launch the app if it was launched by a link.\n   * @return The URL string that launched your app, or `null`.\n   */\n  function _getInitialURL() {\n    _getInitialURL = (0, _asyncToGenerator.default)(function* () {\n      return (yield RNLinking.default.getInitialURL()) ?? null;\n    });\n    return _getInitialURL.apply(this, arguments);\n  }\n  function getLinkingURL() {\n    return ExpoLinking.default.getLinkingURL();\n  }\n  // @needsAudit\n  /**\n   * Attempt to open the given URL with an installed app. See the [Linking guide](/guides/linking)\n   * for more information.\n   * @param url A URL for the operating system to open. For example: `tel:5555555`, `exp://`.\n   * @return A `Promise` that is fulfilled with `true` if the link is opened operating system\n   * automatically or the user confirms the prompt to open the link. The `Promise` rejects if there\n   * are no applications registered for the URL or the user cancels the dialog.\n   */\n  function openURL(_x3) {\n    return _openURL.apply(this, arguments);\n  } // @needsAudit\n  /**\n   * Determine whether or not an installed app can handle a given URL.\n   * On web this always returns `true` because there is no API for detecting what URLs can be opened.\n   * @param url The URL that you want to test can be opened.\n   * @return A `Promise` object that is fulfilled with `true` if the URL can be handled, otherwise it\n   * `false` if not.\n   * The `Promise` will reject on Android if it was impossible to check if the URL can be opened, and\n   * on iOS if you didn't [add the specific scheme in the `LSApplicationQueriesSchemes` key inside **Info.plist**](/guides/linking#linking-from-your-app).\n   */\n  function _openURL() {\n    _openURL = (0, _asyncToGenerator.default)(function* (url) {\n      (0, _validateURL.validateURL)(url);\n      return yield RNLinking.default.openURL(url);\n    });\n    return _openURL.apply(this, arguments);\n  }\n  function canOpenURL(_x4) {\n    return _canOpenURL.apply(this, arguments);\n  } // @needsAudit\n  /**\n   * Returns the initial URL followed by any subsequent changes to the URL.\n   * @deprecated Use `useLinkingURL` hook instead.\n   * @return Returns the initial URL or `null`.\n   */\n  function _canOpenURL() {\n    _canOpenURL = (0, _asyncToGenerator.default)(function* (url) {\n      (0, _validateURL.validateURL)(url);\n      return yield RNLinking.default.canOpenURL(url);\n    });\n    return _canOpenURL.apply(this, arguments);\n  }\n  function useURL() {\n    var _useState = (0, _react.useState)(null),\n      _useState2 = (0, _slicedToArray.default)(_useState, 2),\n      url = _useState2[0],\n      setLink = _useState2[1];\n    function onChange(event) {\n      setLink(event.url);\n    }\n    (0, _react.useEffect)(() => {\n      getInitialURL().then(url => setLink(url));\n      var subscription = addEventListener('url', onChange);\n      return () => subscription.remove();\n    }, []);\n    return url;\n  }\n  /**\n   * Returns the linking URL followed by any subsequent changes to the URL.\n   * Always returns the initial URL immediately on reload.\n   * @return Returns the initial URL or `null`.\n   */\n  function useLinkingURL() {\n    var _useState3 = (0, _react.useState)(ExpoLinking.default.getLinkingURL),\n      _useState4 = (0, _slicedToArray.default)(_useState3, 2),\n      url = _useState4[0],\n      setLink = _useState4[1];\n    function onChange(event) {\n      setLink(event.url);\n    }\n    (0, _react.useEffect)(() => {\n      var subscription = ExpoLinking.default.addListener('onURLReceived', onChange);\n      return () => subscription.remove();\n    }, []);\n    return url ?? null;\n  }\n});","lineCount":235,"map":[[12,2,145,0,"Object"],[12,8,145,0],[12,9,145,0,"defineProperty"],[12,23,145,0],[12,24,145,0,"exports"],[12,31,145,0],[13,4,145,0,"enumerable"],[13,14,145,0],[14,4,145,0,"get"],[14,7,145,0],[14,18,145,0,"get"],[14,19,145,0],[15,6,145,0],[15,13,145,0,"_createURL"],[15,23,145,0],[15,24,145,0,"parse"],[15,29,145,0],[16,4,145,0],[17,2,145,0],[18,2,145,0,"Object"],[18,8,145,0],[18,9,145,0,"defineProperty"],[18,23,145,0],[18,24,145,0,"exports"],[18,31,145,0],[19,4,145,0,"enumerable"],[19,14,145,0],[20,4,145,0,"get"],[20,7,145,0],[20,18,145,0,"get"],[20,19,145,0],[21,6,145,0],[21,13,145,0,"_createURL"],[21,23,145,0],[21,24,145,0,"createURL"],[21,33,145,0],[22,4,145,0],[23,2,145,0],[24,2,18,0,"exports"],[24,9,18,0],[24,10,18,0,"addEventListener"],[24,26,18,0],[24,29,18,0,"addEventListener"],[24,45,18,0],[25,2,29,0,"exports"],[25,9,29,0],[25,10,29,0,"parseInitialURLAsync"],[25,30,29,0],[25,33,29,0,"parseInitialURLAsync"],[25,53,29,0],[26,2,48,0,"exports"],[26,9,48,0],[26,10,48,0,"sendIntent"],[26,20,48,0],[26,23,48,0,"sendIntent"],[26,33,48,0],[27,2,58,0,"exports"],[27,9,58,0],[27,10,58,0,"openSettings"],[27,22,58,0],[27,25,58,0,"openSettings"],[27,37,58,0],[28,2,72,0,"exports"],[28,9,72,0],[28,10,72,0,"getInitialURL"],[28,23,72,0],[28,26,72,0,"getInitialURL"],[28,39,72,0],[29,2,79,0,"exports"],[29,9,79,0],[29,10,79,0,"getLinkingURL"],[29,23,79,0],[29,26,79,0,"getLinkingURL"],[29,39,79,0],[30,2,91,0,"exports"],[30,9,91,0],[30,10,91,0,"openURL"],[30,17,91,0],[30,20,91,0,"openURL"],[30,27,91,0],[31,2,105,0,"exports"],[31,9,105,0],[31,10,105,0,"canOpenURL"],[31,20,105,0],[31,23,105,0,"canOpenURL"],[31,33,105,0],[32,2,115,0,"exports"],[32,9,115,0],[32,10,115,0,"useURL"],[32,16,115,0],[32,19,115,0,"useURL"],[32,25,115,0],[33,2,132,0,"exports"],[33,9,132,0],[33,10,132,0,"useLinkingURL"],[33,23,132,0],[33,26,132,0,"useLinkingURL"],[33,39,132,0],[34,2,142,1],[34,6,142,1,"_babelRuntimeHelpersSlicedToArray"],[34,39,142,1],[34,42,142,1,"require"],[34,49,142,1],[34,50,142,1,"_dependencyMap"],[34,64,142,1],[35,2,142,1],[35,6,142,1,"_slicedToArray"],[35,20,142,1],[35,23,142,1,"_interopDefault"],[35,38,142,1],[35,39,142,1,"_babelRuntimeHelpersSlicedToArray"],[35,72,142,1],[36,2,142,1],[36,6,142,1,"_babelRuntimeHelpersAsyncToGenerator"],[36,42,142,1],[36,45,142,1,"require"],[36,52,142,1],[36,53,142,1,"_dependencyMap"],[36,67,142,1],[37,2,142,1],[37,6,142,1,"_asyncToGenerator"],[37,23,142,1],[37,26,142,1,"_interopDefault"],[37,41,142,1],[37,42,142,1,"_babelRuntimeHelpersAsyncToGenerator"],[37,78,142,1],[38,2,1,0],[38,6,1,0,"_expoModulesCore"],[38,22,1,0],[38,25,1,0,"require"],[38,32,1,0],[38,33,1,0,"_dependencyMap"],[38,47,1,0],[39,2,2,0],[39,6,2,0,"_react"],[39,12,2,0],[39,15,2,0,"require"],[39,22,2,0],[39,23,2,0,"_dependencyMap"],[39,37,2,0],[40,2,3,0,"require"],[40,9,3,0],[40,10,3,0,"_dependencyMap"],[40,24,3,0],[41,2,4,0],[41,6,4,0,"_ExpoLinking"],[41,18,4,0],[41,21,4,0,"require"],[41,28,4,0],[41,29,4,0,"_dependencyMap"],[41,43,4,0],[42,2,4,0],[42,6,4,0,"ExpoLinking"],[42,17,4,0],[42,20,4,0,"_interopDefault"],[42,35,4,0],[42,36,4,0,"_ExpoLinking"],[42,48,4,0],[43,2,5,0],[43,6,5,0,"_RNLinking"],[43,16,5,0],[43,19,5,0,"require"],[43,26,5,0],[43,27,5,0,"_dependencyMap"],[43,41,5,0],[44,2,5,0],[44,6,5,0,"RNLinking"],[44,15,5,0],[44,18,5,0,"_interopDefault"],[44,33,5,0],[44,34,5,0,"_RNLinking"],[44,44,5,0],[45,2,6,0],[45,6,6,0,"_createURL"],[45,16,6,0],[45,19,6,0,"require"],[45,26,6,0],[45,27,6,0,"_dependencyMap"],[45,41,6,0],[46,2,7,0],[46,6,7,0,"_validateURL"],[46,18,7,0],[46,21,7,0,"require"],[46,28,7,0],[46,29,7,0,"_dependencyMap"],[46,43,7,0],[47,2,143,0],[47,6,143,0,"_LinkingTypes"],[47,19,143,0],[47,22,143,0,"require"],[47,29,143,0],[47,30,143,0,"_dependencyMap"],[47,44,143,0],[48,2,143,0,"Object"],[48,8,143,0],[48,9,143,0,"keys"],[48,13,143,0],[48,14,143,0,"_LinkingTypes"],[48,27,143,0],[48,29,143,0,"forEach"],[48,36,143,0],[48,47,143,0,"k"],[48,48,143,0],[49,4,143,0],[49,8,143,0,"k"],[49,9,143,0],[49,28,143,0,"Object"],[49,34,143,0],[49,35,143,0,"prototype"],[49,44,143,0],[49,45,143,0,"hasOwnProperty"],[49,59,143,0],[49,60,143,0,"call"],[49,64,143,0],[49,65,143,0,"exports"],[49,72,143,0],[49,74,143,0,"k"],[49,75,143,0],[50,6,143,0,"Object"],[50,12,143,0],[50,13,143,0,"defineProperty"],[50,27,143,0],[50,28,143,0,"exports"],[50,35,143,0],[50,37,143,0,"k"],[50,38,143,0],[51,8,143,0,"enumerable"],[51,18,143,0],[52,8,143,0,"get"],[52,11,143,0],[52,22,143,0,"get"],[52,23,143,0],[53,10,143,0],[53,17,143,0,"_LinkingTypes"],[53,30,143,0],[53,31,143,0,"k"],[53,32,143,0],[54,8,143,0],[55,6,143,0],[56,4,143,0],[57,2,143,0],[58,2,144,0],[58,6,144,0,"_Schemes"],[58,14,144,0],[58,17,144,0,"require"],[58,24,144,0],[58,25,144,0,"_dependencyMap"],[58,39,144,0],[59,2,144,0,"Object"],[59,8,144,0],[59,9,144,0,"keys"],[59,13,144,0],[59,14,144,0,"_Schemes"],[59,22,144,0],[59,24,144,0,"forEach"],[59,31,144,0],[59,42,144,0,"k"],[59,43,144,0],[60,4,144,0],[60,8,144,0,"k"],[60,9,144,0],[60,28,144,0,"Object"],[60,34,144,0],[60,35,144,0,"prototype"],[60,44,144,0],[60,45,144,0,"hasOwnProperty"],[60,59,144,0],[60,60,144,0,"call"],[60,64,144,0],[60,65,144,0,"exports"],[60,72,144,0],[60,74,144,0,"k"],[60,75,144,0],[61,6,144,0,"Object"],[61,12,144,0],[61,13,144,0,"defineProperty"],[61,27,144,0],[61,28,144,0,"exports"],[61,35,144,0],[61,37,144,0,"k"],[61,38,144,0],[62,8,144,0,"enumerable"],[62,18,144,0],[63,8,144,0,"get"],[63,11,144,0],[63,22,144,0,"get"],[63,23,144,0],[64,10,144,0],[64,17,144,0,"_Schemes"],[64,25,144,0],[64,26,144,0,"k"],[64,27,144,0],[65,8,144,0],[66,6,144,0],[67,4,144,0],[68,2,144,0],[69,2,8,0],[70,2,9,0],[71,0,10,0],[72,0,11,0],[73,0,12,0],[74,0,13,0],[75,0,14,0],[76,0,15,0],[77,0,16,0],[78,0,17,0],[79,2,18,7],[79,11,18,16,"addEventListener"],[79,27,18,32,"addEventListener"],[79,28,18,33,"type"],[79,32,18,37],[79,34,18,39,"handler"],[79,41,18,46],[79,43,18,48],[80,4,19,4],[80,11,19,11,"RNLinking"],[80,20,19,20],[80,21,19,20,"default"],[80,28,19,20],[80,29,19,21,"addEventListener"],[80,45,19,37],[80,46,19,38,"type"],[80,50,19,42],[80,52,19,44,"handler"],[80,59,19,51],[80,60,19,52],[81,2,20,0],[82,2,21,0],[83,2,22,0],[84,0,23,0],[85,0,24,0],[86,0,25,0],[87,0,26,0],[88,0,27,0],[89,0,28,0],[90,2,22,0],[90,11,29,22,"parseInitialURLAsync"],[90,31,29,42,"parseInitialURLAsync"],[90,32,29,42],[91,4,29,42],[91,11,29,42,"_parseInitialURLAsync"],[91,32,29,42],[91,33,29,42,"apply"],[91,38,29,42],[91,45,29,42,"arguments"],[91,54,29,42],[92,2,29,42],[92,4,41,0],[93,2,42,0],[94,0,43,0],[95,0,44,0],[96,0,45,0],[97,0,46,0],[98,0,47,0],[99,2,42,0],[99,11,42,0,"_parseInitialURLAsync"],[99,33,42,0],[100,4,42,0,"_parseInitialURLAsync"],[100,25,42,0],[100,32,42,0,"_asyncToGenerator"],[100,49,42,0],[100,50,42,0,"default"],[100,57,42,0],[100,59,29,7],[100,72,29,45],[101,6,30,4],[101,10,30,10,"initialUrl"],[101,20,30,20],[101,29,30,29,"RNLinking"],[101,38,30,38],[101,39,30,38,"default"],[101,46,30,38],[101,47,30,39,"getInitialURL"],[101,60,30,52],[101,61,30,53],[101,62,30,54],[102,6,31,4],[102,10,31,8],[102,11,31,9,"initialUrl"],[102,21,31,19],[102,23,31,21],[103,8,32,8],[103,15,32,15],[104,10,33,12,"scheme"],[104,16,33,18],[104,18,33,20],[104,22,33,24],[105,10,34,12,"hostname"],[105,18,34,20],[105,20,34,22],[105,24,34,26],[106,10,35,12,"path"],[106,14,35,16],[106,16,35,18],[106,20,35,22],[107,10,36,12,"queryParams"],[107,21,36,23],[107,23,36,25],[108,8,37,8],[108,9,37,9],[109,6,38,4],[110,6,39,4],[110,13,39,11],[110,17,39,11,"parse"],[110,27,39,16],[110,28,39,16,"parse"],[110,33,39,16],[110,35,39,17,"initialUrl"],[110,45,39,27],[110,46,39,28],[111,4,40,0],[111,5,40,1],[112,4,40,1],[112,11,40,1,"_parseInitialURLAsync"],[112,32,40,1],[112,33,40,1,"apply"],[112,38,40,1],[112,45,40,1,"arguments"],[112,54,40,1],[113,2,40,1],[114,2,40,1],[114,11,48,22,"sendIntent"],[114,21,48,32,"sendIntent"],[114,22,48,32,"_x"],[114,24,48,32],[114,26,48,32,"_x2"],[114,29,48,32],[115,4,48,32],[115,11,48,32,"_sendIntent"],[115,22,48,32],[115,23,48,32,"apply"],[115,28,48,32],[115,35,48,32,"arguments"],[115,44,48,32],[116,2,48,32],[116,4,54,0],[117,2,55,0],[118,0,56,0],[119,0,57,0],[120,2,55,0],[120,11,55,0,"_sendIntent"],[120,23,55,0],[121,4,55,0,"_sendIntent"],[121,15,55,0],[121,22,55,0,"_asyncToGenerator"],[121,39,55,0],[121,40,55,0,"default"],[121,47,55,0],[121,49,48,7],[121,60,48,33,"action"],[121,66,48,39],[121,68,48,41,"extras"],[121,74,48,47],[121,76,48,49],[122,6,52,4],[122,12,52,10],[122,16,52,14,"UnavailabilityError"],[122,32,52,33],[122,33,52,33,"UnavailabilityError"],[122,52,52,33],[122,53,52,34],[122,62,52,43],[122,64,52,45],[122,76,52,57],[122,77,52,58],[123,4,53,0],[123,5,53,1],[124,4,53,1],[124,11,53,1,"_sendIntent"],[124,22,53,1],[124,23,53,1,"apply"],[124,28,53,1],[124,35,53,1,"arguments"],[124,44,53,1],[125,2,53,1],[126,2,53,1],[126,11,58,22,"openSettings"],[126,23,58,34,"openSettings"],[126,24,58,34],[127,4,58,34],[127,11,58,34,"_openSettings"],[127,24,58,34],[127,25,58,34,"apply"],[127,30,58,34],[127,37,58,34,"arguments"],[127,46,58,34],[128,2,58,34],[128,4,67,0],[129,2,68,0],[130,0,69,0],[131,0,70,0],[132,0,71,0],[133,2,68,0],[133,11,68,0,"_openSettings"],[133,25,68,0],[134,4,68,0,"_openSettings"],[134,17,68,0],[134,24,68,0,"_asyncToGenerator"],[134,41,68,0],[134,42,68,0,"default"],[134,49,68,0],[134,51,58,7],[134,64,58,37],[135,6,62,4],[135,10,62,8,"RNLinking"],[135,19,62,17],[135,20,62,17,"default"],[135,27,62,17],[135,28,62,18,"openSettings"],[135,40,62,30],[135,42,62,32],[136,8,63,8],[136,21,63,21,"RNLinking"],[136,30,63,30],[136,31,63,30,"default"],[136,38,63,30],[136,39,63,31,"openSettings"],[136,51,63,43],[136,52,63,44],[136,53,63,45],[137,6,64,4],[138,6,65,4],[138,12,65,10,"openURL"],[138,19,65,17],[138,20,65,18],[138,35,65,33],[138,36,65,34],[139,4,66,0],[139,5,66,1],[140,4,66,1],[140,11,66,1,"_openSettings"],[140,24,66,1],[140,25,66,1,"apply"],[140,30,66,1],[140,37,66,1,"arguments"],[140,46,66,1],[141,2,66,1],[142,2,66,1],[142,11,72,22,"getInitialURL"],[142,24,72,35,"getInitialURL"],[142,25,72,35],[143,4,72,35],[143,11,72,35,"_getInitialURL"],[143,25,72,35],[143,26,72,35,"apply"],[143,31,72,35],[143,38,72,35,"arguments"],[143,47,72,35],[144,2,72,35],[145,2,75,0],[146,0,76,0],[147,0,77,0],[148,0,78,0],[149,2,75,0],[149,11,75,0,"_getInitialURL"],[149,26,75,0],[150,4,75,0,"_getInitialURL"],[150,18,75,0],[150,25,75,0,"_asyncToGenerator"],[150,42,75,0],[150,43,75,0,"default"],[150,50,75,0],[150,52,72,7],[150,65,72,38],[151,6,73,4],[151,13,73,11],[151,20,73,18,"RNLinking"],[151,29,73,27],[151,30,73,27,"default"],[151,37,73,27],[151,38,73,28,"getInitialURL"],[151,51,73,41],[151,52,73,42],[151,53,73,43],[151,58,73,48],[151,62,73,52],[152,4,74,0],[152,5,74,1],[153,4,74,1],[153,11,74,1,"_getInitialURL"],[153,25,74,1],[153,26,74,1,"apply"],[153,31,74,1],[153,38,74,1,"arguments"],[153,47,74,1],[154,2,74,1],[155,2,79,7],[155,11,79,16,"getLinkingURL"],[155,24,79,29,"getLinkingURL"],[155,25,79,29],[155,27,79,32],[156,4,80,4],[156,11,80,11,"ExpoLinking"],[156,22,80,22],[156,23,80,22,"default"],[156,30,80,22],[156,31,80,23,"getLinkingURL"],[156,44,80,36],[156,45,80,37],[156,46,80,38],[157,2,81,0],[158,2,82,0],[159,2,83,0],[160,0,84,0],[161,0,85,0],[162,0,86,0],[163,0,87,0],[164,0,88,0],[165,0,89,0],[166,0,90,0],[167,2,83,0],[167,11,91,22,"openURL"],[167,18,91,29,"openURL"],[167,19,91,29,"_x3"],[167,22,91,29],[168,4,91,29],[168,11,91,29,"_openURL"],[168,19,91,29],[168,20,91,29,"apply"],[168,25,91,29],[168,32,91,29,"arguments"],[168,41,91,29],[169,2,91,29],[169,4,95,0],[170,2,96,0],[171,0,97,0],[172,0,98,0],[173,0,99,0],[174,0,100,0],[175,0,101,0],[176,0,102,0],[177,0,103,0],[178,0,104,0],[179,2,96,0],[179,11,96,0,"_openURL"],[179,20,96,0],[180,4,96,0,"_openURL"],[180,12,96,0],[180,19,96,0,"_asyncToGenerator"],[180,36,96,0],[180,37,96,0,"default"],[180,44,96,0],[180,46,91,7],[180,57,91,30,"url"],[180,60,91,33],[180,62,91,35],[181,6,92,4],[181,10,92,4,"validateURL"],[181,22,92,15],[181,23,92,15,"validateURL"],[181,34,92,15],[181,36,92,16,"url"],[181,39,92,19],[181,40,92,20],[182,6,93,4],[182,19,93,17,"RNLinking"],[182,28,93,26],[182,29,93,26,"default"],[182,36,93,26],[182,37,93,27,"openURL"],[182,44,93,34],[182,45,93,35,"url"],[182,48,93,38],[182,49,93,39],[183,4,94,0],[183,5,94,1],[184,4,94,1],[184,11,94,1,"_openURL"],[184,19,94,1],[184,20,94,1,"apply"],[184,25,94,1],[184,32,94,1,"arguments"],[184,41,94,1],[185,2,94,1],[186,2,94,1],[186,11,105,22,"canOpenURL"],[186,21,105,32,"canOpenURL"],[186,22,105,32,"_x4"],[186,25,105,32],[187,4,105,32],[187,11,105,32,"_canOpenURL"],[187,22,105,32],[187,23,105,32,"apply"],[187,28,105,32],[187,35,105,32,"arguments"],[187,44,105,32],[188,2,105,32],[188,4,109,0],[189,2,110,0],[190,0,111,0],[191,0,112,0],[192,0,113,0],[193,0,114,0],[194,2,110,0],[194,11,110,0,"_canOpenURL"],[194,23,110,0],[195,4,110,0,"_canOpenURL"],[195,15,110,0],[195,22,110,0,"_asyncToGenerator"],[195,39,110,0],[195,40,110,0,"default"],[195,47,110,0],[195,49,105,7],[195,60,105,33,"url"],[195,63,105,36],[195,65,105,38],[196,6,106,4],[196,10,106,4,"validateURL"],[196,22,106,15],[196,23,106,15,"validateURL"],[196,34,106,15],[196,36,106,16,"url"],[196,39,106,19],[196,40,106,20],[197,6,107,4],[197,19,107,17,"RNLinking"],[197,28,107,26],[197,29,107,26,"default"],[197,36,107,26],[197,37,107,27,"canOpenURL"],[197,47,107,37],[197,48,107,38,"url"],[197,51,107,41],[197,52,107,42],[198,4,108,0],[198,5,108,1],[199,4,108,1],[199,11,108,1,"_canOpenURL"],[199,22,108,1],[199,23,108,1,"apply"],[199,28,108,1],[199,35,108,1,"arguments"],[199,44,108,1],[200,2,108,1],[201,2,115,7],[201,11,115,16,"useURL"],[201,17,115,22,"useURL"],[201,18,115,22],[201,20,115,25],[202,4,116,4],[202,8,116,4,"_useState"],[202,17,116,4],[202,20,116,27],[202,24,116,27,"useState"],[202,30,116,35],[202,31,116,35,"useState"],[202,39,116,35],[202,41,116,36],[202,45,116,40],[202,46,116,41],[203,6,116,41,"_useState2"],[203,16,116,41],[203,23,116,41,"_slicedToArray"],[203,37,116,41],[203,38,116,41,"default"],[203,45,116,41],[203,47,116,41,"_useState"],[203,56,116,41],[204,6,116,11,"url"],[204,9,116,14],[204,12,116,14,"_useState2"],[204,22,116,14],[205,6,116,16,"setLink"],[205,13,116,23],[205,16,116,23,"_useState2"],[205,26,116,23],[206,4,117,4],[206,13,117,13,"onChange"],[206,21,117,21,"onChange"],[206,22,117,22,"event"],[206,27,117,27],[206,29,117,29],[207,6,118,8,"setLink"],[207,13,118,15],[207,14,118,16,"event"],[207,19,118,21],[207,20,118,22,"url"],[207,23,118,25],[207,24,118,26],[208,4,119,4],[209,4,120,4],[209,8,120,4,"useEffect"],[209,14,120,13],[209,15,120,13,"useEffect"],[209,24,120,13],[209,26,120,14],[209,32,120,20],[210,6,121,8,"getInitialURL"],[210,19,121,21],[210,20,121,22],[210,21,121,23],[210,22,121,24,"then"],[210,26,121,28],[210,27,121,30,"url"],[210,30,121,33],[210,34,121,38,"setLink"],[210,41,121,45],[210,42,121,46,"url"],[210,45,121,49],[210,46,121,50],[210,47,121,51],[211,6,122,8],[211,10,122,14,"subscription"],[211,22,122,26],[211,25,122,29,"addEventListener"],[211,41,122,45],[211,42,122,46],[211,47,122,51],[211,49,122,53,"onChange"],[211,57,122,61],[211,58,122,62],[212,6,123,8],[212,13,123,15],[212,19,123,21,"subscription"],[212,31,123,33],[212,32,123,34,"remove"],[212,38,123,40],[212,39,123,41],[212,40,123,42],[213,4,124,4],[213,5,124,5],[213,7,124,7],[213,9,124,9],[213,10,124,10],[214,4,125,4],[214,11,125,11,"url"],[214,14,125,14],[215,2,126,0],[216,2,127,0],[217,0,128,0],[218,0,129,0],[219,0,130,0],[220,0,131,0],[221,2,132,7],[221,11,132,16,"useLinkingURL"],[221,24,132,29,"useLinkingURL"],[221,25,132,29],[221,27,132,32],[222,4,133,4],[222,8,133,4,"_useState3"],[222,18,133,4],[222,21,133,27],[222,25,133,27,"useState"],[222,31,133,35],[222,32,133,35,"useState"],[222,40,133,35],[222,42,133,36,"ExpoLinking"],[222,53,133,47],[222,54,133,47,"default"],[222,61,133,47],[222,62,133,48,"getLinkingURL"],[222,75,133,61],[222,76,133,62],[223,6,133,62,"_useState4"],[223,16,133,62],[223,23,133,62,"_slicedToArray"],[223,37,133,62],[223,38,133,62,"default"],[223,45,133,62],[223,47,133,62,"_useState3"],[223,57,133,62],[224,6,133,11,"url"],[224,9,133,14],[224,12,133,14,"_useState4"],[224,22,133,14],[225,6,133,16,"setLink"],[225,13,133,23],[225,16,133,23,"_useState4"],[225,26,133,23],[226,4,134,4],[226,13,134,13,"onChange"],[226,21,134,21,"onChange"],[226,22,134,22,"event"],[226,27,134,27],[226,29,134,29],[227,6,135,8,"setLink"],[227,13,135,15],[227,14,135,16,"event"],[227,19,135,21],[227,20,135,22,"url"],[227,23,135,25],[227,24,135,26],[228,4,136,4],[229,4,137,4],[229,8,137,4,"useEffect"],[229,14,137,13],[229,15,137,13,"useEffect"],[229,24,137,13],[229,26,137,14],[229,32,137,20],[230,6,138,8],[230,10,138,14,"subscription"],[230,22,138,26],[230,25,138,29,"ExpoLinking"],[230,36,138,40],[230,37,138,40,"default"],[230,44,138,40],[230,45,138,41,"addListener"],[230,56,138,52],[230,57,138,53],[230,72,138,68],[230,74,138,70,"onChange"],[230,82,138,78],[230,83,138,79],[231,6,139,8],[231,13,139,15],[231,19,139,21,"subscription"],[231,31,139,33],[231,32,139,34,"remove"],[231,38,139,40],[231,39,139,41],[231,40,139,42],[232,4,140,4],[232,5,140,5],[232,7,140,7],[232,9,140,9],[232,10,140,10],[233,4,141,4],[233,11,141,11,"url"],[233,14,141,14],[233,18,141,18],[233,22,141,22],[234,2,142,0],[235,0,142,1],[235,3]],"functionMap":{"names":["<global>","addEventListener","parseInitialURLAsync","sendIntent","openSettings","getInitialURL","getLinkingURL","openURL","canOpenURL","useURL","onChange","useEffect$argument_0","getInitialURL.then$argument_0","<anonymous>","useLinkingURL"],"mappings":"AAA;OCiB;CDE;OES;CFW;OGQ;CHK;OIK;CJQ;OKM;CLE;OMK;CNE;OOU;CPG;OQW;CRG;OSO;ICE;KDE;cEC;6BCC,qBD;eEE,2BF;KFC;CTE;OcM;IJE;KIE;cHC;eEE,2BF;KGC;CdE"},"hasCjsExports":false},"type":"js/module"}]}