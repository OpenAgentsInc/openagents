{"dependencies":[{"name":"react-native-worklets","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":2,"column":0,"index":14},"end":{"line":2,"column":52,"index":66}}],"key":"upgdvla269Vpw38V/0PgHoMDZsA=","exportNames":["*"],"imports":1}},{"name":"../common","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":4,"column":0,"index":68},"end":{"line":4,"column":63,"index":131}}],"key":"tbtg/nEigFLu9LmBKxGuAsZ2sgI=","exportNames":["*"],"imports":1}}],"output":[{"data":{"code":"__d(function (global, require, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {\n  'use strict';\n\n  Object.defineProperty(exports, '__esModule', {\n    value: true\n  });\n  Object.defineProperty(exports, \"measure\", {\n    enumerable: true,\n    get: function () {\n      return measure;\n    }\n  });\n  var _reactNativeWorklets = require(_dependencyMap[0]);\n  var _common = require(_dependencyMap[1]);\n  /**\n   * Lets you synchronously get the dimensions and position of a view on the\n   * screen.\n   *\n   * @param animatedRef - An [animated\n   *   ref](https://docs.swmansion.com/react-native-reanimated/docs/core/useAnimatedRef#returns)\n   *   connected to the component you'd want to get the measurements from.\n   * @returns An object containing component measurements or null when the\n   *   measurement couldn't be performed- {@link MeasuredDimensions}.\n   * @see https://docs.swmansion.com/react-native-reanimated/docs/advanced/measure/\n   */\n  var measure;\n  var _worklet_14784240705135_init_data = {\n    code: \"function measureNative_reactNativeReanimated_measureTs1(animatedRef){const{RuntimeKind,logger}=this.__closure;if(globalThis.__RUNTIME_KIND===RuntimeKind.ReactNative){return null;}const viewTag=animatedRef();if(viewTag===-1){logger.warn(\\\"The view with tag \\\"+viewTag+\\\" is not a valid argument for measure(). This may be because the view is not currently rendered, which may not be a bug (e.g. an off-screen FlatList item).\\\");return null;}const measured=global._measure(viewTag);if(measured===null){logger.warn(\\\"The view has some undefined, not-yet-computed or meaningless value of `LayoutMetrics` type. This may be because the view is not currently rendered, which may not be a bug (e.g. an off-screen FlatList item).\\\");return null;}else if(measured.x===-1234567){logger.warn(\\\"The view returned an invalid measurement response. Please make sure the view is currently rendered.\\\");return null;}else if(isNaN(measured.x)){logger.warn(\\\"The view gets view-flattened on Android. To disable view-flattening, set `collapsable={false}` on this component.\\\");return null;}else{return measured;}}\"\n  };\n  var measureNative = function measureNative_reactNativeReanimated_measureTs1Factory(_ref) {\n    var _worklet_14784240705135_init_data = _ref._worklet_14784240705135_init_data,\n      RuntimeKind = _ref.RuntimeKind,\n      logger = _ref.logger;\n    var measureNative = function (animatedRef) {\n      if (globalThis.__RUNTIME_KIND === RuntimeKind.ReactNative) {\n        return null;\n      }\n      var viewTag = animatedRef();\n      if (viewTag === -1) {\n        logger.warn(`The view with tag ${viewTag} is not a valid argument for measure(). This may be because the view is not currently rendered, which may not be a bug (e.g. an off-screen FlatList item).`);\n        return null;\n      }\n      var measured = global._measure(viewTag);\n      if (measured === null) {\n        logger.warn(`The view has some undefined, not-yet-computed or meaningless value of \\`LayoutMetrics\\` type. This may be because the view is not currently rendered, which may not be a bug (e.g. an off-screen FlatList item).`);\n        return null;\n      } else if (measured.x === -1234567) {\n        logger.warn(`The view returned an invalid measurement response. Please make sure the view is currently rendered.`);\n        return null;\n      } else if (isNaN(measured.x)) {\n        logger.warn(`The view gets view-flattened on Android. To disable view-flattening, set \\`collapsable={false}\\` on this component.`);\n        return null;\n      } else {\n        return measured;\n      }\n    };\n    measureNative.__closure = {\n      RuntimeKind,\n      logger\n    };\n    measureNative.__workletHash = 14784240705135;\n    measureNative.__initData = _worklet_14784240705135_init_data;\n    return measureNative;\n  }({\n    _worklet_14784240705135_init_data,\n    RuntimeKind: _reactNativeWorklets.RuntimeKind,\n    logger: _common.logger\n  });\n  function measureJest() {\n    _common.logger.warn('measure() cannot be used with Jest.');\n    return null;\n  }\n  function measureDefault() {\n    _common.logger.warn('measure() is not supported on this configuration.');\n    return null;\n  }\n  if (!_common.SHOULD_BE_USE_WEB) {\n    // Those assertions are actually correct since on Native platforms `AnimatedRef` is\n    // mapped as a different function in `serializableMappingCache` and\n    // TypeScript is not able to infer that.\n    measure = measureNative;\n  } else if (_common.IS_JEST) {\n    measure = measureJest;\n  } else {\n    measure = measureDefault;\n  }\n});","lineCount":87,"map":[[2,2,1,0],[2,14,1,12],[4,2,1,13,"Object"],[4,8,1,13],[4,9,1,13,"defineProperty"],[4,23,1,13],[4,24,1,13,"exports"],[4,31,1,13],[5,4,1,13,"value"],[5,9,1,13],[6,2,1,13],[7,2,31,0,"Object"],[7,8,31,0],[7,9,31,0,"defineProperty"],[7,23,31,0],[7,24,31,0,"exports"],[7,31,31,0],[8,4,31,0,"enumerable"],[8,14,31,0],[9,4,31,0,"get"],[9,7,31,0],[9,18,31,0,"get"],[9,19,31,0],[10,6,31,0],[10,13,31,0,"measure"],[10,20,31,0],[11,4,31,0],[12,2,31,0],[13,2,2,0],[13,6,2,0,"_reactNativeWorklets"],[13,26,2,0],[13,29,2,0,"require"],[13,36,2,0],[13,37,2,0,"_dependencyMap"],[13,51,2,0],[14,2,4,0],[14,6,4,0,"_common"],[14,13,4,0],[14,16,4,0,"require"],[14,23,4,0],[14,24,4,0,"_dependencyMap"],[14,38,4,0],[15,2,20,0],[16,0,21,0],[17,0,22,0],[18,0,23,0],[19,0,24,0],[20,0,25,0],[21,0,26,0],[22,0,27,0],[23,0,28,0],[24,0,29,0],[25,0,30,0],[26,2,31,7],[26,6,31,11,"measure"],[26,13,31,27],[27,2,31,28],[27,6,31,28,"_worklet_14784240705135_init_data"],[27,39,31,28],[28,4,31,28,"code"],[28,8,31,28],[29,2,31,28],[30,2,31,28],[30,6,31,28,"measureNative"],[30,19,31,28],[30,22,33,0],[30,31,33,0,"measureNative_reactNativeReanimated_measureTs1Factory"],[30,85,33,0,"_ref"],[30,89,33,0],[31,4,33,0],[31,8,33,0,"_worklet_14784240705135_init_data"],[31,41,33,0],[31,44,33,0,"_ref"],[31,48,33,0],[31,49,33,0,"_worklet_14784240705135_init_data"],[31,82,33,0],[32,6,35,36,"RuntimeKind"],[32,17,35,47],[32,20,35,47,"_ref"],[32,24,35,47],[32,25,35,36,"RuntimeKind"],[32,36,35,47],[33,6,41,4,"logger"],[33,12,41,10],[33,15,41,10,"_ref"],[33,19,41,10],[33,20,41,4,"logger"],[33,26,41,10],[34,4,41,10],[34,8,41,10,"measureNative"],[34,21,41,10],[34,33,41,10,"measureNative"],[34,34,33,23,"animatedRef"],[34,45,33,69],[34,47,33,71],[35,6,35,2],[35,10,35,6,"globalThis"],[35,20,35,16],[35,21,35,17,"__RUNTIME_KIND"],[35,35,35,31],[35,40,35,36,"RuntimeKind"],[35,51,35,47],[35,52,35,48,"ReactNative"],[35,63,35,59],[35,65,35,61],[36,8,36,4],[36,15,36,11],[36,19,36,15],[37,6,37,2],[38,6,39,2],[38,10,39,8,"viewTag"],[38,17,39,15],[38,20,39,18,"animatedRef"],[38,31,39,29],[38,32,39,30],[38,33,39,31],[39,6,40,2],[39,10,40,6,"viewTag"],[39,17,40,13],[39,24,40,20],[39,26,40,22],[40,8,41,4,"logger"],[40,14,41,10],[40,15,41,11,"warn"],[40,19,41,15],[40,20,42,6],[40,41,42,27,"viewTag"],[40,48,42,34],[40,204,43,4],[40,205,43,5],[41,8,44,4],[41,15,44,11],[41,19,44,15],[42,6,45,2],[43,6,47,2],[43,10,47,8,"measured"],[43,18,47,16],[43,21,47,19,"global"],[43,27,47,25],[43,28,47,26,"_measure"],[43,36,47,34],[43,37,47,36,"viewTag"],[43,44,47,64],[43,45,47,65],[44,6,48,2],[44,10,48,6,"measured"],[44,18,48,14],[44,23,48,19],[44,27,48,23],[44,29,48,25],[45,8,49,4,"logger"],[45,14,49,10],[45,15,49,11,"warn"],[45,19,49,15],[45,20,50,6],[45,230,51,4],[45,231,51,5],[46,8,52,4],[46,15,52,11],[46,19,52,15],[47,6,53,2],[47,7,53,3],[47,13,53,9],[47,17,53,13,"measured"],[47,25,53,21],[47,26,53,22,"x"],[47,27,53,23],[47,40,53,36],[47,42,53,38],[48,8,54,4,"logger"],[48,14,54,10],[48,15,54,11,"warn"],[48,19,54,15],[48,20,55,6],[48,121,56,4],[48,122,56,5],[49,8,57,4],[49,15,57,11],[49,19,57,15],[50,6,58,2],[50,7,58,3],[50,13,58,9],[50,17,58,13,"isNaN"],[50,22,58,18],[50,23,58,19,"measured"],[50,31,58,27],[50,32,58,28,"x"],[50,33,58,29],[50,34,58,30],[50,36,58,32],[51,8,59,4,"logger"],[51,14,59,10],[51,15,59,11,"warn"],[51,19,59,15],[51,20,60,6],[51,137,61,4],[51,138,61,5],[52,8,62,4],[52,15,62,11],[52,19,62,15],[53,6,63,2],[53,7,63,3],[53,13,63,9],[54,8,64,4],[54,15,64,11,"measured"],[54,23,64,19],[55,6,65,2],[56,4,66,0],[56,5,66,1],[57,4,66,1,"measureNative"],[57,17,66,1],[57,18,66,1,"__closure"],[57,27,66,1],[58,6,35,36,"RuntimeKind"],[58,17,35,47],[59,6,41,4,"logger"],[60,4,41,10],[61,4,41,10,"measureNative"],[61,17,41,10],[61,18,41,10,"__workletHash"],[61,31,41,10],[62,4,41,10,"measureNative"],[62,17,41,10],[62,18,41,10,"__initData"],[62,28,41,10],[62,31,41,10,"_worklet_14784240705135_init_data"],[62,64,41,10],[63,4,41,10],[63,11,41,10,"measureNative"],[63,24,41,10],[64,2,41,10],[64,3,33,0],[65,4,33,0,"_worklet_14784240705135_init_data"],[65,37,33,0],[66,4,35,36,"RuntimeKind"],[66,15,35,47],[66,17,35,36,"RuntimeKind"],[66,37,35,47],[66,38,35,47,"RuntimeKind"],[66,49,35,47],[67,4,41,4,"logger"],[67,10,41,10],[67,12,41,4,"logger"],[67,19,41,10],[67,20,41,10,"logger"],[68,2,41,10],[69,2,68,0],[69,11,68,9,"measureJest"],[69,22,68,20,"measureJest"],[69,23,68,20],[69,25,68,23],[70,4,69,2,"logger"],[70,11,69,8],[70,12,69,8,"logger"],[70,18,69,8],[70,19,69,9,"warn"],[70,23,69,13],[70,24,69,14],[70,61,69,51],[70,62,69,52],[71,4,70,2],[71,11,70,9],[71,15,70,13],[72,2,71,0],[73,2,73,0],[73,11,73,9,"measureDefault"],[73,25,73,23,"measureDefault"],[73,26,73,23],[73,28,73,26],[74,4,74,2,"logger"],[74,11,74,8],[74,12,74,8,"logger"],[74,18,74,8],[74,19,74,9,"warn"],[74,23,74,13],[74,24,74,14],[74,75,74,65],[74,76,74,66],[75,4,75,2],[75,11,75,9],[75,15,75,13],[76,2,76,0],[77,2,78,0],[77,6,78,4],[77,7,78,5,"SHOULD_BE_USE_WEB"],[77,14,78,22],[77,15,78,22,"SHOULD_BE_USE_WEB"],[77,32,78,22],[77,34,78,24],[78,4,79,2],[79,4,80,2],[80,4,81,2],[81,4,82,2,"measure"],[81,11,82,9],[81,14,82,12,"measureNative"],[81,27,82,47],[82,2,83,0],[82,3,83,1],[82,9,83,7],[82,13,83,11,"IS_JEST"],[82,20,83,18],[82,21,83,18,"IS_JEST"],[82,28,83,18],[82,30,83,20],[83,4,84,2,"measure"],[83,11,84,9],[83,14,84,12,"measureJest"],[83,25,84,23],[84,2,85,0],[84,3,85,1],[84,9,85,7],[85,4,86,2,"measure"],[85,11,86,9],[85,14,86,12,"measureDefault"],[85,28,86,26],[86,2,87,0],[87,0,87,1],[87,3]],"functionMap":{"names":["<global>","measureNative","measureJest","measureDefault"],"mappings":"AAA;ACgC;CDiC;AEE;CFG;AGE;CHG"},"hasCjsExports":false},"type":"js/module"}]}