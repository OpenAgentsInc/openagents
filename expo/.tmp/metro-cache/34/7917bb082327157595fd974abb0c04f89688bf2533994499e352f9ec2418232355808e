{"dependencies":[],"output":[{"data":{"code":"__d(function (global, require, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {\n  // Commonmark default options\n\n  'use strict';\n\n  module.exports = {\n    options: {\n      html: true,\n      // Enable HTML tags in source\n      xhtmlOut: true,\n      // Use '/' to close single tags (<br />)\n      breaks: false,\n      // Convert '\\n' in paragraphs into <br>\n      langPrefix: 'language-',\n      // CSS language prefix for fenced blocks\n      linkify: false,\n      // autoconvert URL-like texts to links\n\n      // Enable some language-neutral replacements + quotes beautification\n      typographer: false,\n      // Double + single quotes replacement pairs, when typographer enabled,\n      // and smartquotes on. Could be either a String or an Array.\n      //\n      // For example, you can use '«»„“' for Russian, '„“‚‘' for German,\n      // and ['«\\xA0', '\\xA0»', '‹\\xA0', '\\xA0›'] for French (including nbsp).\n      quotes: '\\u201c\\u201d\\u2018\\u2019',\n      /* “”‘’ */\n\n      // Highlighter function. Should return escaped HTML,\n      // or '' if the source string is not changed and should be escaped externaly.\n      // If result starts with <pre... internal wrapper is skipped.\n      //\n      // function (/*str, lang*/) { return ''; }\n      //\n      highlight: null,\n      maxNesting: 20 // Internal protection, recursion limit\n    },\n    components: {\n      core: {\n        rules: ['normalize', 'block', 'inline']\n      },\n      block: {\n        rules: ['blockquote', 'code', 'fence', 'heading', 'hr', 'html_block', 'lheading', 'list', 'reference', 'paragraph']\n      },\n      inline: {\n        rules: ['autolink', 'backticks', 'emphasis', 'entity', 'escape', 'html_inline', 'image', 'link', 'newline', 'text'],\n        rules2: ['balance_pairs', 'emphasis', 'text_collapse']\n      }\n    }\n  };\n});","lineCount":51,"map":[[2,2,1,0],[4,2,3,0],[4,14,3,12],[6,2,6,0,"module"],[6,8,6,6],[6,9,6,7,"exports"],[6,16,6,14],[6,19,6,17],[7,4,7,2,"options"],[7,11,7,9],[7,13,7,11],[8,6,8,4,"html"],[8,10,8,8],[8,12,8,18],[8,16,8,22],[9,6,8,32],[10,6,9,4,"xhtmlOut"],[10,14,9,12],[10,16,9,18],[10,20,9,22],[11,6,9,32],[12,6,10,4,"breaks"],[12,12,10,10],[12,14,10,18],[12,19,10,23],[13,6,10,32],[14,6,11,4,"langPrefix"],[14,16,11,14],[14,18,11,18],[14,29,11,29],[15,6,11,32],[16,6,12,4,"linkify"],[16,13,12,11],[16,15,12,18],[16,20,12,23],[17,6,12,32],[19,6,14,4],[20,6,15,4,"typographer"],[20,17,15,15],[20,19,15,18],[20,24,15,23],[21,6,17,4],[22,6,18,4],[23,6,19,4],[24,6,20,4],[25,6,21,4],[26,6,22,4,"quotes"],[26,12,22,10],[26,14,22,12],[26,40,22,38],[27,6,22,40],[29,6,24,4],[30,6,25,4],[31,6,26,4],[32,6,27,4],[33,6,28,4],[34,6,29,4],[35,6,30,4,"highlight"],[35,15,30,13],[35,17,30,15],[35,21,30,19],[36,6,32,4,"maxNesting"],[36,16,32,14],[36,18,32,18],[36,20,32,20],[36,21,32,32],[37,4,33,2],[37,5,33,3],[38,4,35,2,"components"],[38,14,35,12],[38,16,35,14],[39,6,37,4,"core"],[39,10,37,8],[39,12,37,10],[40,8,38,6,"rules"],[40,13,38,11],[40,15,38,13],[40,16,39,8],[40,27,39,19],[40,29,40,8],[40,36,40,15],[40,38,41,8],[40,46,41,16],[41,6,43,4],[41,7,43,5],[42,6,45,4,"block"],[42,11,45,9],[42,13,45,11],[43,8,46,6,"rules"],[43,13,46,11],[43,15,46,13],[43,16,47,8],[43,28,47,20],[43,30,48,8],[43,36,48,14],[43,38,49,8],[43,45,49,15],[43,47,50,8],[43,56,50,17],[43,58,51,8],[43,62,51,12],[43,64,52,8],[43,76,52,20],[43,78,53,8],[43,88,53,18],[43,90,54,8],[43,96,54,14],[43,98,55,8],[43,109,55,19],[43,111,56,8],[43,122,56,19],[44,6,58,4],[44,7,58,5],[45,6,60,4,"inline"],[45,12,60,10],[45,14,60,12],[46,8,61,6,"rules"],[46,13,61,11],[46,15,61,13],[46,16,62,8],[46,26,62,18],[46,28,63,8],[46,39,63,19],[46,41,64,8],[46,51,64,18],[46,53,65,8],[46,61,65,16],[46,63,66,8],[46,71,66,16],[46,73,67,8],[46,86,67,21],[46,88,68,8],[46,95,68,15],[46,97,69,8],[46,103,69,14],[46,105,70,8],[46,114,70,17],[46,116,71,8],[46,122,71,14],[46,123,72,7],[47,8,73,6,"rules2"],[47,14,73,12],[47,16,73,14],[47,17,74,8],[47,32,74,23],[47,34,75,8],[47,44,75,18],[47,46,76,8],[47,61,76,23],[48,6,78,4],[49,4,79,2],[50,2,80,0],[50,3,80,1],[51,0,80,2],[51,3]],"functionMap":{"names":["<global>"],"mappings":"AAA"},"hasCjsExports":true},"type":"js/module"}]}