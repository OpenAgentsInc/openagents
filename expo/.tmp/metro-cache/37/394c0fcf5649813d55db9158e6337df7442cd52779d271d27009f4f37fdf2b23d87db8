{"dependencies":[],"output":[{"data":{"code":"__d(function (global, require, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {\n  // Token class\n\n  'use strict';\n\n  /**\n   * class Token\n   **/\n\n  /**\n   * new Token(type, tag, nesting)\n   *\n   * Create new token and fill passed properties.\n   **/\n  function Token(type, tag, nesting) {\n    /**\n     * Token#type -> String\n     *\n     * Type of the token (string, e.g. \"paragraph_open\")\n     **/\n    this.type = type;\n\n    /**\n     * Token#tag -> String\n     *\n     * html tag name, e.g. \"p\"\n     **/\n    this.tag = tag;\n\n    /**\n     * Token#attrs -> Array\n     *\n     * Html attributes. Format: `[ [ name1, value1 ], [ name2, value2 ] ]`\n     **/\n    this.attrs = null;\n\n    /**\n     * Token#map -> Array\n     *\n     * Source map info. Format: `[ line_begin, line_end ]`\n     **/\n    this.map = null;\n\n    /**\n     * Token#nesting -> Number\n     *\n     * Level change (number in {-1, 0, 1} set), where:\n     *\n     * -  `1` means the tag is opening\n     * -  `0` means the tag is self-closing\n     * - `-1` means the tag is closing\n     **/\n    this.nesting = nesting;\n\n    /**\n     * Token#level -> Number\n     *\n     * nesting level, the same as `state.level`\n     **/\n    this.level = 0;\n\n    /**\n     * Token#children -> Array\n     *\n     * An array of child nodes (inline and img tokens)\n     **/\n    this.children = null;\n\n    /**\n     * Token#content -> String\n     *\n     * In a case of self-closing tag (code, html, fence, etc.),\n     * it has contents of this tag.\n     **/\n    this.content = '';\n\n    /**\n     * Token#markup -> String\n     *\n     * '*' or '_' for emphasis, fence string for fence, etc.\n     **/\n    this.markup = '';\n\n    /**\n     * Token#info -> String\n     *\n     * fence infostring\n     **/\n    this.info = '';\n\n    /**\n     * Token#meta -> Object\n     *\n     * A place for plugins to store an arbitrary data\n     **/\n    this.meta = null;\n\n    /**\n     * Token#block -> Boolean\n     *\n     * True for block-level tokens, false for inline tokens.\n     * Used in renderer to calculate line breaks\n     **/\n    this.block = false;\n\n    /**\n     * Token#hidden -> Boolean\n     *\n     * If it's true, ignore this element when rendering. Used for tight lists\n     * to hide paragraphs.\n     **/\n    this.hidden = false;\n  }\n\n  /**\n   * Token.attrIndex(name) -> Number\n   *\n   * Search attribute index by name.\n   **/\n  Token.prototype.attrIndex = function attrIndex(name) {\n    var attrs, i, len;\n    if (!this.attrs) {\n      return -1;\n    }\n    attrs = this.attrs;\n    for (i = 0, len = attrs.length; i < len; i++) {\n      if (attrs[i][0] === name) {\n        return i;\n      }\n    }\n    return -1;\n  };\n\n  /**\n   * Token.attrPush(attrData)\n   *\n   * Add `[ name, value ]` attribute to list. Init attrs if necessary\n   **/\n  Token.prototype.attrPush = function attrPush(attrData) {\n    if (this.attrs) {\n      this.attrs.push(attrData);\n    } else {\n      this.attrs = [attrData];\n    }\n  };\n\n  /**\n   * Token.attrSet(name, value)\n   *\n   * Set `name` attribute to `value`. Override old value if exists.\n   **/\n  Token.prototype.attrSet = function attrSet(name, value) {\n    var idx = this.attrIndex(name),\n      attrData = [name, value];\n    if (idx < 0) {\n      this.attrPush(attrData);\n    } else {\n      this.attrs[idx] = attrData;\n    }\n  };\n\n  /**\n   * Token.attrGet(name)\n   *\n   * Get the value of attribute `name`, or null if it does not exist.\n   **/\n  Token.prototype.attrGet = function attrGet(name) {\n    var idx = this.attrIndex(name),\n      value = null;\n    if (idx >= 0) {\n      value = this.attrs[idx][1];\n    }\n    return value;\n  };\n\n  /**\n   * Token.attrJoin(name, value)\n   *\n   * Join value to existing attribute via space. Or create new attribute if not\n   * exists. Useful to operate with token classes.\n   **/\n  Token.prototype.attrJoin = function attrJoin(name, value) {\n    var idx = this.attrIndex(name);\n    if (idx < 0) {\n      this.attrPush([name, value]);\n    } else {\n      this.attrs[idx][1] = this.attrs[idx][1] + ' ' + value;\n    }\n  };\n  module.exports = Token;\n});","lineCount":191,"map":[[2,2,1,0],[4,2,3,0],[4,14,3,12],[6,2,6,0],[7,0,7,0],[8,0,8,0],[10,2,10,0],[11,0,11,0],[12,0,12,0],[13,0,13,0],[14,0,14,0],[15,2,15,0],[15,11,15,9,"Token"],[15,16,15,14,"Token"],[15,17,15,15,"type"],[15,21,15,19],[15,23,15,21,"tag"],[15,26,15,24],[15,28,15,26,"nesting"],[15,35,15,33],[15,37,15,35],[16,4,16,2],[17,0,17,0],[18,0,18,0],[19,0,19,0],[20,0,20,0],[21,4,21,2],[21,8,21,6],[21,9,21,7,"type"],[21,13,21,11],[21,16,21,18,"type"],[21,20,21,22],[23,4,23,2],[24,0,24,0],[25,0,25,0],[26,0,26,0],[27,0,27,0],[28,4,28,2],[28,8,28,6],[28,9,28,7,"tag"],[28,12,28,10],[28,15,28,18,"tag"],[28,18,28,21],[30,4,30,2],[31,0,31,0],[32,0,32,0],[33,0,33,0],[34,0,34,0],[35,4,35,2],[35,8,35,6],[35,9,35,7,"attrs"],[35,14,35,12],[35,17,35,18],[35,21,35,22],[37,4,37,2],[38,0,38,0],[39,0,39,0],[40,0,40,0],[41,0,41,0],[42,4,42,2],[42,8,42,6],[42,9,42,7,"map"],[42,12,42,10],[42,15,42,18],[42,19,42,22],[44,4,44,2],[45,0,45,0],[46,0,46,0],[47,0,47,0],[48,0,48,0],[49,0,49,0],[50,0,50,0],[51,0,51,0],[52,0,52,0],[53,4,53,2],[53,8,53,6],[53,9,53,7,"nesting"],[53,16,53,14],[53,19,53,18,"nesting"],[53,26,53,25],[55,4,55,2],[56,0,56,0],[57,0,57,0],[58,0,58,0],[59,0,59,0],[60,4,60,2],[60,8,60,6],[60,9,60,7,"level"],[60,14,60,12],[60,17,60,18],[60,18,60,19],[62,4,62,2],[63,0,63,0],[64,0,64,0],[65,0,65,0],[66,0,66,0],[67,4,67,2],[67,8,67,6],[67,9,67,7,"children"],[67,17,67,15],[67,20,67,18],[67,24,67,22],[69,4,69,2],[70,0,70,0],[71,0,71,0],[72,0,72,0],[73,0,73,0],[74,0,74,0],[75,4,75,2],[75,8,75,6],[75,9,75,7,"content"],[75,16,75,14],[75,19,75,18],[75,21,75,20],[77,4,77,2],[78,0,78,0],[79,0,79,0],[80,0,80,0],[81,0,81,0],[82,4,82,2],[82,8,82,6],[82,9,82,7,"markup"],[82,15,82,13],[82,18,82,18],[82,20,82,20],[84,4,84,2],[85,0,85,0],[86,0,86,0],[87,0,87,0],[88,0,88,0],[89,4,89,2],[89,8,89,6],[89,9,89,7,"info"],[89,13,89,11],[89,16,89,18],[89,18,89,20],[91,4,91,2],[92,0,92,0],[93,0,93,0],[94,0,94,0],[95,0,95,0],[96,4,96,2],[96,8,96,6],[96,9,96,7,"meta"],[96,13,96,11],[96,16,96,18],[96,20,96,22],[98,4,98,2],[99,0,99,0],[100,0,100,0],[101,0,101,0],[102,0,102,0],[103,0,103,0],[104,4,104,2],[104,8,104,6],[104,9,104,7,"block"],[104,14,104,12],[104,17,104,18],[104,22,104,23],[106,4,106,2],[107,0,107,0],[108,0,108,0],[109,0,109,0],[110,0,110,0],[111,0,111,0],[112,4,112,2],[112,8,112,6],[112,9,112,7,"hidden"],[112,15,112,13],[112,18,112,18],[112,23,112,23],[113,2,113,0],[115,2,116,0],[116,0,117,0],[117,0,118,0],[118,0,119,0],[119,0,120,0],[120,2,121,0,"Token"],[120,7,121,5],[120,8,121,6,"prototype"],[120,17,121,15],[120,18,121,16,"attrIndex"],[120,27,121,25],[120,30,121,28],[120,39,121,37,"attrIndex"],[120,48,121,46,"attrIndex"],[120,49,121,47,"name"],[120,53,121,51],[120,55,121,53],[121,4,122,2],[121,8,122,6,"attrs"],[121,13,122,11],[121,15,122,13,"i"],[121,16,122,14],[121,18,122,16,"len"],[121,21,122,19],[122,4,124,2],[122,8,124,6],[122,9,124,7],[122,13,124,11],[122,14,124,12,"attrs"],[122,19,124,17],[122,21,124,19],[123,6,124,21],[124,4,124,32],[125,4,126,2,"attrs"],[125,9,126,7],[125,12,126,10],[125,16,126,14],[125,17,126,15,"attrs"],[125,22,126,20],[126,4,128,2],[126,9,128,7,"i"],[126,10,128,8],[126,13,128,11],[126,14,128,12],[126,16,128,14,"len"],[126,19,128,17],[126,22,128,20,"attrs"],[126,27,128,25],[126,28,128,26,"length"],[126,34,128,32],[126,36,128,34,"i"],[126,37,128,35],[126,40,128,38,"len"],[126,43,128,41],[126,45,128,43,"i"],[126,46,128,44],[126,48,128,46],[126,50,128,48],[127,6,129,4],[127,10,129,8,"attrs"],[127,15,129,13],[127,16,129,14,"i"],[127,17,129,15],[127,18,129,16],[127,19,129,17],[127,20,129,18],[127,21,129,19],[127,26,129,24,"name"],[127,30,129,28],[127,32,129,30],[128,8,129,32],[128,15,129,39,"i"],[128,16,129,40],[129,6,129,42],[130,4,130,2],[131,4,131,2],[132,2,132,0],[132,3,132,1],[134,2,135,0],[135,0,136,0],[136,0,137,0],[137,0,138,0],[138,0,139,0],[139,2,140,0,"Token"],[139,7,140,5],[139,8,140,6,"prototype"],[139,17,140,15],[139,18,140,16,"attrPush"],[139,26,140,24],[139,29,140,27],[139,38,140,36,"attrPush"],[139,46,140,44,"attrPush"],[139,47,140,45,"attrData"],[139,55,140,53],[139,57,140,55],[140,4,141,2],[140,8,141,6],[140,12,141,10],[140,13,141,11,"attrs"],[140,18,141,16],[140,20,141,18],[141,6,142,4],[141,10,142,8],[141,11,142,9,"attrs"],[141,16,142,14],[141,17,142,15,"push"],[141,21,142,19],[141,22,142,20,"attrData"],[141,30,142,28],[141,31,142,29],[142,4,143,2],[142,5,143,3],[142,11,143,9],[143,6,144,4],[143,10,144,8],[143,11,144,9,"attrs"],[143,16,144,14],[143,19,144,17],[143,20,144,19,"attrData"],[143,28,144,27],[143,29,144,29],[144,4,145,2],[145,2,146,0],[145,3,146,1],[147,2,149,0],[148,0,150,0],[149,0,151,0],[150,0,152,0],[151,0,153,0],[152,2,154,0,"Token"],[152,7,154,5],[152,8,154,6,"prototype"],[152,17,154,15],[152,18,154,16,"attrSet"],[152,25,154,23],[152,28,154,26],[152,37,154,35,"attrSet"],[152,44,154,42,"attrSet"],[152,45,154,43,"name"],[152,49,154,47],[152,51,154,49,"value"],[152,56,154,54],[152,58,154,56],[153,4,155,2],[153,8,155,6,"idx"],[153,11,155,9],[153,14,155,12],[153,18,155,16],[153,19,155,17,"attrIndex"],[153,28,155,26],[153,29,155,27,"name"],[153,33,155,31],[153,34,155,32],[154,6,156,6,"attrData"],[154,14,156,14],[154,17,156,17],[154,18,156,19,"name"],[154,22,156,23],[154,24,156,25,"value"],[154,29,156,30],[154,30,156,32],[155,4,158,2],[155,8,158,6,"idx"],[155,11,158,9],[155,14,158,12],[155,15,158,13],[155,17,158,15],[156,6,159,4],[156,10,159,8],[156,11,159,9,"attrPush"],[156,19,159,17],[156,20,159,18,"attrData"],[156,28,159,26],[156,29,159,27],[157,4,160,2],[157,5,160,3],[157,11,160,9],[158,6,161,4],[158,10,161,8],[158,11,161,9,"attrs"],[158,16,161,14],[158,17,161,15,"idx"],[158,20,161,18],[158,21,161,19],[158,24,161,22,"attrData"],[158,32,161,30],[159,4,162,2],[160,2,163,0],[160,3,163,1],[162,2,166,0],[163,0,167,0],[164,0,168,0],[165,0,169,0],[166,0,170,0],[167,2,171,0,"Token"],[167,7,171,5],[167,8,171,6,"prototype"],[167,17,171,15],[167,18,171,16,"attrGet"],[167,25,171,23],[167,28,171,26],[167,37,171,35,"attrGet"],[167,44,171,42,"attrGet"],[167,45,171,43,"name"],[167,49,171,47],[167,51,171,49],[168,4,172,2],[168,8,172,6,"idx"],[168,11,172,9],[168,14,172,12],[168,18,172,16],[168,19,172,17,"attrIndex"],[168,28,172,26],[168,29,172,27,"name"],[168,33,172,31],[168,34,172,32],[169,6,172,34,"value"],[169,11,172,39],[169,14,172,42],[169,18,172,46],[170,4,173,2],[170,8,173,6,"idx"],[170,11,173,9],[170,15,173,13],[170,16,173,14],[170,18,173,16],[171,6,174,4,"value"],[171,11,174,9],[171,14,174,12],[171,18,174,16],[171,19,174,17,"attrs"],[171,24,174,22],[171,25,174,23,"idx"],[171,28,174,26],[171,29,174,27],[171,30,174,28],[171,31,174,29],[171,32,174,30],[172,4,175,2],[173,4,176,2],[173,11,176,9,"value"],[173,16,176,14],[174,2,177,0],[174,3,177,1],[176,2,180,0],[177,0,181,0],[178,0,182,0],[179,0,183,0],[180,0,184,0],[181,0,185,0],[182,2,186,0,"Token"],[182,7,186,5],[182,8,186,6,"prototype"],[182,17,186,15],[182,18,186,16,"attrJoin"],[182,26,186,24],[182,29,186,27],[182,38,186,36,"attrJoin"],[182,46,186,44,"attrJoin"],[182,47,186,45,"name"],[182,51,186,49],[182,53,186,51,"value"],[182,58,186,56],[182,60,186,58],[183,4,187,2],[183,8,187,6,"idx"],[183,11,187,9],[183,14,187,12],[183,18,187,16],[183,19,187,17,"attrIndex"],[183,28,187,26],[183,29,187,27,"name"],[183,33,187,31],[183,34,187,32],[184,4,189,2],[184,8,189,6,"idx"],[184,11,189,9],[184,14,189,12],[184,15,189,13],[184,17,189,15],[185,6,190,4],[185,10,190,8],[185,11,190,9,"attrPush"],[185,19,190,17],[185,20,190,18],[185,21,190,20,"name"],[185,25,190,24],[185,27,190,26,"value"],[185,32,190,31],[185,33,190,33],[185,34,190,34],[186,4,191,2],[186,5,191,3],[186,11,191,9],[187,6,192,4],[187,10,192,8],[187,11,192,9,"attrs"],[187,16,192,14],[187,17,192,15,"idx"],[187,20,192,18],[187,21,192,19],[187,22,192,20],[187,23,192,21],[187,24,192,22],[187,27,192,25],[187,31,192,29],[187,32,192,30,"attrs"],[187,37,192,35],[187,38,192,36,"idx"],[187,41,192,39],[187,42,192,40],[187,43,192,41],[187,44,192,42],[187,45,192,43],[187,48,192,46],[187,51,192,49],[187,54,192,52,"value"],[187,59,192,57],[188,4,193,2],[189,2,194,0],[189,3,194,1],[190,2,197,0,"module"],[190,8,197,6],[190,9,197,7,"exports"],[190,16,197,14],[190,19,197,17,"Token"],[190,24,197,22],[191,0,197,23],[191,3]],"functionMap":{"names":["<global>","Token","attrIndex","attrPush","attrSet","attrGet","attrJoin"],"mappings":"AAA;ACc;CDkG;4BEQ;CFW;2BGQ;CHM;0BIQ;CJS;0BKQ;CLM;2BMS;CNQ"},"hasCjsExports":true},"type":"js/module"}]}