{"dependencies":[{"name":"@babel/runtime/helpers/toArray","data":{"asyncType":null,"isESMImport":false,"locs":[],"key":"yxbT34yjmkVZuhOKwnPlwW2nTdA=","exportNames":["*"],"imports":1}},{"name":"escape-string-regexp","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":3,"column":0,"index":15},"end":{"line":3,"column":54,"index":69}}],"key":"Opxn8Ttfh7QNGeF0y+BQ6rRbDGo=","exportNames":["*"],"imports":1}}],"output":[{"data":{"code":"__d(function (global, require, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {\n  \"use strict\";\n\n  Object.defineProperty(exports, '__esModule', {\n    value: true\n  });\n  function _interopDefault(e) {\n    return e && e.__esModule ? e : {\n      default: e\n    };\n  }\n  exports.extractPathFromURL = extractPathFromURL;\n  var _babelRuntimeHelpersToArray = require(_dependencyMap[0]);\n  var _toArray = _interopDefault(_babelRuntimeHelpersToArray);\n  var _escapeStringRegexp = require(_dependencyMap[1]);\n  var escapeStringRegexp = _interopDefault(_escapeStringRegexp);\n  function extractPathFromURL(prefixes, url) {\n    for (var prefix of prefixes) {\n      var protocol = prefix.match(/^[^:]+:/)?.[0] ?? '';\n      var host = prefix.replace(new RegExp(`^${(0, escapeStringRegexp.default)(protocol)}`), '').replace(/\\/+/g, '/') // Replace multiple slash (//) with single ones\n      .replace(/^\\//, ''); // Remove extra leading slash\n\n      var prefixRegex = new RegExp(`^${(0, escapeStringRegexp.default)(protocol)}(/)*${host.split('.').map(it => it === '*' ? '[^/]+' : (0, escapeStringRegexp.default)(it)).join('\\\\.')}`);\n      var _url$split = url.split('?'),\n        _url$split2 = (0, _toArray.default)(_url$split),\n        originAndPath = _url$split2[0],\n        searchParams = _url$split2.slice(1);\n      var normalizedURL = originAndPath.replace(/\\/+/g, '/').concat(searchParams.length ? `?${searchParams.join('?')}` : '');\n      if (prefixRegex.test(normalizedURL)) {\n        return normalizedURL.replace(prefixRegex, '');\n      }\n    }\n    return undefined;\n  }\n});","lineCount":35,"map":[[2,2,1,0],[2,14,1,12],[4,2,1,13,"Object"],[4,8,1,13],[4,9,1,13,"defineProperty"],[4,23,1,13],[4,24,1,13,"exports"],[4,31,1,13],[5,4,1,13,"value"],[5,9,1,13],[6,2,1,13],[7,2,1,13],[7,11,1,13,"_interopDefault"],[7,27,1,13,"e"],[7,28,1,13],[8,4,1,13],[8,11,1,13,"e"],[8,12,1,13],[8,16,1,13,"e"],[8,17,1,13],[8,18,1,13,"__esModule"],[8,28,1,13],[8,31,1,13,"e"],[8,32,1,13],[9,6,1,13,"default"],[9,13,1,13],[9,15,1,13,"e"],[10,4,1,13],[11,2,1,13],[12,2,4,0,"exports"],[12,9,4,0],[12,10,4,0,"extractPathFromURL"],[12,28,4,0],[12,31,4,0,"extractPathFromURL"],[12,49,4,0],[13,2,18,1],[13,6,18,1,"_babelRuntimeHelpersToArray"],[13,33,18,1],[13,36,18,1,"require"],[13,43,18,1],[13,44,18,1,"_dependencyMap"],[13,58,18,1],[14,2,18,1],[14,6,18,1,"_toArray"],[14,14,18,1],[14,17,18,1,"_interopDefault"],[14,32,18,1],[14,33,18,1,"_babelRuntimeHelpersToArray"],[14,60,18,1],[15,2,3,0],[15,6,3,0,"_escapeStringRegexp"],[15,25,3,0],[15,28,3,0,"require"],[15,35,3,0],[15,36,3,0,"_dependencyMap"],[15,50,3,0],[16,2,3,0],[16,6,3,0,"escapeStringRegexp"],[16,24,3,0],[16,27,3,0,"_interopDefault"],[16,42,3,0],[16,43,3,0,"_escapeStringRegexp"],[16,62,3,0],[17,2,4,7],[17,11,4,16,"extractPathFromURL"],[17,29,4,34,"extractPathFromURL"],[17,30,4,35,"prefixes"],[17,38,4,43],[17,40,4,45,"url"],[17,43,4,48],[17,45,4,50],[18,4,5,2],[18,9,5,7],[18,13,5,13,"prefix"],[18,19,5,19],[18,23,5,23,"prefixes"],[18,31,5,31],[18,33,5,33],[19,6,6,4],[19,10,6,10,"protocol"],[19,18,6,18],[19,21,6,21,"prefix"],[19,27,6,27],[19,28,6,28,"match"],[19,33,6,33],[19,34,6,34],[19,43,6,43],[19,44,6,44],[19,47,6,47],[19,48,6,48],[19,49,6,49],[19,53,6,53],[19,55,6,55],[20,6,7,4],[20,10,7,10,"host"],[20,14,7,14],[20,17,7,17,"prefix"],[20,23,7,23],[20,24,7,24,"replace"],[20,31,7,31],[20,32,7,32],[20,36,7,36,"RegExp"],[20,42,7,42],[20,43,7,43],[20,47,7,47],[20,51,7,47,"escapeStringRegexp"],[20,69,7,65],[20,70,7,65,"default"],[20,77,7,65],[20,79,7,66,"protocol"],[20,87,7,74],[20,88,7,75],[20,90,7,77],[20,91,7,78],[20,93,7,80],[20,95,7,82],[20,96,7,83],[20,97,7,84,"replace"],[20,104,7,91],[20,105,7,92],[20,111,7,98],[20,113,7,100],[20,116,7,103],[20,117,7,104],[20,118,7,105],[21,6,7,105],[21,7,8,5,"replace"],[21,14,8,12],[21,15,8,13],[21,20,8,18],[21,22,8,20],[21,24,8,22],[21,25,8,23],[21,26,8,24],[21,27,8,25],[23,6,10,4],[23,10,10,10,"prefixRegex"],[23,21,10,21],[23,24,10,24],[23,28,10,28,"RegExp"],[23,34,10,34],[23,35,10,35],[23,39,10,39],[23,43,10,39,"escapeStringRegexp"],[23,61,10,57],[23,62,10,57,"default"],[23,69,10,57],[23,71,10,58,"protocol"],[23,79,10,66],[23,80,10,67],[23,87,10,74,"host"],[23,91,10,78],[23,92,10,79,"split"],[23,97,10,84],[23,98,10,85],[23,101,10,88],[23,102,10,89],[23,103,10,90,"map"],[23,106,10,93],[23,107,10,94,"it"],[23,109,10,96],[23,113,10,100,"it"],[23,115,10,102],[23,120,10,107],[23,123,10,110],[23,126,10,113],[23,133,10,120],[23,136,10,123],[23,140,10,123,"escapeStringRegexp"],[23,158,10,141],[23,159,10,141,"default"],[23,166,10,141],[23,168,10,142,"it"],[23,170,10,144],[23,171,10,145],[23,172,10,146],[23,173,10,147,"join"],[23,177,10,151],[23,178,10,152],[23,183,10,157],[23,184,10,158],[23,186,10,160],[23,187,10,161],[24,6,11,4],[24,10,11,4,"_url$split"],[24,20,11,4],[24,23,11,45,"url"],[24,26,11,48],[24,27,11,49,"split"],[24,32,11,54],[24,33,11,55],[24,36,11,58],[24,37,11,59],[25,8,11,59,"_url$split2"],[25,19,11,59],[25,26,11,59,"_toArray"],[25,34,11,59],[25,35,11,59,"default"],[25,42,11,59],[25,44,11,59,"_url$split"],[25,54,11,59],[26,8,11,11,"originAndPath"],[26,21,11,24],[26,24,11,24,"_url$split2"],[26,35,11,24],[27,8,11,29,"searchParams"],[27,20,11,41],[27,23,11,41,"_url$split2"],[27,34,11,41],[27,35,11,41,"slice"],[27,40,11,41],[28,6,12,4],[28,10,12,10,"normalizedURL"],[28,23,12,23],[28,26,12,26,"originAndPath"],[28,39,12,39],[28,40,12,40,"replace"],[28,47,12,47],[28,48,12,48],[28,54,12,54],[28,56,12,56],[28,59,12,59],[28,60,12,60],[28,61,12,61,"concat"],[28,67,12,67],[28,68,12,68,"searchParams"],[28,80,12,80],[28,81,12,81,"length"],[28,87,12,87],[28,90,12,90],[28,94,12,94,"searchParams"],[28,106,12,106],[28,107,12,107,"join"],[28,111,12,111],[28,112,12,112],[28,115,12,115],[28,116,12,116],[28,118,12,118],[28,121,12,121],[28,123,12,123],[28,124,12,124],[29,6,13,4],[29,10,13,8,"prefixRegex"],[29,21,13,19],[29,22,13,20,"test"],[29,26,13,24],[29,27,13,25,"normalizedURL"],[29,40,13,38],[29,41,13,39],[29,43,13,41],[30,8,14,6],[30,15,14,13,"normalizedURL"],[30,28,14,26],[30,29,14,27,"replace"],[30,36,14,34],[30,37,14,35,"prefixRegex"],[30,48,14,46],[30,50,14,48],[30,52,14,50],[30,53,14,51],[31,6,15,4],[32,4,16,2],[33,4,17,2],[33,11,17,9,"undefined"],[33,20,17,18],[34,2,18,0],[35,0,18,1],[35,3]],"functionMap":{"names":["<global>","extractPathFromURL","host.split.map$argument_0"],"mappings":"AAA;OCG;8FCM,mDD;CDQ"},"hasCjsExports":false},"type":"js/module"}]}