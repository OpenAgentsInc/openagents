{"dependencies":[],"output":[{"data":{"code":"__d(function (global, require, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {\n  // Process *this* and _that_\n  //\n  'use strict';\n\n  // Insert each marker as a separate text token, and add it to delimiter list\n  //\n  module.exports.tokenize = function emphasis(state, silent) {\n    var i,\n      scanned,\n      token,\n      start = state.pos,\n      marker = state.src.charCodeAt(start);\n    if (silent) {\n      return false;\n    }\n    if (marker !== 0x5F /* _ */ && marker !== 0x2A /* * */) {\n      return false;\n    }\n    scanned = state.scanDelims(state.pos, marker === 0x2A);\n    for (i = 0; i < scanned.length; i++) {\n      token = state.push('text', '', 0);\n      token.content = String.fromCharCode(marker);\n      state.delimiters.push({\n        // Char code of the starting marker (number).\n        //\n        marker: marker,\n        // Total length of these series of delimiters.\n        //\n        length: scanned.length,\n        // An amount of characters before this one that's equivalent to\n        // current one. In plain English: if this delimiter does not open\n        // an emphasis, neither do previous `jump` characters.\n        //\n        // Used to skip sequences like \"*****\" in one step, for 1st asterisk\n        // value will be 0, for 2nd it's 1 and so on.\n        //\n        jump: i,\n        // A position of the token this delimiter corresponds to.\n        //\n        token: state.tokens.length - 1,\n        // If this delimiter is matched as a valid opener, `end` will be\n        // equal to its position, otherwise it's `-1`.\n        //\n        end: -1,\n        // Boolean flags that determine if this delimiter could open or close\n        // an emphasis.\n        //\n        open: scanned.can_open,\n        close: scanned.can_close\n      });\n    }\n    state.pos += scanned.length;\n    return true;\n  };\n  function postProcess(state, delimiters) {\n    var i,\n      startDelim,\n      endDelim,\n      token,\n      ch,\n      isStrong,\n      max = delimiters.length;\n    for (i = max - 1; i >= 0; i--) {\n      startDelim = delimiters[i];\n      if (startDelim.marker !== 0x5F /* _ */ && startDelim.marker !== 0x2A /* * */) {\n        continue;\n      }\n\n      // Process only opening markers\n      if (startDelim.end === -1) {\n        continue;\n      }\n      endDelim = delimiters[startDelim.end];\n\n      // If the previous delimiter has the same marker and is adjacent to this one,\n      // merge those into one strong delimiter.\n      //\n      // `<em><em>whatever</em></em>` -> `<strong>whatever</strong>`\n      //\n      isStrong = i > 0 && delimiters[i - 1].end === startDelim.end + 1 && delimiters[i - 1].token === startDelim.token - 1 && delimiters[startDelim.end + 1].token === endDelim.token + 1 && delimiters[i - 1].marker === startDelim.marker;\n      ch = String.fromCharCode(startDelim.marker);\n      token = state.tokens[startDelim.token];\n      token.type = isStrong ? 'strong_open' : 'em_open';\n      token.tag = isStrong ? 'strong' : 'em';\n      token.nesting = 1;\n      token.markup = isStrong ? ch + ch : ch;\n      token.content = '';\n      token = state.tokens[endDelim.token];\n      token.type = isStrong ? 'strong_close' : 'em_close';\n      token.tag = isStrong ? 'strong' : 'em';\n      token.nesting = -1;\n      token.markup = isStrong ? ch + ch : ch;\n      token.content = '';\n      if (isStrong) {\n        state.tokens[delimiters[i - 1].token].content = '';\n        state.tokens[delimiters[startDelim.end + 1].token].content = '';\n        i--;\n      }\n    }\n  }\n\n  // Walk through delimiter list and replace text tokens with tags\n  //\n  module.exports.postProcess = function emphasis(state) {\n    var curr,\n      tokens_meta = state.tokens_meta,\n      max = state.tokens_meta.length;\n    postProcess(state, state.delimiters);\n    for (curr = 0; curr < max; curr++) {\n      if (tokens_meta[curr] && tokens_meta[curr].delimiters) {\n        postProcess(state, tokens_meta[curr].delimiters);\n      }\n    }\n  };\n});","lineCount":116,"map":[[2,2,1,0],[3,2,2,0],[4,2,3,0],[4,14,3,12],[6,2,6,0],[7,2,7,0],[8,2,8,0,"module"],[8,8,8,6],[8,9,8,7,"exports"],[8,16,8,14],[8,17,8,15,"tokenize"],[8,25,8,23],[8,28,8,26],[8,37,8,35,"emphasis"],[8,45,8,43,"emphasis"],[8,46,8,44,"state"],[8,51,8,49],[8,53,8,51,"silent"],[8,59,8,57],[8,61,8,59],[9,4,9,2],[9,8,9,6,"i"],[9,9,9,7],[10,6,9,9,"scanned"],[10,13,9,16],[11,6,9,18,"token"],[11,11,9,23],[12,6,10,6,"start"],[12,11,10,11],[12,14,10,14,"state"],[12,19,10,19],[12,20,10,20,"pos"],[12,23,10,23],[13,6,11,6,"marker"],[13,12,11,12],[13,15,11,15,"state"],[13,20,11,20],[13,21,11,21,"src"],[13,24,11,24],[13,25,11,25,"charCodeAt"],[13,35,11,35],[13,36,11,36,"start"],[13,41,11,41],[13,42,11,42],[14,4,13,2],[14,8,13,6,"silent"],[14,14,13,12],[14,16,13,14],[15,6,13,16],[15,13,13,23],[15,18,13,28],[16,4,13,30],[17,4,15,2],[17,8,15,6,"marker"],[17,14,15,12],[17,19,15,17],[17,23,15,21],[17,24,15,22],[17,35,15,33,"marker"],[17,41,15,39],[17,46,15,44],[17,50,15,48],[17,51,15,49],[17,60,15,58],[18,6,15,60],[18,13,15,67],[18,18,15,72],[19,4,15,74],[20,4,17,2,"scanned"],[20,11,17,9],[20,14,17,12,"state"],[20,19,17,17],[20,20,17,18,"scanDelims"],[20,30,17,28],[20,31,17,29,"state"],[20,36,17,34],[20,37,17,35,"pos"],[20,40,17,38],[20,42,17,40,"marker"],[20,48,17,46],[20,53,17,51],[20,57,17,55],[20,58,17,56],[21,4,19,2],[21,9,19,7,"i"],[21,10,19,8],[21,13,19,11],[21,14,19,12],[21,16,19,14,"i"],[21,17,19,15],[21,20,19,18,"scanned"],[21,27,19,25],[21,28,19,26,"length"],[21,34,19,32],[21,36,19,34,"i"],[21,37,19,35],[21,39,19,37],[21,41,19,39],[22,6,20,4,"token"],[22,11,20,9],[22,14,20,20,"state"],[22,19,20,25],[22,20,20,26,"push"],[22,24,20,30],[22,25,20,31],[22,31,20,37],[22,33,20,39],[22,35,20,41],[22,37,20,43],[22,38,20,44],[22,39,20,45],[23,6,21,4,"token"],[23,11,21,9],[23,12,21,10,"content"],[23,19,21,17],[23,22,21,20,"String"],[23,28,21,26],[23,29,21,27,"fromCharCode"],[23,41,21,39],[23,42,21,40,"marker"],[23,48,21,46],[23,49,21,47],[24,6,23,4,"state"],[24,11,23,9],[24,12,23,10,"delimiters"],[24,22,23,20],[24,23,23,21,"push"],[24,27,23,25],[24,28,23,26],[25,8,24,6],[26,8,25,6],[27,8,26,6,"marker"],[27,14,26,12],[27,16,26,14,"marker"],[27,22,26,20],[28,8,28,6],[29,8,29,6],[30,8,30,6,"length"],[30,14,30,12],[30,16,30,14,"scanned"],[30,23,30,21],[30,24,30,22,"length"],[30,30,30,28],[31,8,32,6],[32,8,33,6],[33,8,34,6],[34,8,35,6],[35,8,36,6],[36,8,37,6],[37,8,38,6],[38,8,39,6,"jump"],[38,12,39,10],[38,14,39,14,"i"],[38,15,39,15],[39,8,41,6],[40,8,42,6],[41,8,43,6,"token"],[41,13,43,11],[41,15,43,14,"state"],[41,20,43,19],[41,21,43,20,"tokens"],[41,27,43,26],[41,28,43,27,"length"],[41,34,43,33],[41,37,43,36],[41,38,43,37],[42,8,45,6],[43,8,46,6],[44,8,47,6],[45,8,48,6,"end"],[45,11,48,9],[45,15,48,16],[46,8,50,6],[47,8,51,6],[48,8,52,6],[49,8,53,6,"open"],[49,12,53,10],[49,14,53,14,"scanned"],[49,21,53,21],[49,22,53,22,"can_open"],[49,30,53,30],[50,8,54,6,"close"],[50,13,54,11],[50,15,54,14,"scanned"],[50,22,54,21],[50,23,54,22,"can_close"],[51,6,55,4],[51,7,55,5],[51,8,55,6],[52,4,56,2],[53,4,58,2,"state"],[53,9,58,7],[53,10,58,8,"pos"],[53,13,58,11],[53,17,58,15,"scanned"],[53,24,58,22],[53,25,58,23,"length"],[53,31,58,29],[54,4,60,2],[54,11,60,9],[54,15,60,13],[55,2,61,0],[55,3,61,1],[56,2,64,0],[56,11,64,9,"postProcess"],[56,22,64,20,"postProcess"],[56,23,64,21,"state"],[56,28,64,26],[56,30,64,28,"delimiters"],[56,40,64,38],[56,42,64,40],[57,4,65,2],[57,8,65,6,"i"],[57,9,65,7],[58,6,66,6,"startDelim"],[58,16,66,16],[59,6,67,6,"endDelim"],[59,14,67,14],[60,6,68,6,"token"],[60,11,68,11],[61,6,69,6,"ch"],[61,8,69,8],[62,6,70,6,"isStrong"],[62,14,70,14],[63,6,71,6,"max"],[63,9,71,9],[63,12,71,12,"delimiters"],[63,22,71,22],[63,23,71,23,"length"],[63,29,71,29],[64,4,73,2],[64,9,73,7,"i"],[64,10,73,8],[64,13,73,11,"max"],[64,16,73,14],[64,19,73,17],[64,20,73,18],[64,22,73,20,"i"],[64,23,73,21],[64,27,73,25],[64,28,73,26],[64,30,73,28,"i"],[64,31,73,29],[64,33,73,31],[64,35,73,33],[65,6,74,4,"startDelim"],[65,16,74,14],[65,19,74,17,"delimiters"],[65,29,74,27],[65,30,74,28,"i"],[65,31,74,29],[65,32,74,30],[66,6,76,4],[66,10,76,8,"startDelim"],[66,20,76,18],[66,21,76,19,"marker"],[66,27,76,25],[66,32,76,30],[66,36,76,34],[66,48,76,45,"startDelim"],[66,58,76,55],[66,59,76,56,"marker"],[66,65,76,62],[66,70,76,67],[66,74,76,71],[66,84,76,80],[67,8,77,6],[68,6,78,4],[70,6,80,4],[71,6,81,4],[71,10,81,8,"startDelim"],[71,20,81,18],[71,21,81,19,"end"],[71,24,81,22],[71,31,81,29],[71,33,81,31],[72,8,82,6],[73,6,83,4],[74,6,85,4,"endDelim"],[74,14,85,12],[74,17,85,15,"delimiters"],[74,27,85,25],[74,28,85,26,"startDelim"],[74,38,85,36],[74,39,85,37,"end"],[74,42,85,40],[74,43,85,41],[76,6,87,4],[77,6,88,4],[78,6,89,4],[79,6,90,4],[80,6,91,4],[81,6,92,4,"isStrong"],[81,14,92,12],[81,17,92,15,"i"],[81,18,92,16],[81,21,92,19],[81,22,92,20],[81,26,93,15,"delimiters"],[81,36,93,25],[81,37,93,26,"i"],[81,38,93,27],[81,41,93,30],[81,42,93,31],[81,43,93,32],[81,44,93,33,"end"],[81,47,93,36],[81,52,93,41,"startDelim"],[81,62,93,51],[81,63,93,52,"end"],[81,66,93,55],[81,69,93,58],[81,70,93,59],[81,74,94,15,"delimiters"],[81,84,94,25],[81,85,94,26,"i"],[81,86,94,27],[81,89,94,30],[81,90,94,31],[81,91,94,32],[81,92,94,33,"token"],[81,97,94,38],[81,102,94,43,"startDelim"],[81,112,94,53],[81,113,94,54,"token"],[81,118,94,59],[81,121,94,62],[81,122,94,63],[81,126,95,15,"delimiters"],[81,136,95,25],[81,137,95,26,"startDelim"],[81,147,95,36],[81,148,95,37,"end"],[81,151,95,40],[81,154,95,43],[81,155,95,44],[81,156,95,45],[81,157,95,46,"token"],[81,162,95,51],[81,167,95,56,"endDelim"],[81,175,95,64],[81,176,95,65,"token"],[81,181,95,70],[81,184,95,73],[81,185,95,74],[81,189,96,15,"delimiters"],[81,199,96,25],[81,200,96,26,"i"],[81,201,96,27],[81,204,96,30],[81,205,96,31],[81,206,96,32],[81,207,96,33,"marker"],[81,213,96,39],[81,218,96,44,"startDelim"],[81,228,96,54],[81,229,96,55,"marker"],[81,235,96,61],[82,6,98,4,"ch"],[82,8,98,6],[82,11,98,9,"String"],[82,17,98,15],[82,18,98,16,"fromCharCode"],[82,30,98,28],[82,31,98,29,"startDelim"],[82,41,98,39],[82,42,98,40,"marker"],[82,48,98,46],[82,49,98,47],[83,6,100,4,"token"],[83,11,100,9],[83,14,100,20,"state"],[83,19,100,25],[83,20,100,26,"tokens"],[83,26,100,32],[83,27,100,33,"startDelim"],[83,37,100,43],[83,38,100,44,"token"],[83,43,100,49],[83,44,100,50],[84,6,101,4,"token"],[84,11,101,9],[84,12,101,10,"type"],[84,16,101,14],[84,19,101,20,"isStrong"],[84,27,101,28],[84,30,101,31],[84,43,101,44],[84,46,101,47],[84,55,101,56],[85,6,102,4,"token"],[85,11,102,9],[85,12,102,10,"tag"],[85,15,102,13],[85,18,102,20,"isStrong"],[85,26,102,28],[85,29,102,31],[85,37,102,39],[85,40,102,42],[85,44,102,46],[86,6,103,4,"token"],[86,11,103,9],[86,12,103,10,"nesting"],[86,19,103,17],[86,22,103,20],[86,23,103,21],[87,6,104,4,"token"],[87,11,104,9],[87,12,104,10,"markup"],[87,18,104,16],[87,21,104,20,"isStrong"],[87,29,104,28],[87,32,104,31,"ch"],[87,34,104,33],[87,37,104,36,"ch"],[87,39,104,38],[87,42,104,41,"ch"],[87,44,104,43],[88,6,105,4,"token"],[88,11,105,9],[88,12,105,10,"content"],[88,19,105,17],[88,22,105,20],[88,24,105,22],[89,6,107,4,"token"],[89,11,107,9],[89,14,107,20,"state"],[89,19,107,25],[89,20,107,26,"tokens"],[89,26,107,32],[89,27,107,33,"endDelim"],[89,35,107,41],[89,36,107,42,"token"],[89,41,107,47],[89,42,107,48],[90,6,108,4,"token"],[90,11,108,9],[90,12,108,10,"type"],[90,16,108,14],[90,19,108,20,"isStrong"],[90,27,108,28],[90,30,108,31],[90,44,108,45],[90,47,108,48],[90,57,108,58],[91,6,109,4,"token"],[91,11,109,9],[91,12,109,10,"tag"],[91,15,109,13],[91,18,109,20,"isStrong"],[91,26,109,28],[91,29,109,31],[91,37,109,39],[91,40,109,42],[91,44,109,46],[92,6,110,4,"token"],[92,11,110,9],[92,12,110,10,"nesting"],[92,19,110,17],[92,24,110,22],[93,6,111,4,"token"],[93,11,111,9],[93,12,111,10,"markup"],[93,18,111,16],[93,21,111,20,"isStrong"],[93,29,111,28],[93,32,111,31,"ch"],[93,34,111,33],[93,37,111,36,"ch"],[93,39,111,38],[93,42,111,41,"ch"],[93,44,111,43],[94,6,112,4,"token"],[94,11,112,9],[94,12,112,10,"content"],[94,19,112,17],[94,22,112,20],[94,24,112,22],[95,6,114,4],[95,10,114,8,"isStrong"],[95,18,114,16],[95,20,114,18],[96,8,115,6,"state"],[96,13,115,11],[96,14,115,12,"tokens"],[96,20,115,18],[96,21,115,19,"delimiters"],[96,31,115,29],[96,32,115,30,"i"],[96,33,115,31],[96,36,115,34],[96,37,115,35],[96,38,115,36],[96,39,115,37,"token"],[96,44,115,42],[96,45,115,43],[96,46,115,44,"content"],[96,53,115,51],[96,56,115,54],[96,58,115,56],[97,8,116,6,"state"],[97,13,116,11],[97,14,116,12,"tokens"],[97,20,116,18],[97,21,116,19,"delimiters"],[97,31,116,29],[97,32,116,30,"startDelim"],[97,42,116,40],[97,43,116,41,"end"],[97,46,116,44],[97,49,116,47],[97,50,116,48],[97,51,116,49],[97,52,116,50,"token"],[97,57,116,55],[97,58,116,56],[97,59,116,57,"content"],[97,66,116,64],[97,69,116,67],[97,71,116,69],[98,8,117,6,"i"],[98,9,117,7],[98,11,117,9],[99,6,118,4],[100,4,119,2],[101,2,120,0],[103,2,123,0],[104,2,124,0],[105,2,125,0,"module"],[105,8,125,6],[105,9,125,7,"exports"],[105,16,125,14],[105,17,125,15,"postProcess"],[105,28,125,26],[105,31,125,29],[105,40,125,38,"emphasis"],[105,48,125,46,"emphasis"],[105,49,125,47,"state"],[105,54,125,52],[105,56,125,54],[106,4,126,2],[106,8,126,6,"curr"],[106,12,126,10],[107,6,127,6,"tokens_meta"],[107,17,127,17],[107,20,127,20,"state"],[107,25,127,25],[107,26,127,26,"tokens_meta"],[107,37,127,37],[108,6,128,6,"max"],[108,9,128,9],[108,12,128,12,"state"],[108,17,128,17],[108,18,128,18,"tokens_meta"],[108,29,128,29],[108,30,128,30,"length"],[108,36,128,36],[109,4,130,2,"postProcess"],[109,15,130,13],[109,16,130,14,"state"],[109,21,130,19],[109,23,130,21,"state"],[109,28,130,26],[109,29,130,27,"delimiters"],[109,39,130,37],[109,40,130,38],[110,4,132,2],[110,9,132,7,"curr"],[110,13,132,11],[110,16,132,14],[110,17,132,15],[110,19,132,17,"curr"],[110,23,132,21],[110,26,132,24,"max"],[110,29,132,27],[110,31,132,29,"curr"],[110,35,132,33],[110,37,132,35],[110,39,132,37],[111,6,133,4],[111,10,133,8,"tokens_meta"],[111,21,133,19],[111,22,133,20,"curr"],[111,26,133,24],[111,27,133,25],[111,31,133,29,"tokens_meta"],[111,42,133,40],[111,43,133,41,"curr"],[111,47,133,45],[111,48,133,46],[111,49,133,47,"delimiters"],[111,59,133,57],[111,61,133,59],[112,8,134,6,"postProcess"],[112,19,134,17],[112,20,134,18,"state"],[112,25,134,23],[112,27,134,25,"tokens_meta"],[112,38,134,36],[112,39,134,37,"curr"],[112,43,134,41],[112,44,134,42],[112,45,134,43,"delimiters"],[112,55,134,53],[112,56,134,54],[113,6,135,4],[114,4,136,2],[115,2,137,0],[115,3,137,1],[116,0,137,2],[116,3]],"functionMap":{"names":["<global>","emphasis","postProcess"],"mappings":"AAA;0BCO;CDqD;AEG;CFwD;6BCK;CDY"},"hasCjsExports":true},"type":"js/module"}]}