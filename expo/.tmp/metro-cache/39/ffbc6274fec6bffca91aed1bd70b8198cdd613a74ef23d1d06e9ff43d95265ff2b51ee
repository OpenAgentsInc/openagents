{"dependencies":[{"name":"../Utilities/stringifySafe","data":{"asyncType":null,"isESMImport":false,"locs":[{"start":{"line":13,"column":22},"end":{"line":13,"column":59}}],"key":"F5lIdwjTzDlKvpgn4agRz3qCB1o=","exportNames":["*"],"imports":1}},{"name":"invariant","data":{"asyncType":null,"isESMImport":false,"locs":[{"start":{"line":14,"column":18},"end":{"line":14,"column":38}}],"key":"oQpL0Es3H146KnQH9ygFeHrzVP4=","exportNames":["*"],"imports":1}}],"output":[{"data":{"code":"__d(function (global, require, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {\n  'use strict';\n\n  Object.defineProperty(exports, '__esModule', {\n    value: true\n  });\n  Object.defineProperty(exports, \"default\", {\n    enumerable: true,\n    get: function () {\n      return _default;\n    }\n  });\n  var stringifySafe = require(_dependencyMap[0]).default;\n  var invariant = require(_dependencyMap[1]);\n  function processTransform(transform) {\n    if (typeof transform === 'string') {\n      var regex = new RegExp(/(\\w+)\\(([^)]+)\\)/g);\n      var transformArray = [];\n      var matches;\n      while (matches = regex.exec(transform)) {\n        var _getKeyAndValueFromCS = _getKeyAndValueFromCSSTransform(matches[1], matches[2]),\n          _key = _getKeyAndValueFromCS.key,\n          value = _getKeyAndValueFromCS.value;\n        if (value !== undefined) {\n          transformArray.push({\n            [_key]: value\n          });\n        }\n      }\n      transform = transformArray;\n    }\n    return transform;\n  }\n  var _getKeyAndValueFromCSSTransform = (key, args) => {\n    var argsWithUnitsRegex = new RegExp(/([+-]?\\d+(\\.\\d+)?)([a-zA-Z]+|%)?/g);\n    switch (key) {\n      case 'matrix':\n        return {\n          key,\n          value: args.match(/[+-]?\\d+(\\.\\d+)?/g)?.map(Number)\n        };\n      case 'translate':\n      case 'translate3d':\n        var parsedArgs = [];\n        var missingUnitOfMeasurement = false;\n        var matches;\n        while (matches = argsWithUnitsRegex.exec(args)) {\n          var _value = Number(matches[1]);\n          var _unitOfMeasurement = matches[3];\n          if (_value !== 0 && !_unitOfMeasurement) {\n            missingUnitOfMeasurement = true;\n          }\n          if (_unitOfMeasurement === '%') {\n            parsedArgs.push(`${_value}%`);\n          } else {\n            parsedArgs.push(_value);\n          }\n        }\n        if (parsedArgs?.length === 1) {\n          parsedArgs.push(0);\n        }\n        return {\n          key: 'translate',\n          value: parsedArgs\n        };\n      case 'translateX':\n      case 'translateY':\n      case 'perspective':\n        var argMatches = argsWithUnitsRegex.exec(args);\n        if (!argMatches?.length) {\n          return {\n            key,\n            value: undefined\n          };\n        }\n        var value = Number(argMatches[1]);\n        var unitOfMeasurement = argMatches[3];\n        return {\n          key,\n          value\n        };\n      default:\n        return {\n          key,\n          value: !isNaN(args) ? Number(args) : args\n        };\n    }\n  };\n  var _default = processTransform;\n});","lineCount":90,"map":[[2,2,11,0],[2,14,11,12],[4,2,11,13,"Object"],[4,8,11,13],[4,9,11,13,"defineProperty"],[4,23,11,13],[4,24,11,13,"exports"],[4,31,11,13],[5,4,11,13,"value"],[5,9,11,13],[6,2,11,13],[7,2,269,0,"Object"],[7,8,269,0],[7,9,269,0,"defineProperty"],[7,23,269,0],[7,24,269,0,"exports"],[7,31,269,0],[8,4,269,0,"enumerable"],[8,14,269,0],[9,4,269,0,"get"],[9,7,269,0],[9,18,269,0,"get"],[9,19,269,0],[10,6,269,0],[10,13,269,0,"_default"],[10,21,269,0],[11,4,269,0],[12,2,269,0],[13,2,13,0],[13,6,13,6,"stringifySafe"],[13,19,13,19],[13,22,13,22,"require"],[13,29,13,29],[13,30,13,29,"_dependencyMap"],[13,44,13,29],[13,47,13,58],[13,48,13,59],[13,49,13,60,"default"],[13,56,13,67],[14,2,14,0],[14,6,14,6,"invariant"],[14,15,14,15],[14,18,14,18,"require"],[14,25,14,25],[14,26,14,25,"_dependencyMap"],[14,40,14,25],[14,43,14,37],[14,44,14,38],[15,2,24,0],[15,11,24,9,"processTransform"],[15,27,24,25,"processTransform"],[15,28,25,2,"transform"],[15,37,25,35],[15,39,26,33],[16,4,27,2],[16,8,27,6],[16,15,27,13,"transform"],[16,24,27,22],[16,29,27,27],[16,37,27,35],[16,39,27,37],[17,6,28,4],[17,10,28,10,"regex"],[17,15,28,15],[17,18,28,18],[17,22,28,22,"RegExp"],[17,28,28,28],[17,29,28,29],[17,48,28,48],[17,49,28,49],[18,6,29,4],[18,10,29,10,"transformArray"],[18,24,29,39],[18,27,29,42],[18,29,29,44],[19,6,30,4],[19,10,30,8,"matches"],[19,17,30,15],[20,6,32,4],[20,13,32,12,"matches"],[20,20,32,19],[20,23,32,22,"regex"],[20,28,32,27],[20,29,32,28,"exec"],[20,33,32,32],[20,34,32,33,"transform"],[20,43,32,42],[20,44,32,43],[20,46,32,46],[21,8,33,6],[21,12,33,6,"_getKeyAndValueFromCS"],[21,33,33,6],[21,36,33,27,"_getKeyAndValueFromCSSTransform"],[21,67,33,58],[21,68,34,8,"matches"],[21,75,34,15],[21,76,34,16],[21,77,34,17],[21,78,34,18],[21,80,35,8,"matches"],[21,87,35,15],[21,88,35,16],[21,89,35,17],[21,90,36,6],[21,91,36,7],[22,10,33,13,"key"],[22,14,33,16],[22,17,33,16,"_getKeyAndValueFromCS"],[22,38,33,16],[22,39,33,13,"key"],[22,42,33,16],[23,10,33,18,"value"],[23,15,33,23],[23,18,33,23,"_getKeyAndValueFromCS"],[23,39,33,23],[23,40,33,18,"value"],[23,45,33,23],[24,8,38,6],[24,12,38,10,"value"],[24,17,38,15],[24,22,38,20,"undefined"],[24,31,38,29],[24,33,38,31],[25,10,39,8,"transformArray"],[25,24,39,22],[25,25,39,23,"push"],[25,29,39,27],[25,30,39,28],[26,12,39,29],[26,13,39,30,"key"],[26,17,39,33],[26,20,39,36,"value"],[27,10,39,41],[27,11,39,42],[27,12,39,43],[28,8,40,6],[29,6,41,4],[30,6,42,4,"transform"],[30,15,42,13],[30,18,42,16,"transformArray"],[30,32,42,30],[31,4,43,2],[32,4,49,2],[32,11,49,9,"transform"],[32,20,49,18],[33,2,50,0],[34,2,52,0],[34,6,52,6,"_getKeyAndValueFromCSSTransform"],[34,37,55,68],[34,40,55,71,"_getKeyAndValueFromCSSTransform"],[34,41,56,2,"key"],[34,44,56,5],[34,46,57,2,"args"],[34,50,57,6],[34,55,58,5],[35,4,59,2],[35,8,59,8,"argsWithUnitsRegex"],[35,26,59,26],[35,29,59,29],[35,33,59,33,"RegExp"],[35,39,59,39],[35,40,59,40],[35,75,59,75],[35,76,59,76],[36,4,61,2],[36,12,61,10,"key"],[36,15,61,13],[37,6,62,4],[37,11,62,9],[37,19,62,17],[38,8,63,6],[38,15,63,13],[39,10,63,14,"key"],[39,13,63,17],[40,10,63,19,"value"],[40,15,63,24],[40,17,63,26,"args"],[40,21,63,30],[40,22,63,31,"match"],[40,27,63,36],[40,28,63,37],[40,47,63,56],[40,48,63,57],[40,50,63,59,"map"],[40,53,63,62],[40,54,63,63,"Number"],[40,60,63,69],[41,8,63,70],[41,9,63,71],[42,6,64,4],[42,11,64,9],[42,22,64,20],[43,6,65,4],[43,11,65,9],[43,24,65,22],[44,8,66,6],[44,12,66,12,"parsedArgs"],[44,22,66,22],[44,25,66,25],[44,27,66,27],[45,8,67,6],[45,12,67,10,"missingUnitOfMeasurement"],[45,36,67,34],[45,39,67,37],[45,44,67,42],[46,8,69,6],[46,12,69,10,"matches"],[46,19,69,17],[47,8,70,6],[47,15,70,14,"matches"],[47,22,70,21],[47,25,70,24,"argsWithUnitsRegex"],[47,43,70,42],[47,44,70,43,"exec"],[47,48,70,47],[47,49,70,48,"args"],[47,53,70,52],[47,54,70,53],[47,56,70,56],[48,10,71,8],[48,14,71,14,"value"],[48,20,71,19],[48,23,71,22,"Number"],[48,29,71,28],[48,30,71,29,"matches"],[48,37,71,36],[48,38,71,37],[48,39,71,38],[48,40,71,39],[48,41,71,40],[49,10,72,8],[49,14,72,14,"unitOfMeasurement"],[49,32,72,31],[49,35,72,34,"matches"],[49,42,72,41],[49,43,72,42],[49,44,72,43],[49,45,72,44],[50,10,74,8],[50,14,74,12,"value"],[50,20,74,17],[50,25,74,22],[50,26,74,23],[50,30,74,27],[50,31,74,28,"unitOfMeasurement"],[50,49,74,45],[50,51,74,47],[51,12,75,10,"missingUnitOfMeasurement"],[51,36,75,34],[51,39,75,37],[51,43,75,41],[52,10,76,8],[53,10,78,8],[53,14,78,12,"unitOfMeasurement"],[53,32,78,29],[53,37,78,34],[53,40,78,37],[53,42,78,39],[54,12,79,10,"parsedArgs"],[54,22,79,20],[54,23,79,21,"push"],[54,27,79,25],[54,28,79,26],[54,31,79,29,"value"],[54,37,79,34],[54,40,79,37],[54,41,79,38],[55,10,80,8],[55,11,80,9],[55,17,80,15],[56,12,81,10,"parsedArgs"],[56,22,81,20],[56,23,81,21,"push"],[56,27,81,25],[56,28,81,26,"value"],[56,34,81,31],[56,35,81,32],[57,10,82,8],[58,8,83,6],[59,8,109,6],[59,12,109,10,"parsedArgs"],[59,22,109,20],[59,24,109,22,"length"],[59,30,109,28],[59,35,109,33],[59,36,109,34],[59,38,109,36],[60,10,110,8,"parsedArgs"],[60,20,110,18],[60,21,110,19,"push"],[60,25,110,23],[60,26,110,24],[60,27,110,25],[60,28,110,26],[61,8,111,6],[62,8,113,6],[62,15,113,13],[63,10,113,14,"key"],[63,13,113,17],[63,15,113,19],[63,26,113,30],[64,10,113,32,"value"],[64,15,113,37],[64,17,113,39,"parsedArgs"],[65,8,113,49],[65,9,113,50],[66,6,114,4],[66,11,114,9],[66,23,114,21],[67,6,115,4],[67,11,115,9],[67,23,115,21],[68,6,116,4],[68,11,116,9],[68,24,116,22],[69,8,117,6],[69,12,117,12,"argMatches"],[69,22,117,22],[69,25,117,25,"argsWithUnitsRegex"],[69,43,117,43],[69,44,117,44,"exec"],[69,48,117,48],[69,49,117,49,"args"],[69,53,117,53],[69,54,117,54],[70,8,119,6],[70,12,119,10],[70,13,119,11,"argMatches"],[70,23,119,21],[70,25,119,23,"length"],[70,31,119,29],[70,33,119,31],[71,10,120,8],[71,17,120,15],[72,12,120,16,"key"],[72,15,120,19],[73,12,120,21,"value"],[73,17,120,26],[73,19,120,28,"undefined"],[74,10,120,37],[74,11,120,38],[75,8,121,6],[76,8,123,6],[76,12,123,12,"value"],[76,17,123,17],[76,20,123,20,"Number"],[76,26,123,26],[76,27,123,27,"argMatches"],[76,37,123,37],[76,38,123,38],[76,39,123,39],[76,40,123,40],[76,41,123,41],[77,8,124,6],[77,12,124,12,"unitOfMeasurement"],[77,29,124,29],[77,32,124,32,"argMatches"],[77,42,124,42],[77,43,124,43],[77,44,124,44],[77,45,124,45],[78,8,134,6],[78,15,134,13],[79,10,134,14,"key"],[79,13,134,17],[80,10,134,19,"value"],[81,8,134,24],[81,9,134,25],[82,6,136,4],[83,8,137,6],[83,15,137,13],[84,10,137,14,"key"],[84,13,137,17],[85,10,137,19,"value"],[85,15,137,24],[85,17,137,26],[85,18,137,27,"isNaN"],[85,23,137,32],[85,24,137,33,"args"],[85,28,137,37],[85,29,137,38],[85,32,137,41,"Number"],[85,38,137,47],[85,39,137,48,"args"],[85,43,137,52],[85,44,137,53],[85,47,137,56,"args"],[86,8,137,60],[86,9,137,61],[87,4,138,2],[88,2,139,0],[88,3,139,1],[89,2,269,0],[89,6,269,0,"_default"],[89,14,269,0],[89,17,269,15,"processTransform"],[89,33,269,31],[90,0,269,32],[90,3]],"functionMap":{"names":["<global>","processTransform","_getKeyAndValueFromCSSTransform","_validateTransforms","transform.forEach$argument_0","_validateTransform"],"mappings":"AAA;ACuB;CD0B;uEEK;CFoF;AGE;oBCC;GDgB;CHC;AKE;CL0G"},"hasCjsExports":false},"type":"js/module"}]}