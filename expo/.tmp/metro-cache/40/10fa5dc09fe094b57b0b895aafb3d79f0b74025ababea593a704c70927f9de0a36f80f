{"dependencies":[{"name":"expo-modules-core","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":1,"column":0,"index":0},"end":{"line":1,"column":45,"index":45}}],"key":"fU8WLIPqoAGygnPbZ/QJiQQfXEY=","exportNames":["*"],"imports":1}},{"name":"react-native","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":2,"column":0,"index":46},"end":{"line":2,"column":57,"index":103}}],"key":"KyzuX10g6ixS9UfynhmjlvCIG3g=","exportNames":["*"],"imports":1}},{"name":"./AssetSourceResolver","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":3,"column":0,"index":104},"end":{"line":3,"column":56,"index":160}}],"key":"1XREZLfiB40YsGJEOFyn6rrYKeQ=","exportNames":["*"],"imports":1}},{"name":"./PlatformUtils","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":4,"column":0,"index":161},"end":{"line":4,"column":64,"index":225}}],"key":"vk5TSZJTws6vRpll7frKCvmMWgw=","exportNames":["*"],"imports":1}}],"output":[{"data":{"code":"__d(function (global, require, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {\n  \"use strict\";\n\n  Object.defineProperty(exports, '__esModule', {\n    value: true\n  });\n  function _interopDefault(e) {\n    return e && e.__esModule ? e : {\n      default: e\n    };\n  }\n  exports.selectAssetSource = selectAssetSource;\n  exports.resolveUri = resolveUri;\n  require(_dependencyMap[0]);\n  var _reactNative = require(_dependencyMap[1]);\n  var _AssetSourceResolver = require(_dependencyMap[2]);\n  var AssetSourceResolver = _interopDefault(_AssetSourceResolver);\n  var _PlatformUtils = require(_dependencyMap[3]);\n  /**\n   * Selects the best file for the given asset (ex: choosing the best scale for images) and returns\n   * a { uri, hash } pair for the specific asset file.\n   *\n   * If the asset isn't an image with multiple scales, the first file is selected.\n   */\n  function selectAssetSource(meta) {\n    // This logic is based on that of AssetSourceResolver, with additional support for file hashes and\n    // explicitly provided URIs\n    var scale = AssetSourceResolver.default.pickScale(meta.scales, _reactNative.PixelRatio.get());\n    var index = meta.scales.findIndex(s => s === scale);\n    var hash = meta.fileHashes ? meta.fileHashes[index] ?? meta.fileHashes[0] : meta.hash;\n    // Allow asset processors to directly provide the URL to load\n    var uri = meta.fileUris ? meta.fileUris[index] ?? meta.fileUris[0] : meta.uri;\n    if (uri) {\n      return {\n        uri: resolveUri(uri),\n        hash\n      };\n    }\n    var fileScale = scale === 1 ? '' : `@${scale}x`;\n    var fileExtension = meta.type ? `.${encodeURIComponent(meta.type)}` : '';\n    var suffix = `/${encodeURIComponent(meta.name)}${fileScale}${fileExtension}`;\n    var params = new URLSearchParams({\n      platform: \"ios\",\n      hash: meta.hash\n    });\n    // For assets with a specified absolute URL, we use the existing origin instead of prepending the\n    // development server or production CDN URL origin\n    if (/^https?:\\/\\//.test(meta.httpServerLocation)) {\n      var _uri = meta.httpServerLocation + suffix + '?' + params;\n      return {\n        uri: _uri,\n        hash\n      };\n    }\n    // For assets during development using manifest2, we use the development server's URL origin\n    var manifest2 = (0, _PlatformUtils.getManifest2)();\n    var devServerUrl = manifest2?.extra?.expoGo?.developer ? 'http://' + manifest2.extra.expoGo.debuggerHost : null;\n    if (devServerUrl) {\n      var baseUrl = new URL(meta.httpServerLocation + suffix, devServerUrl);\n      baseUrl.searchParams.set('platform', \"ios\");\n      baseUrl.searchParams.set('hash', meta.hash);\n      return {\n        uri: baseUrl.href,\n        hash\n      };\n    }\n    // Temporary fallback for loading assets in Expo Go home\n    if (_reactNative.NativeModules['ExponentKernel']) {\n      return {\n        uri: `https://classic-assets.eascdn.net/~assets/${encodeURIComponent(hash)}`,\n        hash\n      };\n    }\n    // In correctly configured apps, we arrive here if the asset is locally available on disk due to\n    // being managed by expo-updates, and `getLocalAssetUri(hash)` must return a local URI for this\n    // hash. Since the asset is local, we don't have a remote URL and specify an invalid URL (an empty\n    // string) as a placeholder.\n    return {\n      uri: '',\n      hash\n    };\n  }\n  /**\n   * Resolves the given URI to an absolute URI. If the given URI is already an absolute URI, it is\n   * simply returned. Otherwise, if it is a relative URI, it is resolved relative to the manifest's\n   * base URI.\n   */\n  function resolveUri(uri) {\n    // `manifestBaseUrl` is always an absolute URL or `null`.\n    return _PlatformUtils.manifestBaseUrl ? new URL(uri, _PlatformUtils.manifestBaseUrl).href : uri;\n  }\n});","lineCount":92,"map":[[12,2,11,0,"exports"],[12,9,11,0],[12,10,11,0,"selectAssetSource"],[12,27,11,0],[12,30,11,0,"selectAssetSource"],[12,47,11,0],[13,2,64,0,"exports"],[13,9,64,0],[13,10,64,0,"resolveUri"],[13,20,64,0],[13,23,64,0,"resolveUri"],[13,33,64,0],[14,2,1,0,"require"],[14,9,1,0],[14,10,1,0,"_dependencyMap"],[14,24,1,0],[15,2,2,0],[15,6,2,0,"_reactNative"],[15,18,2,0],[15,21,2,0,"require"],[15,28,2,0],[15,29,2,0,"_dependencyMap"],[15,43,2,0],[16,2,3,0],[16,6,3,0,"_AssetSourceResolver"],[16,26,3,0],[16,29,3,0,"require"],[16,36,3,0],[16,37,3,0,"_dependencyMap"],[16,51,3,0],[17,2,3,0],[17,6,3,0,"AssetSourceResolver"],[17,25,3,0],[17,28,3,0,"_interopDefault"],[17,43,3,0],[17,44,3,0,"_AssetSourceResolver"],[17,64,3,0],[18,2,4,0],[18,6,4,0,"_PlatformUtils"],[18,20,4,0],[18,23,4,0,"require"],[18,30,4,0],[18,31,4,0,"_dependencyMap"],[18,45,4,0],[19,2,5,0],[20,0,6,0],[21,0,7,0],[22,0,8,0],[23,0,9,0],[24,0,10,0],[25,2,11,7],[25,11,11,16,"selectAssetSource"],[25,28,11,33,"selectAssetSource"],[25,29,11,34,"meta"],[25,33,11,38],[25,35,11,40],[26,4,12,4],[27,4,13,4],[28,4,14,4],[28,8,14,10,"scale"],[28,13,14,15],[28,16,14,18,"AssetSourceResolver"],[28,35,14,37],[28,36,14,37,"default"],[28,43,14,37],[28,44,14,38,"pickScale"],[28,53,14,47],[28,54,14,48,"meta"],[28,58,14,52],[28,59,14,53,"scales"],[28,65,14,59],[28,67,14,61,"PixelRatio"],[28,79,14,71],[28,80,14,71,"PixelRatio"],[28,90,14,71],[28,91,14,72,"get"],[28,94,14,75],[28,95,14,76],[28,96,14,77],[28,97,14,78],[29,4,15,4],[29,8,15,10,"index"],[29,13,15,15],[29,16,15,18,"meta"],[29,20,15,22],[29,21,15,23,"scales"],[29,27,15,29],[29,28,15,30,"findIndex"],[29,37,15,39],[29,38,15,41,"s"],[29,39,15,42],[29,43,15,47,"s"],[29,44,15,48],[29,49,15,53,"scale"],[29,54,15,58],[29,55,15,59],[30,4,16,4],[30,8,16,10,"hash"],[30,12,16,14],[30,15,16,17,"meta"],[30,19,16,21],[30,20,16,22,"fileHashes"],[30,30,16,32],[30,33,16,36,"meta"],[30,37,16,40],[30,38,16,41,"fileHashes"],[30,48,16,51],[30,49,16,52,"index"],[30,54,16,57],[30,55,16,58],[30,59,16,62,"meta"],[30,63,16,66],[30,64,16,67,"fileHashes"],[30,74,16,77],[30,75,16,78],[30,76,16,79],[30,77,16,80],[30,80,16,84,"meta"],[30,84,16,88],[30,85,16,89,"hash"],[30,89,16,93],[31,4,17,4],[32,4,18,4],[32,8,18,10,"uri"],[32,11,18,13],[32,14,18,16,"meta"],[32,18,18,20],[32,19,18,21,"fileUris"],[32,27,18,29],[32,30,18,33,"meta"],[32,34,18,37],[32,35,18,38,"fileUris"],[32,43,18,46],[32,44,18,47,"index"],[32,49,18,52],[32,50,18,53],[32,54,18,57,"meta"],[32,58,18,61],[32,59,18,62,"fileUris"],[32,67,18,70],[32,68,18,71],[32,69,18,72],[32,70,18,73],[32,73,18,77,"meta"],[32,77,18,81],[32,78,18,82,"uri"],[32,81,18,85],[33,4,19,4],[33,8,19,8,"uri"],[33,11,19,11],[33,13,19,13],[34,6,20,8],[34,13,20,15],[35,8,20,17,"uri"],[35,11,20,20],[35,13,20,22,"resolveUri"],[35,23,20,32],[35,24,20,33,"uri"],[35,27,20,36],[35,28,20,37],[36,8,20,39,"hash"],[37,6,20,44],[37,7,20,45],[38,4,21,4],[39,4,22,4],[39,8,22,10,"fileScale"],[39,17,22,19],[39,20,22,22,"scale"],[39,25,22,27],[39,30,22,32],[39,31,22,33],[39,34,22,36],[39,36,22,38],[39,39,22,41],[39,43,22,45,"scale"],[39,48,22,50],[39,51,22,53],[40,4,23,4],[40,8,23,10,"fileExtension"],[40,21,23,23],[40,24,23,26,"meta"],[40,28,23,30],[40,29,23,31,"type"],[40,33,23,35],[40,36,23,38],[40,40,23,42,"encodeURIComponent"],[40,58,23,60],[40,59,23,61,"meta"],[40,63,23,65],[40,64,23,66,"type"],[40,68,23,70],[40,69,23,71],[40,71,23,73],[40,74,23,76],[40,76,23,78],[41,4,24,4],[41,8,24,10,"suffix"],[41,14,24,16],[41,17,24,19],[41,21,24,23,"encodeURIComponent"],[41,39,24,41],[41,40,24,42,"meta"],[41,44,24,46],[41,45,24,47,"name"],[41,49,24,51],[41,50,24,52],[41,53,24,55,"fileScale"],[41,62,24,64],[41,65,24,67,"fileExtension"],[41,78,24,80],[41,80,24,82],[42,4,25,4],[42,8,25,10,"params"],[42,14,25,16],[42,17,25,19],[42,21,25,23,"URLSearchParams"],[42,36,25,38],[42,37,25,39],[43,6,26,8,"platform"],[43,14,26,16],[43,21,26,29],[44,6,27,8,"hash"],[44,10,27,12],[44,12,27,14,"meta"],[44,16,27,18],[44,17,27,19,"hash"],[45,4,28,4],[45,5,28,5],[45,6,28,6],[46,4,29,4],[47,4,30,4],[48,4,31,4],[48,8,31,8],[48,22,31,22],[48,23,31,23,"test"],[48,27,31,27],[48,28,31,28,"meta"],[48,32,31,32],[48,33,31,33,"httpServerLocation"],[48,51,31,51],[48,52,31,52],[48,54,31,54],[49,6,32,8],[49,10,32,14,"uri"],[49,14,32,17],[49,17,32,20,"meta"],[49,21,32,24],[49,22,32,25,"httpServerLocation"],[49,40,32,43],[49,43,32,46,"suffix"],[49,49,32,52],[49,52,32,55],[49,55,32,58],[49,58,32,61,"params"],[49,64,32,67],[50,6,33,8],[50,13,33,15],[51,8,33,17,"uri"],[51,11,33,20],[51,13,33,17,"uri"],[51,17,33,20],[52,8,33,22,"hash"],[53,6,33,27],[53,7,33,28],[54,4,34,4],[55,4,35,4],[56,4,36,4],[56,8,36,10,"manifest2"],[56,17,36,19],[56,20,36,22],[56,24,36,22,"getManifest2"],[56,38,36,34],[56,39,36,34,"getManifest2"],[56,51,36,34],[56,53,36,35],[56,54,36,36],[57,4,37,4],[57,8,37,10,"devServerUrl"],[57,20,37,22],[57,23,37,25,"manifest2"],[57,32,37,34],[57,34,37,36,"extra"],[57,39,37,41],[57,41,37,43,"expoGo"],[57,47,37,49],[57,49,37,51,"developer"],[57,58,37,60],[57,61,38,10],[57,70,38,19],[57,73,38,22,"manifest2"],[57,82,38,31],[57,83,38,32,"extra"],[57,88,38,37],[57,89,38,38,"expoGo"],[57,95,38,44],[57,96,38,45,"debuggerHost"],[57,108,38,57],[57,111,39,10],[57,115,39,14],[58,4,40,4],[58,8,40,8,"devServerUrl"],[58,20,40,20],[58,22,40,22],[59,6,41,8],[59,10,41,14,"baseUrl"],[59,17,41,21],[59,20,41,24],[59,24,41,28,"URL"],[59,27,41,31],[59,28,41,32,"meta"],[59,32,41,36],[59,33,41,37,"httpServerLocation"],[59,51,41,55],[59,54,41,58,"suffix"],[59,60,41,64],[59,62,41,66,"devServerUrl"],[59,74,41,78],[59,75,41,79],[60,6,42,8,"baseUrl"],[60,13,42,15],[60,14,42,16,"searchParams"],[60,26,42,28],[60,27,42,29,"set"],[60,30,42,32],[60,31,42,33],[60,41,42,43],[60,48,42,56],[60,49,42,57],[61,6,43,8,"baseUrl"],[61,13,43,15],[61,14,43,16,"searchParams"],[61,26,43,28],[61,27,43,29,"set"],[61,30,43,32],[61,31,43,33],[61,37,43,39],[61,39,43,41,"meta"],[61,43,43,45],[61,44,43,46,"hash"],[61,48,43,50],[61,49,43,51],[62,6,44,8],[62,13,44,15],[63,8,45,12,"uri"],[63,11,45,15],[63,13,45,17,"baseUrl"],[63,20,45,24],[63,21,45,25,"href"],[63,25,45,29],[64,8,46,12,"hash"],[65,6,47,8],[65,7,47,9],[66,4,48,4],[67,4,49,4],[68,4,50,4],[68,8,50,8,"NativeModules"],[68,20,50,21],[68,21,50,21,"NativeModules"],[68,34,50,21],[68,35,50,22],[68,51,50,38],[68,52,50,39],[68,54,50,41],[69,6,51,8],[69,13,51,15],[70,8,51,17,"uri"],[70,11,51,20],[70,13,51,22],[70,58,51,67,"encodeURIComponent"],[70,76,51,85],[70,77,51,86,"hash"],[70,81,51,90],[70,82,51,91],[70,84,51,93],[71,8,51,95,"hash"],[72,6,51,100],[72,7,51,101],[73,4,52,4],[74,4,53,4],[75,4,54,4],[76,4,55,4],[77,4,56,4],[78,4,57,4],[78,11,57,11],[79,6,57,13,"uri"],[79,9,57,16],[79,11,57,18],[79,13,57,20],[80,6,57,22,"hash"],[81,4,57,27],[81,5,57,28],[82,2,58,0],[83,2,59,0],[84,0,60,0],[85,0,61,0],[86,0,62,0],[87,0,63,0],[88,2,64,7],[88,11,64,16,"resolveUri"],[88,21,64,26,"resolveUri"],[88,22,64,27,"uri"],[88,25,64,30],[88,27,64,32],[89,4,65,4],[90,4,66,4],[90,11,66,11,"manifestBaseUrl"],[90,25,66,26],[90,26,66,26,"manifestBaseUrl"],[90,41,66,26],[90,44,66,29],[90,48,66,33,"URL"],[90,51,66,36],[90,52,66,37,"uri"],[90,55,66,40],[90,57,66,42,"manifestBaseUrl"],[90,71,66,57],[90,72,66,57,"manifestBaseUrl"],[90,87,66,57],[90,88,66,58],[90,89,66,59,"href"],[90,93,66,63],[90,96,66,66,"uri"],[90,99,66,69],[91,2,67,0],[92,0,67,1],[92,3]],"functionMap":{"names":["<global>","selectAssetSource","meta.scales.findIndex$argument_0","resolveUri"],"mappings":"AAA;OCU;wCCI,kBD;CD2C;OGM;CHG"},"hasCjsExports":false},"type":"js/module"}]}