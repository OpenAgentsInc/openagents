{"dependencies":[{"name":"./flingGesture","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":1,"column":0,"index":0},"end":{"line":1,"column":46,"index":46}}],"key":"h24ijk3pJCmeakiNLvaxhU4oD+0=","exportNames":["*"],"imports":1}},{"name":"./forceTouchGesture","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":2,"column":0,"index":47},"end":{"line":2,"column":56,"index":103}}],"key":"1QIx9s/Hb/tSlS4sC64N+Adyv7M=","exportNames":["*"],"imports":1}},{"name":"./gestureComposition","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":4,"column":0,"index":141},"end":{"line":8,"column":30,"index":242}}],"key":"J0ugy1LMUGf5KgbYvNV+9auzxk4=","exportNames":["*"],"imports":1}},{"name":"./longPressGesture","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":9,"column":0,"index":243},"end":{"line":9,"column":54,"index":297}}],"key":"1o89s2ZbLCAJzQNlPSeE8o2+cH8=","exportNames":["*"],"imports":1}},{"name":"./panGesture","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":10,"column":0,"index":298},"end":{"line":10,"column":42,"index":340}}],"key":"aBzYQKsfDy415OM5yEWHEC+JvOM=","exportNames":["*"],"imports":1}},{"name":"./pinchGesture","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":11,"column":0,"index":341},"end":{"line":11,"column":46,"index":387}}],"key":"Dpg/8aAltyIIC/a4wQAoQVMdkg4=","exportNames":["*"],"imports":1}},{"name":"./rotationGesture","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":12,"column":0,"index":388},"end":{"line":12,"column":52,"index":440}}],"key":"/7dx2ayCyD336a+OWcSLUeam5aE=","exportNames":["*"],"imports":1}},{"name":"./tapGesture","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":13,"column":0,"index":441},"end":{"line":13,"column":42,"index":483}}],"key":"0AhBYBLv6GsrGEF0r8aS4Nb6QGo=","exportNames":["*"],"imports":1}},{"name":"./nativeGesture","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":14,"column":0,"index":484},"end":{"line":14,"column":48,"index":532}}],"key":"cjDWt0y1Cq1VxsEGc4geilXmt0Q=","exportNames":["*"],"imports":1}},{"name":"./manualGesture","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":15,"column":0,"index":533},"end":{"line":15,"column":48,"index":581}}],"key":"HUWWiRL9QzXRRI3alfUEUrUAkqk=","exportNames":["*"],"imports":1}},{"name":"./hoverGesture","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":16,"column":0,"index":582},"end":{"line":16,"column":46,"index":628}}],"key":"+OU9Hr4DiheWQiFQL42cwzfCmfI=","exportNames":["*"],"imports":1}}],"output":[{"data":{"code":"__d(function (global, require, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {\n  \"use strict\";\n\n  Object.defineProperty(exports, '__esModule', {\n    value: true\n  });\n  Object.defineProperty(exports, \"GestureObjects\", {\n    enumerable: true,\n    get: function () {\n      return GestureObjects;\n    }\n  });\n  var _flingGesture = require(_dependencyMap[0]);\n  var _forceTouchGesture = require(_dependencyMap[1]);\n  var _gestureComposition = require(_dependencyMap[2]);\n  var _longPressGesture = require(_dependencyMap[3]);\n  var _panGesture = require(_dependencyMap[4]);\n  var _pinchGesture = require(_dependencyMap[5]);\n  var _rotationGesture = require(_dependencyMap[6]);\n  var _tapGesture = require(_dependencyMap[7]);\n  var _nativeGesture = require(_dependencyMap[8]);\n  var _manualGesture = require(_dependencyMap[9]);\n  var _hoverGesture = require(_dependencyMap[10]);\n  /**\n   * `Gesture` is the object that allows you to create and compose gestures.\n   *\n   * ### Remarks\n   * - Consider wrapping your gesture configurations with `useMemo`, as it will reduce the amount of work Gesture Handler has to do under the hood when updating gestures.\n   *\n   * @see https://docs.swmansion.com/react-native-gesture-handler/docs/gestures/gesture\n   */\n  var GestureObjects = {\n    /**\n     * A discrete gesture that recognizes one or many taps.\n     * @see https://docs.swmansion.com/react-native-gesture-handler/docs/gestures/tap-gesture\n     */\n    Tap: () => {\n      return new _tapGesture.TapGesture();\n    },\n    /**\n     * A continuous gesture that can recognize a panning (dragging) gesture and track its movement.\n     * @see https://docs.swmansion.com/react-native-gesture-handler/docs/gestures/pan-gesture\n     */\n    Pan: () => {\n      return new _panGesture.PanGesture();\n    },\n    /**\n     * A continuous gesture that recognizes pinch gesture. It allows for tracking the distance between two fingers and use that information to scale or zoom your content.\n     * @see https://docs.swmansion.com/react-native-gesture-handler/docs/gestures/pinch-gesture\n     */\n    Pinch: () => {\n      return new _pinchGesture.PinchGesture();\n    },\n    /**\n     * A continuous gesture that can recognize rotation and track its movement.\n     * @see https://docs.swmansion.com/react-native-gesture-handler/docs/gestures/rotation-gesture\n     */\n    Rotation: () => {\n      return new _rotationGesture.RotationGesture();\n    },\n    /**\n     * A discrete gesture that activates when the movement is sufficiently fast.\n     * @see https://docs.swmansion.com/react-native-gesture-handler/docs/gestures/fling-gesture\n     */\n    Fling: () => {\n      return new _flingGesture.FlingGesture();\n    },\n    /**\n     * A discrete gesture that activates when the corresponding view is pressed for a sufficiently long time.\n     * @see https://docs.swmansion.com/react-native-gesture-handler/docs/gestures/long-press-gesture\n     */\n    LongPress: () => {\n      return new _longPressGesture.LongPressGesture();\n    },\n    /**\n     * @deprecated ForceTouch gesture is deprecated and will be removed in the future.\n     *\n     *  #### iOS only\n     * A continuous gesture that recognizes force of a touch. It allows for tracking pressure of touch on some iOS devices.\n     * @see https://docs.swmansion.com/react-native-gesture-handler/docs/gestures/force-touch-gesture\n     */\n    ForceTouch: () => {\n      return new _forceTouchGesture.ForceTouchGesture();\n    },\n    /**\n     * A gesture that allows other touch handling components to participate in RNGH's gesture system.\n     * When used, the other component should be the direct child of a `GestureDetector`.\n     * @see https://docs.swmansion.com/react-native-gesture-handler/docs/gestures/native-gesture\n     */\n    Native: () => {\n      return new _nativeGesture.NativeGesture();\n    },\n    /**\n     * A plain gesture that has no specific activation criteria nor event data set.\n     * Its state has to be controlled manually using a state manager.\n     * It will not fail when all the pointers are lifted from the screen.\n     * @see https://docs.swmansion.com/react-native-gesture-handler/docs/gestures/manual-gesture\n     */\n    Manual: () => {\n      return new _manualGesture.ManualGesture();\n    },\n    /**\n     * A continuous gesture that can recognize hovering above the view it's attached to.\n     * The hover effect may be activated by moving a mouse or a stylus over the view.\n     *\n     * @see https://docs.swmansion.com/react-native-gesture-handler/docs/gestures/hover-gesture\n     */\n    Hover: () => {\n      return new _hoverGesture.HoverGesture();\n    },\n    /**\n     * Builds a composed gesture consisting of gestures provided as parameters.\n     * The first one that becomes active cancels the rest of gestures.\n     * @see https://docs.swmansion.com/react-native-gesture-handler/docs/fundamentals/gesture-composition/#race\n     */\n    Race: function () {\n      for (var _len = arguments.length, gestures = new Array(_len), _key = 0; _key < _len; _key++) {\n        gestures[_key] = arguments[_key];\n      }\n      return new _gestureComposition.ComposedGesture(...gestures);\n    },\n    /**\n     * Builds a composed gesture that allows all base gestures to run simultaneously.\n     * @see https://docs.swmansion.com/react-native-gesture-handler/docs/fundamentals/gesture-composition/#simultaneous\n     */\n    Simultaneous() {\n      for (var _len2 = arguments.length, gestures = new Array(_len2), _key2 = 0; _key2 < _len2; _key2++) {\n        gestures[_key2] = arguments[_key2];\n      }\n      return new _gestureComposition.SimultaneousGesture(...gestures);\n    },\n    /**\n     * Builds a composed gesture where only one of the provided gestures can become active.\n     * Priority is decided through the order of gestures: the first one has higher priority\n     * than the second one, second one has higher priority than the third one, and so on.\n     * For example, to make a gesture that recognizes both single and double tap you need\n     * to call Exclusive(doubleTap, singleTap).\n     * @see https://docs.swmansion.com/react-native-gesture-handler/docs/fundamentals/gesture-composition/#exclusive\n     */\n    Exclusive() {\n      for (var _len3 = arguments.length, gestures = new Array(_len3), _key3 = 0; _key3 < _len3; _key3++) {\n        gestures[_key3] = arguments[_key3];\n      }\n      return new _gestureComposition.ExclusiveGesture(...gestures);\n    }\n  };\n});","lineCount":147,"map":[[7,2,26,0,"Object"],[7,8,26,0],[7,9,26,0,"defineProperty"],[7,23,26,0],[7,24,26,0,"exports"],[7,31,26,0],[8,4,26,0,"enumerable"],[8,14,26,0],[9,4,26,0,"get"],[9,7,26,0],[9,18,26,0,"get"],[9,19,26,0],[10,6,26,0],[10,13,26,0,"GestureObjects"],[10,27,26,0],[11,4,26,0],[12,2,26,0],[13,2,1,0],[13,6,1,0,"_flingGesture"],[13,19,1,0],[13,22,1,0,"require"],[13,29,1,0],[13,30,1,0,"_dependencyMap"],[13,44,1,0],[14,2,2,0],[14,6,2,0,"_forceTouchGesture"],[14,24,2,0],[14,27,2,0,"require"],[14,34,2,0],[14,35,2,0,"_dependencyMap"],[14,49,2,0],[15,2,4,0],[15,6,4,0,"_gestureComposition"],[15,25,4,0],[15,28,4,0,"require"],[15,35,4,0],[15,36,4,0,"_dependencyMap"],[15,50,4,0],[16,2,9,0],[16,6,9,0,"_longPressGesture"],[16,23,9,0],[16,26,9,0,"require"],[16,33,9,0],[16,34,9,0,"_dependencyMap"],[16,48,9,0],[17,2,10,0],[17,6,10,0,"_panGesture"],[17,17,10,0],[17,20,10,0,"require"],[17,27,10,0],[17,28,10,0,"_dependencyMap"],[17,42,10,0],[18,2,11,0],[18,6,11,0,"_pinchGesture"],[18,19,11,0],[18,22,11,0,"require"],[18,29,11,0],[18,30,11,0,"_dependencyMap"],[18,44,11,0],[19,2,12,0],[19,6,12,0,"_rotationGesture"],[19,22,12,0],[19,25,12,0,"require"],[19,32,12,0],[19,33,12,0,"_dependencyMap"],[19,47,12,0],[20,2,13,0],[20,6,13,0,"_tapGesture"],[20,17,13,0],[20,20,13,0,"require"],[20,27,13,0],[20,28,13,0,"_dependencyMap"],[20,42,13,0],[21,2,14,0],[21,6,14,0,"_nativeGesture"],[21,20,14,0],[21,23,14,0,"require"],[21,30,14,0],[21,31,14,0,"_dependencyMap"],[21,45,14,0],[22,2,15,0],[22,6,15,0,"_manualGesture"],[22,20,15,0],[22,23,15,0,"require"],[22,30,15,0],[22,31,15,0,"_dependencyMap"],[22,45,15,0],[23,2,16,0],[23,6,16,0,"_hoverGesture"],[23,19,16,0],[23,22,16,0,"require"],[23,29,16,0],[23,30,16,0,"_dependencyMap"],[23,44,16,0],[24,2,18,0],[25,0,19,0],[26,0,20,0],[27,0,21,0],[28,0,22,0],[29,0,23,0],[30,0,24,0],[31,0,25,0],[32,2,26,7],[32,6,26,13,"GestureObjects"],[32,20,26,27],[32,23,26,30],[33,4,27,2],[34,0,28,0],[35,0,29,0],[36,0,30,0],[37,4,31,2,"Tap"],[37,7,31,5],[37,9,31,7,"Tap"],[37,10,31,7],[37,15,31,13],[38,6,32,4],[38,13,32,11],[38,17,32,15,"TapGesture"],[38,28,32,25],[38,29,32,25,"TapGesture"],[38,39,32,25],[38,40,32,26],[38,41,32,27],[39,4,33,2],[39,5,33,3],[40,4,35,2],[41,0,36,0],[42,0,37,0],[43,0,38,0],[44,4,39,2,"Pan"],[44,7,39,5],[44,9,39,7,"Pan"],[44,10,39,7],[44,15,39,13],[45,6,40,4],[45,13,40,11],[45,17,40,15,"PanGesture"],[45,28,40,25],[45,29,40,25,"PanGesture"],[45,39,40,25],[45,40,40,26],[45,41,40,27],[46,4,41,2],[46,5,41,3],[47,4,43,2],[48,0,44,0],[49,0,45,0],[50,0,46,0],[51,4,47,2,"Pinch"],[51,9,47,7],[51,11,47,9,"Pinch"],[51,12,47,9],[51,17,47,15],[52,6,48,4],[52,13,48,11],[52,17,48,15,"PinchGesture"],[52,30,48,27],[52,31,48,27,"PinchGesture"],[52,43,48,27],[52,44,48,28],[52,45,48,29],[53,4,49,2],[53,5,49,3],[54,4,51,2],[55,0,52,0],[56,0,53,0],[57,0,54,0],[58,4,55,2,"Rotation"],[58,12,55,10],[58,14,55,12,"Rotation"],[58,15,55,12],[58,20,55,18],[59,6,56,4],[59,13,56,11],[59,17,56,15,"RotationGesture"],[59,33,56,30],[59,34,56,30,"RotationGesture"],[59,49,56,30],[59,50,56,31],[59,51,56,32],[60,4,57,2],[60,5,57,3],[61,4,59,2],[62,0,60,0],[63,0,61,0],[64,0,62,0],[65,4,63,2,"Fling"],[65,9,63,7],[65,11,63,9,"Fling"],[65,12,63,9],[65,17,63,15],[66,6,64,4],[66,13,64,11],[66,17,64,15,"FlingGesture"],[66,30,64,27],[66,31,64,27,"FlingGesture"],[66,43,64,27],[66,44,64,28],[66,45,64,29],[67,4,65,2],[67,5,65,3],[68,4,67,2],[69,0,68,0],[70,0,69,0],[71,0,70,0],[72,4,71,2,"LongPress"],[72,13,71,11],[72,15,71,13,"LongPress"],[72,16,71,13],[72,21,71,19],[73,6,72,4],[73,13,72,11],[73,17,72,15,"LongPressGesture"],[73,34,72,31],[73,35,72,31,"LongPressGesture"],[73,51,72,31],[73,52,72,32],[73,53,72,33],[74,4,73,2],[74,5,73,3],[75,4,75,2],[76,0,76,0],[77,0,77,0],[78,0,78,0],[79,0,79,0],[80,0,80,0],[81,0,81,0],[82,4,82,2,"ForceTouch"],[82,14,82,12],[82,16,82,14,"ForceTouch"],[82,17,82,14],[82,22,82,20],[83,6,83,4],[83,13,83,11],[83,17,83,15,"ForceTouchGesture"],[83,35,83,32],[83,36,83,32,"ForceTouchGesture"],[83,53,83,32],[83,54,83,33],[83,55,83,34],[84,4,84,2],[84,5,84,3],[85,4,86,2],[86,0,87,0],[87,0,88,0],[88,0,89,0],[89,0,90,0],[90,4,91,2,"Native"],[90,10,91,8],[90,12,91,10,"Native"],[90,13,91,10],[90,18,91,16],[91,6,92,4],[91,13,92,11],[91,17,92,15,"NativeGesture"],[91,31,92,28],[91,32,92,28,"NativeGesture"],[91,45,92,28],[91,46,92,29],[91,47,92,30],[92,4,93,2],[92,5,93,3],[93,4,95,2],[94,0,96,0],[95,0,97,0],[96,0,98,0],[97,0,99,0],[98,0,100,0],[99,4,101,2,"Manual"],[99,10,101,8],[99,12,101,10,"Manual"],[99,13,101,10],[99,18,101,16],[100,6,102,4],[100,13,102,11],[100,17,102,15,"ManualGesture"],[100,31,102,28],[100,32,102,28,"ManualGesture"],[100,45,102,28],[100,46,102,29],[100,47,102,30],[101,4,103,2],[101,5,103,3],[102,4,105,2],[103,0,106,0],[104,0,107,0],[105,0,108,0],[106,0,109,0],[107,0,110,0],[108,4,111,2,"Hover"],[108,9,111,7],[108,11,111,9,"Hover"],[108,12,111,9],[108,17,111,15],[109,6,112,4],[109,13,112,11],[109,17,112,15,"HoverGesture"],[109,30,112,27],[109,31,112,27,"HoverGesture"],[109,43,112,27],[109,44,112,28],[109,45,112,29],[110,4,113,2],[110,5,113,3],[111,4,115,2],[112,0,116,0],[113,0,117,0],[114,0,118,0],[115,0,119,0],[116,4,120,2,"Race"],[116,8,120,6],[116,10,120,8],[116,19,120,8,"Race"],[116,20,120,8],[116,22,120,36],[117,6,120,36],[117,15,120,36,"_len"],[117,19,120,36],[117,22,120,36,"arguments"],[117,31,120,36],[117,32,120,36,"length"],[117,38,120,36],[117,40,120,12,"gestures"],[117,48,120,20],[117,55,120,20,"Array"],[117,60,120,20],[117,61,120,20,"_len"],[117,65,120,20],[117,68,120,20,"_key"],[117,72,120,20],[117,78,120,20,"_key"],[117,82,120,20],[117,85,120,20,"_len"],[117,89,120,20],[117,91,120,20,"_key"],[117,95,120,20],[118,8,120,12,"gestures"],[118,16,120,20],[118,17,120,20,"_key"],[118,21,120,20],[118,25,120,20,"arguments"],[118,34,120,20],[118,35,120,20,"_key"],[118,39,120,20],[119,6,120,20],[120,6,121,4],[120,13,121,11],[120,17,121,15,"ComposedGesture"],[120,36,121,30],[120,37,121,30,"ComposedGesture"],[120,52,121,30],[120,53,121,31],[120,56,121,34,"gestures"],[120,64,121,42],[120,65,121,43],[121,4,122,2],[121,5,122,3],[122,4,124,2],[123,0,125,0],[124,0,126,0],[125,0,127,0],[126,4,128,2,"Simultaneous"],[126,16,128,14,"Simultaneous"],[126,17,128,14],[126,19,128,39],[127,6,128,39],[127,15,128,39,"_len2"],[127,20,128,39],[127,23,128,39,"arguments"],[127,32,128,39],[127,33,128,39,"length"],[127,39,128,39],[127,41,128,18,"gestures"],[127,49,128,26],[127,56,128,26,"Array"],[127,61,128,26],[127,62,128,26,"_len2"],[127,67,128,26],[127,70,128,26,"_key2"],[127,75,128,26],[127,81,128,26,"_key2"],[127,86,128,26],[127,89,128,26,"_len2"],[127,94,128,26],[127,96,128,26,"_key2"],[127,101,128,26],[128,8,128,18,"gestures"],[128,16,128,26],[128,17,128,26,"_key2"],[128,22,128,26],[128,26,128,26,"arguments"],[128,35,128,26],[128,36,128,26,"_key2"],[128,41,128,26],[129,6,128,26],[130,6,129,4],[130,13,129,11],[130,17,129,15,"SimultaneousGesture"],[130,36,129,34],[130,37,129,34,"SimultaneousGesture"],[130,56,129,34],[130,57,129,35],[130,60,129,38,"gestures"],[130,68,129,46],[130,69,129,47],[131,4,130,2],[131,5,130,3],[132,4,132,2],[133,0,133,0],[134,0,134,0],[135,0,135,0],[136,0,136,0],[137,0,137,0],[138,0,138,0],[139,0,139,0],[140,4,140,2,"Exclusive"],[140,13,140,11,"Exclusive"],[140,14,140,11],[140,16,140,36],[141,6,140,36],[141,15,140,36,"_len3"],[141,20,140,36],[141,23,140,36,"arguments"],[141,32,140,36],[141,33,140,36,"length"],[141,39,140,36],[141,41,140,15,"gestures"],[141,49,140,23],[141,56,140,23,"Array"],[141,61,140,23],[141,62,140,23,"_len3"],[141,67,140,23],[141,70,140,23,"_key3"],[141,75,140,23],[141,81,140,23,"_key3"],[141,86,140,23],[141,89,140,23,"_len3"],[141,94,140,23],[141,96,140,23,"_key3"],[141,101,140,23],[142,8,140,15,"gestures"],[142,16,140,23],[142,17,140,23,"_key3"],[142,22,140,23],[142,26,140,23,"arguments"],[142,35,140,23],[142,36,140,23,"_key3"],[142,41,140,23],[143,6,140,23],[144,6,141,4],[144,13,141,11],[144,17,141,15,"ExclusiveGesture"],[144,36,141,31],[144,37,141,31,"ExclusiveGesture"],[144,53,141,31],[144,54,141,32],[144,57,141,35,"gestures"],[144,65,141,43],[144,66,141,44],[145,4,142,2],[146,2,143,0],[146,3,143,1],[147,0,143,2],[147,3]],"functionMap":{"names":["<global>","GestureObjects.Tap","GestureObjects.Pan","GestureObjects.Pinch","GestureObjects.Rotation","GestureObjects.Fling","GestureObjects.LongPress","GestureObjects.ForceTouch","GestureObjects.Native","GestureObjects.Manual","GestureObjects.Hover","GestureObjects.Race","GestureObjects.Simultaneous","GestureObjects.Exclusive"],"mappings":"AAA;OC8B;GDE;OEM;GFE;SGM;GHE;YIM;GJE;SKM;GLE;aMM;GNE;cOS;GPE;UQO;GRE;USQ;GTE;SUQ;GVE;QWO;GXE;EYM;GZE;EaU;GbE"},"hasCjsExports":false},"type":"js/module"}]}