{"dependencies":[{"name":"@babel/runtime/helpers/slicedToArray","data":{"asyncType":null,"isESMImport":false,"locs":[],"key":"5y7e5+zC7teYEEC6niD9f5zII1M=","exportNames":["*"],"imports":1}},{"name":"query-string","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":3,"column":0,"index":15},"end":{"line":3,"column":44,"index":59}}],"key":"Tk6zkk+/XfK89igjx1MNWAcG1Q8=","exportNames":["*"],"imports":1}},{"name":"./getPatternParts.js","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":4,"column":0,"index":60},"end":{"line":4,"column":55,"index":115}}],"key":"ZBgxhB8YmJlp1KxhfM5ocx9xUB0=","exportNames":["*"],"imports":1}},{"name":"./validatePathConfig.js","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":5,"column":0,"index":116},"end":{"line":5,"column":61,"index":177}}],"key":"zoUaUuxQP5qPvRrno+lraXgTGfI=","exportNames":["*"],"imports":1}}],"output":[{"data":{"code":"__d(function (global, require, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {\n  \"use strict\";\n\n  Object.defineProperty(exports, '__esModule', {\n    value: true\n  });\n  function _interopDefault(e) {\n    return e && e.__esModule ? e : {\n      default: e\n    };\n  }\n  function _interopNamespace(e) {\n    if (e && e.__esModule) return e;\n    var n = {};\n    if (e) Object.keys(e).forEach(function (k) {\n      var d = Object.getOwnPropertyDescriptor(e, k);\n      Object.defineProperty(n, k, d.get ? d : {\n        enumerable: true,\n        get: function () {\n          return e[k];\n        }\n      });\n    });\n    n.default = e;\n    return n;\n  }\n  exports.getPathFromState = getPathFromState;\n  var _babelRuntimeHelpersSlicedToArray = require(_dependencyMap[0]);\n  var _slicedToArray = _interopDefault(_babelRuntimeHelpersSlicedToArray);\n  var _queryString = require(_dependencyMap[1]);\n  var queryString = _interopNamespace(_queryString);\n  var _getPatternPartsJs = require(_dependencyMap[2]);\n  var _validatePathConfigJs = require(_dependencyMap[3]);\n  var getActiveRoute = state => {\n    var route = typeof state.index === 'number' ? state.routes[state.index] : state.routes[state.routes.length - 1];\n    if (route.state) {\n      return getActiveRoute(route.state);\n    }\n    return route;\n  };\n  var cachedNormalizedConfigs = new WeakMap();\n  var getNormalizedConfigs = options => {\n    if (!options?.screens) return {};\n    var cached = cachedNormalizedConfigs.get(options?.screens);\n    if (cached) return cached;\n    var normalizedConfigs = createNormalizedConfigs(options.screens);\n    cachedNormalizedConfigs.set(options.screens, normalizedConfigs);\n    return normalizedConfigs;\n  };\n\n  /**\n   * Utility to serialize a navigation state object to a path string.\n   *\n   * @example\n   * ```js\n   * getPathFromState(\n   *   {\n   *     routes: [\n   *       {\n   *         name: 'Chat',\n   *         params: { author: 'Jane', id: 42 },\n   *       },\n   *     ],\n   *   },\n   *   {\n   *     screens: {\n   *       Chat: {\n   *         path: 'chat/:author/:id',\n   *         stringify: { author: author => author.toLowerCase() }\n   *       }\n   *     }\n   *   }\n   * )\n   * ```\n   *\n   * @param state Navigation state to serialize.\n   * @param options Extra options to fine-tune how to serialize the path.\n   * @returns Path representing the state, e.g. /foo/bar?count=42.\n   */\n  function getPathFromState(state, options) {\n    if (state == null) {\n      throw Error(`Got '${String(state)}' for the navigation state. You must pass a valid state object.`);\n    }\n    if (options) {\n      (0, _validatePathConfigJs.validatePathConfig)(options);\n    }\n    var configs = getNormalizedConfigs(options);\n    var path = '/';\n    var current = state;\n    var allParams = {};\n    var _loop = function () {\n      var index = typeof current.index === 'number' ? current.index : 0;\n      var route = current.routes[index];\n      var parts;\n      var focusedParams;\n      var currentOptions = configs;\n      var focusedRoute = getActiveRoute(state);\n\n      // Keep all the route names that appeared during going deeper in config in case the pattern is resolved to undefined\n      var nestedRouteNames = [];\n      var hasNext = true;\n      var _loop2 = function () {\n        parts = currentOptions[route.name].parts;\n        nestedRouteNames.push(route.name);\n        if (route.params) {\n          var _options = currentOptions[route.name];\n          var currentParams = Object.fromEntries(Object.entries(route.params).map(_ref4 => {\n            var _ref5 = (0, _slicedToArray.default)(_ref4, 2),\n              key = _ref5[0],\n              value = _ref5[1];\n            if (value === undefined) {\n              if (_options) {\n                var optional = _options.parts?.find(part => part.param === key)?.optional;\n                if (optional) {\n                  return null;\n                }\n              } else {\n                return null;\n              }\n            }\n            var stringify = _options?.stringify?.[key] ?? String;\n            return [key, stringify(value)];\n          }).filter(entry => entry != null));\n          if (parts?.length) {\n            Object.assign(allParams, currentParams);\n          }\n          if (focusedRoute === route) {\n            // If this is the focused route, keep the params for later use\n            // We save it here since it's been stringified already\n            focusedParams = {\n              ...currentParams\n            };\n            parts\n            // eslint-disable-next-line no-loop-func\n            ?.forEach(_ref6 => {\n              var param = _ref6.param;\n              if (param) {\n                // Remove the params present in the pattern since we'll only use the rest for query string\n                if (focusedParams) {\n                  // eslint-disable-next-line @typescript-eslint/no-dynamic-delete\n                  delete focusedParams[param];\n                }\n              }\n            });\n          }\n        }\n\n        // If there is no `screens` property or no nested state, we return pattern\n        if (!currentOptions[route.name].screens || route.state === undefined) {\n          hasNext = false;\n        } else {\n          index = typeof route.state.index === 'number' ? route.state.index : route.state.routes.length - 1;\n          var nextRoute = route.state.routes[index];\n          var nestedConfig = currentOptions[route.name].screens;\n\n          // if there is config for next route name, we go deeper\n          if (nestedConfig && nextRoute.name in nestedConfig) {\n            route = nextRoute;\n            currentOptions = nestedConfig;\n          } else {\n            // If not, there is no sense in going deeper in config\n            hasNext = false;\n          }\n        }\n      };\n      while (route.name in currentOptions && hasNext) {\n        _loop2();\n      }\n      if (currentOptions[route.name] !== undefined) {\n        path += parts?.map(_ref => {\n          var segment = _ref.segment,\n            param = _ref.param,\n            optional = _ref.optional;\n          // We don't know what to show for wildcard patterns\n          // Showing the route name seems ok, though whatever we show here will be incorrect\n          // Since the page doesn't actually exist\n          if (segment === '*') {\n            return route.name;\n          }\n\n          // If the path has a pattern for a param, put the param in the path\n          if (param) {\n            var value = allParams[param];\n            if (value === undefined && optional) {\n              // Optional params without value assigned in route.params should be ignored\n              return '';\n            }\n\n            // Valid characters according to\n            // https://datatracker.ietf.org/doc/html/rfc3986#section-3.3 (see pchar definition)\n            return Array.from(String(value)).map(char => /[^A-Za-z0-9\\-._~!$&'()*+,;=:@]/g.test(char) ? encodeURIComponent(char) : char).join('');\n          }\n          return encodeURIComponent(segment);\n        }).join('/');\n      } else {\n        path += encodeURIComponent(route.name);\n      }\n      if (!focusedParams && focusedRoute.params) {\n        focusedParams = Object.fromEntries(Object.entries(focusedRoute.params).map(_ref2 => {\n          var _ref3 = (0, _slicedToArray.default)(_ref2, 2),\n            key = _ref3[0],\n            value = _ref3[1];\n          return [key, String(value)];\n        }));\n      }\n      if (route.state) {\n        path += '/';\n      } else if (focusedParams) {\n        for (var param in focusedParams) {\n          if (focusedParams[param] === 'undefined') {\n            // eslint-disable-next-line @typescript-eslint/no-dynamic-delete\n            delete focusedParams[param];\n          }\n        }\n        var query = queryString.stringify(focusedParams, {\n          sort: false\n        });\n        if (query) {\n          path += `?${query}`;\n        }\n      }\n      current = route.state;\n    };\n    while (current) {\n      _loop();\n    }\n\n    // Include the root path if specified\n    if (options?.path) {\n      path = `${options.path}/${path}`;\n    }\n\n    // Remove multiple as well as trailing slashes\n    path = path.replace(/\\/+/g, '/');\n    path = path.length > 1 ? path.replace(/\\/$/, '') : path;\n\n    // If path doesn't start with a slash, add it\n    // This makes sure that history.pushState will update the path correctly instead of appending\n    if (!path.startsWith('/')) {\n      path = `/${path}`;\n    }\n    return path;\n  }\n  var createConfigItem = (config, parentParts) => {\n    if (typeof config === 'string') {\n      // If a string is specified as the value of the key(e.g. Foo: '/path'), use it as the pattern\n      var _parts = (0, _getPatternPartsJs.getPatternParts)(config);\n      if (parentParts) {\n        return {\n          parts: [...parentParts, ..._parts]\n        };\n      }\n      return {\n        parts: _parts\n      };\n    }\n    if (config.exact && config.path === undefined) {\n      throw new Error(\"A 'path' needs to be specified when specifying 'exact: true'. If you don't want this screen in the URL, specify it as empty string, e.g. `path: ''`.\");\n    }\n\n    // If an object is specified as the value (e.g. Foo: { ... }),\n    // It can have `path` property and `screens` prop which has nested configs\n    var parts = config.exact !== true ? [...(parentParts || []), ...(config.path ? (0, _getPatternPartsJs.getPatternParts)(config.path) : [])] : config.path ? (0, _getPatternPartsJs.getPatternParts)(config.path) : undefined;\n    var screens = config.screens ? createNormalizedConfigs(config.screens, parts) : undefined;\n    return {\n      parts,\n      stringify: config.stringify,\n      screens\n    };\n  };\n  var createNormalizedConfigs = (options, parts) => Object.fromEntries(Object.entries(options).map(_ref7 => {\n    var _ref8 = (0, _slicedToArray.default)(_ref7, 2),\n      name = _ref8[0],\n      c = _ref8[1];\n    var result = createConfigItem(c, parts);\n    return [name, result];\n  }));\n});","lineCount":278,"map":[[2,2,1,0],[2,14,1,12],[4,2,1,13,"Object"],[4,8,1,13],[4,9,1,13,"defineProperty"],[4,23,1,13],[4,24,1,13,"exports"],[4,31,1,13],[5,4,1,13,"value"],[5,9,1,13],[6,2,1,13],[7,2,1,13],[7,11,1,13,"_interopDefault"],[7,27,1,13,"e"],[7,28,1,13],[8,4,1,13],[8,11,1,13,"e"],[8,12,1,13],[8,16,1,13,"e"],[8,17,1,13],[8,18,1,13,"__esModule"],[8,28,1,13],[8,31,1,13,"e"],[8,32,1,13],[9,6,1,13,"default"],[9,13,1,13],[9,15,1,13,"e"],[10,4,1,13],[11,2,1,13],[12,2,1,13],[12,11,1,13,"_interopNamespace"],[12,29,1,13,"e"],[12,30,1,13],[13,4,1,13],[13,8,1,13,"e"],[13,9,1,13],[13,13,1,13,"e"],[13,14,1,13],[13,15,1,13,"__esModule"],[13,25,1,13],[13,34,1,13,"e"],[13,35,1,13],[14,4,1,13],[14,8,1,13,"n"],[14,9,1,13],[15,4,1,13],[15,8,1,13,"e"],[15,9,1,13],[15,11,1,13,"Object"],[15,17,1,13],[15,18,1,13,"keys"],[15,22,1,13],[15,23,1,13,"e"],[15,24,1,13],[15,26,1,13,"forEach"],[15,33,1,13],[15,44,1,13,"k"],[15,45,1,13],[16,6,1,13],[16,10,1,13,"d"],[16,11,1,13],[16,14,1,13,"Object"],[16,20,1,13],[16,21,1,13,"getOwnPropertyDescriptor"],[16,45,1,13],[16,46,1,13,"e"],[16,47,1,13],[16,49,1,13,"k"],[16,50,1,13],[17,6,1,13,"Object"],[17,12,1,13],[17,13,1,13,"defineProperty"],[17,27,1,13],[17,28,1,13,"n"],[17,29,1,13],[17,31,1,13,"k"],[17,32,1,13],[17,34,1,13,"d"],[17,35,1,13],[17,36,1,13,"get"],[17,39,1,13],[17,42,1,13,"d"],[17,43,1,13],[18,8,1,13,"enumerable"],[18,18,1,13],[19,8,1,13,"get"],[19,11,1,13],[19,22,1,13,"get"],[19,23,1,13],[20,10,1,13],[20,17,1,13,"e"],[20,18,1,13],[20,19,1,13,"k"],[20,20,1,13],[21,8,1,13],[22,6,1,13],[23,4,1,13],[24,4,1,13,"n"],[24,5,1,13],[24,6,1,13,"default"],[24,13,1,13],[24,16,1,13,"e"],[24,17,1,13],[25,4,1,13],[25,11,1,13,"n"],[25,12,1,13],[26,2,1,13],[27,2,52,0,"exports"],[27,9,52,0],[27,10,52,0,"getPathFromState"],[27,26,52,0],[27,29,52,0,"getPathFromState"],[27,45,52,0],[28,2,203,1],[28,6,203,1,"_babelRuntimeHelpersSlicedToArray"],[28,39,203,1],[28,42,203,1,"require"],[28,49,203,1],[28,50,203,1,"_dependencyMap"],[28,64,203,1],[29,2,203,1],[29,6,203,1,"_slicedToArray"],[29,20,203,1],[29,23,203,1,"_interopDefault"],[29,38,203,1],[29,39,203,1,"_babelRuntimeHelpersSlicedToArray"],[29,72,203,1],[30,2,3,0],[30,6,3,0,"_queryString"],[30,18,3,0],[30,21,3,0,"require"],[30,28,3,0],[30,29,3,0,"_dependencyMap"],[30,43,3,0],[31,2,3,0],[31,6,3,0,"queryString"],[31,17,3,0],[31,20,3,0,"_interopNamespace"],[31,37,3,0],[31,38,3,0,"_queryString"],[31,50,3,0],[32,2,4,0],[32,6,4,0,"_getPatternPartsJs"],[32,24,4,0],[32,27,4,0,"require"],[32,34,4,0],[32,35,4,0,"_dependencyMap"],[32,49,4,0],[33,2,5,0],[33,6,5,0,"_validatePathConfigJs"],[33,27,5,0],[33,30,5,0,"require"],[33,37,5,0],[33,38,5,0,"_dependencyMap"],[33,52,5,0],[34,2,6,0],[34,6,6,6,"getActiveRoute"],[34,20,6,20],[34,23,6,23,"state"],[34,28,6,28],[34,32,6,32],[35,4,7,2],[35,8,7,8,"route"],[35,13,7,13],[35,16,7,16],[35,23,7,23,"state"],[35,28,7,28],[35,29,7,29,"index"],[35,34,7,34],[35,39,7,39],[35,47,7,47],[35,50,7,50,"state"],[35,55,7,55],[35,56,7,56,"routes"],[35,62,7,62],[35,63,7,63,"state"],[35,68,7,68],[35,69,7,69,"index"],[35,74,7,74],[35,75,7,75],[35,78,7,78,"state"],[35,83,7,83],[35,84,7,84,"routes"],[35,90,7,90],[35,91,7,91,"state"],[35,96,7,96],[35,97,7,97,"routes"],[35,103,7,103],[35,104,7,104,"length"],[35,110,7,110],[35,113,7,113],[35,114,7,114],[35,115,7,115],[36,4,8,2],[36,8,8,6,"route"],[36,13,8,11],[36,14,8,12,"state"],[36,19,8,17],[36,21,8,19],[37,6,9,4],[37,13,9,11,"getActiveRoute"],[37,27,9,25],[37,28,9,26,"route"],[37,33,9,31],[37,34,9,32,"state"],[37,39,9,37],[37,40,9,38],[38,4,10,2],[39,4,11,2],[39,11,11,9,"route"],[39,16,11,14],[40,2,12,0],[40,3,12,1],[41,2,13,0],[41,6,13,6,"cachedNormalizedConfigs"],[41,29,13,29],[41,32,13,32],[41,36,13,36,"WeakMap"],[41,43,13,43],[41,44,13,44],[41,45,13,45],[42,2,14,0],[42,6,14,6,"getNormalizedConfigs"],[42,26,14,26],[42,29,14,29,"options"],[42,36,14,36],[42,40,14,40],[43,4,15,2],[43,8,15,6],[43,9,15,7,"options"],[43,16,15,14],[43,18,15,16,"screens"],[43,25,15,23],[43,27,15,25],[43,34,15,32],[43,35,15,33],[43,36,15,34],[44,4,16,2],[44,8,16,8,"cached"],[44,14,16,14],[44,17,16,17,"cachedNormalizedConfigs"],[44,40,16,40],[44,41,16,41,"get"],[44,44,16,44],[44,45,16,45,"options"],[44,52,16,52],[44,54,16,54,"screens"],[44,61,16,61],[44,62,16,62],[45,4,17,2],[45,8,17,6,"cached"],[45,14,17,12],[45,16,17,14],[45,23,17,21,"cached"],[45,29,17,27],[46,4,18,2],[46,8,18,8,"normalizedConfigs"],[46,25,18,25],[46,28,18,28,"createNormalizedConfigs"],[46,51,18,51],[46,52,18,52,"options"],[46,59,18,59],[46,60,18,60,"screens"],[46,67,18,67],[46,68,18,68],[47,4,19,2,"cachedNormalizedConfigs"],[47,27,19,25],[47,28,19,26,"set"],[47,31,19,29],[47,32,19,30,"options"],[47,39,19,37],[47,40,19,38,"screens"],[47,47,19,45],[47,49,19,47,"normalizedConfigs"],[47,66,19,64],[47,67,19,65],[48,4,20,2],[48,11,20,9,"normalizedConfigs"],[48,28,20,26],[49,2,21,0],[49,3,21,1],[51,2,23,0],[52,0,24,0],[53,0,25,0],[54,0,26,0],[55,0,27,0],[56,0,28,0],[57,0,29,0],[58,0,30,0],[59,0,31,0],[60,0,32,0],[61,0,33,0],[62,0,34,0],[63,0,35,0],[64,0,36,0],[65,0,37,0],[66,0,38,0],[67,0,39,0],[68,0,40,0],[69,0,41,0],[70,0,42,0],[71,0,43,0],[72,0,44,0],[73,0,45,0],[74,0,46,0],[75,0,47,0],[76,0,48,0],[77,0,49,0],[78,0,50,0],[79,0,51,0],[80,2,52,7],[80,11,52,16,"getPathFromState"],[80,27,52,32,"getPathFromState"],[80,28,52,33,"state"],[80,33,52,38],[80,35,52,40,"options"],[80,42,52,47],[80,44,52,49],[81,4,53,2],[81,8,53,6,"state"],[81,13,53,11],[81,17,53,15],[81,21,53,19],[81,23,53,21],[82,6,54,4],[82,12,54,10,"Error"],[82,17,54,15],[82,18,54,16],[82,26,54,24,"String"],[82,32,54,30],[82,33,54,31,"state"],[82,38,54,36],[82,39,54,37],[82,104,54,102],[82,105,54,103],[83,4,55,2],[84,4,56,2],[84,8,56,6,"options"],[84,15,56,13],[84,17,56,15],[85,6,57,4],[85,10,57,4,"validatePathConfig"],[85,31,57,22],[85,32,57,22,"validatePathConfig"],[85,50,57,22],[85,52,57,23,"options"],[85,59,57,30],[85,60,57,31],[86,4,58,2],[87,4,59,2],[87,8,59,8,"configs"],[87,15,59,15],[87,18,59,18,"getNormalizedConfigs"],[87,38,59,38],[87,39,59,39,"options"],[87,46,59,46],[87,47,59,47],[88,4,60,2],[88,8,60,6,"path"],[88,12,60,10],[88,15,60,13],[88,18,60,16],[89,4,61,2],[89,8,61,6,"current"],[89,15,61,13],[89,18,61,16,"state"],[89,23,61,21],[90,4,62,2],[90,8,62,8,"allParams"],[90,17,62,17],[90,20,62,20],[90,21,62,21],[90,22,62,22],[91,4,62,23],[91,8,62,23,"_loop"],[91,13,62,23],[91,25,62,23,"_loop"],[91,26,62,23],[91,28,63,18],[92,6,64,4],[92,10,64,8,"index"],[92,15,64,13],[92,18,64,16],[92,25,64,23,"current"],[92,32,64,30],[92,33,64,31,"index"],[92,38,64,36],[92,43,64,41],[92,51,64,49],[92,54,64,52,"current"],[92,61,64,59],[92,62,64,60,"index"],[92,67,64,65],[92,70,64,68],[92,71,64,69],[93,6,65,4],[93,10,65,8,"route"],[93,15,65,13],[93,18,65,16,"current"],[93,25,65,23],[93,26,65,24,"routes"],[93,32,65,30],[93,33,65,31,"index"],[93,38,65,36],[93,39,65,37],[94,6,66,4],[94,10,66,8,"parts"],[94,15,66,13],[95,6,67,4],[95,10,67,8,"focusedParams"],[95,23,67,21],[96,6,68,4],[96,10,68,8,"currentOptions"],[96,24,68,22],[96,27,68,25,"configs"],[96,34,68,32],[97,6,69,4],[97,10,69,10,"focusedRoute"],[97,22,69,22],[97,25,69,25,"getActiveRoute"],[97,39,69,39],[97,40,69,40,"state"],[97,45,69,45],[97,46,69,46],[99,6,71,4],[100,6,72,4],[100,10,72,10,"nestedRouteNames"],[100,26,72,26],[100,29,72,29],[100,31,72,31],[101,6,73,4],[101,10,73,8,"hasNext"],[101,17,73,15],[101,20,73,18],[101,24,73,22],[102,6,73,23],[102,10,73,23,"_loop2"],[102,16,73,23],[102,28,73,23,"_loop2"],[102,29,73,23],[102,31,74,52],[103,8,75,6,"parts"],[103,13,75,11],[103,16,75,14,"currentOptions"],[103,30,75,28],[103,31,75,29,"route"],[103,36,75,34],[103,37,75,35,"name"],[103,41,75,39],[103,42,75,40],[103,43,75,41,"parts"],[103,48,75,46],[104,8,76,6,"nestedRouteNames"],[104,24,76,22],[104,25,76,23,"push"],[104,29,76,27],[104,30,76,28,"route"],[104,35,76,33],[104,36,76,34,"name"],[104,40,76,38],[104,41,76,39],[105,8,77,6],[105,12,77,10,"route"],[105,17,77,15],[105,18,77,16,"params"],[105,24,77,22],[105,26,77,24],[106,10,78,8],[106,14,78,14,"options"],[106,22,78,21],[106,25,78,24,"currentOptions"],[106,39,78,38],[106,40,78,39,"route"],[106,45,78,44],[106,46,78,45,"name"],[106,50,78,49],[106,51,78,50],[107,10,79,8],[107,14,79,14,"currentParams"],[107,27,79,27],[107,30,79,30,"Object"],[107,36,79,36],[107,37,79,37,"fromEntries"],[107,48,79,48],[107,49,79,49,"Object"],[107,55,79,55],[107,56,79,56,"entries"],[107,63,79,63],[107,64,79,64,"route"],[107,69,79,69],[107,70,79,70,"params"],[107,76,79,76],[107,77,79,77],[107,78,79,78,"map"],[107,81,79,81],[107,82,79,82,"_ref4"],[107,87,79,82],[107,91,79,100],[108,12,79,100],[108,16,79,100,"_ref5"],[108,21,79,100],[108,28,79,100,"_slicedToArray"],[108,42,79,100],[108,43,79,100,"default"],[108,50,79,100],[108,52,79,100,"_ref4"],[108,57,79,100],[109,14,79,84,"key"],[109,17,79,87],[109,20,79,87,"_ref5"],[109,25,79,87],[110,14,79,89,"value"],[110,19,79,94],[110,22,79,94,"_ref5"],[110,27,79,94],[111,12,80,10],[111,16,80,14,"value"],[111,21,80,19],[111,26,80,24,"undefined"],[111,35,80,33],[111,37,80,35],[112,14,81,12],[112,18,81,16,"options"],[112,26,81,23],[112,28,81,25],[113,16,82,14],[113,20,82,20,"optional"],[113,28,82,28],[113,31,82,31,"options"],[113,39,82,38],[113,40,82,39,"parts"],[113,45,82,44],[113,47,82,46,"find"],[113,51,82,50],[113,52,82,51,"part"],[113,56,82,55],[113,60,82,59,"part"],[113,64,82,63],[113,65,82,64,"param"],[113,70,82,69],[113,75,82,74,"key"],[113,78,82,77],[113,79,82,78],[113,81,82,80,"optional"],[113,89,82,88],[114,16,83,14],[114,20,83,18,"optional"],[114,28,83,26],[114,30,83,28],[115,18,84,16],[115,25,84,23],[115,29,84,27],[116,16,85,14],[117,14,86,12],[117,15,86,13],[117,21,86,19],[118,16,87,14],[118,23,87,21],[118,27,87,25],[119,14,88,12],[120,12,89,10],[121,12,90,10],[121,16,90,16,"stringify"],[121,25,90,25],[121,28,90,28,"options"],[121,36,90,35],[121,38,90,37,"stringify"],[121,47,90,46],[121,50,90,49,"key"],[121,53,90,52],[121,54,90,53],[121,58,90,57,"String"],[121,64,90,63],[122,12,91,10],[122,19,91,17],[122,20,91,18,"key"],[122,23,91,21],[122,25,91,23,"stringify"],[122,34,91,32],[122,35,91,33,"value"],[122,40,91,38],[122,41,91,39],[122,42,91,40],[123,10,92,8],[123,11,92,9],[123,12,92,10],[123,13,92,11,"filter"],[123,19,92,17],[123,20,92,18,"entry"],[123,25,92,23],[123,29,92,27,"entry"],[123,34,92,32],[123,38,92,36],[123,42,92,40],[123,43,92,41],[123,44,92,42],[124,10,93,8],[124,14,93,12,"parts"],[124,19,93,17],[124,21,93,19,"length"],[124,27,93,25],[124,29,93,27],[125,12,94,10,"Object"],[125,18,94,16],[125,19,94,17,"assign"],[125,25,94,23],[125,26,94,24,"allParams"],[125,35,94,33],[125,37,94,35,"currentParams"],[125,50,94,48],[125,51,94,49],[126,10,95,8],[127,10,96,8],[127,14,96,12,"focusedRoute"],[127,26,96,24],[127,31,96,29,"route"],[127,36,96,34],[127,38,96,36],[128,12,97,10],[129,12,98,10],[130,12,99,10,"focusedParams"],[130,25,99,23],[130,28,99,26],[131,14,100,12],[131,17,100,15,"currentParams"],[132,12,101,10],[132,13,101,11],[133,12,102,10,"parts"],[134,12,103,10],[135,12,103,10],[135,14,104,12,"forEach"],[135,21,104,19],[135,22,104,20,"_ref6"],[135,27,104,20],[135,31,106,16],[136,14,106,16],[136,18,105,12,"param"],[136,23,105,17],[136,26,105,17,"_ref6"],[136,31,105,17],[136,32,105,12,"param"],[136,37,105,17],[137,14,107,12],[137,18,107,16,"param"],[137,23,107,21],[137,25,107,23],[138,16,108,14],[139,16,109,14],[139,20,109,18,"focusedParams"],[139,33,109,31],[139,35,109,33],[140,18,110,16],[141,18,111,16],[141,25,111,23,"focusedParams"],[141,38,111,36],[141,39,111,37,"param"],[141,44,111,42],[141,45,111,43],[142,16,112,14],[143,14,113,12],[144,12,114,10],[144,13,114,11],[144,14,114,12],[145,10,115,8],[146,8,116,6],[148,8,118,6],[149,8,119,6],[149,12,119,10],[149,13,119,11,"currentOptions"],[149,27,119,25],[149,28,119,26,"route"],[149,33,119,31],[149,34,119,32,"name"],[149,38,119,36],[149,39,119,37],[149,40,119,38,"screens"],[149,47,119,45],[149,51,119,49,"route"],[149,56,119,54],[149,57,119,55,"state"],[149,62,119,60],[149,67,119,65,"undefined"],[149,76,119,74],[149,78,119,76],[150,10,120,8,"hasNext"],[150,17,120,15],[150,20,120,18],[150,25,120,23],[151,8,121,6],[151,9,121,7],[151,15,121,13],[152,10,122,8,"index"],[152,15,122,13],[152,18,122,16],[152,25,122,23,"route"],[152,30,122,28],[152,31,122,29,"state"],[152,36,122,34],[152,37,122,35,"index"],[152,42,122,40],[152,47,122,45],[152,55,122,53],[152,58,122,56,"route"],[152,63,122,61],[152,64,122,62,"state"],[152,69,122,67],[152,70,122,68,"index"],[152,75,122,73],[152,78,122,76,"route"],[152,83,122,81],[152,84,122,82,"state"],[152,89,122,87],[152,90,122,88,"routes"],[152,96,122,94],[152,97,122,95,"length"],[152,103,122,101],[152,106,122,104],[152,107,122,105],[153,10,123,8],[153,14,123,14,"nextRoute"],[153,23,123,23],[153,26,123,26,"route"],[153,31,123,31],[153,32,123,32,"state"],[153,37,123,37],[153,38,123,38,"routes"],[153,44,123,44],[153,45,123,45,"index"],[153,50,123,50],[153,51,123,51],[154,10,124,8],[154,14,124,14,"nestedConfig"],[154,26,124,26],[154,29,124,29,"currentOptions"],[154,43,124,43],[154,44,124,44,"route"],[154,49,124,49],[154,50,124,50,"name"],[154,54,124,54],[154,55,124,55],[154,56,124,56,"screens"],[154,63,124,63],[156,10,126,8],[157,10,127,8],[157,14,127,12,"nestedConfig"],[157,26,127,24],[157,30,127,28,"nextRoute"],[157,39,127,37],[157,40,127,38,"name"],[157,44,127,42],[157,48,127,46,"nestedConfig"],[157,60,127,58],[157,62,127,60],[158,12,128,10,"route"],[158,17,128,15],[158,20,128,18,"nextRoute"],[158,29,128,27],[159,12,129,10,"currentOptions"],[159,26,129,24],[159,29,129,27,"nestedConfig"],[159,41,129,39],[160,10,130,8],[160,11,130,9],[160,17,130,15],[161,12,131,10],[162,12,132,10,"hasNext"],[162,19,132,17],[162,22,132,20],[162,27,132,25],[163,10,133,8],[164,8,134,6],[165,6,135,4],[165,7,135,5],[166,6,74,4],[166,13,74,11,"route"],[166,18,74,16],[166,19,74,17,"name"],[166,23,74,21],[166,27,74,25,"currentOptions"],[166,41,74,39],[166,45,74,43,"hasNext"],[166,52,74,50],[167,8,74,50,"_loop2"],[167,14,74,50],[168,6,74,50],[169,6,136,4],[169,10,136,8,"currentOptions"],[169,24,136,22],[169,25,136,23,"route"],[169,30,136,28],[169,31,136,29,"name"],[169,35,136,33],[169,36,136,34],[169,41,136,39,"undefined"],[169,50,136,48],[169,52,136,50],[170,8,137,6,"path"],[170,12,137,10],[170,16,137,14,"parts"],[170,21,137,19],[170,23,137,21,"map"],[170,26,137,24],[170,27,137,25,"_ref"],[170,31,137,25],[170,35,141,12],[171,10,141,12],[171,14,138,8,"segment"],[171,21,138,15],[171,24,138,15,"_ref"],[171,28,138,15],[171,29,138,8,"segment"],[171,36,138,15],[172,12,139,8,"param"],[172,17,139,13],[172,20,139,13,"_ref"],[172,24,139,13],[172,25,139,8,"param"],[172,30,139,13],[173,12,140,8,"optional"],[173,20,140,16],[173,23,140,16,"_ref"],[173,27,140,16],[173,28,140,8,"optional"],[173,36,140,16],[174,10,142,8],[175,10,143,8],[176,10,144,8],[177,10,145,8],[177,14,145,12,"segment"],[177,21,145,19],[177,26,145,24],[177,29,145,27],[177,31,145,29],[178,12,146,10],[178,19,146,17,"route"],[178,24,146,22],[178,25,146,23,"name"],[178,29,146,27],[179,10,147,8],[181,10,149,8],[182,10,150,8],[182,14,150,12,"param"],[182,19,150,17],[182,21,150,19],[183,12,151,10],[183,16,151,16,"value"],[183,21,151,21],[183,24,151,24,"allParams"],[183,33,151,33],[183,34,151,34,"param"],[183,39,151,39],[183,40,151,40],[184,12,152,10],[184,16,152,14,"value"],[184,21,152,19],[184,26,152,24,"undefined"],[184,35,152,33],[184,39,152,37,"optional"],[184,47,152,45],[184,49,152,47],[185,14,153,12],[186,14,154,12],[186,21,154,19],[186,23,154,21],[187,12,155,10],[189,12,157,10],[190,12,158,10],[191,12,159,10],[191,19,159,17,"Array"],[191,24,159,22],[191,25,159,23,"from"],[191,29,159,27],[191,30,159,28,"String"],[191,36,159,34],[191,37,159,35,"value"],[191,42,159,40],[191,43,159,41],[191,44,159,42],[191,45,159,43,"map"],[191,48,159,46],[191,49,159,47,"char"],[191,53,159,51],[191,57,159,55],[191,90,159,88],[191,91,159,89,"test"],[191,95,159,93],[191,96,159,94,"char"],[191,100,159,98],[191,101,159,99],[191,104,159,102,"encodeURIComponent"],[191,122,159,120],[191,123,159,121,"char"],[191,127,159,125],[191,128,159,126],[191,131,159,129,"char"],[191,135,159,133],[191,136,159,134],[191,137,159,135,"join"],[191,141,159,139],[191,142,159,140],[191,144,159,142],[191,145,159,143],[192,10,160,8],[193,10,161,8],[193,17,161,15,"encodeURIComponent"],[193,35,161,33],[193,36,161,34,"segment"],[193,43,161,41],[193,44,161,42],[194,8,162,6],[194,9,162,7],[194,10,162,8],[194,11,162,9,"join"],[194,15,162,13],[194,16,162,14],[194,19,162,17],[194,20,162,18],[195,6,163,4],[195,7,163,5],[195,13,163,11],[196,8,164,6,"path"],[196,12,164,10],[196,16,164,14,"encodeURIComponent"],[196,34,164,32],[196,35,164,33,"route"],[196,40,164,38],[196,41,164,39,"name"],[196,45,164,43],[196,46,164,44],[197,6,165,4],[198,6,166,4],[198,10,166,8],[198,11,166,9,"focusedParams"],[198,24,166,22],[198,28,166,26,"focusedRoute"],[198,40,166,38],[198,41,166,39,"params"],[198,47,166,45],[198,49,166,47],[199,8,167,6,"focusedParams"],[199,21,167,19],[199,24,167,22,"Object"],[199,30,167,28],[199,31,167,29,"fromEntries"],[199,42,167,40],[199,43,167,41,"Object"],[199,49,167,47],[199,50,167,48,"entries"],[199,57,167,55],[199,58,167,56,"focusedRoute"],[199,70,167,68],[199,71,167,69,"params"],[199,77,167,75],[199,78,167,76],[199,79,167,77,"map"],[199,82,167,80],[199,83,167,81,"_ref2"],[199,88,167,81],[200,10,167,81],[200,14,167,81,"_ref3"],[200,19,167,81],[200,26,167,81,"_slicedToArray"],[200,40,167,81],[200,41,167,81,"default"],[200,48,167,81],[200,50,167,81,"_ref2"],[200,55,167,81],[201,12,167,83,"key"],[201,15,167,86],[201,18,167,86,"_ref3"],[201,23,167,86],[202,12,167,88,"value"],[202,17,167,93],[202,20,167,93,"_ref3"],[202,25,167,93],[203,10,167,93],[203,17,167,99],[203,18,167,100,"key"],[203,21,167,103],[203,23,167,105,"String"],[203,29,167,111],[203,30,167,112,"value"],[203,35,167,117],[203,36,167,118],[203,37,167,119],[204,8,167,119],[204,10,167,120],[204,11,167,121],[205,6,168,4],[206,6,169,4],[206,10,169,8,"route"],[206,15,169,13],[206,16,169,14,"state"],[206,21,169,19],[206,23,169,21],[207,8,170,6,"path"],[207,12,170,10],[207,16,170,14],[207,19,170,17],[208,6,171,4],[208,7,171,5],[208,13,171,11],[208,17,171,15,"focusedParams"],[208,30,171,28],[208,32,171,30],[209,8,172,6],[209,13,172,11],[209,17,172,17,"param"],[209,22,172,22],[209,26,172,26,"focusedParams"],[209,39,172,39],[209,41,172,41],[210,10,173,8],[210,14,173,12,"focusedParams"],[210,27,173,25],[210,28,173,26,"param"],[210,33,173,31],[210,34,173,32],[210,39,173,37],[210,50,173,48],[210,52,173,50],[211,12,174,10],[212,12,175,10],[212,19,175,17,"focusedParams"],[212,32,175,30],[212,33,175,31,"param"],[212,38,175,36],[212,39,175,37],[213,10,176,8],[214,8,177,6],[215,8,178,6],[215,12,178,12,"query"],[215,17,178,17],[215,20,178,20,"queryString"],[215,31,178,31],[215,32,178,32,"stringify"],[215,41,178,41],[215,42,178,42,"focusedParams"],[215,55,178,55],[215,57,178,57],[216,10,179,8,"sort"],[216,14,179,12],[216,16,179,14],[217,8,180,6],[217,9,180,7],[217,10,180,8],[218,8,181,6],[218,12,181,10,"query"],[218,17,181,15],[218,19,181,17],[219,10,182,8,"path"],[219,14,182,12],[219,18,182,16],[219,22,182,20,"query"],[219,27,182,25],[219,29,182,27],[220,8,183,6],[221,6,184,4],[222,6,185,4,"current"],[222,13,185,11],[222,16,185,14,"route"],[222,21,185,19],[222,22,185,20,"state"],[222,27,185,25],[223,4,186,2],[223,5,186,3],[224,4,63,2],[224,11,63,9,"current"],[224,18,63,16],[225,6,63,16,"_loop"],[225,11,63,16],[226,4,63,16],[228,4,188,2],[229,4,189,2],[229,8,189,6,"options"],[229,15,189,13],[229,17,189,15,"path"],[229,21,189,19],[229,23,189,21],[230,6,190,4,"path"],[230,10,190,8],[230,13,190,11],[230,16,190,14,"options"],[230,23,190,21],[230,24,190,22,"path"],[230,28,190,26],[230,32,190,30,"path"],[230,36,190,34],[230,38,190,36],[231,4,191,2],[233,4,193,2],[234,4,194,2,"path"],[234,8,194,6],[234,11,194,9,"path"],[234,15,194,13],[234,16,194,14,"replace"],[234,23,194,21],[234,24,194,22],[234,30,194,28],[234,32,194,30],[234,35,194,33],[234,36,194,34],[235,4,195,2,"path"],[235,8,195,6],[235,11,195,9,"path"],[235,15,195,13],[235,16,195,14,"length"],[235,22,195,20],[235,25,195,23],[235,26,195,24],[235,29,195,27,"path"],[235,33,195,31],[235,34,195,32,"replace"],[235,41,195,39],[235,42,195,40],[235,47,195,45],[235,49,195,47],[235,51,195,49],[235,52,195,50],[235,55,195,53,"path"],[235,59,195,57],[237,4,197,2],[238,4,198,2],[239,4,199,2],[239,8,199,6],[239,9,199,7,"path"],[239,13,199,11],[239,14,199,12,"startsWith"],[239,24,199,22],[239,25,199,23],[239,28,199,26],[239,29,199,27],[239,31,199,29],[240,6,200,4,"path"],[240,10,200,8],[240,13,200,11],[240,17,200,15,"path"],[240,21,200,19],[240,23,200,21],[241,4,201,2],[242,4,202,2],[242,11,202,9,"path"],[242,15,202,13],[243,2,203,0],[244,2,204,0],[244,6,204,6,"createConfigItem"],[244,22,204,22],[244,25,204,25,"createConfigItem"],[244,26,204,26,"config"],[244,32,204,32],[244,34,204,34,"parentParts"],[244,45,204,45],[244,50,204,50],[245,4,205,2],[245,8,205,6],[245,15,205,13,"config"],[245,21,205,19],[245,26,205,24],[245,34,205,32],[245,36,205,34],[246,6,206,4],[247,6,207,4],[247,10,207,10,"parts"],[247,16,207,15],[247,19,207,18],[247,23,207,18,"getPatternParts"],[247,41,207,33],[247,42,207,33,"getPatternParts"],[247,57,207,33],[247,59,207,34,"config"],[247,65,207,40],[247,66,207,41],[248,6,208,4],[248,10,208,8,"parentParts"],[248,21,208,19],[248,23,208,21],[249,8,209,6],[249,15,209,13],[250,10,210,8,"parts"],[250,15,210,13],[250,17,210,15],[250,18,210,16],[250,21,210,19,"parentParts"],[250,32,210,30],[250,34,210,32],[250,37,210,35,"parts"],[250,43,210,40],[251,8,211,6],[251,9,211,7],[252,6,212,4],[253,6,213,4],[253,13,213,11],[254,8,214,6,"parts"],[254,13,214,11],[254,15,214,6,"parts"],[255,6,215,4],[255,7,215,5],[256,4,216,2],[257,4,217,2],[257,8,217,6,"config"],[257,14,217,12],[257,15,217,13,"exact"],[257,20,217,18],[257,24,217,22,"config"],[257,30,217,28],[257,31,217,29,"path"],[257,35,217,33],[257,40,217,38,"undefined"],[257,49,217,47],[257,51,217,49],[258,6,218,4],[258,12,218,10],[258,16,218,14,"Error"],[258,21,218,19],[258,22,218,20],[258,172,218,170],[258,173,218,171],[259,4,219,2],[261,4,221,2],[262,4,222,2],[263,4,223,2],[263,8,223,8,"parts"],[263,13,223,13],[263,16,223,16,"config"],[263,22,223,22],[263,23,223,23,"exact"],[263,28,223,28],[263,33,223,33],[263,37,223,37],[263,40,223,40],[263,41,223,41],[263,45,223,45,"parentParts"],[263,56,223,56],[263,60,223,60],[263,62,223,62],[263,63,223,63],[263,65,223,65],[263,69,223,69,"config"],[263,75,223,75],[263,76,223,76,"path"],[263,80,223,80],[263,83,223,83],[263,87,223,83,"getPatternParts"],[263,105,223,98],[263,106,223,98,"getPatternParts"],[263,121,223,98],[263,123,223,99,"config"],[263,129,223,105],[263,130,223,106,"path"],[263,134,223,110],[263,135,223,111],[263,138,223,114],[263,140,223,116],[263,141,223,117],[263,142,223,118],[263,145,223,121,"config"],[263,151,223,127],[263,152,223,128,"path"],[263,156,223,132],[263,159,223,135],[263,163,223,135,"getPatternParts"],[263,181,223,150],[263,182,223,150,"getPatternParts"],[263,197,223,150],[263,199,223,151,"config"],[263,205,223,157],[263,206,223,158,"path"],[263,210,223,162],[263,211,223,163],[263,214,223,166,"undefined"],[263,223,223,175],[264,4,224,2],[264,8,224,8,"screens"],[264,15,224,15],[264,18,224,18,"config"],[264,24,224,24],[264,25,224,25,"screens"],[264,32,224,32],[264,35,224,35,"createNormalizedConfigs"],[264,58,224,58],[264,59,224,59,"config"],[264,65,224,65],[264,66,224,66,"screens"],[264,73,224,73],[264,75,224,75,"parts"],[264,80,224,80],[264,81,224,81],[264,84,224,84,"undefined"],[264,93,224,93],[265,4,225,2],[265,11,225,9],[266,6,226,4,"parts"],[266,11,226,9],[267,6,227,4,"stringify"],[267,15,227,13],[267,17,227,15,"config"],[267,23,227,21],[267,24,227,22,"stringify"],[267,33,227,31],[268,6,228,4,"screens"],[269,4,229,2],[269,5,229,3],[270,2,230,0],[270,3,230,1],[271,2,231,0],[271,6,231,6,"createNormalizedConfigs"],[271,29,231,29],[271,32,231,32,"createNormalizedConfigs"],[271,33,231,33,"options"],[271,40,231,40],[271,42,231,42,"parts"],[271,47,231,47],[271,52,231,52,"Object"],[271,58,231,58],[271,59,231,59,"fromEntries"],[271,70,231,70],[271,71,231,71,"Object"],[271,77,231,77],[271,78,231,78,"entries"],[271,85,231,85],[271,86,231,86,"options"],[271,93,231,93],[271,94,231,94],[271,95,231,95,"map"],[271,98,231,98],[271,99,231,99,"_ref7"],[271,104,231,99],[271,108,231,114],[272,4,231,114],[272,8,231,114,"_ref8"],[272,13,231,114],[272,20,231,114,"_slicedToArray"],[272,34,231,114],[272,35,231,114,"default"],[272,42,231,114],[272,44,231,114,"_ref7"],[272,49,231,114],[273,6,231,101,"name"],[273,10,231,105],[273,13,231,105,"_ref8"],[273,18,231,105],[274,6,231,107,"c"],[274,7,231,108],[274,10,231,108,"_ref8"],[274,15,231,108],[275,4,232,2],[275,8,232,8,"result"],[275,14,232,14],[275,17,232,17,"createConfigItem"],[275,33,232,33],[275,34,232,34,"c"],[275,35,232,35],[275,37,232,37,"parts"],[275,42,232,42],[275,43,232,43],[276,4,233,2],[276,11,233,9],[276,12,233,10,"name"],[276,16,233,14],[276,18,233,16,"result"],[276,24,233,22],[276,25,233,23],[277,2,234,0],[277,3,234,1],[277,4,234,2],[277,5,234,3],[278,0,234,4],[278,3]],"functionMap":{"names":["<global>","getActiveRoute","getNormalizedConfigs","getPathFromState","Object.entries.map$argument_0","options.parts.find$argument_0","Object.entries.map.filter$argument_0","parts.forEach$argument_0","parts.map$argument_0","Array.from.map$argument_0","createConfigItem","createNormalizedConfigs"],"mappings":"AAA;uBCK;CDM;6BEE;CFO;OG+B;kFC2B;mDCG,0BD;SDU,SG,sBH;oBIY;WJU;yBKuB;+CCsB,sFD;OLG;iFCK,sCD;CHoC;yBUC;CV0B;gCWC,mEP;COG,EX"},"hasCjsExports":false},"type":"js/module"}]}