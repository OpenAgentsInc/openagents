{"dependencies":[{"name":"./Asset","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":1,"column":0,"index":0},"end":{"line":1,"column":68,"index":68}}],"key":"TwnMoPBJu+ST6a0NSE4l343cBbk=","exportNames":["*"],"imports":1}},{"name":"./PlatformUtils","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":2,"column":0,"index":69},"end":{"line":2,"column":59,"index":128}}],"key":"vk5TSZJTws6vRpll7frKCvmMWgw=","exportNames":["*"],"imports":1}},{"name":"./resolveAssetSource","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":3,"column":0,"index":129},"end":{"line":3,"column":86,"index":215}}],"key":"qiXdfzfF08Pne6HL41q9H4FDwsA=","exportNames":["*"],"imports":1}}],"output":[{"data":{"code":"__d(function (global, require, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {\n  \"use strict\";\n\n  function _interopDefault(e) {\n    return e && e.__esModule ? e : {\n      default: e\n    };\n  }\n  var _Asset = require(_dependencyMap[0]);\n  var _PlatformUtils = require(_dependencyMap[1]);\n  var _resolveAssetSource = require(_dependencyMap[2]);\n  var resolveAssetSource = _interopDefault(_resolveAssetSource);\n  // Override React Native's asset resolution for `Image` components in contexts where it matters\n  if (_PlatformUtils.IS_ENV_WITH_LOCAL_ASSETS) {\n    var setTransformer = resolveAssetSource.default.setCustomSourceTransformer || _resolveAssetSource.setCustomSourceTransformer;\n    setTransformer(function expoAssetTransformer(resolver) {\n      try {\n        // Bundler is using the hashAssetFiles plugin if and only if the fileHashes property exists\n        if ('fileHashes' in resolver.asset && resolver.asset.fileHashes) {\n          var asset = _Asset.Asset.fromMetadata(resolver.asset);\n          if (asset.uri.startsWith(_Asset.ANDROID_EMBEDDED_URL_BASE_RESOURCE)) {\n            // TODO(@kitten): See https://github.com/expo/expo/commit/ec940b57a87d99ab4f1d06d87126e662c3f04f04#r155340943\n            // It's unclear whether this is sound since this may be our own AssetSourceResolver, which doesn't have this method\n            // Please compare `AssetSourceResolver` type from `react-native/Libraries/Image/AssetSourceResolver` against `./AssetSourceResolver`\n            return resolver.resourceIdentifierWithoutScale();\n          }\n          return resolver.fromSource(asset.downloaded ? asset.localUri : asset.uri);\n        } else {\n          return resolver.defaultAsset();\n        }\n      } catch {\n        return resolver.defaultAsset();\n      }\n    });\n  }\n});","lineCount":36,"map":[[9,2,1,0],[9,6,1,0,"_Asset"],[9,12,1,0],[9,15,1,0,"require"],[9,22,1,0],[9,23,1,0,"_dependencyMap"],[9,37,1,0],[10,2,2,0],[10,6,2,0,"_PlatformUtils"],[10,20,2,0],[10,23,2,0,"require"],[10,30,2,0],[10,31,2,0,"_dependencyMap"],[10,45,2,0],[11,2,3,0],[11,6,3,0,"_resolveAssetSource"],[11,25,3,0],[11,28,3,0,"require"],[11,35,3,0],[11,36,3,0,"_dependencyMap"],[11,50,3,0],[12,2,3,0],[12,6,3,0,"resolveAssetSource"],[12,24,3,0],[12,27,3,0,"_interopDefault"],[12,42,3,0],[12,43,3,0,"_resolveAssetSource"],[12,62,3,0],[13,2,4,0],[14,2,5,0],[14,6,5,4,"IS_ENV_WITH_LOCAL_ASSETS"],[14,20,5,28],[14,21,5,28,"IS_ENV_WITH_LOCAL_ASSETS"],[14,45,5,28],[14,47,5,30],[15,4,6,4],[15,8,6,10,"setTransformer"],[15,22,6,24],[15,25,6,27,"resolveAssetSource"],[15,43,6,45],[15,44,6,45,"default"],[15,51,6,45],[15,52,6,46,"setCustomSourceTransformer"],[15,78,6,72],[15,82,6,76,"setCustomSourceTransformer"],[15,101,6,102],[15,102,6,102,"setCustomSourceTransformer"],[15,128,6,102],[16,4,7,4,"setTransformer"],[16,18,7,18],[16,19,7,19],[16,28,7,28,"expoAssetTransformer"],[16,48,7,48,"expoAssetTransformer"],[16,49,7,49,"resolver"],[16,57,7,57],[16,59,7,59],[17,6,8,8],[17,10,8,12],[18,8,9,12],[19,8,10,12],[19,12,10,16],[19,24,10,28],[19,28,10,32,"resolver"],[19,36,10,40],[19,37,10,41,"asset"],[19,42,10,46],[19,46,10,50,"resolver"],[19,54,10,58],[19,55,10,59,"asset"],[19,60,10,64],[19,61,10,65,"fileHashes"],[19,71,10,75],[19,73,10,77],[20,10,11,16],[20,14,11,22,"asset"],[20,19,11,27],[20,22,11,30,"Asset"],[20,28,11,35],[20,29,11,35,"Asset"],[20,34,11,35],[20,35,11,36,"fromMetadata"],[20,47,11,48],[20,48,11,49,"resolver"],[20,56,11,57],[20,57,11,58,"asset"],[20,62,11,63],[20,63,11,64],[21,10,12,16],[21,14,12,20,"asset"],[21,19,12,25],[21,20,12,26,"uri"],[21,23,12,29],[21,24,12,30,"startsWith"],[21,34,12,40],[21,35,12,41,"ANDROID_EMBEDDED_URL_BASE_RESOURCE"],[21,41,12,75],[21,42,12,75,"ANDROID_EMBEDDED_URL_BASE_RESOURCE"],[21,76,12,75],[21,77,12,76],[21,79,12,78],[22,12,13,20],[23,12,14,20],[24,12,15,20],[25,12,16,20],[25,19,16,27,"resolver"],[25,27,16,35],[25,28,16,36,"resourceIdentifierWithoutScale"],[25,58,16,66],[25,59,16,67],[25,60,16,68],[26,10,17,16],[27,10,18,16],[27,17,18,23,"resolver"],[27,25,18,31],[27,26,18,32,"fromSource"],[27,36,18,42],[27,37,18,43,"asset"],[27,42,18,48],[27,43,18,49,"downloaded"],[27,53,18,59],[27,56,18,62,"asset"],[27,61,18,67],[27,62,18,68,"localUri"],[27,70,18,76],[27,73,18,79,"asset"],[27,78,18,84],[27,79,18,85,"uri"],[27,82,18,88],[27,83,18,89],[28,8,19,12],[28,9,19,13],[28,15,20,17],[29,10,21,16],[29,17,21,23,"resolver"],[29,25,21,31],[29,26,21,32,"defaultAsset"],[29,38,21,44],[29,39,21,45],[29,40,21,46],[30,8,22,12],[31,6,23,8],[31,7,23,9],[31,8,24,8],[31,14,24,14],[32,8,25,12],[32,15,25,19,"resolver"],[32,23,25,27],[32,24,25,28,"defaultAsset"],[32,36,25,40],[32,37,25,41],[32,38,25,42],[33,6,26,8],[34,4,27,4],[34,5,27,5],[34,6,27,6],[35,2,28,0],[36,0,28,1],[36,3]],"functionMap":{"names":["<global>","expoAssetTransformer"],"mappings":"AAA;mBCM;KDoB"},"hasCjsExports":false},"type":"js/module"}]}