{"dependencies":[{"name":"./useRefEffect","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":11,"column":0},"end":{"line":11,"column":42}}],"key":"jmb/oS2sUDW+q7MGN9xZyJMltFY=","exportNames":["*"],"imports":1}},{"name":"react","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":12,"column":0},"end":{"line":12,"column":31}}],"key":"RtGiGa+/H7VrI7GDQDLhO1UbpU8=","exportNames":["*"],"imports":1}}],"output":[{"data":{"code":"__d(function (global, require, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {\n  \"use strict\";\n\n  Object.defineProperty(exports, '__esModule', {\n    value: true\n  });\n  function _interopDefault(e) {\n    return e && e.__esModule ? e : {\n      default: e\n    };\n  }\n  Object.defineProperty(exports, \"default\", {\n    enumerable: true,\n    get: function () {\n      return useMergeRefs;\n    }\n  });\n  var _useRefEffect = require(_dependencyMap[0]);\n  var useRefEffect = _interopDefault(_useRefEffect);\n  var _react = require(_dependencyMap[1]);\n  function useMergeRefs() {\n    for (var _len = arguments.length, refs = new Array(_len), _key = 0; _key < _len; _key++) {\n      refs[_key] = arguments[_key];\n    }\n    var refEffect = (0, _react.useCallback)(current => {\n      var cleanups = refs.map(ref => {\n        if (ref == null) {\n          return undefined;\n        } else {\n          if (typeof ref === 'function') {\n            var cleanup = ref(current);\n            return typeof cleanup === 'function' ? cleanup : () => {\n              ref(null);\n            };\n          } else {\n            ref.current = current;\n            return () => {\n              ref.current = null;\n            };\n          }\n        }\n      });\n      return () => {\n        for (var cleanup of cleanups) {\n          cleanup?.();\n        }\n      };\n    }, [...refs]);\n    return (0, useRefEffect.default)(refEffect);\n  }\n});","lineCount":51,"map":[[12,2,24,15,"Object"],[12,8,24,15],[12,9,24,15,"defineProperty"],[12,23,24,15],[12,24,24,15,"exports"],[12,31,24,15],[13,4,24,15,"enumerable"],[13,14,24,15],[14,4,24,15,"get"],[14,7,24,15],[14,18,24,15,"get"],[14,19,24,15],[15,6,24,15],[15,13,24,15,"useMergeRefs"],[15,25,24,15],[16,4,24,15],[17,2,24,15],[18,2,11,0],[18,6,11,0,"_useRefEffect"],[18,19,11,0],[18,22,11,0,"require"],[18,29,11,0],[18,30,11,0,"_dependencyMap"],[18,44,11,0],[19,2,11,0],[19,6,11,0,"useRefEffect"],[19,18,11,0],[19,21,11,0,"_interopDefault"],[19,36,11,0],[19,37,11,0,"_useRefEffect"],[19,50,11,0],[20,2,12,0],[20,6,12,0,"_react"],[20,12,12,0],[20,15,12,0,"require"],[20,22,12,0],[20,23,12,0,"_dependencyMap"],[20,37,12,0],[21,2,24,15],[21,11,24,24,"useMergeRefs"],[21,23,24,36,"useMergeRefs"],[21,24,24,36],[21,26,26,29],[22,4,26,29],[22,13,26,29,"_len"],[22,17,26,29],[22,20,26,29,"arguments"],[22,29,26,29],[22,30,26,29,"length"],[22,36,26,29],[22,38,25,5,"refs"],[22,42,25,9],[22,49,25,9,"Array"],[22,54,25,9],[22,55,25,9,"_len"],[22,59,25,9],[22,62,25,9,"_key"],[22,66,25,9],[22,72,25,9,"_key"],[22,76,25,9],[22,79,25,9,"_len"],[22,83,25,9],[22,85,25,9,"_key"],[22,89,25,9],[23,6,25,5,"refs"],[23,10,25,9],[23,11,25,9,"_key"],[23,15,25,9],[23,19,25,9,"arguments"],[23,28,25,9],[23,29,25,9,"_key"],[23,33,25,9],[24,4,25,9],[25,4,27,2],[25,8,27,8,"refEffect"],[25,17,27,17],[25,20,27,20],[25,24,27,20,"useCallback"],[25,30,27,31],[25,31,27,31,"useCallback"],[25,42,27,31],[25,44,28,5,"current"],[25,51,28,22],[25,55,28,27],[26,6,29,6],[26,10,29,12,"cleanups"],[26,18,29,57],[26,21,29,60,"refs"],[26,25,29,64],[26,26,29,65,"map"],[26,29,29,68],[26,30,29,69,"ref"],[26,33,29,72],[26,37,29,76],[27,8,30,8],[27,12,30,12,"ref"],[27,15,30,15],[27,19,30,19],[27,23,30,23],[27,25,30,25],[28,10,31,10],[28,17,31,17,"undefined"],[28,26,31,26],[29,8,32,8],[29,9,32,9],[29,15,32,15],[30,10,33,10],[30,14,33,14],[30,21,33,21,"ref"],[30,24,33,24],[30,29,33,29],[30,39,33,39],[30,41,33,41],[31,12,35,12],[31,16,35,18,"cleanup"],[31,23,35,46],[31,26,35,49,"ref"],[31,29,35,52],[31,30,35,53,"current"],[31,37,35,60],[31,38,35,61],[32,12,36,12],[32,19,36,19],[32,26,36,26,"cleanup"],[32,33,36,33],[32,38,36,38],[32,48,36,48],[32,51,37,16,"cleanup"],[32,58,37,23],[32,61,38,16],[32,67,38,22],[33,14,39,18,"ref"],[33,17,39,21],[33,18,39,22],[33,22,39,26],[33,23,39,27],[34,12,40,16],[34,13,40,17],[35,10,41,10],[35,11,41,11],[35,17,41,17],[36,12,42,12,"ref"],[36,15,42,15],[36,16,42,16,"current"],[36,23,42,23],[36,26,42,26,"current"],[36,33,42,33],[37,12,43,12],[37,19,43,19],[37,25,43,25],[38,14,44,14,"ref"],[38,17,44,17],[38,18,44,18,"current"],[38,25,44,25],[38,28,44,28],[38,32,44,32],[39,12,45,12],[39,13,45,13],[40,10,46,10],[41,8,47,8],[42,6,48,6],[42,7,48,7],[42,8,48,8],[43,6,50,6],[43,13,50,13],[43,19,50,19],[44,8,51,8],[44,13,51,13],[44,17,51,19,"cleanup"],[44,24,51,26],[44,28,51,30,"cleanups"],[44,36,51,38],[44,38,51,40],[45,10,52,10,"cleanup"],[45,17,52,17],[45,20,52,20],[45,21,52,21],[46,8,53,8],[47,6,54,6],[47,7,54,7],[48,4,55,4],[48,5,55,5],[48,7,56,4],[48,8,56,5],[48,11,56,8,"refs"],[48,15,56,12],[48,16,57,2],[48,17,57,3],[49,4,58,2],[49,11,58,9],[49,15,58,9,"useRefEffect"],[49,27,58,21],[49,28,58,21,"default"],[49,35,58,21],[49,37,58,22,"refEffect"],[49,46,58,31],[49,47,58,32],[50,2,59,0],[51,0,59,1],[51,3]],"functionMap":{"names":["<global>","useMergeRefs","refEffect","refs.map$argument_0","<anonymous>"],"mappings":"AAA;eCuB;ICI;qECC;gBCS;iBDE;mBCG;aDE;ODG;aEE;OFI;KDC"},"hasCjsExports":false},"type":"js/module"}]}