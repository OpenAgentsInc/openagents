{"dependencies":[{"name":"expo-constants","data":{"asyncType":null,"isESMImport":false,"locs":[{"start":{"line":8,"column":41,"index":379},"end":{"line":8,"column":66,"index":404}}],"key":"MLjvisfgn5XkSYgDpD4nfivY4nE=","exportNames":["*"],"imports":1}}],"output":[{"data":{"code":"__d(function (global, require, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {\n  \"use strict\";\n\n  var __importDefault = this && this.__importDefault || function (mod) {\n    return mod && mod.__esModule ? mod : {\n      \"default\": mod\n    };\n  };\n  Object.defineProperty(exports, \"__esModule\", {\n    value: true\n  });\n  exports.getOriginFromConstants = getOriginFromConstants;\n  exports.getStaticUrlFromExpoRouter = getStaticUrlFromExpoRouter;\n  var expo_constants_1 = __importDefault(require(_dependencyMap[0]));\n  var protocolWarningString = `{ plugins: [[\"expo-router\", { origin: \"...<URL>...\" }]] }`;\n  /** `lodash.memoize` */\n  function memoize(fn) {\n    var cache = {};\n    return function () {\n      for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n        args[_key] = arguments[_key];\n      }\n      var key = JSON.stringify(args);\n      if (cache[key]) {\n        return cache[key];\n      }\n      var result = fn(...args);\n      cache[key] = result;\n      return result;\n    };\n  }\n  function sanitizeUrl(url) {\n    var parsed = new URL(url);\n    // Allow empty protocol, http, and https\n    var validProtocol = !parsed.protocol || parsed.protocol === 'http:' || parsed.protocol === 'https:';\n    if (!validProtocol) {\n      throwOrAlert(`Expo Head: Native origin has invalid protocol \"${parsed.protocol}\" for URL in Expo Config: ${protocolWarningString}.`);\n    }\n    parsed.pathname = '';\n    parsed.search = '';\n    parsed.hash = '';\n    parsed.protocol ??= 'https:';\n    return parsed.toString().replace(/\\/$/, '');\n  }\n  var memoSanitizeUrl = memoize(sanitizeUrl);\n  function getHeadOriginFromConstants() {\n    // This will require a rebuild in bare-workflow to update.\n    var manifest = expo_constants_1.default.expoConfig;\n    var origin = manifest?.extra?.router?.headOrigin ?? manifest?.extra?.router?.origin ?? manifest?.extra?.router?.generatedOrigin;\n    if (!origin) {\n      throwOrAlert(`Expo Head: Add the handoff origin to the Expo Config (requires rebuild). Add the Config Plugin ${protocolWarningString}, where \\`origin\\` is the hosted URL.`);\n      // Fallback value that shouldn't be used for real.\n      return 'https://expo.dev';\n    }\n    // Without this, the URL will go to an IP address which is not allowed.\n    if (!origin.match(/^http(s)?:\\/\\//)) {\n      console.warn(`Expo Head: origin \"${origin}\" is missing a \\`https://\\` protocol. ${protocolWarningString}.`);\n    }\n    // Return the development URL last so the user gets all production warnings first.\n    return memoSanitizeUrl(origin);\n  }\n  function getOriginFromConstants() {\n    // This will require a rebuild in bare-workflow to update.\n    var manifest = expo_constants_1.default.expoConfig;\n    var origin = manifest?.extra?.router?.headOrigin ?? manifest?.extra?.router?.origin ?? manifest?.extra?.router?.generatedOrigin;\n    if (!origin) {\n      throwOrAlert(`Expo RSC: Add the origin to the Expo Config (requires rebuild). Add the Config Plugin ${protocolWarningString}, where \\`origin\\` is the hosted URL.`);\n      // Fallback value that shouldn't be used for real.\n      return 'http://localhost:3000';\n    }\n    // Return the development URL last so the user gets all production warnings first.\n    return memoSanitizeUrl(origin);\n  }\n  function throwOrAlert(msg) {\n    // Production apps fatally crash which is often not helpful.\n\n    {\n      console.error(msg);\n      alert(msg);\n    }\n  }\n  function getStaticUrlFromExpoRouter(pathname) {\n    // const host = \"https://expo.io\";\n    // Append the URL we'd find in context\n    return getHeadOriginFromConstants() + pathname;\n  }\n});","lineCount":87,"map":[[2,2,1,0],[2,14,1,12],[4,2,2,0],[4,6,2,4,"__importDefault"],[4,21,2,19],[4,24,2,23],[4,28,2,27],[4,32,2,31],[4,36,2,35],[4,37,2,36,"__importDefault"],[4,52,2,51],[4,56,2,56],[4,66,2,66,"mod"],[4,69,2,69],[4,71,2,71],[5,4,3,4],[5,11,3,12,"mod"],[5,14,3,15],[5,18,3,19,"mod"],[5,21,3,22],[5,22,3,23,"__esModule"],[5,32,3,33],[5,35,3,37,"mod"],[5,38,3,40],[5,41,3,43],[6,6,3,45],[6,15,3,54],[6,17,3,56,"mod"],[7,4,3,60],[7,5,3,61],[8,2,4,0],[8,3,4,1],[9,2,5,0,"Object"],[9,8,5,6],[9,9,5,7,"defineProperty"],[9,23,5,21],[9,24,5,22,"exports"],[9,31,5,29],[9,33,5,31],[9,45,5,43],[9,47,5,45],[10,4,5,47,"value"],[10,9,5,52],[10,11,5,54],[11,2,5,59],[11,3,5,60],[11,4,5,61],[12,2,6,0,"exports"],[12,9,6,7],[12,10,6,8,"getOriginFromConstants"],[12,32,6,30],[12,35,6,33,"getOriginFromConstants"],[12,57,6,55],[13,2,7,0,"exports"],[13,9,7,7],[13,10,7,8,"getStaticUrlFromExpoRouter"],[13,36,7,34],[13,39,7,37,"getStaticUrlFromExpoRouter"],[13,65,7,63],[14,2,8,0],[14,6,8,6,"expo_constants_1"],[14,22,8,22],[14,25,8,25,"__importDefault"],[14,40,8,40],[14,41,8,41,"require"],[14,48,8,48],[14,49,8,48,"_dependencyMap"],[14,63,8,48],[14,66,8,65],[14,67,8,66],[14,68,8,67],[15,2,9,0],[15,6,9,6,"protocolWarningString"],[15,27,9,27],[15,30,9,30],[15,89,9,89],[16,2,10,0],[17,2,11,0],[17,11,11,9,"memoize"],[17,18,11,16,"memoize"],[17,19,11,17,"fn"],[17,21,11,19],[17,23,11,21],[18,4,12,4],[18,8,12,10,"cache"],[18,13,12,15],[18,16,12,18],[18,17,12,19],[18,18,12,20],[19,4,13,4],[19,11,13,12],[19,23,13,25],[20,6,13,25],[20,15,13,25,"_len"],[20,19,13,25],[20,22,13,25,"arguments"],[20,31,13,25],[20,32,13,25,"length"],[20,38,13,25],[20,40,13,16,"args"],[20,44,13,20],[20,51,13,20,"Array"],[20,56,13,20],[20,57,13,20,"_len"],[20,61,13,20],[20,64,13,20,"_key"],[20,68,13,20],[20,74,13,20,"_key"],[20,78,13,20],[20,81,13,20,"_len"],[20,85,13,20],[20,87,13,20,"_key"],[20,91,13,20],[21,8,13,16,"args"],[21,12,13,20],[21,13,13,20,"_key"],[21,17,13,20],[21,21,13,20,"arguments"],[21,30,13,20],[21,31,13,20,"_key"],[21,35,13,20],[22,6,13,20],[23,6,14,8],[23,10,14,14,"key"],[23,13,14,17],[23,16,14,20,"JSON"],[23,20,14,24],[23,21,14,25,"stringify"],[23,30,14,34],[23,31,14,35,"args"],[23,35,14,39],[23,36,14,40],[24,6,15,8],[24,10,15,12,"cache"],[24,15,15,17],[24,16,15,18,"key"],[24,19,15,21],[24,20,15,22],[24,22,15,24],[25,8,16,12],[25,15,16,19,"cache"],[25,20,16,24],[25,21,16,25,"key"],[25,24,16,28],[25,25,16,29],[26,6,17,8],[27,6,18,8],[27,10,18,14,"result"],[27,16,18,20],[27,19,18,23,"fn"],[27,21,18,25],[27,22,18,26],[27,25,18,29,"args"],[27,29,18,33],[27,30,18,34],[28,6,19,8,"cache"],[28,11,19,13],[28,12,19,14,"key"],[28,15,19,17],[28,16,19,18],[28,19,19,21,"result"],[28,25,19,27],[29,6,20,8],[29,13,20,15,"result"],[29,19,20,21],[30,4,21,4],[30,5,21,5],[31,2,22,0],[32,2,23,0],[32,11,23,9,"sanitizeUrl"],[32,22,23,20,"sanitizeUrl"],[32,23,23,21,"url"],[32,26,23,24],[32,28,23,26],[33,4,24,4],[33,8,24,10,"parsed"],[33,14,24,16],[33,17,24,19],[33,21,24,23,"URL"],[33,24,24,26],[33,25,24,27,"url"],[33,28,24,30],[33,29,24,31],[34,4,25,4],[35,4,26,4],[35,8,26,10,"validProtocol"],[35,21,26,23],[35,24,26,26],[35,25,26,27,"parsed"],[35,31,26,33],[35,32,26,34,"protocol"],[35,40,26,42],[35,44,26,46,"parsed"],[35,50,26,52],[35,51,26,53,"protocol"],[35,59,26,61],[35,64,26,66],[35,71,26,73],[35,75,26,77,"parsed"],[35,81,26,83],[35,82,26,84,"protocol"],[35,90,26,92],[35,95,26,97],[35,103,26,105],[36,4,27,4],[36,8,27,8],[36,9,27,9,"validProtocol"],[36,22,27,22],[36,24,27,24],[37,6,28,8,"throwOrAlert"],[37,18,28,20],[37,19,28,21],[37,69,28,71,"parsed"],[37,75,28,77],[37,76,28,78,"protocol"],[37,84,28,86],[37,113,28,115,"protocolWarningString"],[37,134,28,136],[37,137,28,139],[37,138,28,140],[38,4,29,4],[39,4,30,4,"parsed"],[39,10,30,10],[39,11,30,11,"pathname"],[39,19,30,19],[39,22,30,22],[39,24,30,24],[40,4,31,4,"parsed"],[40,10,31,10],[40,11,31,11,"search"],[40,17,31,17],[40,20,31,20],[40,22,31,22],[41,4,32,4,"parsed"],[41,10,32,10],[41,11,32,11,"hash"],[41,15,32,15],[41,18,32,18],[41,20,32,20],[42,4,33,4,"parsed"],[42,10,33,10],[42,11,33,11,"protocol"],[42,19,33,19],[42,24,33,24],[42,32,33,32],[43,4,34,4],[43,11,34,11,"parsed"],[43,17,34,17],[43,18,34,18,"toString"],[43,26,34,26],[43,27,34,27],[43,28,34,28],[43,29,34,29,"replace"],[43,36,34,36],[43,37,34,37],[43,42,34,42],[43,44,34,44],[43,46,34,46],[43,47,34,47],[44,2,35,0],[45,2,36,0],[45,6,36,6,"memoSanitizeUrl"],[45,21,36,21],[45,24,36,24,"memoize"],[45,31,36,31],[45,32,36,32,"sanitizeUrl"],[45,43,36,43],[45,44,36,44],[46,2,37,0],[46,11,37,9,"getHeadOriginFromConstants"],[46,37,37,35,"getHeadOriginFromConstants"],[46,38,37,35],[46,40,37,38],[47,4,38,4],[48,4,39,4],[48,8,39,10,"manifest"],[48,16,39,18],[48,19,39,21,"expo_constants_1"],[48,35,39,37],[48,36,39,38,"default"],[48,43,39,45],[48,44,39,46,"expoConfig"],[48,54,39,56],[49,4,40,4],[49,8,40,10,"origin"],[49,14,40,16],[49,17,40,19,"manifest"],[49,25,40,27],[49,27,40,29,"extra"],[49,32,40,34],[49,34,40,36,"router"],[49,40,40,42],[49,42,40,44,"headOrigin"],[49,52,40,54],[49,56,41,8,"manifest"],[49,64,41,16],[49,66,41,18,"extra"],[49,71,41,23],[49,73,41,25,"router"],[49,79,41,31],[49,81,41,33,"origin"],[49,87,41,39],[49,91,42,8,"manifest"],[49,99,42,16],[49,101,42,18,"extra"],[49,106,42,23],[49,108,42,25,"router"],[49,114,42,31],[49,116,42,33,"generatedOrigin"],[49,131,42,48],[50,4,43,4],[50,8,43,8],[50,9,43,9,"origin"],[50,15,43,15],[50,17,43,17],[51,6,44,8,"throwOrAlert"],[51,18,44,20],[51,19,44,21],[51,117,44,119,"protocolWarningString"],[51,138,44,140],[51,177,44,179],[51,178,44,180],[52,6,45,8],[53,6,46,8],[53,13,46,15],[53,31,46,33],[54,4,47,4],[55,4,48,4],[56,4,49,4],[56,8,49,8],[56,9,49,9,"origin"],[56,15,49,15],[56,16,49,16,"match"],[56,21,49,21],[56,22,49,22],[56,38,49,38],[56,39,49,39],[56,41,49,41],[57,6,50,8,"console"],[57,13,50,15],[57,14,50,16,"warn"],[57,18,50,20],[57,19,50,21],[57,41,50,43,"origin"],[57,47,50,49],[57,88,50,90,"protocolWarningString"],[57,109,50,111],[57,112,50,114],[57,113,50,115],[58,4,51,4],[59,4,52,4],[60,4,53,4],[60,11,53,11,"memoSanitizeUrl"],[60,26,53,26],[60,27,53,27,"origin"],[60,33,53,33],[60,34,53,34],[61,2,54,0],[62,2,55,0],[62,11,55,9,"getOriginFromConstants"],[62,33,55,31,"getOriginFromConstants"],[62,34,55,31],[62,36,55,34],[63,4,56,4],[64,4,57,4],[64,8,57,10,"manifest"],[64,16,57,18],[64,19,57,21,"expo_constants_1"],[64,35,57,37],[64,36,57,38,"default"],[64,43,57,45],[64,44,57,46,"expoConfig"],[64,54,57,56],[65,4,58,4],[65,8,58,10,"origin"],[65,14,58,16],[65,17,58,19,"manifest"],[65,25,58,27],[65,27,58,29,"extra"],[65,32,58,34],[65,34,58,36,"router"],[65,40,58,42],[65,42,58,44,"headOrigin"],[65,52,58,54],[65,56,59,8,"manifest"],[65,64,59,16],[65,66,59,18,"extra"],[65,71,59,23],[65,73,59,25,"router"],[65,79,59,31],[65,81,59,33,"origin"],[65,87,59,39],[65,91,60,8,"manifest"],[65,99,60,16],[65,101,60,18,"extra"],[65,106,60,23],[65,108,60,25,"router"],[65,114,60,31],[65,116,60,33,"generatedOrigin"],[65,131,60,48],[66,4,61,4],[66,8,61,8],[66,9,61,9,"origin"],[66,15,61,15],[66,17,61,17],[67,6,62,8,"throwOrAlert"],[67,18,62,20],[67,19,62,21],[67,108,62,110,"protocolWarningString"],[67,129,62,131],[67,168,62,170],[67,169,62,171],[68,6,63,8],[69,6,64,8],[69,13,64,15],[69,36,64,38],[70,4,65,4],[71,4,66,4],[72,4,67,4],[72,11,67,11,"memoSanitizeUrl"],[72,26,67,26],[72,27,67,27,"origin"],[72,33,67,33],[72,34,67,34],[73,2,68,0],[74,2,69,0],[74,11,69,9,"throwOrAlert"],[74,23,69,21,"throwOrAlert"],[74,24,69,22,"msg"],[74,27,69,25],[74,29,69,27],[75,4,70,4],[77,4,73,43],[78,6,74,8,"console"],[78,13,74,15],[78,14,74,16,"error"],[78,19,74,21],[78,20,74,22,"msg"],[78,23,74,25],[78,24,74,26],[79,6,75,8,"alert"],[79,11,75,13],[79,12,75,14,"msg"],[79,15,75,17],[79,16,75,18],[80,4,76,4],[81,2,80,0],[82,2,81,0],[82,11,81,9,"getStaticUrlFromExpoRouter"],[82,37,81,35,"getStaticUrlFromExpoRouter"],[82,38,81,36,"pathname"],[82,46,81,44],[82,48,81,46],[83,4,82,4],[84,4,83,4],[85,4,84,4],[85,11,84,11,"getHeadOriginFromConstants"],[85,37,84,37],[85,38,84,38],[85,39,84,39],[85,42,84,42,"pathname"],[85,50,84,50],[86,2,85,0],[87,0,85,1],[87,3]],"functionMap":{"names":["<global>","<anonymous>","memoize","sanitizeUrl","getHeadOriginFromConstants","getOriginFromConstants","throwOrAlert","getStaticUrlFromExpoRouter"],"mappings":"AAA;wDCC;CDE;AEO;YDE;KCQ;CFC;AGC;CHY;AIE;CJiB;AKC;CLa;AMC;CNW;AOC;CPI"},"hasCjsExports":true},"type":"js/module"}]}