{"dependencies":[{"name":"../common/utils","data":{"asyncType":null,"isESMImport":false,"locs":[{"start":{"line":5,"column":14,"index":49},"end":{"line":5,"column":40,"index":75}}],"key":"s68H+Qrc8so5XeN472FI/1YNbEY=","exportNames":["*"],"imports":1}}],"output":[{"data":{"code":"__d(function (global, require, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {\n  // Horizontal rule\n\n  'use strict';\n\n  var isSpace = require(_dependencyMap[0]).isSpace;\n  module.exports = function hr(state, startLine, endLine, silent) {\n    var marker,\n      cnt,\n      ch,\n      token,\n      pos = state.bMarks[startLine] + state.tShift[startLine],\n      max = state.eMarks[startLine];\n\n    // if it's indented more than 3 spaces, it should be a code block\n    if (state.sCount[startLine] - state.blkIndent >= 4) {\n      return false;\n    }\n    marker = state.src.charCodeAt(pos++);\n\n    // Check hr marker\n    if (marker !== 0x2A /* * */ && marker !== 0x2D /* - */ && marker !== 0x5F /* _ */) {\n      return false;\n    }\n\n    // markers can be mixed with spaces, but there should be at least 3 of them\n\n    cnt = 1;\n    while (pos < max) {\n      ch = state.src.charCodeAt(pos++);\n      if (ch !== marker && !isSpace(ch)) {\n        return false;\n      }\n      if (ch === marker) {\n        cnt++;\n      }\n    }\n    if (cnt < 3) {\n      return false;\n    }\n    if (silent) {\n      return true;\n    }\n    state.line = startLine + 1;\n    token = state.push('hr', 'hr', 0);\n    token.map = [startLine, state.line];\n    token.markup = Array(cnt + 1).join(String.fromCharCode(marker));\n    return true;\n  };\n});","lineCount":50,"map":[[2,2,1,0],[4,2,3,0],[4,14,3,12],[6,2,5,0],[6,6,5,4,"isSpace"],[6,13,5,11],[6,16,5,14,"require"],[6,23,5,21],[6,24,5,21,"_dependencyMap"],[6,38,5,21],[6,41,5,39],[6,42,5,40],[6,43,5,41,"isSpace"],[6,50,5,48],[7,2,8,0,"module"],[7,8,8,6],[7,9,8,7,"exports"],[7,16,8,14],[7,19,8,17],[7,28,8,26,"hr"],[7,30,8,28,"hr"],[7,31,8,29,"state"],[7,36,8,34],[7,38,8,36,"startLine"],[7,47,8,45],[7,49,8,47,"endLine"],[7,56,8,54],[7,58,8,56,"silent"],[7,64,8,62],[7,66,8,64],[8,4,9,2],[8,8,9,6,"marker"],[8,14,9,12],[9,6,9,14,"cnt"],[9,9,9,17],[10,6,9,19,"ch"],[10,8,9,21],[11,6,9,23,"token"],[11,11,9,28],[12,6,10,6,"pos"],[12,9,10,9],[12,12,10,12,"state"],[12,17,10,17],[12,18,10,18,"bMarks"],[12,24,10,24],[12,25,10,25,"startLine"],[12,34,10,34],[12,35,10,35],[12,38,10,38,"state"],[12,43,10,43],[12,44,10,44,"tShift"],[12,50,10,50],[12,51,10,51,"startLine"],[12,60,10,60],[12,61,10,61],[13,6,11,6,"max"],[13,9,11,9],[13,12,11,12,"state"],[13,17,11,17],[13,18,11,18,"eMarks"],[13,24,11,24],[13,25,11,25,"startLine"],[13,34,11,34],[13,35,11,35],[15,4,13,2],[16,4,14,2],[16,8,14,6,"state"],[16,13,14,11],[16,14,14,12,"sCount"],[16,20,14,18],[16,21,14,19,"startLine"],[16,30,14,28],[16,31,14,29],[16,34,14,32,"state"],[16,39,14,37],[16,40,14,38,"blkIndent"],[16,49,14,47],[16,53,14,51],[16,54,14,52],[16,56,14,54],[17,6,14,56],[17,13,14,63],[17,18,14,68],[18,4,14,70],[19,4,16,2,"marker"],[19,10,16,8],[19,13,16,11,"state"],[19,18,16,16],[19,19,16,17,"src"],[19,22,16,20],[19,23,16,21,"charCodeAt"],[19,33,16,31],[19,34,16,32,"pos"],[19,37,16,35],[19,39,16,37],[19,40,16,38],[21,4,18,2],[22,4,19,2],[22,8,19,6,"marker"],[22,14,19,12],[22,19,19,17],[22,23,19,21],[22,35,20,6,"marker"],[22,41,20,12],[22,46,20,17],[22,50,20,21],[22,62,21,6,"marker"],[22,68,21,12],[22,73,21,17],[22,77,21,21],[22,87,21,30],[23,6,22,4],[23,13,22,11],[23,18,22,16],[24,4,23,2],[26,4,25,2],[28,4,27,2,"cnt"],[28,7,27,5],[28,10,27,8],[28,11,27,9],[29,4,28,2],[29,11,28,9,"pos"],[29,14,28,12],[29,17,28,15,"max"],[29,20,28,18],[29,22,28,20],[30,6,29,4,"ch"],[30,8,29,6],[30,11,29,9,"state"],[30,16,29,14],[30,17,29,15,"src"],[30,20,29,18],[30,21,29,19,"charCodeAt"],[30,31,29,29],[30,32,29,30,"pos"],[30,35,29,33],[30,37,29,35],[30,38,29,36],[31,6,30,4],[31,10,30,8,"ch"],[31,12,30,10],[31,17,30,15,"marker"],[31,23,30,21],[31,27,30,25],[31,28,30,26,"isSpace"],[31,35,30,33],[31,36,30,34,"ch"],[31,38,30,36],[31,39,30,37],[31,41,30,39],[32,8,30,41],[32,15,30,48],[32,20,30,53],[33,6,30,55],[34,6,31,4],[34,10,31,8,"ch"],[34,12,31,10],[34,17,31,15,"marker"],[34,23,31,21],[34,25,31,23],[35,8,31,25,"cnt"],[35,11,31,28],[35,13,31,30],[36,6,31,32],[37,4,32,2],[38,4,34,2],[38,8,34,6,"cnt"],[38,11,34,9],[38,14,34,12],[38,15,34,13],[38,17,34,15],[39,6,34,17],[39,13,34,24],[39,18,34,29],[40,4,34,31],[41,4,36,2],[41,8,36,6,"silent"],[41,14,36,12],[41,16,36,14],[42,6,36,16],[42,13,36,23],[42,17,36,27],[43,4,36,29],[44,4,38,2,"state"],[44,9,38,7],[44,10,38,8,"line"],[44,14,38,12],[44,17,38,15,"startLine"],[44,26,38,24],[44,29,38,27],[44,30,38,28],[45,4,40,2,"token"],[45,9,40,7],[45,12,40,17,"state"],[45,17,40,22],[45,18,40,23,"push"],[45,22,40,27],[45,23,40,28],[45,27,40,32],[45,29,40,34],[45,33,40,38],[45,35,40,40],[45,36,40,41],[45,37,40,42],[46,4,41,2,"token"],[46,9,41,7],[46,10,41,8,"map"],[46,13,41,11],[46,16,41,17],[46,17,41,19,"startLine"],[46,26,41,28],[46,28,41,30,"state"],[46,33,41,35],[46,34,41,36,"line"],[46,38,41,40],[46,39,41,42],[47,4,42,2,"token"],[47,9,42,7],[47,10,42,8,"markup"],[47,16,42,14],[47,19,42,17,"Array"],[47,24,42,22],[47,25,42,23,"cnt"],[47,28,42,26],[47,31,42,29],[47,32,42,30],[47,33,42,31],[47,34,42,32,"join"],[47,38,42,36],[47,39,42,37,"String"],[47,45,42,43],[47,46,42,44,"fromCharCode"],[47,58,42,56],[47,59,42,57,"marker"],[47,65,42,63],[47,66,42,64],[47,67,42,65],[48,4,44,2],[48,11,44,9],[48,15,44,13],[49,2,45,0],[49,3,45,1],[50,0,45,2],[50,3]],"functionMap":{"names":["<global>","hr"],"mappings":"AAA;iBCO;CDqC"},"hasCjsExports":true},"type":"js/module"}]}