{"dependencies":[{"name":"react","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":1,"column":0,"index":0},"end":{"line":1,"column":43,"index":43}}],"key":"RtGiGa+/H7VrI7GDQDLhO1UbpU8=","exportNames":["*"],"imports":1}},{"name":"./attachHandlers","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":10,"column":0,"index":238},"end":{"line":10,"column":50,"index":288}}],"key":"3mjR74KCCo5t43evU8Hvoyi9yu0=","exportNames":["*"],"imports":1}},{"name":"./updateHandlers","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":11,"column":0,"index":289},"end":{"line":11,"column":50,"index":339}}],"key":"lArlpaD/5d+RB4jQyU++60NVCc0=","exportNames":["*"],"imports":1}},{"name":"./needsToReattach","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":12,"column":0,"index":340},"end":{"line":12,"column":52,"index":392}}],"key":"AnC4N1Crd90FP+3Mxk358neOkRo=","exportNames":["*"],"imports":1}},{"name":"./dropHandlers","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":13,"column":0,"index":393},"end":{"line":13,"column":46,"index":439}}],"key":"3pg09hFbTrtcJ+KzQ97dAmmPlSE=","exportNames":["*"],"imports":1}},{"name":"./utils","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":14,"column":0,"index":440},"end":{"line":14,"column":67,"index":507}}],"key":"fIqjJ6Rx8c7Khc/wm9kX7hQXC5I=","exportNames":["*"],"imports":1}},{"name":"../../../findNodeHandle","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":15,"column":0,"index":508},"end":{"line":15,"column":53,"index":561}}],"key":"k+xfarWxri7fB3IShKFMK0oi5UQ=","exportNames":["*"],"imports":1}}],"output":[{"data":{"code":"__d(function (global, require, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {\n  \"use strict\";\n\n  Object.defineProperty(exports, '__esModule', {\n    value: true\n  });\n  function _interopDefault(e) {\n    return e && e.__esModule ? e : {\n      default: e\n    };\n  }\n  exports.useDetectorUpdater = useDetectorUpdater;\n  var _react = require(_dependencyMap[0]);\n  var _attachHandlers = require(_dependencyMap[1]);\n  var _updateHandlers = require(_dependencyMap[2]);\n  var _needsToReattach = require(_dependencyMap[3]);\n  var _dropHandlers = require(_dependencyMap[4]);\n  var _utils = require(_dependencyMap[5]);\n  var _findNodeHandle = require(_dependencyMap[6]);\n  var findNodeHandle = _interopDefault(_findNodeHandle);\n  // Returns a function that's responsible for updating the attached gestures\n  // If the view has changed, it will reattach the handlers to the new view\n  // If the view remains the same, it will update the handlers with the new config\n  function useDetectorUpdater(state, preparedGesture, gesturesToAttach, gestureConfig, webEventHandlersRef) {\n    var forceRender = (0, _utils.useForceRender)();\n    var updateAttachedGestures = (0, _react.useCallback)(\n    // skipConfigUpdate is used to prevent unnecessary updates when only checking if the view has changed\n    skipConfigUpdate => {\n      // If the underlying view has changed we need to reattach handlers to the new view\n      var viewTag = (0, findNodeHandle.default)(state.viewRef);\n      var didUnderlyingViewChange = viewTag !== state.previousViewTag;\n      if (didUnderlyingViewChange || (0, _needsToReattach.needsToReattach)(preparedGesture, gesturesToAttach)) {\n        (0, _utils.validateDetectorChildren)(state.viewRef);\n        (0, _dropHandlers.dropHandlers)(preparedGesture);\n        (0, _attachHandlers.attachHandlers)({\n          preparedGesture,\n          gestureConfig,\n          gesturesToAttach,\n          webEventHandlersRef,\n          viewTag\n        });\n        if (didUnderlyingViewChange) {\n          state.previousViewTag = viewTag;\n          state.forceRebuildReanimatedEvent = true;\n          forceRender();\n        }\n      } else if (!skipConfigUpdate) {\n        (0, _updateHandlers.updateHandlers)(preparedGesture, gestureConfig, gesturesToAttach);\n      }\n    }, [forceRender, gestureConfig, gesturesToAttach, preparedGesture, state, webEventHandlersRef]);\n    return updateAttachedGestures;\n  }\n});","lineCount":53,"map":[[12,2,20,0,"exports"],[12,9,20,0],[12,10,20,0,"useDetectorUpdater"],[12,28,20,0],[12,31,20,0,"useDetectorUpdater"],[12,49,20,0],[13,2,1,0],[13,6,1,0,"_react"],[13,12,1,0],[13,15,1,0,"require"],[13,22,1,0],[13,23,1,0,"_dependencyMap"],[13,37,1,0],[14,2,10,0],[14,6,10,0,"_attachHandlers"],[14,21,10,0],[14,24,10,0,"require"],[14,31,10,0],[14,32,10,0,"_dependencyMap"],[14,46,10,0],[15,2,11,0],[15,6,11,0,"_updateHandlers"],[15,21,11,0],[15,24,11,0,"require"],[15,31,11,0],[15,32,11,0,"_dependencyMap"],[15,46,11,0],[16,2,12,0],[16,6,12,0,"_needsToReattach"],[16,22,12,0],[16,25,12,0,"require"],[16,32,12,0],[16,33,12,0,"_dependencyMap"],[16,47,12,0],[17,2,13,0],[17,6,13,0,"_dropHandlers"],[17,19,13,0],[17,22,13,0,"require"],[17,29,13,0],[17,30,13,0,"_dependencyMap"],[17,44,13,0],[18,2,14,0],[18,6,14,0,"_utils"],[18,12,14,0],[18,15,14,0,"require"],[18,22,14,0],[18,23,14,0,"_dependencyMap"],[18,37,14,0],[19,2,15,0],[19,6,15,0,"_findNodeHandle"],[19,21,15,0],[19,24,15,0,"require"],[19,31,15,0],[19,32,15,0,"_dependencyMap"],[19,46,15,0],[20,2,15,0],[20,6,15,0,"findNodeHandle"],[20,20,15,0],[20,23,15,0,"_interopDefault"],[20,38,15,0],[20,39,15,0,"_findNodeHandle"],[20,54,15,0],[21,2,17,0],[22,2,18,0],[23,2,19,0],[24,2,20,7],[24,11,20,16,"useDetectorUpdater"],[24,29,20,34,"useDetectorUpdater"],[24,30,21,2,"state"],[24,35,21,29],[24,37,22,2,"preparedGesture"],[24,52,22,39],[24,54,23,2,"gesturesToAttach"],[24,70,23,33],[24,72,24,2,"gestureConfig"],[24,85,24,46],[24,87,25,2,"webEventHandlersRef"],[24,106,25,55],[24,108,26,2],[25,4,27,2],[25,8,27,8,"forceRender"],[25,19,27,19],[25,22,27,22],[25,26,27,22,"useForceRender"],[25,32,27,36],[25,33,27,36,"useForceRender"],[25,47,27,36],[25,49,27,37],[25,50,27,38],[26,4,28,2],[26,8,28,8,"updateAttachedGestures"],[26,30,28,30],[26,33,28,33],[26,37,28,33,"useCallback"],[26,43,28,44],[26,44,28,44,"useCallback"],[26,55,28,44],[27,4,29,4],[28,4,30,5,"skipConfigUpdate"],[28,20,30,31],[28,24,30,36],[29,6,31,6],[30,6,32,6],[30,10,32,12,"viewTag"],[30,17,32,19],[30,20,32,22],[30,24,32,22,"findNodeHandle"],[30,38,32,36],[30,39,32,36,"default"],[30,46,32,36],[30,48,32,37,"state"],[30,53,32,42],[30,54,32,43,"viewRef"],[30,61,32,50],[30,62,32,61],[31,6,33,6],[31,10,33,12,"didUnderlyingViewChange"],[31,33,33,35],[31,36,33,38,"viewTag"],[31,43,33,45],[31,48,33,50,"state"],[31,53,33,55],[31,54,33,56,"previousViewTag"],[31,69,33,71],[32,6,35,6],[32,10,36,8,"didUnderlyingViewChange"],[32,33,36,31],[32,37,37,8],[32,41,37,8,"needsToReattach"],[32,57,37,23],[32,58,37,23,"needsToReattach"],[32,73,37,23],[32,75,37,24,"preparedGesture"],[32,90,37,39],[32,92,37,41,"gesturesToAttach"],[32,108,37,57],[32,109,37,58],[32,111,38,8],[33,8,39,8],[33,12,39,8,"validateDetectorChildren"],[33,18,39,32],[33,19,39,32,"validateDetectorChildren"],[33,43,39,32],[33,45,39,33,"state"],[33,50,39,38],[33,51,39,39,"viewRef"],[33,58,39,46],[33,59,39,47],[34,8,40,8],[34,12,40,8,"dropHandlers"],[34,25,40,20],[34,26,40,20,"dropHandlers"],[34,38,40,20],[34,40,40,21,"preparedGesture"],[34,55,40,36],[34,56,40,37],[35,8,41,8],[35,12,41,8,"attachHandlers"],[35,27,41,22],[35,28,41,22,"attachHandlers"],[35,42,41,22],[35,44,41,23],[36,10,42,10,"preparedGesture"],[36,25,42,25],[37,10,43,10,"gestureConfig"],[37,23,43,23],[38,10,44,10,"gesturesToAttach"],[38,26,44,26],[39,10,45,10,"webEventHandlersRef"],[39,29,45,29],[40,10,46,10,"viewTag"],[41,8,47,8],[41,9,47,9],[41,10,47,10],[42,8,49,8],[42,12,49,12,"didUnderlyingViewChange"],[42,35,49,35],[42,37,49,37],[43,10,50,10,"state"],[43,15,50,15],[43,16,50,16,"previousViewTag"],[43,31,50,31],[43,34,50,34,"viewTag"],[43,41,50,41],[44,10,51,10,"state"],[44,15,51,15],[44,16,51,16,"forceRebuildReanimatedEvent"],[44,43,51,43],[44,46,51,46],[44,50,51,50],[45,10,52,10,"forceRender"],[45,21,52,21],[45,22,52,22],[45,23,52,23],[46,8,53,8],[47,6,54,6],[47,7,54,7],[47,13,54,13],[47,17,54,17],[47,18,54,18,"skipConfigUpdate"],[47,34,54,34],[47,36,54,36],[48,8,55,8],[48,12,55,8,"updateHandlers"],[48,27,55,22],[48,28,55,22,"updateHandlers"],[48,42,55,22],[48,44,55,23,"preparedGesture"],[48,59,55,38],[48,61,55,40,"gestureConfig"],[48,74,55,53],[48,76,55,55,"gesturesToAttach"],[48,92,55,71],[48,93,55,72],[49,6,56,6],[50,4,57,4],[50,5,57,5],[50,7,58,4],[50,8,59,6,"forceRender"],[50,19,59,17],[50,21,60,6,"gestureConfig"],[50,34,60,19],[50,36,61,6,"gesturesToAttach"],[50,52,61,22],[50,54,62,6,"preparedGesture"],[50,69,62,21],[50,71,63,6,"state"],[50,76,63,11],[50,78,64,6,"webEventHandlersRef"],[50,97,64,25],[50,98,66,2],[50,99,66,3],[51,4,68,2],[51,11,68,9,"updateAttachedGestures"],[51,33,68,31],[52,2,69,0],[53,0,69,1],[53,3]],"functionMap":{"names":["<global>","useDetectorUpdater","updateAttachedGestures"],"mappings":"AAA;OCmB;ICU;KD2B;CDY"},"hasCjsExports":false},"type":"js/module"}]}