{"dependencies":[{"name":"@babel/runtime/helpers/slicedToArray","data":{"asyncType":null,"isESMImport":false,"locs":[],"key":"5y7e5+zC7teYEEC6niD9f5zII1M=","exportNames":["*"],"imports":1}}],"output":[{"data":{"code":"__d(function (global, require, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {\n  \"use strict\";\n\n  var _slicedToArray = require(_dependencyMap[0]).default;\n  Object.defineProperty(exports, \"__esModule\", {\n    value: true\n  });\n  exports.resolveHref = undefined;\n  exports.resolveHrefStringWithSegments = resolveHrefStringWithSegments;\n  /** Resolve an href object into a fully qualified, relative href. */\n  var resolveHref = href => {\n    if (typeof href === 'string') {\n      return (0, exports.resolveHref)({\n        pathname: href\n      });\n    }\n    var path = href.pathname ?? '';\n    if (!href?.params) {\n      return path;\n    }\n    var _createQualifiedPathn = createQualifiedPathname(path, {\n        ...href.params\n      }),\n      pathname = _createQualifiedPathn.pathname,\n      params = _createQualifiedPathn.params;\n    var paramsString = createQueryParams(params);\n    return pathname + (paramsString ? `?${paramsString}` : '');\n  };\n  exports.resolveHref = resolveHref;\n  function resolveHrefStringWithSegments(href) {\n    var _ref = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {},\n      _ref$segments = _ref.segments,\n      segments = _ref$segments === undefined ? [] : _ref$segments,\n      _ref$params = _ref.params,\n      params = _ref$params === undefined ? {} : _ref$params;\n    var _ref2 = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {},\n      relativeToDirectory = _ref2.relativeToDirectory;\n    if (href.startsWith('.')) {\n      // Resolve base path by merging the current segments with the params\n      var base = segments?.map(segment => {\n        if (!segment.startsWith('[')) return segment;\n        if (segment.startsWith('[...')) {\n          segment = segment.slice(4, -1);\n          var param = params[segment];\n          if (Array.isArray(param)) {\n            return param.join('/');\n          } else {\n            return param?.split(',')?.join('/') ?? '';\n          }\n        } else {\n          segment = segment.slice(1, -1);\n          return params[segment];\n        }\n      }).filter(Boolean).join('/') ?? '/';\n      if (relativeToDirectory) {\n        base = `${base}/`;\n      }\n      var url = new URL(href, `http://hostname/${base}`);\n      href = `${url.pathname}${url.search}`;\n    }\n    return href;\n  }\n  function createQualifiedPathname(pathname, params) {\n    for (var _ref3 of Object.entries(params)) {\n      var _ref4 = _slicedToArray(_ref3, 2);\n      var key = _ref4[0];\n      var _ref4$ = _ref4[1];\n      var value = _ref4$ === undefined ? '' : _ref4$;\n      var dynamicKey = `[${key}]`;\n      var deepDynamicKey = `[...${key}]`;\n      if (pathname.includes(dynamicKey)) {\n        pathname = pathname.replace(dynamicKey, encodeParam(value));\n      } else if (pathname.includes(deepDynamicKey)) {\n        pathname = pathname.replace(deepDynamicKey, encodeParam(value));\n      } else {\n        continue;\n      }\n      delete params[key];\n    }\n    return {\n      pathname,\n      params\n    };\n  }\n  function encodeParam(param) {\n    if (Array.isArray(param)) {\n      return param.map(p => encodeParam(p)).join('/');\n    }\n    return encodeURIComponent(param.toString());\n  }\n  function createQueryParams(params) {\n    return Object.entries(params)\n    // Allow nullish params\n    .filter(_ref5 => {\n      var _ref6 = _slicedToArray(_ref5, 2),\n        value = _ref6[1];\n      return value != null;\n    }).map(_ref7 => {\n      var _ref8 = _slicedToArray(_ref7, 2),\n        key = _ref8[0],\n        value = _ref8[1];\n      return `${key}=${encodeURIComponent(value.toString())}`;\n    }).join('&');\n  }\n});","lineCount":105,"map":[[2,2,1,0],[2,14,1,12],[4,2,1,13],[4,6,1,13,"_slicedToArray"],[4,20,1,13],[4,23,1,13,"require"],[4,30,1,13],[4,31,1,13,"_dependencyMap"],[4,45,1,13],[4,50,1,13,"default"],[4,57,1,13],[5,2,2,0,"Object"],[5,8,2,6],[5,9,2,7,"defineProperty"],[5,23,2,21],[5,24,2,22,"exports"],[5,31,2,29],[5,33,2,31],[5,45,2,43],[5,47,2,45],[6,4,2,47,"value"],[6,9,2,52],[6,11,2,54],[7,2,2,59],[7,3,2,60],[7,4,2,61],[8,2,3,0,"exports"],[8,9,3,7],[8,10,3,8,"resolveHref"],[8,21,3,19],[8,24,3,19,"undefined"],[8,33,3,28],[9,2,4,0,"exports"],[9,9,4,7],[9,10,4,8,"resolveHrefStringWithSegments"],[9,39,4,37],[9,42,4,40,"resolveHrefStringWithSegments"],[9,71,4,69],[10,2,5,0],[11,2,6,0],[11,6,6,6,"resolveHref"],[11,17,6,17],[11,20,6,21,"href"],[11,24,6,25],[11,28,6,30],[12,4,7,4],[12,8,7,8],[12,15,7,15,"href"],[12,19,7,19],[12,24,7,24],[12,32,7,32],[12,34,7,34],[13,6,8,8],[13,13,8,15],[13,14,8,16],[13,15,8,17],[13,17,8,19,"exports"],[13,24,8,26],[13,25,8,27,"resolveHref"],[13,36,8,38],[13,38,8,40],[14,8,8,42,"pathname"],[14,16,8,50],[14,18,8,52,"href"],[15,6,8,57],[15,7,8,58],[15,8,8,59],[16,4,9,4],[17,4,10,4],[17,8,10,10,"path"],[17,12,10,14],[17,15,10,17,"href"],[17,19,10,21],[17,20,10,22,"pathname"],[17,28,10,30],[17,32,10,34],[17,34,10,36],[18,4,11,4],[18,8,11,8],[18,9,11,9,"href"],[18,13,11,13],[18,15,11,15,"params"],[18,21,11,21],[18,23,11,23],[19,6,12,8],[19,13,12,15,"path"],[19,17,12,19],[20,4,13,4],[21,4,14,4],[21,8,14,4,"_createQualifiedPathn"],[21,29,14,4],[21,32,14,33,"createQualifiedPathname"],[21,55,14,56],[21,56,14,57,"path"],[21,60,14,61],[21,62,14,63],[22,8,15,8],[22,11,15,11,"href"],[22,15,15,15],[22,16,15,16,"params"],[23,6,16,4],[23,7,16,5],[23,8,16,6],[24,6,14,12,"pathname"],[24,14,14,20],[24,17,14,20,"_createQualifiedPathn"],[24,38,14,20],[24,39,14,12,"pathname"],[24,47,14,20],[25,6,14,22,"params"],[25,12,14,28],[25,15,14,28,"_createQualifiedPathn"],[25,36,14,28],[25,37,14,22,"params"],[25,43,14,28],[26,4,17,4],[26,8,17,10,"paramsString"],[26,20,17,22],[26,23,17,25,"createQueryParams"],[26,40,17,42],[26,41,17,43,"params"],[26,47,17,49],[26,48,17,50],[27,4,18,4],[27,11,18,11,"pathname"],[27,19,18,19],[27,23,18,23,"paramsString"],[27,35,18,35],[27,38,18,38],[27,42,18,42,"paramsString"],[27,54,18,54],[27,56,18,56],[27,59,18,59],[27,61,18,61],[27,62,18,62],[28,2,19,0],[28,3,19,1],[29,2,20,0,"exports"],[29,9,20,7],[29,10,20,8,"resolveHref"],[29,21,20,19],[29,24,20,22,"resolveHref"],[29,35,20,33],[30,2,21,0],[30,11,21,9,"resolveHrefStringWithSegments"],[30,40,21,38,"resolveHrefStringWithSegments"],[30,41,21,39,"href"],[30,45,21,43],[30,47,21,112],[31,4,21,112],[31,8,21,112,"_ref"],[31,12,21,112],[31,15,21,112,"arguments"],[31,24,21,112],[31,25,21,112,"length"],[31,31,21,112],[31,39,21,112,"arguments"],[31,48,21,112],[31,56,21,112,"undefined"],[31,65,21,112],[31,68,21,112,"arguments"],[31,77,21,112],[31,83,21,78],[31,84,21,79],[31,85,21,80],[32,6,21,80,"_ref$segments"],[32,19,21,80],[32,22,21,80,"_ref"],[32,26,21,80],[32,27,21,47,"segments"],[32,35,21,55],[33,6,21,47,"segments"],[33,14,21,55],[33,17,21,55,"_ref$segments"],[33,30,21,55],[33,35,21,55,"undefined"],[33,44,21,55],[33,47,21,58],[33,49,21,60],[33,52,21,60,"_ref$segments"],[33,65,21,60],[34,6,21,60,"_ref$params"],[34,17,21,60],[34,20,21,60,"_ref"],[34,24,21,60],[34,25,21,62,"params"],[34,31,21,68],[35,6,21,62,"params"],[35,12,21,68],[35,15,21,68,"_ref$params"],[35,26,21,68],[35,31,21,68,"undefined"],[35,40,21,68],[35,43,21,71],[35,44,21,72],[35,45,21,73],[35,48,21,73,"_ref$params"],[35,59,21,73],[36,4,21,73],[36,8,21,73,"_ref2"],[36,13,21,73],[36,16,21,73,"arguments"],[36,25,21,73],[36,26,21,73,"length"],[36,32,21,73],[36,40,21,73,"arguments"],[36,49,21,73],[36,57,21,73,"undefined"],[36,66,21,73],[36,69,21,73,"arguments"],[36,78,21,73],[36,84,21,108],[36,85,21,109],[36,86,21,110],[37,6,21,84,"relativeToDirectory"],[37,25,21,103],[37,28,21,103,"_ref2"],[37,33,21,103],[37,34,21,84,"relativeToDirectory"],[37,53,21,103],[38,4,22,4],[38,8,22,8,"href"],[38,12,22,12],[38,13,22,13,"startsWith"],[38,23,22,23],[38,24,22,24],[38,27,22,27],[38,28,22,28],[38,30,22,30],[39,6,23,8],[40,6,24,8],[40,10,24,12,"base"],[40,14,24,16],[40,17,24,19,"segments"],[40,25,24,27],[40,27,25,14,"map"],[40,30,25,17],[40,31,25,19,"segment"],[40,38,25,26],[40,42,25,31],[41,8,26,12],[41,12,26,16],[41,13,26,17,"segment"],[41,20,26,24],[41,21,26,25,"startsWith"],[41,31,26,35],[41,32,26,36],[41,35,26,39],[41,36,26,40],[41,38,27,16],[41,45,27,23,"segment"],[41,52,27,30],[42,8,28,12],[42,12,28,16,"segment"],[42,19,28,23],[42,20,28,24,"startsWith"],[42,30,28,34],[42,31,28,35],[42,37,28,41],[42,38,28,42],[42,40,28,44],[43,10,29,16,"segment"],[43,17,29,23],[43,20,29,26,"segment"],[43,27,29,33],[43,28,29,34,"slice"],[43,33,29,39],[43,34,29,40],[43,35,29,41],[43,39,29,45],[43,40,29,46],[44,10,30,16],[44,14,30,22,"param"],[44,19,30,27],[44,22,30,30,"params"],[44,28,30,36],[44,29,30,37,"segment"],[44,36,30,44],[44,37,30,45],[45,10,31,16],[45,14,31,20,"Array"],[45,19,31,25],[45,20,31,26,"isArray"],[45,27,31,33],[45,28,31,34,"param"],[45,33,31,39],[45,34,31,40],[45,36,31,42],[46,12,32,20],[46,19,32,27,"param"],[46,24,32,32],[46,25,32,33,"join"],[46,29,32,37],[46,30,32,38],[46,33,32,41],[46,34,32,42],[47,10,33,16],[47,11,33,17],[47,17,34,21],[48,12,35,20],[48,19,35,27,"param"],[48,24,35,32],[48,26,35,34,"split"],[48,31,35,39],[48,32,35,40],[48,35,35,43],[48,36,35,44],[48,38,35,46,"join"],[48,42,35,50],[48,43,35,51],[48,46,35,54],[48,47,35,55],[48,51,35,59],[48,53,35,61],[49,10,36,16],[50,8,37,12],[50,9,37,13],[50,15,38,17],[51,10,39,16,"segment"],[51,17,39,23],[51,20,39,26,"segment"],[51,27,39,33],[51,28,39,34,"slice"],[51,33,39,39],[51,34,39,40],[51,35,39,41],[51,39,39,45],[51,40,39,46],[52,10,40,16],[52,17,40,23,"params"],[52,23,40,29],[52,24,40,30,"segment"],[52,31,40,37],[52,32,40,38],[53,8,41,12],[54,6,42,8],[54,7,42,9],[54,8,42,10],[54,9,43,13,"filter"],[54,15,43,19],[54,16,43,20,"Boolean"],[54,23,43,27],[54,24,43,28],[54,25,44,13,"join"],[54,29,44,17],[54,30,44,18],[54,33,44,21],[54,34,44,22],[54,38,44,26],[54,41,44,29],[55,6,45,8],[55,10,45,12,"relativeToDirectory"],[55,29,45,31],[55,31,45,33],[56,8,46,12,"base"],[56,12,46,16],[56,15,46,19],[56,18,46,22,"base"],[56,22,46,26],[56,25,46,29],[57,6,47,8],[58,6,48,8],[58,10,48,14,"url"],[58,13,48,17],[58,16,48,20],[58,20,48,24,"URL"],[58,23,48,27],[58,24,48,28,"href"],[58,28,48,32],[58,30,48,34],[58,49,48,53,"base"],[58,53,48,57],[58,55,48,59],[58,56,48,60],[59,6,49,8,"href"],[59,10,49,12],[59,13,49,15],[59,16,49,18,"url"],[59,19,49,21],[59,20,49,22,"pathname"],[59,28,49,30],[59,31,49,33,"url"],[59,34,49,36],[59,35,49,37,"search"],[59,41,49,43],[59,43,49,45],[60,4,50,4],[61,4,51,4],[61,11,51,11,"href"],[61,15,51,15],[62,2,52,0],[63,2,53,0],[63,11,53,9,"createQualifiedPathname"],[63,34,53,32,"createQualifiedPathname"],[63,35,53,33,"pathname"],[63,43,53,41],[63,45,53,43,"params"],[63,51,53,49],[63,53,53,51],[64,4,54,4],[64,13,54,4,"_ref3"],[64,18,54,4],[64,22,54,36,"Object"],[64,28,54,42],[64,29,54,43,"entries"],[64,36,54,50],[64,37,54,51,"params"],[64,43,54,57],[64,44,54,58],[64,46,54,60],[65,6,54,60],[65,10,54,60,"_ref4"],[65,15,54,60],[65,18,54,60,"_slicedToArray"],[65,32,54,60],[65,33,54,60,"_ref3"],[65,38,54,60],[66,6,54,60],[66,10,54,16,"key"],[66,13,54,19],[66,16,54,19,"_ref4"],[66,21,54,19],[67,6,54,19],[67,10,54,19,"_ref4$"],[67,16,54,19],[67,19,54,19,"_ref4"],[67,24,54,19],[68,6,54,19],[68,10,54,21,"value"],[68,15,54,26],[68,18,54,26,"_ref4$"],[68,24,54,26],[68,29,54,26,"undefined"],[68,38,54,26],[68,41,54,29],[68,43,54,31],[68,46,54,31,"_ref4$"],[68,52,54,31],[69,6,55,8],[69,10,55,14,"dynamicKey"],[69,20,55,24],[69,23,55,27],[69,27,55,31,"key"],[69,30,55,34],[69,33,55,37],[70,6,56,8],[70,10,56,14,"deepDynamicKey"],[70,24,56,28],[70,27,56,31],[70,34,56,38,"key"],[70,37,56,41],[70,40,56,44],[71,6,57,8],[71,10,57,12,"pathname"],[71,18,57,20],[71,19,57,21,"includes"],[71,27,57,29],[71,28,57,30,"dynamicKey"],[71,38,57,40],[71,39,57,41],[71,41,57,43],[72,8,58,12,"pathname"],[72,16,58,20],[72,19,58,23,"pathname"],[72,27,58,31],[72,28,58,32,"replace"],[72,35,58,39],[72,36,58,40,"dynamicKey"],[72,46,58,50],[72,48,58,52,"encodeParam"],[72,59,58,63],[72,60,58,64,"value"],[72,65,58,69],[72,66,58,70],[72,67,58,71],[73,6,59,8],[73,7,59,9],[73,13,60,13],[73,17,60,17,"pathname"],[73,25,60,25],[73,26,60,26,"includes"],[73,34,60,34],[73,35,60,35,"deepDynamicKey"],[73,49,60,49],[73,50,60,50],[73,52,60,52],[74,8,61,12,"pathname"],[74,16,61,20],[74,19,61,23,"pathname"],[74,27,61,31],[74,28,61,32,"replace"],[74,35,61,39],[74,36,61,40,"deepDynamicKey"],[74,50,61,54],[74,52,61,56,"encodeParam"],[74,63,61,67],[74,64,61,68,"value"],[74,69,61,73],[74,70,61,74],[74,71,61,75],[75,6,62,8],[75,7,62,9],[75,13,63,13],[76,8,64,12],[77,6,65,8],[78,6,66,8],[78,13,66,15,"params"],[78,19,66,21],[78,20,66,22,"key"],[78,23,66,25],[78,24,66,26],[79,4,67,4],[80,4,68,4],[80,11,68,11],[81,6,68,13,"pathname"],[81,14,68,21],[82,6,68,23,"params"],[83,4,68,30],[83,5,68,31],[84,2,69,0],[85,2,70,0],[85,11,70,9,"encodeParam"],[85,22,70,20,"encodeParam"],[85,23,70,21,"param"],[85,28,70,26],[85,30,70,28],[86,4,71,4],[86,8,71,8,"Array"],[86,13,71,13],[86,14,71,14,"isArray"],[86,21,71,21],[86,22,71,22,"param"],[86,27,71,27],[86,28,71,28],[86,30,71,30],[87,6,72,8],[87,13,72,15,"param"],[87,18,72,20],[87,19,72,21,"map"],[87,22,72,24],[87,23,72,26,"p"],[87,24,72,27],[87,28,72,32,"encodeParam"],[87,39,72,43],[87,40,72,44,"p"],[87,41,72,45],[87,42,72,46],[87,43,72,47],[87,44,72,48,"join"],[87,48,72,52],[87,49,72,53],[87,52,72,56],[87,53,72,57],[88,4,73,4],[89,4,74,4],[89,11,74,11,"encodeURIComponent"],[89,29,74,29],[89,30,74,30,"param"],[89,35,74,35],[89,36,74,36,"toString"],[89,44,74,44],[89,45,74,45],[89,46,74,46],[89,47,74,47],[90,2,75,0],[91,2,76,0],[91,11,76,9,"createQueryParams"],[91,28,76,26,"createQueryParams"],[91,29,76,27,"params"],[91,35,76,33],[91,37,76,35],[92,4,77,4],[92,11,77,12,"Object"],[92,17,77,18],[92,18,77,19,"entries"],[92,25,77,26],[92,26,77,27,"params"],[92,32,77,33],[93,4,78,8],[94,4,78,8],[94,5,79,9,"filter"],[94,11,79,15],[94,12,79,16,"_ref5"],[94,17,79,16],[95,6,79,16],[95,10,79,16,"_ref6"],[95,15,79,16],[95,18,79,16,"_slicedToArray"],[95,32,79,16],[95,33,79,16,"_ref5"],[95,38,79,16],[96,8,79,20,"value"],[96,13,79,25],[96,16,79,25,"_ref6"],[96,21,79,25],[97,6,79,25],[97,13,79,31,"value"],[97,18,79,36],[97,22,79,40],[97,26,79,44],[98,4,79,44],[98,6,79,45],[98,7,80,9,"map"],[98,10,80,12],[98,11,80,13,"_ref7"],[98,16,80,13],[99,6,80,13],[99,10,80,13,"_ref8"],[99,15,80,13],[99,18,80,13,"_slicedToArray"],[99,32,80,13],[99,33,80,13,"_ref7"],[99,38,80,13],[100,8,80,15,"key"],[100,11,80,18],[100,14,80,18,"_ref8"],[100,19,80,18],[101,8,80,20,"value"],[101,13,80,25],[101,16,80,25,"_ref8"],[101,21,80,25],[102,6,80,25],[102,13,80,31],[102,16,80,34,"key"],[102,19,80,37],[102,23,80,41,"encodeURIComponent"],[102,41,80,59],[102,42,80,60,"value"],[102,47,80,65],[102,48,80,66,"toString"],[102,56,80,74],[102,57,80,75],[102,58,80,76],[102,59,80,77],[102,61,80,79],[103,4,80,79],[103,6,80,80],[103,7,81,9,"join"],[103,11,81,13],[103,12,81,14],[103,15,81,17],[103,16,81,18],[104,2,82,0],[105,0,82,1],[105,3]],"functionMap":{"names":["<global>","resolveHref","resolveHrefStringWithSegments","segments.map$argument_0","createQualifiedPathname","encodeParam","param.map$argument_0","createQueryParams","Object.entries.filter$argument_0","Object.entries.filter.map$argument_0"],"mappings":"AAA;oBCK;CDa;AEE;kBCI;SDiB;CFU;AIC;CJgB;AKC;yBCE,qBD;CLG;AOC;gBCG,4BD;aEC,kEF;CPE"},"hasCjsExports":true},"type":"js/module"}]}