{"dependencies":[],"output":[{"data":{"code":"__d(function (global, require, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {\n  \"use strict\";\n\n  Object.defineProperty(exports, '__esModule', {\n    value: true\n  });\n  Object.defineProperty(exports, \"NotificationFeedbackType\", {\n    enumerable: true,\n    get: function () {\n      return NotificationFeedbackType;\n    }\n  });\n  Object.defineProperty(exports, \"ImpactFeedbackStyle\", {\n    enumerable: true,\n    get: function () {\n      return ImpactFeedbackStyle;\n    }\n  });\n  Object.defineProperty(exports, \"AndroidHaptics\", {\n    enumerable: true,\n    get: function () {\n      return AndroidHaptics;\n    }\n  });\n  // @needsAudit\n  /**\n   * The type of notification feedback generated by a `UINotificationFeedbackGenerator` object.\n   * [`UINotificationFeedbackType`](https://developer.apple.com/documentation/uikit/uinotificationfeedbackgenerator/feedbacktype).\n   */\n  var NotificationFeedbackType = /*#__PURE__*/function (NotificationFeedbackType) {\n    /**\n     * A notification feedback type indicating that a task has completed successfully.\n     */\n    NotificationFeedbackType[\"Success\"] = \"success\";\n    /**\n     * A notification feedback type indicating that a task has produced a warning.\n     */\n    NotificationFeedbackType[\"Warning\"] = \"warning\";\n    /**\n     * A notification feedback type indicating that a task has failed.\n     */\n    NotificationFeedbackType[\"Error\"] = \"error\";\n    return NotificationFeedbackType;\n  }({}); // @needsAudit\n  /**\n   * The mass of the objects in the collision simulated by a `UIImpactFeedbackGenerator` object\n   * [`UINotificationFeedbackStyle`](https://developer.apple.com/documentation/uikit/uiimpactfeedbackgenerator/feedbackstyle).\n   */\n  var ImpactFeedbackStyle = /*#__PURE__*/function (ImpactFeedbackStyle) {\n    /**\n     * A collision between small, light user interface elements.\n     */\n    ImpactFeedbackStyle[\"Light\"] = \"light\";\n    /**\n     * A collision between moderately sized user interface elements.\n     */\n    ImpactFeedbackStyle[\"Medium\"] = \"medium\";\n    /**\n     * A collision between large, heavy user interface elements.\n     */\n    ImpactFeedbackStyle[\"Heavy\"] = \"heavy\";\n    /**\n     * A collision between user interface elements that are soft, exhibiting a large amount of compression or elasticity.\n     */\n    ImpactFeedbackStyle[\"Soft\"] = \"soft\";\n    /**\n     * A collision between user interface elements that are rigid, exhibiting a small amount of compression or elasticity.\n     */\n    ImpactFeedbackStyle[\"Rigid\"] = \"rigid\";\n    return ImpactFeedbackStyle;\n  }({});\n  /**\n   * @platform android\n   */\n  var AndroidHaptics = /*#__PURE__*/function (AndroidHaptics) {\n    /**\n     * A haptic effect to signal the confirmation or successful completion of a user interaction.\n     */\n    AndroidHaptics[\"Confirm\"] = \"confirm\";\n    /**\n     * A haptic effect to signal the rejection or failure of a user interaction.\n     */\n    AndroidHaptics[\"Reject\"] = \"reject\";\n    /**\n     * The user has started a gesture (for example, on the soft keyboard).\n     */\n    AndroidHaptics[\"Gesture_Start\"] = \"gesture-start\";\n    /**\n     * The user has finished a gesture (for example, on the soft keyboard).\n     */\n    AndroidHaptics[\"Gesture_End\"] = \"gesture-end\";\n    /**\n     * The user has toggled a switch or button into the on position.\n     */\n    AndroidHaptics[\"Toggle_On\"] = \"toggle-on\";\n    /**\n     * The user has toggled a switch or button into the off position.\n     */\n    AndroidHaptics[\"Toggle_Off\"] = \"toggle-off\";\n    /**\n     * The user has pressed either an hour or minute tick of a Clock.\n     */\n    AndroidHaptics[\"Clock_Tick\"] = \"clock-tick\";\n    /**\n     * The user has performed a context click on an object.\n     */\n    AndroidHaptics[\"Context_Click\"] = \"context-click\";\n    /**\n     * The user has started a drag-and-drop gesture. The drag target has just been \"picked up\".\n     */\n    AndroidHaptics[\"Drag_Start\"] = \"drag-start\";\n    /**\n     * The user has pressed a soft keyboard key.\n     */\n    AndroidHaptics[\"Keyboard_Tap\"] = \"keyboard-tap\";\n    /**\n     * The user has pressed a virtual or software keyboard key.\n     */\n    AndroidHaptics[\"Keyboard_Press\"] = \"keyboard-press\";\n    /**\n     * The user has released a virtual keyboard key.\n     */\n    AndroidHaptics[\"Keyboard_Release\"] = \"keyboard-release\";\n    /**\n     * The user has performed a long press on an object that results in an action being performed.\n     */\n    AndroidHaptics[\"Long_Press\"] = \"long-press\";\n    /**\n     * The user has pressed on a virtual on-screen key.\n     */\n    AndroidHaptics[\"Virtual_Key\"] = \"virtual-key\";\n    /**\n     * The user has released a virtual key.\n     */\n    AndroidHaptics[\"Virtual_Key_Release\"] = \"virtual-key-release\";\n    /**\n     * No haptic feedback should be performed.\n     */\n    AndroidHaptics[\"No_Haptics\"] = \"no-haptics\";\n    /**\n     * The user is switching between a series of potential choices. For example, items in a list or discrete points on a slider.\n     */\n    AndroidHaptics[\"Segment_Tick\"] = \"segment-tick\";\n    /**\n     * The user is switching between a series of many potential choices. For example, minutes on a clock face or individual percentages.\n     * This constant is expected to be very soft, so as not to be uncomfortable when performed a lot in quick succession.\n     * If the device can't make a suitably soft vibration, then it may not make any vibration.\n     */\n    AndroidHaptics[\"Segment_Frequent_Tick\"] = \"segment-frequent-tick\";\n    /**\n     * The user has performed a selection/insertion handle move on text field.\n     */\n    AndroidHaptics[\"Text_Handle_Move\"] = \"text-handle-move\";\n    return AndroidHaptics;\n  }({});\n});","lineCount":156,"map":[[7,2,6,0,"Object"],[7,8,6,0],[7,9,6,0,"defineProperty"],[7,23,6,0],[7,24,6,0,"exports"],[7,31,6,0],[8,4,6,0,"enumerable"],[8,14,6,0],[9,4,6,0,"get"],[9,7,6,0],[9,18,6,0,"get"],[9,19,6,0],[10,6,6,0],[10,13,6,0,"NotificationFeedbackType"],[10,37,6,0],[11,4,6,0],[12,2,6,0],[13,2,26,0,"Object"],[13,8,26,0],[13,9,26,0,"defineProperty"],[13,23,26,0],[13,24,26,0,"exports"],[13,31,26,0],[14,4,26,0,"enumerable"],[14,14,26,0],[15,4,26,0,"get"],[15,7,26,0],[15,18,26,0,"get"],[15,19,26,0],[16,6,26,0],[16,13,26,0,"ImpactFeedbackStyle"],[16,32,26,0],[17,4,26,0],[18,2,26,0],[19,2,52,0,"Object"],[19,8,52,0],[19,9,52,0,"defineProperty"],[19,23,52,0],[19,24,52,0,"exports"],[19,31,52,0],[20,4,52,0,"enumerable"],[20,14,52,0],[21,4,52,0,"get"],[21,7,52,0],[21,18,52,0,"get"],[21,19,52,0],[22,6,52,0],[22,13,52,0,"AndroidHaptics"],[22,27,52,0],[23,4,52,0],[24,2,52,0],[25,2,1,0],[26,2,2,0],[27,0,3,0],[28,0,4,0],[29,0,5,0],[30,2,2,0],[30,6,6,12,"NotificationFeedbackType"],[30,30,6,36],[30,56,6,12,"NotificationFeedbackType"],[30,80,6,36],[31,4,7,2],[32,0,8,0],[33,0,9,0],[34,4,6,12,"NotificationFeedbackType"],[34,28,6,36],[35,4,11,2],[36,0,12,0],[37,0,13,0],[38,4,6,12,"NotificationFeedbackType"],[38,28,6,36],[39,4,15,2],[40,0,16,0],[41,0,17,0],[42,4,6,12,"NotificationFeedbackType"],[42,28,6,36],[43,4,6,36],[43,11,6,12,"NotificationFeedbackType"],[43,35,6,36],[44,2,6,36],[44,9,21,0],[45,2,22,0],[46,0,23,0],[47,0,24,0],[48,0,25,0],[49,2,22,0],[49,6,26,12,"ImpactFeedbackStyle"],[49,25,26,31],[49,51,26,12,"ImpactFeedbackStyle"],[49,70,26,31],[50,4,27,2],[51,0,28,0],[52,0,29,0],[53,4,26,12,"ImpactFeedbackStyle"],[53,23,26,31],[54,4,31,2],[55,0,32,0],[56,0,33,0],[57,4,26,12,"ImpactFeedbackStyle"],[57,23,26,31],[58,4,35,2],[59,0,36,0],[60,0,37,0],[61,4,26,12,"ImpactFeedbackStyle"],[61,23,26,31],[62,4,39,2],[63,0,40,0],[64,0,41,0],[65,4,26,12,"ImpactFeedbackStyle"],[65,23,26,31],[66,4,43,2],[67,0,44,0],[68,0,45,0],[69,4,26,12,"ImpactFeedbackStyle"],[69,23,26,31],[70,4,26,31],[70,11,26,12,"ImpactFeedbackStyle"],[70,30,26,31],[71,2,26,31],[72,2,49,0],[73,0,50,0],[74,0,51,0],[75,2,49,0],[75,6,52,12,"AndroidHaptics"],[75,20,52,26],[75,46,52,12,"AndroidHaptics"],[75,60,52,26],[76,4,53,2],[77,0,54,0],[78,0,55,0],[79,4,52,12,"AndroidHaptics"],[79,18,52,26],[80,4,57,2],[81,0,58,0],[82,0,59,0],[83,4,52,12,"AndroidHaptics"],[83,18,52,26],[84,4,61,2],[85,0,62,0],[86,0,63,0],[87,4,52,12,"AndroidHaptics"],[87,18,52,26],[88,4,65,2],[89,0,66,0],[90,0,67,0],[91,4,52,12,"AndroidHaptics"],[91,18,52,26],[92,4,69,2],[93,0,70,0],[94,0,71,0],[95,4,52,12,"AndroidHaptics"],[95,18,52,26],[96,4,73,2],[97,0,74,0],[98,0,75,0],[99,4,52,12,"AndroidHaptics"],[99,18,52,26],[100,4,77,2],[101,0,78,0],[102,0,79,0],[103,4,52,12,"AndroidHaptics"],[103,18,52,26],[104,4,81,2],[105,0,82,0],[106,0,83,0],[107,4,52,12,"AndroidHaptics"],[107,18,52,26],[108,4,85,2],[109,0,86,0],[110,0,87,0],[111,4,52,12,"AndroidHaptics"],[111,18,52,26],[112,4,89,2],[113,0,90,0],[114,0,91,0],[115,4,52,12,"AndroidHaptics"],[115,18,52,26],[116,4,93,2],[117,0,94,0],[118,0,95,0],[119,4,52,12,"AndroidHaptics"],[119,18,52,26],[120,4,97,2],[121,0,98,0],[122,0,99,0],[123,4,52,12,"AndroidHaptics"],[123,18,52,26],[124,4,101,2],[125,0,102,0],[126,0,103,0],[127,4,52,12,"AndroidHaptics"],[127,18,52,26],[128,4,105,2],[129,0,106,0],[130,0,107,0],[131,4,52,12,"AndroidHaptics"],[131,18,52,26],[132,4,109,2],[133,0,110,0],[134,0,111,0],[135,4,52,12,"AndroidHaptics"],[135,18,52,26],[136,4,113,2],[137,0,114,0],[138,0,115,0],[139,4,52,12,"AndroidHaptics"],[139,18,52,26],[140,4,117,2],[141,0,118,0],[142,0,119,0],[143,4,52,12,"AndroidHaptics"],[143,18,52,26],[144,4,121,2],[145,0,122,0],[146,0,123,0],[147,0,124,0],[148,0,125,0],[149,4,52,12,"AndroidHaptics"],[149,18,52,26],[150,4,127,2],[151,0,128,0],[152,0,129,0],[153,4,52,12,"AndroidHaptics"],[153,18,52,26],[154,4,52,26],[154,11,52,12,"AndroidHaptics"],[154,25,52,26],[155,2,52,26],[156,0,52,26],[156,3]],"functionMap":{"names":["<global>"],"mappings":"AAA"},"hasCjsExports":false},"type":"js/module"}]}