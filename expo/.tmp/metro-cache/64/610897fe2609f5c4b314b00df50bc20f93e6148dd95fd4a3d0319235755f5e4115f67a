{"dependencies":[{"name":"@babel/runtime/helpers/objectWithoutProperties","data":{"asyncType":null,"isESMImport":false,"locs":[],"key":"fnQVLibs90KHiJ7y48fLgPWzDS0=","exportNames":["*"],"imports":1}},{"name":"@babel/runtime/helpers/asyncToGenerator","data":{"asyncType":null,"isESMImport":false,"locs":[],"key":"YisBBiy2Xm9DEVdFebZ2nbgAHBo=","exportNames":["*"],"imports":1}},{"name":"expo-modules-core","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":1,"column":0,"index":0},"end":{"line":1,"column":47,"index":47}}],"key":"fU8WLIPqoAGygnPbZ/QJiQQfXEY=","exportNames":["*"],"imports":1}},{"name":"react-native","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":2,"column":0,"index":48},"end":{"line":2,"column":37,"index":85}}],"key":"KyzuX10g6ixS9UfynhmjlvCIG3g=","exportNames":["*"],"imports":1}},{"name":"./ExpoUpdates","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":3,"column":0,"index":86},"end":{"line":3,"column":40,"index":126}}],"key":"xvfiwKXsFVvB05bziLrxffeS3bo=","exportNames":["*"],"imports":1}},{"name":"./Updates.types","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":4,"column":0,"index":127},"end":{"line":4,"column":66,"index":193}}],"key":"DhdHs5n8PWgUuT3xXDIgOGCWs8A=","exportNames":["*"],"imports":1}}],"output":[{"data":{"code":"__d(function (global, require, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {\n  \"use strict\";\n\n  var _excluded = [\"manifestString\"],\n    _excluded2 = [\"manifestString\"];\n  Object.defineProperty(exports, '__esModule', {\n    value: true\n  });\n  function _interopDefault(e) {\n    return e && e.__esModule ? e : {\n      default: e\n    };\n  }\n  Object.defineProperty(exports, \"isEnabled\", {\n    enumerable: true,\n    get: function () {\n      return isEnabled;\n    }\n  });\n  Object.defineProperty(exports, \"updateId\", {\n    enumerable: true,\n    get: function () {\n      return updateId;\n    }\n  });\n  Object.defineProperty(exports, \"channel\", {\n    enumerable: true,\n    get: function () {\n      return channel;\n    }\n  });\n  Object.defineProperty(exports, \"runtimeVersion\", {\n    enumerable: true,\n    get: function () {\n      return runtimeVersion;\n    }\n  });\n  Object.defineProperty(exports, \"checkAutomatically\", {\n    enumerable: true,\n    get: function () {\n      return checkAutomatically;\n    }\n  });\n  Object.defineProperty(exports, \"localAssets\", {\n    enumerable: true,\n    get: function () {\n      return localAssets;\n    }\n  });\n  Object.defineProperty(exports, \"isEmergencyLaunch\", {\n    enumerable: true,\n    get: function () {\n      return isEmergencyLaunch;\n    }\n  });\n  Object.defineProperty(exports, \"emergencyLaunchReason\", {\n    enumerable: true,\n    get: function () {\n      return emergencyLaunchReason;\n    }\n  });\n  Object.defineProperty(exports, \"launchDuration\", {\n    enumerable: true,\n    get: function () {\n      return launchDuration;\n    }\n  });\n  Object.defineProperty(exports, \"isEmbeddedLaunch\", {\n    enumerable: true,\n    get: function () {\n      return isEmbeddedLaunch;\n    }\n  });\n  Object.defineProperty(exports, \"isUsingEmbeddedAssets\", {\n    enumerable: true,\n    get: function () {\n      return isUsingEmbeddedAssets;\n    }\n  });\n  Object.defineProperty(exports, \"manifest\", {\n    enumerable: true,\n    get: function () {\n      return manifest;\n    }\n  });\n  Object.defineProperty(exports, \"createdAt\", {\n    enumerable: true,\n    get: function () {\n      return createdAt;\n    }\n  });\n  exports.reloadAsync = reloadAsync;\n  exports.checkForUpdateAsync = checkForUpdateAsync;\n  exports.getExtraParamsAsync = getExtraParamsAsync;\n  exports.setExtraParamAsync = setExtraParamAsync;\n  exports.readLogEntriesAsync = readLogEntriesAsync;\n  exports.clearLogEntriesAsync = clearLogEntriesAsync;\n  exports.fetchUpdateAsync = fetchUpdateAsync;\n  exports.setUpdateURLAndRequestHeadersOverride = setUpdateURLAndRequestHeadersOverride;\n  exports.setUpdateRequestHeadersOverride = setUpdateRequestHeadersOverride;\n  exports.showReloadScreen = showReloadScreen;\n  exports.hideReloadScreen = hideReloadScreen;\n  var _babelRuntimeHelpersObjectWithoutProperties = require(_dependencyMap[0]);\n  var _objectWithoutProperties = _interopDefault(_babelRuntimeHelpersObjectWithoutProperties);\n  var _babelRuntimeHelpersAsyncToGenerator = require(_dependencyMap[1]);\n  var _asyncToGenerator = _interopDefault(_babelRuntimeHelpersAsyncToGenerator);\n  var _expoModulesCore = require(_dependencyMap[2]);\n  var _reactNative = require(_dependencyMap[3]);\n  var _ExpoUpdates = require(_dependencyMap[4]);\n  var ExpoUpdates = _interopDefault(_ExpoUpdates);\n  var _UpdatesTypes = require(_dependencyMap[5]);\n  /**\n   * Whether `expo-updates` is enabled. This may be false in a variety of cases including:\n   * - enabled set to false in configuration\n   * - missing or invalid URL in configuration\n   * - missing runtime version or SDK version in configuration\n   * - error accessing storage on device during initialization\n   *\n   * When false, the embedded update is loaded.\n   */\n  var isEnabled = !!ExpoUpdates.default.isEnabled;\n  /**\n   * The UUID that uniquely identifies the currently running update. The\n   * UUID is represented in its canonical string form and will always use lowercase letters.\n   * This value is `null` when running in a local development environment or any other environment where `expo-updates` is disabled.\n   * @example\n   * `\"xxxxxxxx-xxxx-xxxx-xxxx-xxxxxxxxxxxx\"`\n   */\n  var updateId = ExpoUpdates.default.updateId && typeof ExpoUpdates.default.updateId === 'string' ? ExpoUpdates.default.updateId.toLowerCase() : null;\n  /**\n   * The channel name of the current build, if configured for use with EAS Update. `null` otherwise.\n   *\n   * Expo Go and development builds are not set to a specific channel and can run any updates compatible with their native runtime. Therefore, this value will always be `null` when running an update on Expo Go or a development build.\n   */\n  var channel = ExpoUpdates.default.channel ?? null;\n  /**\n   * The runtime version of the current build.\n   */\n  var runtimeVersion = ExpoUpdates.default.runtimeVersion ?? null;\n  var _checkAutomaticallyMapNativeToJS = {\n    ALWAYS: _UpdatesTypes.UpdatesCheckAutomaticallyValue.ON_LOAD,\n    ERROR_RECOVERY_ONLY: _UpdatesTypes.UpdatesCheckAutomaticallyValue.ON_ERROR_RECOVERY,\n    NEVER: _UpdatesTypes.UpdatesCheckAutomaticallyValue.NEVER,\n    WIFI_ONLY: _UpdatesTypes.UpdatesCheckAutomaticallyValue.WIFI_ONLY\n  };\n  /**\n   * Determines if and when `expo-updates` checks for and downloads updates automatically on startup.\n   */\n  var checkAutomatically = _checkAutomaticallyMapNativeToJS[ExpoUpdates.default.checkAutomatically] ?? null;\n  // @docsMissing\n  /**\n   * @hidden\n   */\n  var localAssets = ExpoUpdates.default.localAssets ?? {};\n  /**\n   * `expo-updates` does its very best to always launch monotonically newer versions of your app so\n   * you don't need to worry about backwards compatibility when you put out an update. In very rare\n   * cases, it's possible that `expo-updates` may need to fall back to the update that's embedded in\n   * the app binary, even after newer updates have been downloaded and run (an \"emergency launch\").\n   * This boolean will be `true` if the app is launching under this fallback mechanism and `false`\n   * otherwise. If you are concerned about backwards compatibility of future updates to your app, you\n   * can use this constant to provide special behavior for this rare case.\n   */\n  var isEmergencyLaunch = ExpoUpdates.default.isEmergencyLaunch;\n  /**\n   * If `isEmergencyLaunch` is set to true, this will contain a string error message describing\n   * what failed during initialization.\n   */\n  var emergencyLaunchReason = ExpoUpdates.default.emergencyLaunchReason;\n  /**\n   * Number of milliseconds it took to launch.\n   */\n  var launchDuration = ExpoUpdates.default.launchDuration;\n  /**\n   * This will be true if the currently running update is the one embedded in the build,\n   * and not one downloaded from the updates server.\n   */\n  var isEmbeddedLaunch = ExpoUpdates.default.isEmbeddedLaunch || false;\n  // @docsMissing\n  /**\n   * @hidden\n   */\n  var isUsingEmbeddedAssets = ExpoUpdates.default.isUsingEmbeddedAssets || false;\n  /**\n   * If `expo-updates` is enabled, this is the\n   * [manifest](/versions/latest/sdk/constants/#manifest) (or\n   * [classic manifest](/versions/latest/sdk/constants/#appmanifest))\n   * object for the update that's currently running.\n   *\n   * In development mode, or any other environment in which `expo-updates` is disabled, this object is\n   * empty.\n   */\n  var manifest = (ExpoUpdates.default.manifestString ? JSON.parse(ExpoUpdates.default.manifestString) : ExpoUpdates.default.manifest) ?? {};\n  /**\n   * If `expo-updates` is enabled, this is a `Date` object representing the creation time of the update that's currently running (whether it was embedded or downloaded at runtime).\n   *\n   * In development mode, or any other environment in which `expo-updates` is disabled, this value is\n   * null.\n   */\n  var createdAt = ExpoUpdates.default.commitTime ? new Date(ExpoUpdates.default.commitTime) : null;\n  /**\n   * During non-expo development we block accessing the updates API methods on the JS side, but when developing in\n   * Expo Go or a development client build, the controllers should have control over which API methods should\n   * be allowed.\n   */\n  var shouldDeferToNativeForAPIMethodAvailabilityInDevelopment = !!ExpoUpdates.default.shouldDeferToNativeForAPIMethodAvailabilityInDevelopment;\n  /**\n   * Developer tool is set when a project is served by `expo start`.\n   */\n  var isUsingDeveloperTool = 'extra' in manifest ? !!manifest.extra?.expoGo?.developer?.tool : false;\n  var manualUpdatesInstructions = \"To test usage of the expo-updates JS API in your app, make a release build with `npx expo run:ios --configuration Release` or `npx expo run:android --variant Release`.\";\n  function resolveImageSource(source) {\n    if (typeof source === 'string') {\n      return {\n        url: source\n      };\n    }\n    if (typeof source === 'number') {\n      var resolved = _reactNative.Image.resolveAssetSource(source);\n      if (resolved) {\n        return {\n          url: resolved.uri,\n          width: resolved.width,\n          height: resolved.height,\n          scale: resolved.scale\n        };\n      }\n      return null;\n    }\n    if (typeof source === 'object' && source !== null) {\n      return source;\n    }\n    return null;\n  }\n  function resolveReloadScreenOptions(options) {\n    if (!options.image) {\n      return options;\n    }\n    var resolvedImage = resolveImageSource(options.image);\n    return {\n      ...options,\n      image: resolvedImage || undefined\n    };\n  }\n  /**\n   * Instructs the app to reload using the most recently downloaded version. This is useful for\n   * triggering a newly downloaded update to launch without the user needing to manually restart the\n   * app.\n   * Unlike `Expo.reloadAppAsync()` provided by the `expo` package,\n   * this function not only reloads the app but also changes the loaded JavaScript bundle to that of the most recently downloaded update.\n   *\n   * It is not recommended to place any meaningful logic after a call to `await\n   * Updates.reloadAsync()`. This is because the promise is resolved after verifying that the app can\n   * be reloaded, and immediately before posting an asynchronous task to the main thread to actually\n   * reload the app. It is unsafe to make any assumptions about whether any more JS code will be\n   * executed after the `Updates.reloadAsync` method call resolves, since that depends on the OS and\n   * the state of the native module and main threads.\n   *\n   * This method cannot be used in Expo Go or development mode, and the returned promise will be rejected if you\n   * try to do so. It also rejects when `expo-updates` is not enabled.\n   *\n   * @return A promise that fulfills right before the reload instruction is sent to the JS runtime, or\n   * rejects if it cannot find a reference to the JS runtime. If the promise is rejected in production\n   * mode, it most likely means you have installed the module incorrectly. Double check you've\n   * followed the installation instructions. In particular, on iOS ensure that you set the `bridge`\n   * property on `EXUpdatesAppController` with a pointer to the `RCTBridge` you want to reload, and on\n   * Android ensure you either call `UpdatesController.initialize` with the instance of\n   * `ReactApplication` you want to reload, or call `UpdatesController.setReactNativeHost` with the\n   * proper instance of `ReactNativeHost`.\n   */\n  function reloadAsync(_x) {\n    return _reloadAsync.apply(this, arguments);\n  }\n  /**\n   * Checks the server to see if a newly deployed update to your project is available. Does not\n   * actually download the update. This method cannot be used in development mode, and the returned\n   * promise will be rejected if you try to do so.\n   *\n   * Checking for an update uses a device's bandwidth and battery life like any network call.\n   * Additionally, updates served by Expo may be rate limited. A good rule of thumb to check for\n   * updates judiciously is to check when the user launches or foregrounds the app. Avoid polling for\n   * updates in a frequent loop.\n   *\n   * @return A promise that fulfills with an [`UpdateCheckResult`](#updatecheckresult) object.\n   *\n   * The promise rejects in Expo Go or if the app is in development mode, or if there is an unexpected error or\n   * timeout communicating with the server. It also rejects when `expo-updates` is not enabled.\n   */\n  function _reloadAsync() {\n    _reloadAsync = (0, _asyncToGenerator.default)(function* (options) {\n      if (isUsingDeveloperTool && !shouldDeferToNativeForAPIMethodAvailabilityInDevelopment) {\n        throw new _expoModulesCore.CodedError('ERR_UPDATES_DISABLED', `You cannot use the Updates module in development mode in a production app. ${manualUpdatesInstructions}`);\n      }\n      if (options?.reloadScreenOptions) {\n        var resolvedOptions = resolveReloadScreenOptions(options.reloadScreenOptions);\n        return yield ExpoUpdates.default.reload(resolvedOptions);\n      }\n      yield ExpoUpdates.default.reload(null);\n    });\n    return _reloadAsync.apply(this, arguments);\n  }\n  function checkForUpdateAsync() {\n    return _checkForUpdateAsync.apply(this, arguments);\n  }\n  /**\n   * Retrieves the current extra params.\n   *\n   * This method cannot be used in Expo Go or development mode. It also rejects when `expo-updates` is not enabled.\n   */\n  function _checkForUpdateAsync() {\n    _checkForUpdateAsync = (0, _asyncToGenerator.default)(function* () {\n      if (isUsingDeveloperTool && !shouldDeferToNativeForAPIMethodAvailabilityInDevelopment) {\n        throw new _expoModulesCore.CodedError('ERR_UPDATES_DISABLED', `You cannot check for updates in development mode. ${manualUpdatesInstructions}`);\n      }\n      var result = yield ExpoUpdates.default.checkForUpdateAsync();\n      if ('manifestString' in result) {\n        var manifestString = result.manifestString,\n          rest = (0, _objectWithoutProperties.default)(result, _excluded);\n        return {\n          ...rest,\n          manifest: JSON.parse(manifestString)\n        };\n      }\n      return result;\n    });\n    return _checkForUpdateAsync.apply(this, arguments);\n  }\n  function getExtraParamsAsync() {\n    return _getExtraParamsAsync.apply(this, arguments);\n  }\n  /**\n   * Sets an extra param if value is non-null, otherwise unsets the param.\n   * Extra params are sent as an [Expo Structured Field Value Dictionary](/technical-specs/expo-sfv-0/)\n   * in the `Expo-Extra-Params` header of update requests. A compliant update server may use these params when selecting an update to serve.\n   *\n   * This method cannot be used in Expo Go or development mode. It also rejects when `expo-updates` is not enabled.\n   */\n  function _getExtraParamsAsync() {\n    _getExtraParamsAsync = (0, _asyncToGenerator.default)(function* () {\n      return yield ExpoUpdates.default.getExtraParamsAsync();\n    });\n    return _getExtraParamsAsync.apply(this, arguments);\n  }\n  function setExtraParamAsync(_x2, _x3) {\n    return _setExtraParamAsync.apply(this, arguments);\n  }\n  /**\n   * Retrieves the most recent `expo-updates` log entries.\n   *\n   * @param maxAge Sets the max age of retrieved log entries in milliseconds. Default to `3600000` ms (1 hour).\n   *\n   * @return A promise that fulfills with an array of [`UpdatesLogEntry`](#updateslogentry) objects;\n   *\n   * The promise rejects if there is an unexpected error in retrieving the logs.\n   */\n  function _setExtraParamAsync() {\n    _setExtraParamAsync = (0, _asyncToGenerator.default)(function* (key, value) {\n      return yield ExpoUpdates.default.setExtraParamAsync(key, value ?? null);\n    });\n    return _setExtraParamAsync.apply(this, arguments);\n  }\n  function readLogEntriesAsync() {\n    return _readLogEntriesAsync.apply(this, arguments);\n  }\n  /**\n   * Clears existing `expo-updates` log entries.\n   *\n   * > For now, this operation does nothing on the client.  Once log persistence has been\n   * > implemented, this operation will actually remove existing logs.\n   *\n   * @return A promise that fulfills if the clear operation was successful.\n   *\n   * The promise rejects if there is an unexpected error in clearing the logs.\n   *\n   */\n  function _readLogEntriesAsync() {\n    _readLogEntriesAsync = (0, _asyncToGenerator.default)(function* () {\n      var maxAge = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : 3600000;\n      return yield ExpoUpdates.default.readLogEntriesAsync(maxAge);\n    });\n    return _readLogEntriesAsync.apply(this, arguments);\n  }\n  function clearLogEntriesAsync() {\n    return _clearLogEntriesAsync.apply(this, arguments);\n  }\n  /**\n   * Downloads the most recently deployed update to your project from server to the device's local\n   * storage. This method cannot be used in development mode, and the returned promise will be\n   * rejected if you try to do so.\n   *\n   > **Note:** [`reloadAsync()`](#updatesreloadasync) can be called after promise resolution to\n   * reload the app using the most recently downloaded version. Otherwise, the update will be applied\n   * on the next app cold start.\n   *\n   * @return A promise that fulfills with an [`UpdateFetchResult`](#updatefetchresult) object.\n   *\n   * The promise rejects in Expo Go or if the app is in development mode, or if there is an unexpected error or\n   * timeout communicating with the server. It also rejects when `expo-updates` is not enabled.\n   */\n  function _clearLogEntriesAsync() {\n    _clearLogEntriesAsync = (0, _asyncToGenerator.default)(function* () {\n      yield ExpoUpdates.default.clearLogEntriesAsync();\n    });\n    return _clearLogEntriesAsync.apply(this, arguments);\n  }\n  function fetchUpdateAsync() {\n    return _fetchUpdateAsync.apply(this, arguments);\n  }\n  /**\n   * Overrides updates URL and reuqest headers in runtime from build time.\n   * This method allows you to load specific updates from a URL that you provide.\n   * Use this method at your own risk, as it may cause unexpected behavior.\n   * Because of the risk, this method requires `disableAntiBrickingMeasures` to be set to `true` in the **app.json** file.\n   * [Learn more about use cases and limitations](https://docs.expo.dev/eas-update/override/).\n   * @experimental\n   */\n  function _fetchUpdateAsync() {\n    _fetchUpdateAsync = (0, _asyncToGenerator.default)(function* () {\n      if (isUsingDeveloperTool && !shouldDeferToNativeForAPIMethodAvailabilityInDevelopment) {\n        throw new _expoModulesCore.CodedError('ERR_UPDATES_DISABLED', `You cannot fetch updates in development mode. ${manualUpdatesInstructions}`);\n      }\n      var result = yield ExpoUpdates.default.fetchUpdateAsync();\n      if ('manifestString' in result) {\n        var manifestString = result.manifestString,\n          rest = (0, _objectWithoutProperties.default)(result, _excluded2);\n        return {\n          ...rest,\n          manifest: JSON.parse(manifestString)\n        };\n      }\n      return result;\n    });\n    return _fetchUpdateAsync.apply(this, arguments);\n  }\n  function setUpdateURLAndRequestHeadersOverride(configOverride) {\n    ExpoUpdates.default.setUpdateURLAndRequestHeadersOverride(configOverride);\n  }\n  /**\n   * Overrides updates request headers in runtime from build time.\n   * This method allows you to load specific updates with custom request headers.\n   * Use this method at your own risk, as it may cause unexpected behavior.\n   * [Learn more about use cases and limitations](https://docs.expo.dev/eas-update/override/).\n   * @experimental\n   */\n  function setUpdateRequestHeadersOverride(requestHeaders) {\n    ExpoUpdates.default.setUpdateRequestHeadersOverride(requestHeaders);\n  }\n  /**\n   * Shows the reload screen with customizable appearance. This is primarily useful for testing\n   * how the reload screen will appear to users during app reloads and is only available in\n   * debug builds of the app. The reload screen can be hidden by calling `hideReloadScreen()`.\n   *\n   *\n   * @param options Configuration options for customizing the reload screen appearance.\n   *\n   * @hidden exposed for testing\n   * @example\n   * ```ts\n   * import * as Updates from 'expo-updates';\n   *\n   * // Show the reload screen with custom styling for testing\n   * await Updates.showReloadScreen({\n   *   reloadScreenOptions: {\n   *     backgroundColor: '#1a1a1a',\n   *     spinner: {\n   *       color: '#ffffff'\n   *     }\n   *   }\n   * });\n   *\n   * // Hide it after 3 seconds\n   * setTimeout(async () => {\n   *   await Updates.hideReloadScreen();\n   * }, 3000);\n   *\n   * // Test with a custom image\n   * await Updates.showReloadScreen({\n   *   reloadScreenOptions: {\n   *     backgroundColor: '#ffffff',\n   *     image: require('./assets/loading.png'),\n   *     imageResizeMode: 'contain'\n   *   }\n   * });\n   * ```\n   */\n  function showReloadScreen(_x4) {\n    return _showReloadScreen.apply(this, arguments);\n  }\n  /**\n   *\n   * @hidden exposed for testing\n   * @return A promise that resolves when the reload screen is hidden.\n   */\n  function _showReloadScreen() {\n    _showReloadScreen = (0, _asyncToGenerator.default)(function* (options) {\n      if (options?.reloadScreenOptions) {\n        var resolvedOptions = resolveReloadScreenOptions(options.reloadScreenOptions);\n        return ExpoUpdates.default.showReloadScreen(resolvedOptions);\n      }\n      return ExpoUpdates.default.showReloadScreen();\n    });\n    return _showReloadScreen.apply(this, arguments);\n  }\n  function hideReloadScreen() {\n    return _hideReloadScreen.apply(this, arguments);\n  }\n  function _hideReloadScreen() {\n    _hideReloadScreen = (0, _asyncToGenerator.default)(function* () {\n      return ExpoUpdates.default.hideReloadScreen();\n    });\n    return _hideReloadScreen.apply(this, arguments);\n  }\n});","lineCount":513,"map":[[14,2,14,0,"Object"],[14,8,14,0],[14,9,14,0,"defineProperty"],[14,23,14,0],[14,24,14,0,"exports"],[14,31,14,0],[15,4,14,0,"enumerable"],[15,14,14,0],[16,4,14,0,"get"],[16,7,14,0],[16,18,14,0,"get"],[16,19,14,0],[17,6,14,0],[17,13,14,0,"isEnabled"],[17,22,14,0],[18,4,14,0],[19,2,14,0],[20,2,22,0,"Object"],[20,8,22,0],[20,9,22,0,"defineProperty"],[20,23,22,0],[20,24,22,0,"exports"],[20,31,22,0],[21,4,22,0,"enumerable"],[21,14,22,0],[22,4,22,0,"get"],[22,7,22,0],[22,18,22,0,"get"],[22,19,22,0],[23,6,22,0],[23,13,22,0,"updateId"],[23,21,22,0],[24,4,22,0],[25,2,22,0],[26,2,30,0,"Object"],[26,8,30,0],[26,9,30,0,"defineProperty"],[26,23,30,0],[26,24,30,0,"exports"],[26,31,30,0],[27,4,30,0,"enumerable"],[27,14,30,0],[28,4,30,0,"get"],[28,7,30,0],[28,18,30,0,"get"],[28,19,30,0],[29,6,30,0],[29,13,30,0,"channel"],[29,20,30,0],[30,4,30,0],[31,2,30,0],[32,2,34,0,"Object"],[32,8,34,0],[32,9,34,0,"defineProperty"],[32,23,34,0],[32,24,34,0,"exports"],[32,31,34,0],[33,4,34,0,"enumerable"],[33,14,34,0],[34,4,34,0,"get"],[34,7,34,0],[34,18,34,0,"get"],[34,19,34,0],[35,6,34,0],[35,13,34,0,"runtimeVersion"],[35,27,34,0],[36,4,34,0],[37,2,34,0],[38,2,44,0,"Object"],[38,8,44,0],[38,9,44,0,"defineProperty"],[38,23,44,0],[38,24,44,0,"exports"],[38,31,44,0],[39,4,44,0,"enumerable"],[39,14,44,0],[40,4,44,0,"get"],[40,7,44,0],[40,18,44,0,"get"],[40,19,44,0],[41,6,44,0],[41,13,44,0,"checkAutomatically"],[41,31,44,0],[42,4,44,0],[43,2,44,0],[44,2,49,0,"Object"],[44,8,49,0],[44,9,49,0,"defineProperty"],[44,23,49,0],[44,24,49,0,"exports"],[44,31,49,0],[45,4,49,0,"enumerable"],[45,14,49,0],[46,4,49,0,"get"],[46,7,49,0],[46,18,49,0,"get"],[46,19,49,0],[47,6,49,0],[47,13,49,0,"localAssets"],[47,24,49,0],[48,4,49,0],[49,2,49,0],[50,2,59,0,"Object"],[50,8,59,0],[50,9,59,0,"defineProperty"],[50,23,59,0],[50,24,59,0,"exports"],[50,31,59,0],[51,4,59,0,"enumerable"],[51,14,59,0],[52,4,59,0,"get"],[52,7,59,0],[52,18,59,0,"get"],[52,19,59,0],[53,6,59,0],[53,13,59,0,"isEmergencyLaunch"],[53,30,59,0],[54,4,59,0],[55,2,59,0],[56,2,64,0,"Object"],[56,8,64,0],[56,9,64,0,"defineProperty"],[56,23,64,0],[56,24,64,0,"exports"],[56,31,64,0],[57,4,64,0,"enumerable"],[57,14,64,0],[58,4,64,0,"get"],[58,7,64,0],[58,18,64,0,"get"],[58,19,64,0],[59,6,64,0],[59,13,64,0,"emergencyLaunchReason"],[59,34,64,0],[60,4,64,0],[61,2,64,0],[62,2,68,0,"Object"],[62,8,68,0],[62,9,68,0,"defineProperty"],[62,23,68,0],[62,24,68,0,"exports"],[62,31,68,0],[63,4,68,0,"enumerable"],[63,14,68,0],[64,4,68,0,"get"],[64,7,68,0],[64,18,68,0,"get"],[64,19,68,0],[65,6,68,0],[65,13,68,0,"launchDuration"],[65,27,68,0],[66,4,68,0],[67,2,68,0],[68,2,73,0,"Object"],[68,8,73,0],[68,9,73,0,"defineProperty"],[68,23,73,0],[68,24,73,0,"exports"],[68,31,73,0],[69,4,73,0,"enumerable"],[69,14,73,0],[70,4,73,0,"get"],[70,7,73,0],[70,18,73,0,"get"],[70,19,73,0],[71,6,73,0],[71,13,73,0,"isEmbeddedLaunch"],[71,29,73,0],[72,4,73,0],[73,2,73,0],[74,2,78,0,"Object"],[74,8,78,0],[74,9,78,0,"defineProperty"],[74,23,78,0],[74,24,78,0,"exports"],[74,31,78,0],[75,4,78,0,"enumerable"],[75,14,78,0],[76,4,78,0,"get"],[76,7,78,0],[76,18,78,0,"get"],[76,19,78,0],[77,6,78,0],[77,13,78,0,"isUsingEmbeddedAssets"],[77,34,78,0],[78,4,78,0],[79,2,78,0],[80,2,88,0,"Object"],[80,8,88,0],[80,9,88,0,"defineProperty"],[80,23,88,0],[80,24,88,0,"exports"],[80,31,88,0],[81,4,88,0,"enumerable"],[81,14,88,0],[82,4,88,0,"get"],[82,7,88,0],[82,18,88,0,"get"],[82,19,88,0],[83,6,88,0],[83,13,88,0,"manifest"],[83,21,88,0],[84,4,88,0],[85,2,88,0],[86,2,96,0,"Object"],[86,8,96,0],[86,9,96,0,"defineProperty"],[86,23,96,0],[86,24,96,0,"exports"],[86,31,96,0],[87,4,96,0,"enumerable"],[87,14,96,0],[88,4,96,0,"get"],[88,7,96,0],[88,18,96,0,"get"],[88,19,96,0],[89,6,96,0],[89,13,96,0,"createdAt"],[89,22,96,0],[90,4,96,0],[91,2,96,0],[92,2,168,0,"exports"],[92,9,168,0],[92,10,168,0,"reloadAsync"],[92,21,168,0],[92,24,168,0,"reloadAsync"],[92,35,168,0],[93,2,194,0,"exports"],[93,9,194,0],[93,10,194,0,"checkForUpdateAsync"],[93,29,194,0],[93,32,194,0,"checkForUpdateAsync"],[93,51,194,0],[94,2,214,0,"exports"],[94,9,214,0],[94,10,214,0,"getExtraParamsAsync"],[94,29,214,0],[94,32,214,0,"getExtraParamsAsync"],[94,51,214,0],[95,2,224,0,"exports"],[95,9,224,0],[95,10,224,0,"setExtraParamAsync"],[95,28,224,0],[95,31,224,0,"setExtraParamAsync"],[95,49,224,0],[96,2,236,0,"exports"],[96,9,236,0],[96,10,236,0,"readLogEntriesAsync"],[96,29,236,0],[96,32,236,0,"readLogEntriesAsync"],[96,51,236,0],[97,2,250,0,"exports"],[97,9,250,0],[97,10,250,0,"clearLogEntriesAsync"],[97,30,250,0],[97,33,250,0,"clearLogEntriesAsync"],[97,53,250,0],[98,2,267,0,"exports"],[98,9,267,0],[98,10,267,0,"fetchUpdateAsync"],[98,26,267,0],[98,29,267,0,"fetchUpdateAsync"],[98,45,267,0],[99,2,290,0,"exports"],[99,9,290,0],[99,10,290,0,"setUpdateURLAndRequestHeadersOverride"],[99,47,290,0],[99,50,290,0,"setUpdateURLAndRequestHeadersOverride"],[99,87,290,0],[100,2,300,0,"exports"],[100,9,300,0],[100,10,300,0,"setUpdateRequestHeadersOverride"],[100,41,300,0],[100,44,300,0,"setUpdateRequestHeadersOverride"],[100,75,300,0],[101,2,341,0,"exports"],[101,9,341,0],[101,10,341,0,"showReloadScreen"],[101,26,341,0],[101,29,341,0,"showReloadScreen"],[101,45,341,0],[102,2,353,0,"exports"],[102,9,353,0],[102,10,353,0,"hideReloadScreen"],[102,26,353,0],[102,29,353,0,"hideReloadScreen"],[102,45,353,0],[103,2,355,1],[103,6,355,1,"_babelRuntimeHelpersObjectWithoutProperties"],[103,49,355,1],[103,52,355,1,"require"],[103,59,355,1],[103,60,355,1,"_dependencyMap"],[103,74,355,1],[104,2,355,1],[104,6,355,1,"_objectWithoutProperties"],[104,30,355,1],[104,33,355,1,"_interopDefault"],[104,48,355,1],[104,49,355,1,"_babelRuntimeHelpersObjectWithoutProperties"],[104,92,355,1],[105,2,355,1],[105,6,355,1,"_babelRuntimeHelpersAsyncToGenerator"],[105,42,355,1],[105,45,355,1,"require"],[105,52,355,1],[105,53,355,1,"_dependencyMap"],[105,67,355,1],[106,2,355,1],[106,6,355,1,"_asyncToGenerator"],[106,23,355,1],[106,26,355,1,"_interopDefault"],[106,41,355,1],[106,42,355,1,"_babelRuntimeHelpersAsyncToGenerator"],[106,78,355,1],[107,2,1,0],[107,6,1,0,"_expoModulesCore"],[107,22,1,0],[107,25,1,0,"require"],[107,32,1,0],[107,33,1,0,"_dependencyMap"],[107,47,1,0],[108,2,2,0],[108,6,2,0,"_reactNative"],[108,18,2,0],[108,21,2,0,"require"],[108,28,2,0],[108,29,2,0,"_dependencyMap"],[108,43,2,0],[109,2,3,0],[109,6,3,0,"_ExpoUpdates"],[109,18,3,0],[109,21,3,0,"require"],[109,28,3,0],[109,29,3,0,"_dependencyMap"],[109,43,3,0],[110,2,3,0],[110,6,3,0,"ExpoUpdates"],[110,17,3,0],[110,20,3,0,"_interopDefault"],[110,35,3,0],[110,36,3,0,"_ExpoUpdates"],[110,48,3,0],[111,2,4,0],[111,6,4,0,"_UpdatesTypes"],[111,19,4,0],[111,22,4,0,"require"],[111,29,4,0],[111,30,4,0,"_dependencyMap"],[111,44,4,0],[112,2,5,0],[113,0,6,0],[114,0,7,0],[115,0,8,0],[116,0,9,0],[117,0,10,0],[118,0,11,0],[119,0,12,0],[120,0,13,0],[121,2,14,7],[121,6,14,13,"isEnabled"],[121,15,14,22],[121,18,14,25],[121,19,14,26],[121,20,14,27,"ExpoUpdates"],[121,31,14,38],[121,32,14,38,"default"],[121,39,14,38],[121,40,14,39,"isEnabled"],[121,49,14,48],[122,2,15,0],[123,0,16,0],[124,0,17,0],[125,0,18,0],[126,0,19,0],[127,0,20,0],[128,0,21,0],[129,2,22,7],[129,6,22,13,"updateId"],[129,14,22,21],[129,17,22,24,"ExpoUpdates"],[129,28,22,35],[129,29,22,35,"default"],[129,36,22,35],[129,37,22,36,"updateId"],[129,45,22,44],[129,49,22,48],[129,56,22,55,"ExpoUpdates"],[129,67,22,66],[129,68,22,66,"default"],[129,75,22,66],[129,76,22,67,"updateId"],[129,84,22,75],[129,89,22,80],[129,97,22,88],[129,100,23,6,"ExpoUpdates"],[129,111,23,17],[129,112,23,17,"default"],[129,119,23,17],[129,120,23,18,"updateId"],[129,128,23,26],[129,129,23,27,"toLowerCase"],[129,140,23,38],[129,141,23,39],[129,142,23,40],[129,145,24,6],[129,149,24,10],[130,2,25,0],[131,0,26,0],[132,0,27,0],[133,0,28,0],[134,0,29,0],[135,2,30,7],[135,6,30,13,"channel"],[135,13,30,20],[135,16,30,23,"ExpoUpdates"],[135,27,30,34],[135,28,30,34,"default"],[135,35,30,34],[135,36,30,35,"channel"],[135,43,30,42],[135,47,30,46],[135,51,30,50],[136,2,31,0],[137,0,32,0],[138,0,33,0],[139,2,34,7],[139,6,34,13,"runtimeVersion"],[139,20,34,27],[139,23,34,30,"ExpoUpdates"],[139,34,34,41],[139,35,34,41,"default"],[139,42,34,41],[139,43,34,42,"runtimeVersion"],[139,57,34,56],[139,61,34,60],[139,65,34,64],[140,2,35,0],[140,6,35,6,"_checkAutomaticallyMapNativeToJS"],[140,38,35,38],[140,41,35,41],[141,4,36,4,"ALWAYS"],[141,10,36,10],[141,12,36,12,"UpdatesCheckAutomaticallyValue"],[141,25,36,42],[141,26,36,42,"UpdatesCheckAutomaticallyValue"],[141,56,36,42],[141,57,36,43,"ON_LOAD"],[141,64,36,50],[142,4,37,4,"ERROR_RECOVERY_ONLY"],[142,23,37,23],[142,25,37,25,"UpdatesCheckAutomaticallyValue"],[142,38,37,55],[142,39,37,55,"UpdatesCheckAutomaticallyValue"],[142,69,37,55],[142,70,37,56,"ON_ERROR_RECOVERY"],[142,87,37,73],[143,4,38,4,"NEVER"],[143,9,38,9],[143,11,38,11,"UpdatesCheckAutomaticallyValue"],[143,24,38,41],[143,25,38,41,"UpdatesCheckAutomaticallyValue"],[143,55,38,41],[143,56,38,42,"NEVER"],[143,61,38,47],[144,4,39,4,"WIFI_ONLY"],[144,13,39,13],[144,15,39,15,"UpdatesCheckAutomaticallyValue"],[144,28,39,45],[144,29,39,45,"UpdatesCheckAutomaticallyValue"],[144,59,39,45],[144,60,39,46,"WIFI_ONLY"],[145,2,40,0],[145,3,40,1],[146,2,41,0],[147,0,42,0],[148,0,43,0],[149,2,44,7],[149,6,44,13,"checkAutomatically"],[149,24,44,31],[149,27,44,34,"_checkAutomaticallyMapNativeToJS"],[149,59,44,66],[149,60,44,67,"ExpoUpdates"],[149,71,44,78],[149,72,44,78,"default"],[149,79,44,78],[149,80,44,79,"checkAutomatically"],[149,98,44,97],[149,99,44,98],[149,103,44,102],[149,107,44,106],[150,2,45,0],[151,2,46,0],[152,0,47,0],[153,0,48,0],[154,2,49,7],[154,6,49,13,"localAssets"],[154,17,49,24],[154,20,49,27,"ExpoUpdates"],[154,31,49,38],[154,32,49,38,"default"],[154,39,49,38],[154,40,49,39,"localAssets"],[154,51,49,50],[154,55,49,54],[154,56,49,55],[154,57,49,56],[155,2,50,0],[156,0,51,0],[157,0,52,0],[158,0,53,0],[159,0,54,0],[160,0,55,0],[161,0,56,0],[162,0,57,0],[163,0,58,0],[164,2,59,7],[164,6,59,13,"isEmergencyLaunch"],[164,23,59,30],[164,26,59,33,"ExpoUpdates"],[164,37,59,44],[164,38,59,44,"default"],[164,45,59,44],[164,46,59,45,"isEmergencyLaunch"],[164,63,59,62],[165,2,60,0],[166,0,61,0],[167,0,62,0],[168,0,63,0],[169,2,64,7],[169,6,64,13,"emergencyLaunchReason"],[169,27,64,34],[169,30,64,37,"ExpoUpdates"],[169,41,64,48],[169,42,64,48,"default"],[169,49,64,48],[169,50,64,49,"emergencyLaunchReason"],[169,71,64,70],[170,2,65,0],[171,0,66,0],[172,0,67,0],[173,2,68,7],[173,6,68,13,"launchDuration"],[173,20,68,27],[173,23,68,30,"ExpoUpdates"],[173,34,68,41],[173,35,68,41,"default"],[173,42,68,41],[173,43,68,42,"launchDuration"],[173,57,68,56],[174,2,69,0],[175,0,70,0],[176,0,71,0],[177,0,72,0],[178,2,73,7],[178,6,73,13,"isEmbeddedLaunch"],[178,22,73,29],[178,25,73,32,"ExpoUpdates"],[178,36,73,43],[178,37,73,43,"default"],[178,44,73,43],[178,45,73,44,"isEmbeddedLaunch"],[178,61,73,60],[178,65,73,64],[178,70,73,69],[179,2,74,0],[180,2,75,0],[181,0,76,0],[182,0,77,0],[183,2,78,7],[183,6,78,13,"isUsingEmbeddedAssets"],[183,27,78,34],[183,30,78,37,"ExpoUpdates"],[183,41,78,48],[183,42,78,48,"default"],[183,49,78,48],[183,50,78,49,"isUsingEmbeddedAssets"],[183,71,78,70],[183,75,78,74],[183,80,78,79],[184,2,79,0],[185,0,80,0],[186,0,81,0],[187,0,82,0],[188,0,83,0],[189,0,84,0],[190,0,85,0],[191,0,86,0],[192,0,87,0],[193,2,88,7],[193,6,88,13,"manifest"],[193,14,88,21],[193,17,88,24],[193,18,88,25,"ExpoUpdates"],[193,29,88,36],[193,30,88,36,"default"],[193,37,88,36],[193,38,88,37,"manifestString"],[193,52,88,51],[193,55,88,54,"JSON"],[193,59,88,58],[193,60,88,59,"parse"],[193,65,88,64],[193,66,88,65,"ExpoUpdates"],[193,77,88,76],[193,78,88,76,"default"],[193,85,88,76],[193,86,88,77,"manifestString"],[193,100,88,91],[193,101,88,92],[193,104,88,95,"ExpoUpdates"],[193,115,88,106],[193,116,88,106,"default"],[193,123,88,106],[193,124,88,107,"manifest"],[193,132,88,115],[193,137,89,4],[193,138,89,5],[193,139,89,6],[194,2,90,0],[195,0,91,0],[196,0,92,0],[197,0,93,0],[198,0,94,0],[199,0,95,0],[200,2,96,7],[200,6,96,13,"createdAt"],[200,15,96,22],[200,18,96,25,"ExpoUpdates"],[200,29,96,36],[200,30,96,36,"default"],[200,37,96,36],[200,38,96,37,"commitTime"],[200,48,96,47],[200,51,97,6],[200,55,97,10,"Date"],[200,59,97,14],[200,60,97,15,"ExpoUpdates"],[200,71,97,26],[200,72,97,26,"default"],[200,79,97,26],[200,80,97,27,"commitTime"],[200,90,97,37],[200,91,97,38],[200,94,98,6],[200,98,98,10],[201,2,99,0],[202,0,100,0],[203,0,101,0],[204,0,102,0],[205,0,103,0],[206,2,104,0],[206,6,104,6,"shouldDeferToNativeForAPIMethodAvailabilityInDevelopment"],[206,62,104,62],[206,65,104,65],[206,66,104,66],[206,67,104,67,"ExpoUpdates"],[206,78,104,78],[206,79,104,78,"default"],[206,86,104,78],[206,87,104,79,"shouldDeferToNativeForAPIMethodAvailabilityInDevelopment"],[206,143,104,135],[207,2,105,0],[208,0,106,0],[209,0,107,0],[210,2,108,0],[210,6,108,6,"isUsingDeveloperTool"],[210,26,108,26],[210,29,108,29],[210,36,108,36],[210,40,108,40,"manifest"],[210,48,108,48],[210,51,108,51],[210,52,108,52],[210,53,108,53,"manifest"],[210,61,108,61],[210,62,108,62,"extra"],[210,67,108,67],[210,69,108,69,"expoGo"],[210,75,108,75],[210,77,108,77,"developer"],[210,86,108,86],[210,88,108,88,"tool"],[210,92,108,92],[210,95,108,95],[210,100,108,100],[211,2,109,0],[211,6,109,6,"manualUpdatesInstructions"],[211,31,109,31],[211,203,110,47],[212,2,111,0],[212,11,111,9,"resolveImageSource"],[212,29,111,27,"resolveImageSource"],[212,30,111,28,"source"],[212,36,111,34],[212,38,111,36],[213,4,112,4],[213,8,112,8],[213,15,112,15,"source"],[213,21,112,21],[213,26,112,26],[213,34,112,34],[213,36,112,36],[214,6,113,8],[214,13,113,15],[215,8,113,17,"url"],[215,11,113,20],[215,13,113,22,"source"],[216,6,113,29],[216,7,113,30],[217,4,114,4],[218,4,115,4],[218,8,115,8],[218,15,115,15,"source"],[218,21,115,21],[218,26,115,26],[218,34,115,34],[218,36,115,36],[219,6,116,8],[219,10,116,14,"resolved"],[219,18,116,22],[219,21,116,25,"Image"],[219,33,116,30],[219,34,116,30,"Image"],[219,39,116,30],[219,40,116,31,"resolveAssetSource"],[219,58,116,49],[219,59,116,50,"source"],[219,65,116,56],[219,66,116,57],[220,6,117,8],[220,10,117,12,"resolved"],[220,18,117,20],[220,20,117,22],[221,8,118,12],[221,15,118,19],[222,10,119,16,"url"],[222,13,119,19],[222,15,119,21,"resolved"],[222,23,119,29],[222,24,119,30,"uri"],[222,27,119,33],[223,10,120,16,"width"],[223,15,120,21],[223,17,120,23,"resolved"],[223,25,120,31],[223,26,120,32,"width"],[223,31,120,37],[224,10,121,16,"height"],[224,16,121,22],[224,18,121,24,"resolved"],[224,26,121,32],[224,27,121,33,"height"],[224,33,121,39],[225,10,122,16,"scale"],[225,15,122,21],[225,17,122,23,"resolved"],[225,25,122,31],[225,26,122,32,"scale"],[226,8,123,12],[226,9,123,13],[227,6,124,8],[228,6,125,8],[228,13,125,15],[228,17,125,19],[229,4,126,4],[230,4,127,4],[230,8,127,8],[230,15,127,15,"source"],[230,21,127,21],[230,26,127,26],[230,34,127,34],[230,38,127,38,"source"],[230,44,127,44],[230,49,127,49],[230,53,127,53],[230,55,127,55],[231,6,128,8],[231,13,128,15,"source"],[231,19,128,21],[232,4,129,4],[233,4,130,4],[233,11,130,11],[233,15,130,15],[234,2,131,0],[235,2,132,0],[235,11,132,9,"resolveReloadScreenOptions"],[235,37,132,35,"resolveReloadScreenOptions"],[235,38,132,36,"options"],[235,45,132,43],[235,47,132,45],[236,4,133,4],[236,8,133,8],[236,9,133,9,"options"],[236,16,133,16],[236,17,133,17,"image"],[236,22,133,22],[236,24,133,24],[237,6,134,8],[237,13,134,15,"options"],[237,20,134,22],[238,4,135,4],[239,4,136,4],[239,8,136,10,"resolvedImage"],[239,21,136,23],[239,24,136,26,"resolveImageSource"],[239,42,136,44],[239,43,136,45,"options"],[239,50,136,52],[239,51,136,53,"image"],[239,56,136,58],[239,57,136,59],[240,4,137,4],[240,11,137,11],[241,6,138,8],[241,9,138,11,"options"],[241,16,138,18],[242,6,139,8,"image"],[242,11,139,13],[242,13,139,15,"resolvedImage"],[242,26,139,28],[242,30,139,32,"undefined"],[243,4,140,4],[243,5,140,5],[244,2,141,0],[245,2,142,0],[246,0,143,0],[247,0,144,0],[248,0,145,0],[249,0,146,0],[250,0,147,0],[251,0,148,0],[252,0,149,0],[253,0,150,0],[254,0,151,0],[255,0,152,0],[256,0,153,0],[257,0,154,0],[258,0,155,0],[259,0,156,0],[260,0,157,0],[261,0,158,0],[262,0,159,0],[263,0,160,0],[264,0,161,0],[265,0,162,0],[266,0,163,0],[267,0,164,0],[268,0,165,0],[269,0,166,0],[270,0,167,0],[271,2,142,0],[271,11,168,22,"reloadAsync"],[271,22,168,33,"reloadAsync"],[271,23,168,33,"_x"],[271,25,168,33],[272,4,168,33],[272,11,168,33,"_reloadAsync"],[272,23,168,33],[272,24,168,33,"apply"],[272,29,168,33],[272,36,168,33,"arguments"],[272,45,168,33],[273,2,168,33],[274,2,179,0],[275,0,180,0],[276,0,181,0],[277,0,182,0],[278,0,183,0],[279,0,184,0],[280,0,185,0],[281,0,186,0],[282,0,187,0],[283,0,188,0],[284,0,189,0],[285,0,190,0],[286,0,191,0],[287,0,192,0],[288,0,193,0],[289,2,179,0],[289,11,179,0,"_reloadAsync"],[289,24,179,0],[290,4,179,0,"_reloadAsync"],[290,16,179,0],[290,23,179,0,"_asyncToGenerator"],[290,40,179,0],[290,41,179,0,"default"],[290,48,179,0],[290,50,168,7],[290,61,168,34,"options"],[290,68,168,41],[290,70,168,43],[291,6,169,4],[291,10,169,20,"isUsingDeveloperTool"],[291,30,169,40],[291,34,170,8],[291,35,170,9,"shouldDeferToNativeForAPIMethodAvailabilityInDevelopment"],[291,91,170,65],[291,93,170,67],[292,8,171,8],[292,14,171,14],[292,18,171,18,"CodedError"],[292,34,171,28],[292,35,171,28,"CodedError"],[292,45,171,28],[292,46,171,29],[292,68,171,51],[292,70,171,53],[292,148,171,131,"manualUpdatesInstructions"],[292,173,171,156],[292,175,171,158],[292,176,171,159],[293,6,172,4],[294,6,173,4],[294,10,173,8,"options"],[294,17,173,15],[294,19,173,17,"reloadScreenOptions"],[294,38,173,36],[294,40,173,38],[295,8,174,8],[295,12,174,14,"resolvedOptions"],[295,27,174,29],[295,30,174,32,"resolveReloadScreenOptions"],[295,56,174,58],[295,57,174,59,"options"],[295,64,174,66],[295,65,174,67,"reloadScreenOptions"],[295,84,174,86],[295,85,174,87],[296,8,175,8],[296,21,175,21,"ExpoUpdates"],[296,32,175,32],[296,33,175,32,"default"],[296,40,175,32],[296,41,175,33,"reload"],[296,47,175,39],[296,48,175,40,"resolvedOptions"],[296,63,175,55],[296,64,175,56],[297,6,176,4],[298,6,177,4],[298,12,177,10,"ExpoUpdates"],[298,23,177,21],[298,24,177,21,"default"],[298,31,177,21],[298,32,177,22,"reload"],[298,38,177,28],[298,39,177,29],[298,43,177,33],[298,44,177,34],[299,4,178,0],[299,5,178,1],[300,4,178,1],[300,11,178,1,"_reloadAsync"],[300,23,178,1],[300,24,178,1,"apply"],[300,29,178,1],[300,36,178,1,"arguments"],[300,45,178,1],[301,2,178,1],[302,2,178,1],[302,11,194,22,"checkForUpdateAsync"],[302,30,194,41,"checkForUpdateAsync"],[302,31,194,41],[303,4,194,41],[303,11,194,41,"_checkForUpdateAsync"],[303,31,194,41],[303,32,194,41,"apply"],[303,37,194,41],[303,44,194,41,"arguments"],[303,53,194,41],[304,2,194,41],[305,2,209,0],[306,0,210,0],[307,0,211,0],[308,0,212,0],[309,0,213,0],[310,2,209,0],[310,11,209,0,"_checkForUpdateAsync"],[310,32,209,0],[311,4,209,0,"_checkForUpdateAsync"],[311,24,209,0],[311,31,209,0,"_asyncToGenerator"],[311,48,209,0],[311,49,209,0,"default"],[311,56,209,0],[311,58,194,7],[311,71,194,44],[312,6,195,4],[312,10,195,20,"isUsingDeveloperTool"],[312,30,195,40],[312,34,196,8],[312,35,196,9,"shouldDeferToNativeForAPIMethodAvailabilityInDevelopment"],[312,91,196,65],[312,93,196,67],[313,8,197,8],[313,14,197,14],[313,18,197,18,"CodedError"],[313,34,197,28],[313,35,197,28,"CodedError"],[313,45,197,28],[313,46,197,29],[313,68,197,51],[313,70,197,53],[313,123,197,106,"manualUpdatesInstructions"],[313,148,197,131],[313,150,197,133],[313,151,197,134],[314,6,198,4],[315,6,199,4],[315,10,199,10,"result"],[315,16,199,16],[315,25,199,25,"ExpoUpdates"],[315,36,199,36],[315,37,199,36,"default"],[315,44,199,36],[315,45,199,37,"checkForUpdateAsync"],[315,64,199,56],[315,65,199,57],[315,66,199,58],[316,6,200,4],[316,10,200,8],[316,26,200,24],[316,30,200,28,"result"],[316,36,200,34],[316,38,200,36],[317,8,201,8],[317,12,201,16,"manifestString"],[317,26,201,30],[317,29,201,44,"result"],[317,35,201,50],[317,36,201,16,"manifestString"],[317,50,201,30],[318,10,201,35,"rest"],[318,14,201,39],[318,21,201,39,"_objectWithoutProperties"],[318,45,201,39],[318,46,201,39,"default"],[318,53,201,39],[318,55,201,44,"result"],[318,61,201,50],[318,63,201,50,"_excluded"],[318,72,201,50],[319,8,202,8],[319,15,202,15],[320,10,203,12],[320,13,203,15,"rest"],[320,17,203,19],[321,10,204,12,"manifest"],[321,18,204,20],[321,20,204,22,"JSON"],[321,24,204,26],[321,25,204,27,"parse"],[321,30,204,32],[321,31,204,33,"manifestString"],[321,45,204,47],[322,8,205,8],[322,9,205,9],[323,6,206,4],[324,6,207,4],[324,13,207,11,"result"],[324,19,207,17],[325,4,208,0],[325,5,208,1],[326,4,208,1],[326,11,208,1,"_checkForUpdateAsync"],[326,31,208,1],[326,32,208,1,"apply"],[326,37,208,1],[326,44,208,1,"arguments"],[326,53,208,1],[327,2,208,1],[328,2,208,1],[328,11,214,22,"getExtraParamsAsync"],[328,30,214,41,"getExtraParamsAsync"],[328,31,214,41],[329,4,214,41],[329,11,214,41,"_getExtraParamsAsync"],[329,31,214,41],[329,32,214,41,"apply"],[329,37,214,41],[329,44,214,41,"arguments"],[329,53,214,41],[330,2,214,41],[331,2,217,0],[332,0,218,0],[333,0,219,0],[334,0,220,0],[335,0,221,0],[336,0,222,0],[337,0,223,0],[338,2,217,0],[338,11,217,0,"_getExtraParamsAsync"],[338,32,217,0],[339,4,217,0,"_getExtraParamsAsync"],[339,24,217,0],[339,31,217,0,"_asyncToGenerator"],[339,48,217,0],[339,49,217,0,"default"],[339,56,217,0],[339,58,214,7],[339,71,214,44],[340,6,215,4],[340,19,215,17,"ExpoUpdates"],[340,30,215,28],[340,31,215,28,"default"],[340,38,215,28],[340,39,215,29,"getExtraParamsAsync"],[340,58,215,48],[340,59,215,49],[340,60,215,50],[341,4,216,0],[341,5,216,1],[342,4,216,1],[342,11,216,1,"_getExtraParamsAsync"],[342,31,216,1],[342,32,216,1,"apply"],[342,37,216,1],[342,44,216,1,"arguments"],[342,53,216,1],[343,2,216,1],[344,2,216,1],[344,11,224,22,"setExtraParamAsync"],[344,29,224,40,"setExtraParamAsync"],[344,30,224,40,"_x2"],[344,33,224,40],[344,35,224,40,"_x3"],[344,38,224,40],[345,4,224,40],[345,11,224,40,"_setExtraParamAsync"],[345,30,224,40],[345,31,224,40,"apply"],[345,36,224,40],[345,43,224,40,"arguments"],[345,52,224,40],[346,2,224,40],[347,2,227,0],[348,0,228,0],[349,0,229,0],[350,0,230,0],[351,0,231,0],[352,0,232,0],[353,0,233,0],[354,0,234,0],[355,0,235,0],[356,2,227,0],[356,11,227,0,"_setExtraParamAsync"],[356,31,227,0],[357,4,227,0,"_setExtraParamAsync"],[357,23,227,0],[357,30,227,0,"_asyncToGenerator"],[357,47,227,0],[357,48,227,0,"default"],[357,55,227,0],[357,57,224,7],[357,68,224,41,"key"],[357,71,224,44],[357,73,224,46,"value"],[357,78,224,51],[357,80,224,53],[358,6,225,4],[358,19,225,17,"ExpoUpdates"],[358,30,225,28],[358,31,225,28,"default"],[358,38,225,28],[358,39,225,29,"setExtraParamAsync"],[358,57,225,47],[358,58,225,48,"key"],[358,61,225,51],[358,63,225,53,"value"],[358,68,225,58],[358,72,225,62],[358,76,225,66],[358,77,225,67],[359,4,226,0],[359,5,226,1],[360,4,226,1],[360,11,226,1,"_setExtraParamAsync"],[360,30,226,1],[360,31,226,1,"apply"],[360,36,226,1],[360,43,226,1,"arguments"],[360,52,226,1],[361,2,226,1],[362,2,226,1],[362,11,236,22,"readLogEntriesAsync"],[362,30,236,41,"readLogEntriesAsync"],[362,31,236,41],[363,4,236,41],[363,11,236,41,"_readLogEntriesAsync"],[363,31,236,41],[363,32,236,41,"apply"],[363,37,236,41],[363,44,236,41,"arguments"],[363,53,236,41],[364,2,236,41],[365,2,239,0],[366,0,240,0],[367,0,241,0],[368,0,242,0],[369,0,243,0],[370,0,244,0],[371,0,245,0],[372,0,246,0],[373,0,247,0],[374,0,248,0],[375,0,249,0],[376,2,239,0],[376,11,239,0,"_readLogEntriesAsync"],[376,32,239,0],[377,4,239,0,"_readLogEntriesAsync"],[377,24,239,0],[377,31,239,0,"_asyncToGenerator"],[377,48,239,0],[377,49,239,0,"default"],[377,56,239,0],[377,58,236,7],[377,71,236,60],[378,6,236,60],[378,10,236,42,"maxAge"],[378,16,236,48],[378,19,236,48,"arguments"],[378,28,236,48],[378,29,236,48,"length"],[378,35,236,48],[378,43,236,48,"arguments"],[378,52,236,48],[378,60,236,48,"undefined"],[378,69,236,48],[378,72,236,48,"arguments"],[378,81,236,48],[378,87,236,51],[378,94,236,58],[379,6,237,4],[379,19,237,17,"ExpoUpdates"],[379,30,237,28],[379,31,237,28,"default"],[379,38,237,28],[379,39,237,29,"readLogEntriesAsync"],[379,58,237,48],[379,59,237,49,"maxAge"],[379,65,237,55],[379,66,237,56],[380,4,238,0],[380,5,238,1],[381,4,238,1],[381,11,238,1,"_readLogEntriesAsync"],[381,31,238,1],[381,32,238,1,"apply"],[381,37,238,1],[381,44,238,1,"arguments"],[381,53,238,1],[382,2,238,1],[383,2,238,1],[383,11,250,22,"clearLogEntriesAsync"],[383,31,250,42,"clearLogEntriesAsync"],[383,32,250,42],[384,4,250,42],[384,11,250,42,"_clearLogEntriesAsync"],[384,32,250,42],[384,33,250,42,"apply"],[384,38,250,42],[384,45,250,42,"arguments"],[384,54,250,42],[385,2,250,42],[386,2,253,0],[387,0,254,0],[388,0,255,0],[389,0,256,0],[390,0,257,0],[391,0,258,0],[392,0,259,0],[393,0,260,0],[394,0,261,0],[395,0,262,0],[396,0,263,0],[397,0,264,0],[398,0,265,0],[399,0,266,0],[400,2,253,0],[400,11,253,0,"_clearLogEntriesAsync"],[400,33,253,0],[401,4,253,0,"_clearLogEntriesAsync"],[401,25,253,0],[401,32,253,0,"_asyncToGenerator"],[401,49,253,0],[401,50,253,0,"default"],[401,57,253,0],[401,59,250,7],[401,72,250,45],[402,6,251,4],[402,12,251,10,"ExpoUpdates"],[402,23,251,21],[402,24,251,21,"default"],[402,31,251,21],[402,32,251,22,"clearLogEntriesAsync"],[402,52,251,42],[402,53,251,43],[402,54,251,44],[403,4,252,0],[403,5,252,1],[404,4,252,1],[404,11,252,1,"_clearLogEntriesAsync"],[404,32,252,1],[404,33,252,1,"apply"],[404,38,252,1],[404,45,252,1,"arguments"],[404,54,252,1],[405,2,252,1],[406,2,252,1],[406,11,267,22,"fetchUpdateAsync"],[406,27,267,38,"fetchUpdateAsync"],[406,28,267,38],[407,4,267,38],[407,11,267,38,"_fetchUpdateAsync"],[407,28,267,38],[407,29,267,38,"apply"],[407,34,267,38],[407,41,267,38,"arguments"],[407,50,267,38],[408,2,267,38],[409,2,282,0],[410,0,283,0],[411,0,284,0],[412,0,285,0],[413,0,286,0],[414,0,287,0],[415,0,288,0],[416,0,289,0],[417,2,282,0],[417,11,282,0,"_fetchUpdateAsync"],[417,29,282,0],[418,4,282,0,"_fetchUpdateAsync"],[418,21,282,0],[418,28,282,0,"_asyncToGenerator"],[418,45,282,0],[418,46,282,0,"default"],[418,53,282,0],[418,55,267,7],[418,68,267,41],[419,6,268,4],[419,10,268,20,"isUsingDeveloperTool"],[419,30,268,40],[419,34,269,8],[419,35,269,9,"shouldDeferToNativeForAPIMethodAvailabilityInDevelopment"],[419,91,269,65],[419,93,269,67],[420,8,270,8],[420,14,270,14],[420,18,270,18,"CodedError"],[420,34,270,28],[420,35,270,28,"CodedError"],[420,45,270,28],[420,46,270,29],[420,68,270,51],[420,70,270,53],[420,119,270,102,"manualUpdatesInstructions"],[420,144,270,127],[420,146,270,129],[420,147,270,130],[421,6,271,4],[422,6,272,4],[422,10,272,10,"result"],[422,16,272,16],[422,25,272,25,"ExpoUpdates"],[422,36,272,36],[422,37,272,36,"default"],[422,44,272,36],[422,45,272,37,"fetchUpdateAsync"],[422,61,272,53],[422,62,272,54],[422,63,272,55],[423,6,273,4],[423,10,273,8],[423,26,273,24],[423,30,273,28,"result"],[423,36,273,34],[423,38,273,36],[424,8,274,8],[424,12,274,16,"manifestString"],[424,26,274,30],[424,29,274,44,"result"],[424,35,274,50],[424,36,274,16,"manifestString"],[424,50,274,30],[425,10,274,35,"rest"],[425,14,274,39],[425,21,274,39,"_objectWithoutProperties"],[425,45,274,39],[425,46,274,39,"default"],[425,53,274,39],[425,55,274,44,"result"],[425,61,274,50],[425,63,274,50,"_excluded2"],[425,73,274,50],[426,8,275,8],[426,15,275,15],[427,10,276,12],[427,13,276,15,"rest"],[427,17,276,19],[428,10,277,12,"manifest"],[428,18,277,20],[428,20,277,22,"JSON"],[428,24,277,26],[428,25,277,27,"parse"],[428,30,277,32],[428,31,277,33,"manifestString"],[428,45,277,47],[429,8,278,8],[429,9,278,9],[430,6,279,4],[431,6,280,4],[431,13,280,11,"result"],[431,19,280,17],[432,4,281,0],[432,5,281,1],[433,4,281,1],[433,11,281,1,"_fetchUpdateAsync"],[433,28,281,1],[433,29,281,1,"apply"],[433,34,281,1],[433,41,281,1,"arguments"],[433,50,281,1],[434,2,281,1],[435,2,290,7],[435,11,290,16,"setUpdateURLAndRequestHeadersOverride"],[435,48,290,53,"setUpdateURLAndRequestHeadersOverride"],[435,49,290,54,"configOverride"],[435,63,290,68],[435,65,290,70],[436,4,291,4,"ExpoUpdates"],[436,15,291,15],[436,16,291,15,"default"],[436,23,291,15],[436,24,291,16,"setUpdateURLAndRequestHeadersOverride"],[436,61,291,53],[436,62,291,54,"configOverride"],[436,76,291,68],[436,77,291,69],[437,2,292,0],[438,2,293,0],[439,0,294,0],[440,0,295,0],[441,0,296,0],[442,0,297,0],[443,0,298,0],[444,0,299,0],[445,2,300,7],[445,11,300,16,"setUpdateRequestHeadersOverride"],[445,42,300,47,"setUpdateRequestHeadersOverride"],[445,43,300,48,"requestHeaders"],[445,57,300,62],[445,59,300,64],[446,4,301,4,"ExpoUpdates"],[446,15,301,15],[446,16,301,15,"default"],[446,23,301,15],[446,24,301,16,"setUpdateRequestHeadersOverride"],[446,55,301,47],[446,56,301,48,"requestHeaders"],[446,70,301,62],[446,71,301,63],[447,2,302,0],[448,2,303,0],[449,0,304,0],[450,0,305,0],[451,0,306,0],[452,0,307,0],[453,0,308,0],[454,0,309,0],[455,0,310,0],[456,0,311,0],[457,0,312,0],[458,0,313,0],[459,0,314,0],[460,0,315,0],[461,0,316,0],[462,0,317,0],[463,0,318,0],[464,0,319,0],[465,0,320,0],[466,0,321,0],[467,0,322,0],[468,0,323,0],[469,0,324,0],[470,0,325,0],[471,0,326,0],[472,0,327,0],[473,0,328,0],[474,0,329,0],[475,0,330,0],[476,0,331,0],[477,0,332,0],[478,0,333,0],[479,0,334,0],[480,0,335,0],[481,0,336,0],[482,0,337,0],[483,0,338,0],[484,0,339,0],[485,0,340,0],[486,2,303,0],[486,11,341,22,"showReloadScreen"],[486,27,341,38,"showReloadScreen"],[486,28,341,38,"_x4"],[486,31,341,38],[487,4,341,38],[487,11,341,38,"_showReloadScreen"],[487,28,341,38],[487,29,341,38,"apply"],[487,34,341,38],[487,41,341,38,"arguments"],[487,50,341,38],[488,2,341,38],[489,2,348,0],[490,0,349,0],[491,0,350,0],[492,0,351,0],[493,0,352,0],[494,2,348,0],[494,11,348,0,"_showReloadScreen"],[494,29,348,0],[495,4,348,0,"_showReloadScreen"],[495,21,348,0],[495,28,348,0,"_asyncToGenerator"],[495,45,348,0],[495,46,348,0,"default"],[495,53,348,0],[495,55,341,7],[495,66,341,39,"options"],[495,73,341,46],[495,75,341,48],[496,6,342,4],[496,10,342,8,"options"],[496,17,342,15],[496,19,342,17,"reloadScreenOptions"],[496,38,342,36],[496,40,342,38],[497,8,343,8],[497,12,343,14,"resolvedOptions"],[497,27,343,29],[497,30,343,32,"resolveReloadScreenOptions"],[497,56,343,58],[497,57,343,59,"options"],[497,64,343,66],[497,65,343,67,"reloadScreenOptions"],[497,84,343,86],[497,85,343,87],[498,8,344,8],[498,15,344,15,"ExpoUpdates"],[498,26,344,26],[498,27,344,26,"default"],[498,34,344,26],[498,35,344,27,"showReloadScreen"],[498,51,344,43],[498,52,344,44,"resolvedOptions"],[498,67,344,59],[498,68,344,60],[499,6,345,4],[500,6,346,4],[500,13,346,11,"ExpoUpdates"],[500,24,346,22],[500,25,346,22,"default"],[500,32,346,22],[500,33,346,23,"showReloadScreen"],[500,49,346,39],[500,50,346,40],[500,51,346,41],[501,4,347,0],[501,5,347,1],[502,4,347,1],[502,11,347,1,"_showReloadScreen"],[502,28,347,1],[502,29,347,1,"apply"],[502,34,347,1],[502,41,347,1,"arguments"],[502,50,347,1],[503,2,347,1],[504,2,347,1],[504,11,353,22,"hideReloadScreen"],[504,27,353,38,"hideReloadScreen"],[504,28,353,38],[505,4,353,38],[505,11,353,38,"_hideReloadScreen"],[505,28,353,38],[505,29,353,38,"apply"],[505,34,353,38],[505,41,353,38,"arguments"],[505,50,353,38],[506,2,353,38],[507,2,353,38],[507,11,353,38,"_hideReloadScreen"],[507,29,353,38],[508,4,353,38,"_hideReloadScreen"],[508,21,353,38],[508,28,353,38,"_asyncToGenerator"],[508,45,353,38],[508,46,353,38,"default"],[508,53,353,38],[508,55,353,7],[508,68,353,41],[509,6,354,4],[509,13,354,11,"ExpoUpdates"],[509,24,354,22],[509,25,354,22,"default"],[509,32,354,22],[509,33,354,23,"hideReloadScreen"],[509,49,354,39],[509,50,354,40],[509,51,354,41],[510,4,355,0],[510,5,355,1],[511,4,355,1],[511,11,355,1,"_hideReloadScreen"],[511,28,355,1],[511,29,355,1,"apply"],[511,34,355,1],[511,41,355,1,"arguments"],[511,50,355,1],[512,2,355,1],[513,0,355,1],[513,3]],"functionMap":{"names":["<global>","resolveImageSource","resolveReloadScreenOptions","reloadAsync","checkForUpdateAsync","getExtraParamsAsync","setExtraParamAsync","readLogEntriesAsync","clearLogEntriesAsync","fetchUpdateAsync","setUpdateURLAndRequestHeadersOverride","setUpdateRequestHeadersOverride","showReloadScreen","hideReloadScreen"],"mappings":"AAA;AC8G;CDoB;AEC;CFS;OG2B;CHU;OIgB;CJc;OKM;CLE;OMQ;CNE;OOU;CPE;OQY;CRE;OSe;CTc;OUS;CVE;OWQ;CXE;OYuC;CZM;OaM;CbE"},"hasCjsExports":false},"type":"js/module"}]}