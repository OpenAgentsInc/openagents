{"dependencies":[{"name":"@babel/runtime/helpers/slicedToArray","data":{"asyncType":null,"isESMImport":false,"locs":[],"key":"5y7e5+zC7teYEEC6niD9f5zII1M=","exportNames":["*"],"imports":1}},{"name":"../constants","data":{"asyncType":null,"isESMImport":false,"locs":[{"start":{"line":5,"column":20,"index":187},"end":{"line":5,"column":43,"index":210}}],"key":"zmjjtqoQxi2W71eIMIIaEi1mOpU=","exportNames":["*"],"imports":1}},{"name":"../fork/getPathFromState-forks","data":{"asyncType":null,"isESMImport":false,"locs":[{"start":{"line":6,"column":33,"index":245},"end":{"line":6,"column":74,"index":286}}],"key":"Pwl2s8MefiXMrO7elNt6TT2k9Bo=","exportNames":["*"],"imports":1}}],"output":[{"data":{"code":"__d(function (global, require, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {\n  \"use strict\";\n\n  var _slicedToArray = require(_dependencyMap[0]).default;\n  Object.defineProperty(exports, \"__esModule\", {\n    value: true\n  });\n  exports.defaultRouteInfo = undefined;\n  exports.getRouteInfoFromState = getRouteInfoFromState;\n  var constants_1 = require(_dependencyMap[1]);\n  var getPathFromState_forks_1 = require(_dependencyMap[2]);\n  exports.defaultRouteInfo = {\n    unstable_globalHref: '',\n    searchParams: new URLSearchParams(),\n    pathname: '/',\n    params: {},\n    segments: [],\n    pathnameWithParams: '/',\n    // TODO: Remove this, it is not used anywhere\n    isIndex: false\n  };\n  function getRouteInfoFromState(state) {\n    if (!state) return exports.defaultRouteInfo;\n    var index = 'index' in state ? state.index ?? 0 : 0;\n    var route = state.routes[index];\n    if (route.name === constants_1.NOT_FOUND_ROUTE_NAME || route.name === constants_1.SITEMAP_ROUTE_NAME) {\n      var path = route.path || (route.name === constants_1.NOT_FOUND_ROUTE_NAME ? '/' : `/${route.name}`);\n      return {\n        ...exports.defaultRouteInfo,\n        unstable_globalHref: (0, getPathFromState_forks_1.appendBaseUrl)(path),\n        pathname: path,\n        pathnameWithParams: path,\n        segments: [route.name]\n      };\n    }\n    if (route.name !== constants_1.INTERNAL_SLOT_NAME) {\n      throw new Error(`Expected the first route to be ${constants_1.INTERNAL_SLOT_NAME}, but got ${route.name}`);\n    }\n    state = route.state;\n    var segments = [];\n    var params = Object.create(null);\n    while (state) {\n      route = state.routes['index' in state && state.index ? state.index : 0];\n      Object.assign(params, route.params);\n      var routeName = route.name;\n      if (routeName.startsWith('/')) {\n        routeName = routeName.slice(1);\n      }\n      segments.push(...routeName.split('/'));\n      state = route.state;\n    }\n    params = Object.fromEntries(Object.entries(params).map(_ref => {\n      var _ref2 = _slicedToArray(_ref, 2),\n        key = _ref2[0],\n        value = _ref2[1];\n      if (typeof value === 'string') {\n        return [key, safeDecodeURIComponent(value)];\n      } else if (Array.isArray(value)) {\n        return [key, value.map(v => safeDecodeURIComponent(v))];\n      } else {\n        return [key, value];\n      }\n    }));\n    /**\n     * If React Navigation didn't render the entire tree (e.g it was interrupted in a layout)\n     * then the state maybe incomplete. The reset of the path is in the params, instead of being a route\n     */\n    var routeParams = route.params;\n    while (routeParams && 'screen' in routeParams) {\n      if (typeof routeParams.screen === 'string') {\n        var screen = routeParams.screen.startsWith('/') ? routeParams.screen.slice(1) : routeParams.screen;\n        segments.push(...screen.split('/'));\n      }\n      if (typeof routeParams.params === 'object' && !Array.isArray(routeParams.params)) {\n        routeParams = routeParams.params;\n      } else {\n        routeParams = undefined;\n      }\n    }\n    if (route.params && 'screen' in route.params && route.params.screen === 'string') {\n      var _screen = route.params.screen.startsWith('/') ? route.params.screen.slice(1) : route.params.screen;\n      segments.push(..._screen.split('/'));\n    }\n    if (segments[segments.length - 1] === 'index') {\n      segments.pop();\n    }\n    delete params['screen'];\n    delete params['params'];\n    var pathParams = new Set();\n    var pathname = '/' + segments.filter(segment => {\n      return !(segment.startsWith('(') && segment.endsWith(')'));\n    }).flatMap(segment => {\n      if (segment === '+not-found') {\n        var notFoundPath = params['not-found'];\n        pathParams.add('not-found');\n        if (typeof notFoundPath === 'undefined') {\n          // Not founds are optional, do nothing if its not present\n          return [];\n        } else if (Array.isArray(notFoundPath)) {\n          return notFoundPath;\n        } else {\n          return [notFoundPath];\n        }\n      } else if (segment.startsWith('[...') && segment.endsWith(']')) {\n        var paramName = segment.slice(4, -1);\n        // Legacy for React Navigation optional params\n        if (paramName.endsWith('?')) {\n          paramName = paramName.slice(0, -1);\n        }\n        var values = params[paramName];\n        pathParams.add(paramName);\n        // Catchall params are optional\n        return values || [];\n      } else if (segment.startsWith('[') && segment.endsWith(']')) {\n        var _paramName = segment.slice(1, -1);\n        var value = params[_paramName];\n        pathParams.add(_paramName);\n        // Optional params are optional\n        return value ? [value] : [];\n      } else {\n        return [segment];\n      }\n    }).join('/');\n    var searchParams = new URLSearchParams(Object.entries(params).flatMap(_ref3 => {\n      var _ref4 = _slicedToArray(_ref3, 2),\n        key = _ref4[0],\n        value = _ref4[1];\n      // Search params should not include path params\n      if (pathParams.has(key)) {\n        return [];\n      } else if (Array.isArray(value)) {\n        return value.map(v => [key, v]);\n      }\n      return [[key, value]];\n    }));\n    var hash;\n    if (searchParams.has('#')) {\n      hash = searchParams.get('#') || undefined;\n      searchParams.delete('#');\n    }\n    // We cannot use searchParams.size because it is not included in the React Native polyfill\n    var searchParamString = searchParams.toString();\n    var pathnameWithParams = searchParamString ? pathname + '?' + searchParamString : pathname;\n    pathnameWithParams = hash ? pathnameWithParams + '#' + hash : pathnameWithParams;\n    return {\n      segments,\n      pathname,\n      params,\n      unstable_globalHref: (0, getPathFromState_forks_1.appendBaseUrl)(pathnameWithParams),\n      searchParams,\n      pathnameWithParams,\n      // TODO: Remove this, it is not used anywhere\n      isIndex: false\n    };\n  }\n  function safeDecodeURIComponent(value) {\n    try {\n      return typeof value === 'string' ? decodeURIComponent(value) : value;\n    } catch {\n      // If the value is not a valid URI component, return it as is\n      return value;\n    }\n  }\n});","lineCount":164,"map":[[2,2,1,0],[2,14,1,12],[4,2,1,13],[4,6,1,13,"_slicedToArray"],[4,20,1,13],[4,23,1,13,"require"],[4,30,1,13],[4,31,1,13,"_dependencyMap"],[4,45,1,13],[4,50,1,13,"default"],[4,57,1,13],[5,2,2,0,"Object"],[5,8,2,6],[5,9,2,7,"defineProperty"],[5,23,2,21],[5,24,2,22,"exports"],[5,31,2,29],[5,33,2,31],[5,45,2,43],[5,47,2,45],[6,4,2,47,"value"],[6,9,2,52],[6,11,2,54],[7,2,2,59],[7,3,2,60],[7,4,2,61],[8,2,3,0,"exports"],[8,9,3,7],[8,10,3,8,"defaultRouteInfo"],[8,26,3,24],[8,29,3,24,"undefined"],[8,38,3,33],[9,2,4,0,"exports"],[9,9,4,7],[9,10,4,8,"getRouteInfoFromState"],[9,31,4,29],[9,34,4,32,"getRouteInfoFromState"],[9,55,4,53],[10,2,5,0],[10,6,5,6,"constants_1"],[10,17,5,17],[10,20,5,20,"require"],[10,27,5,27],[10,28,5,27,"_dependencyMap"],[10,42,5,27],[10,45,5,42],[10,46,5,43],[11,2,6,0],[11,6,6,6,"getPathFromState_forks_1"],[11,30,6,30],[11,33,6,33,"require"],[11,40,6,40],[11,41,6,40,"_dependencyMap"],[11,55,6,40],[11,58,6,73],[11,59,6,74],[12,2,7,0,"exports"],[12,9,7,7],[12,10,7,8,"defaultRouteInfo"],[12,26,7,24],[12,29,7,27],[13,4,8,4,"unstable_globalHref"],[13,23,8,23],[13,25,8,25],[13,27,8,27],[14,4,9,4,"searchParams"],[14,16,9,16],[14,18,9,18],[14,22,9,22,"URLSearchParams"],[14,37,9,37],[14,38,9,38],[14,39,9,39],[15,4,10,4,"pathname"],[15,12,10,12],[15,14,10,14],[15,17,10,17],[16,4,11,4,"params"],[16,10,11,10],[16,12,11,12],[16,13,11,13],[16,14,11,14],[17,4,12,4,"segments"],[17,12,12,12],[17,14,12,14],[17,16,12,16],[18,4,13,4,"pathnameWithParams"],[18,22,13,22],[18,24,13,24],[18,27,13,27],[19,4,14,4],[20,4,15,4,"isIndex"],[20,11,15,11],[20,13,15,13],[21,2,16,0],[21,3,16,1],[22,2,17,0],[22,11,17,9,"getRouteInfoFromState"],[22,32,17,30,"getRouteInfoFromState"],[22,33,17,31,"state"],[22,38,17,36],[22,40,17,38],[23,4,18,4],[23,8,18,8],[23,9,18,9,"state"],[23,14,18,14],[23,16,19,8],[23,23,19,15,"exports"],[23,30,19,22],[23,31,19,23,"defaultRouteInfo"],[23,47,19,39],[24,4,20,4],[24,8,20,10,"index"],[24,13,20,15],[24,16,20,18],[24,23,20,25],[24,27,20,29,"state"],[24,32,20,34],[24,35,20,38,"state"],[24,40,20,43],[24,41,20,44,"index"],[24,46,20,49],[24,50,20,53],[24,51,20,54],[24,54,20,58],[24,55,20,59],[25,4,21,4],[25,8,21,8,"route"],[25,13,21,13],[25,16,21,16,"state"],[25,21,21,21],[25,22,21,22,"routes"],[25,28,21,28],[25,29,21,29,"index"],[25,34,21,34],[25,35,21,35],[26,4,22,4],[26,8,22,8,"route"],[26,13,22,13],[26,14,22,14,"name"],[26,18,22,18],[26,23,22,23,"constants_1"],[26,34,22,34],[26,35,22,35,"NOT_FOUND_ROUTE_NAME"],[26,55,22,55],[26,59,22,59,"route"],[26,64,22,64],[26,65,22,65,"name"],[26,69,22,69],[26,74,22,74,"constants_1"],[26,85,22,85],[26,86,22,86,"SITEMAP_ROUTE_NAME"],[26,104,22,104],[26,106,22,106],[27,6,23,8],[27,10,23,14,"path"],[27,14,23,18],[27,17,23,21,"route"],[27,22,23,26],[27,23,23,27,"path"],[27,27,23,31],[27,32,23,36,"route"],[27,37,23,41],[27,38,23,42,"name"],[27,42,23,46],[27,47,23,51,"constants_1"],[27,58,23,62],[27,59,23,63,"NOT_FOUND_ROUTE_NAME"],[27,79,23,83],[27,82,23,86],[27,85,23,89],[27,88,23,92],[27,92,23,96,"route"],[27,97,23,101],[27,98,23,102,"name"],[27,102,23,106],[27,104,23,108],[27,105,23,109],[28,6,24,8],[28,13,24,15],[29,8,25,12],[29,11,25,15,"exports"],[29,18,25,22],[29,19,25,23,"defaultRouteInfo"],[29,35,25,39],[30,8,26,12,"unstable_globalHref"],[30,27,26,31],[30,29,26,33],[30,30,26,34],[30,31,26,35],[30,33,26,37,"getPathFromState_forks_1"],[30,57,26,61],[30,58,26,62,"appendBaseUrl"],[30,71,26,75],[30,73,26,77,"path"],[30,77,26,81],[30,78,26,82],[31,8,27,12,"pathname"],[31,16,27,20],[31,18,27,22,"path"],[31,22,27,26],[32,8,28,12,"pathnameWithParams"],[32,26,28,30],[32,28,28,32,"path"],[32,32,28,36],[33,8,29,12,"segments"],[33,16,29,20],[33,18,29,22],[33,19,29,23,"route"],[33,24,29,28],[33,25,29,29,"name"],[33,29,29,33],[34,6,30,8],[34,7,30,9],[35,4,31,4],[36,4,32,4],[36,8,32,8,"route"],[36,13,32,13],[36,14,32,14,"name"],[36,18,32,18],[36,23,32,23,"constants_1"],[36,34,32,34],[36,35,32,35,"INTERNAL_SLOT_NAME"],[36,53,32,53],[36,55,32,55],[37,6,33,8],[37,12,33,14],[37,16,33,18,"Error"],[37,21,33,23],[37,22,33,24],[37,56,33,58,"constants_1"],[37,67,33,69],[37,68,33,70,"INTERNAL_SLOT_NAME"],[37,86,33,88],[37,99,33,101,"route"],[37,104,33,106],[37,105,33,107,"name"],[37,109,33,111],[37,111,33,113],[37,112,33,114],[38,4,34,4],[39,4,35,4,"state"],[39,9,35,9],[39,12,35,12,"route"],[39,17,35,17],[39,18,35,18,"state"],[39,23,35,23],[40,4,36,4],[40,8,36,10,"segments"],[40,16,36,18],[40,19,36,21],[40,21,36,23],[41,4,37,4],[41,8,37,8,"params"],[41,14,37,14],[41,17,37,17,"Object"],[41,23,37,23],[41,24,37,24,"create"],[41,30,37,30],[41,31,37,31],[41,35,37,35],[41,36,37,36],[42,4,38,4],[42,11,38,11,"state"],[42,16,38,16],[42,18,38,18],[43,6,39,8,"route"],[43,11,39,13],[43,14,39,16,"state"],[43,19,39,21],[43,20,39,22,"routes"],[43,26,39,28],[43,27,39,29],[43,34,39,36],[43,38,39,40,"state"],[43,43,39,45],[43,47,39,49,"state"],[43,52,39,54],[43,53,39,55,"index"],[43,58,39,60],[43,61,39,63,"state"],[43,66,39,68],[43,67,39,69,"index"],[43,72,39,74],[43,75,39,77],[43,76,39,78],[43,77,39,79],[44,6,40,8,"Object"],[44,12,40,14],[44,13,40,15,"assign"],[44,19,40,21],[44,20,40,22,"params"],[44,26,40,28],[44,28,40,30,"route"],[44,33,40,35],[44,34,40,36,"params"],[44,40,40,42],[44,41,40,43],[45,6,41,8],[45,10,41,12,"routeName"],[45,19,41,21],[45,22,41,24,"route"],[45,27,41,29],[45,28,41,30,"name"],[45,32,41,34],[46,6,42,8],[46,10,42,12,"routeName"],[46,19,42,21],[46,20,42,22,"startsWith"],[46,30,42,32],[46,31,42,33],[46,34,42,36],[46,35,42,37],[46,37,42,39],[47,8,43,12,"routeName"],[47,17,43,21],[47,20,43,24,"routeName"],[47,29,43,33],[47,30,43,34,"slice"],[47,35,43,39],[47,36,43,40],[47,37,43,41],[47,38,43,42],[48,6,44,8],[49,6,45,8,"segments"],[49,14,45,16],[49,15,45,17,"push"],[49,19,45,21],[49,20,45,22],[49,23,45,25,"routeName"],[49,32,45,34],[49,33,45,35,"split"],[49,38,45,40],[49,39,45,41],[49,42,45,44],[49,43,45,45],[49,44,45,46],[50,6,46,8,"state"],[50,11,46,13],[50,14,46,16,"route"],[50,19,46,21],[50,20,46,22,"state"],[50,25,46,27],[51,4,47,4],[52,4,48,4,"params"],[52,10,48,10],[52,13,48,13,"Object"],[52,19,48,19],[52,20,48,20,"fromEntries"],[52,31,48,31],[52,32,48,32,"Object"],[52,38,48,38],[52,39,48,39,"entries"],[52,46,48,46],[52,47,48,47,"params"],[52,53,48,53],[52,54,48,54],[52,55,48,55,"map"],[52,58,48,58],[52,59,48,59,"_ref"],[52,63,48,59],[52,67,48,77],[53,6,48,77],[53,10,48,77,"_ref2"],[53,15,48,77],[53,18,48,77,"_slicedToArray"],[53,32,48,77],[53,33,48,77,"_ref"],[53,37,48,77],[54,8,48,61,"key"],[54,11,48,64],[54,14,48,64,"_ref2"],[54,19,48,64],[55,8,48,66,"value"],[55,13,48,71],[55,16,48,71,"_ref2"],[55,21,48,71],[56,6,49,8],[56,10,49,12],[56,17,49,19,"value"],[56,22,49,24],[56,27,49,29],[56,35,49,37],[56,37,49,39],[57,8,50,12],[57,15,50,19],[57,16,50,20,"key"],[57,19,50,23],[57,21,50,25,"safeDecodeURIComponent"],[57,43,50,47],[57,44,50,48,"value"],[57,49,50,53],[57,50,50,54],[57,51,50,55],[58,6,51,8],[58,7,51,9],[58,13,52,13],[58,17,52,17,"Array"],[58,22,52,22],[58,23,52,23,"isArray"],[58,30,52,30],[58,31,52,31,"value"],[58,36,52,36],[58,37,52,37],[58,39,52,39],[59,8,53,12],[59,15,53,19],[59,16,53,20,"key"],[59,19,53,23],[59,21,53,25,"value"],[59,26,53,30],[59,27,53,31,"map"],[59,30,53,34],[59,31,53,36,"v"],[59,32,53,37],[59,36,53,42,"safeDecodeURIComponent"],[59,58,53,64],[59,59,53,65,"v"],[59,60,53,66],[59,61,53,67],[59,62,53,68],[59,63,53,69],[60,6,54,8],[60,7,54,9],[60,13,55,13],[61,8,56,12],[61,15,56,19],[61,16,56,20,"key"],[61,19,56,23],[61,21,56,25,"value"],[61,26,56,30],[61,27,56,31],[62,6,57,8],[63,4,58,4],[63,5,58,5],[63,6,58,6],[63,7,58,7],[64,4,59,4],[65,0,60,0],[66,0,61,0],[67,0,62,0],[68,4,63,4],[68,8,63,8,"routeParams"],[68,19,63,19],[68,22,63,22,"route"],[68,27,63,27],[68,28,63,28,"params"],[68,34,63,34],[69,4,64,4],[69,11,64,11,"routeParams"],[69,22,64,22],[69,26,64,26],[69,34,64,34],[69,38,64,38,"routeParams"],[69,49,64,49],[69,51,64,51],[70,6,65,8],[70,10,65,12],[70,17,65,19,"routeParams"],[70,28,65,30],[70,29,65,31,"screen"],[70,35,65,37],[70,40,65,42],[70,48,65,50],[70,50,65,52],[71,8,66,12],[71,12,66,18,"screen"],[71,18,66,24],[71,21,66,27,"routeParams"],[71,32,66,38],[71,33,66,39,"screen"],[71,39,66,45],[71,40,66,46,"startsWith"],[71,50,66,56],[71,51,66,57],[71,54,66,60],[71,55,66,61],[71,58,67,18,"routeParams"],[71,69,67,29],[71,70,67,30,"screen"],[71,76,67,36],[71,77,67,37,"slice"],[71,82,67,42],[71,83,67,43],[71,84,67,44],[71,85,67,45],[71,88,68,18,"routeParams"],[71,99,68,29],[71,100,68,30,"screen"],[71,106,68,36],[72,8,69,12,"segments"],[72,16,69,20],[72,17,69,21,"push"],[72,21,69,25],[72,22,69,26],[72,25,69,29,"screen"],[72,31,69,35],[72,32,69,36,"split"],[72,37,69,41],[72,38,69,42],[72,41,69,45],[72,42,69,46],[72,43,69,47],[73,6,70,8],[74,6,71,8],[74,10,71,12],[74,17,71,19,"routeParams"],[74,28,71,30],[74,29,71,31,"params"],[74,35,71,37],[74,40,71,42],[74,48,71,50],[74,52,71,54],[74,53,71,55,"Array"],[74,58,71,60],[74,59,71,61,"isArray"],[74,66,71,68],[74,67,71,69,"routeParams"],[74,78,71,80],[74,79,71,81,"params"],[74,85,71,87],[74,86,71,88],[74,88,71,90],[75,8,72,12,"routeParams"],[75,19,72,23],[75,22,72,26,"routeParams"],[75,33,72,37],[75,34,72,38,"params"],[75,40,72,44],[76,6,73,8],[76,7,73,9],[76,13,74,13],[77,8,75,12,"routeParams"],[77,19,75,23],[77,22,75,26,"undefined"],[77,31,75,35],[78,6,76,8],[79,4,77,4],[80,4,78,4],[80,8,78,8,"route"],[80,13,78,13],[80,14,78,14,"params"],[80,20,78,20],[80,24,78,24],[80,32,78,32],[80,36,78,36,"route"],[80,41,78,41],[80,42,78,42,"params"],[80,48,78,48],[80,52,78,52,"route"],[80,57,78,57],[80,58,78,58,"params"],[80,64,78,64],[80,65,78,65,"screen"],[80,71,78,71],[80,76,78,76],[80,84,78,84],[80,86,78,86],[81,6,79,8],[81,10,79,14,"screen"],[81,17,79,20],[81,20,79,23,"route"],[81,25,79,28],[81,26,79,29,"params"],[81,32,79,35],[81,33,79,36,"screen"],[81,39,79,42],[81,40,79,43,"startsWith"],[81,50,79,53],[81,51,79,54],[81,54,79,57],[81,55,79,58],[81,58,80,14,"route"],[81,63,80,19],[81,64,80,20,"params"],[81,70,80,26],[81,71,80,27,"screen"],[81,77,80,33],[81,78,80,34,"slice"],[81,83,80,39],[81,84,80,40],[81,85,80,41],[81,86,80,42],[81,89,81,14,"route"],[81,94,81,19],[81,95,81,20,"params"],[81,101,81,26],[81,102,81,27,"screen"],[81,108,81,33],[82,6,82,8,"segments"],[82,14,82,16],[82,15,82,17,"push"],[82,19,82,21],[82,20,82,22],[82,23,82,25,"screen"],[82,30,82,31],[82,31,82,32,"split"],[82,36,82,37],[82,37,82,38],[82,40,82,41],[82,41,82,42],[82,42,82,43],[83,4,83,4],[84,4,84,4],[84,8,84,8,"segments"],[84,16,84,16],[84,17,84,17,"segments"],[84,25,84,25],[84,26,84,26,"length"],[84,32,84,32],[84,35,84,35],[84,36,84,36],[84,37,84,37],[84,42,84,42],[84,49,84,49],[84,51,84,51],[85,6,85,8,"segments"],[85,14,85,16],[85,15,85,17,"pop"],[85,18,85,20],[85,19,85,21],[85,20,85,22],[86,4,86,4],[87,4,87,4],[87,11,87,11,"params"],[87,17,87,17],[87,18,87,18],[87,26,87,26],[87,27,87,27],[88,4,88,4],[88,11,88,11,"params"],[88,17,88,17],[88,18,88,18],[88,26,88,26],[88,27,88,27],[89,4,89,4],[89,8,89,10,"pathParams"],[89,18,89,20],[89,21,89,23],[89,25,89,27,"Set"],[89,28,89,30],[89,29,89,31],[89,30,89,32],[90,4,90,4],[90,8,90,10,"pathname"],[90,16,90,18],[90,19,90,21],[90,22,90,24],[90,25,91,8,"segments"],[90,33,91,16],[90,34,92,13,"filter"],[90,40,92,19],[90,41,92,21,"segment"],[90,48,92,28],[90,52,92,33],[91,6,93,12],[91,13,93,19],[91,15,93,21,"segment"],[91,22,93,28],[91,23,93,29,"startsWith"],[91,33,93,39],[91,34,93,40],[91,37,93,43],[91,38,93,44],[91,42,93,48,"segment"],[91,49,93,55],[91,50,93,56,"endsWith"],[91,58,93,64],[91,59,93,65],[91,62,93,68],[91,63,93,69],[91,64,93,70],[92,4,94,8],[92,5,94,9],[92,6,94,10],[92,7,95,13,"flatMap"],[92,14,95,20],[92,15,95,22,"segment"],[92,22,95,29],[92,26,95,34],[93,6,96,12],[93,10,96,16,"segment"],[93,17,96,23],[93,22,96,28],[93,34,96,40],[93,36,96,42],[94,8,97,16],[94,12,97,22,"notFoundPath"],[94,24,97,34],[94,27,97,37,"params"],[94,33,97,43],[94,34,97,44],[94,45,97,55],[94,46,97,56],[95,8,98,16,"pathParams"],[95,18,98,26],[95,19,98,27,"add"],[95,22,98,30],[95,23,98,31],[95,34,98,42],[95,35,98,43],[96,8,99,16],[96,12,99,20],[96,19,99,27,"notFoundPath"],[96,31,99,39],[96,36,99,44],[96,47,99,55],[96,49,99,57],[97,10,100,20],[98,10,101,20],[98,17,101,27],[98,19,101,29],[99,8,102,16],[99,9,102,17],[99,15,103,21],[99,19,103,25,"Array"],[99,24,103,30],[99,25,103,31,"isArray"],[99,32,103,38],[99,33,103,39,"notFoundPath"],[99,45,103,51],[99,46,103,52],[99,48,103,54],[100,10,104,20],[100,17,104,27,"notFoundPath"],[100,29,104,39],[101,8,105,16],[101,9,105,17],[101,15,106,21],[102,10,107,20],[102,17,107,27],[102,18,107,28,"notFoundPath"],[102,30,107,40],[102,31,107,41],[103,8,108,16],[104,6,109,12],[104,7,109,13],[104,13,110,17],[104,17,110,21,"segment"],[104,24,110,28],[104,25,110,29,"startsWith"],[104,35,110,39],[104,36,110,40],[104,42,110,46],[104,43,110,47],[104,47,110,51,"segment"],[104,54,110,58],[104,55,110,59,"endsWith"],[104,63,110,67],[104,64,110,68],[104,67,110,71],[104,68,110,72],[104,70,110,74],[105,8,111,16],[105,12,111,20,"paramName"],[105,21,111,29],[105,24,111,32,"segment"],[105,31,111,39],[105,32,111,40,"slice"],[105,37,111,45],[105,38,111,46],[105,39,111,47],[105,43,111,51],[105,44,111,52],[106,8,112,16],[107,8,113,16],[107,12,113,20,"paramName"],[107,21,113,29],[107,22,113,30,"endsWith"],[107,30,113,38],[107,31,113,39],[107,34,113,42],[107,35,113,43],[107,37,113,45],[108,10,114,20,"paramName"],[108,19,114,29],[108,22,114,32,"paramName"],[108,31,114,41],[108,32,114,42,"slice"],[108,37,114,47],[108,38,114,48],[108,39,114,49],[108,43,114,53],[108,44,114,54],[109,8,115,16],[110,8,116,16],[110,12,116,22,"values"],[110,18,116,28],[110,21,116,31,"params"],[110,27,116,37],[110,28,116,38,"paramName"],[110,37,116,47],[110,38,116,48],[111,8,117,16,"pathParams"],[111,18,117,26],[111,19,117,27,"add"],[111,22,117,30],[111,23,117,31,"paramName"],[111,32,117,40],[111,33,117,41],[112,8,118,16],[113,8,119,16],[113,15,119,23,"values"],[113,21,119,29],[113,25,119,33],[113,27,119,35],[114,6,120,12],[114,7,120,13],[114,13,121,17],[114,17,121,21,"segment"],[114,24,121,28],[114,25,121,29,"startsWith"],[114,35,121,39],[114,36,121,40],[114,39,121,43],[114,40,121,44],[114,44,121,48,"segment"],[114,51,121,55],[114,52,121,56,"endsWith"],[114,60,121,64],[114,61,121,65],[114,64,121,68],[114,65,121,69],[114,67,121,71],[115,8,122,16],[115,12,122,22,"paramName"],[115,22,122,31],[115,25,122,34,"segment"],[115,32,122,41],[115,33,122,42,"slice"],[115,38,122,47],[115,39,122,48],[115,40,122,49],[115,44,122,53],[115,45,122,54],[116,8,123,16],[116,12,123,22,"value"],[116,17,123,27],[116,20,123,30,"params"],[116,26,123,36],[116,27,123,37,"paramName"],[116,37,123,46],[116,38,123,47],[117,8,124,16,"pathParams"],[117,18,124,26],[117,19,124,27,"add"],[117,22,124,30],[117,23,124,31,"paramName"],[117,33,124,40],[117,34,124,41],[118,8,125,16],[119,8,126,16],[119,15,126,23,"value"],[119,20,126,28],[119,23,126,31],[119,24,126,32,"value"],[119,29,126,37],[119,30,126,38],[119,33,126,41],[119,35,126,43],[120,6,127,12],[120,7,127,13],[120,13,128,17],[121,8,129,16],[121,15,129,23],[121,16,129,24,"segment"],[121,23,129,31],[121,24,129,32],[122,6,130,12],[123,4,131,8],[123,5,131,9],[123,6,131,10],[123,7,132,13,"join"],[123,11,132,17],[123,12,132,18],[123,15,132,21],[123,16,132,22],[124,4,133,4],[124,8,133,10,"searchParams"],[124,20,133,22],[124,23,133,25],[124,27,133,29,"URLSearchParams"],[124,42,133,44],[124,43,133,45,"Object"],[124,49,133,51],[124,50,133,52,"entries"],[124,57,133,59],[124,58,133,60,"params"],[124,64,133,66],[124,65,133,67],[124,66,133,68,"flatMap"],[124,73,133,75],[124,74,133,76,"_ref3"],[124,79,133,76],[124,83,133,94],[125,6,133,94],[125,10,133,94,"_ref4"],[125,15,133,94],[125,18,133,94,"_slicedToArray"],[125,32,133,94],[125,33,133,94,"_ref3"],[125,38,133,94],[126,8,133,78,"key"],[126,11,133,81],[126,14,133,81,"_ref4"],[126,19,133,81],[127,8,133,83,"value"],[127,13,133,88],[127,16,133,88,"_ref4"],[127,21,133,88],[128,6,134,8],[129,6,135,8],[129,10,135,12,"pathParams"],[129,20,135,22],[129,21,135,23,"has"],[129,24,135,26],[129,25,135,27,"key"],[129,28,135,30],[129,29,135,31],[129,31,135,33],[130,8,136,12],[130,15,136,19],[130,17,136,21],[131,6,137,8],[131,7,137,9],[131,13,138,13],[131,17,138,17,"Array"],[131,22,138,22],[131,23,138,23,"isArray"],[131,30,138,30],[131,31,138,31,"value"],[131,36,138,36],[131,37,138,37],[131,39,138,39],[132,8,139,12],[132,15,139,19,"value"],[132,20,139,24],[132,21,139,25,"map"],[132,24,139,28],[132,25,139,30,"v"],[132,26,139,31],[132,30,139,36],[132,31,139,37,"key"],[132,34,139,40],[132,36,139,42,"v"],[132,37,139,43],[132,38,139,44],[132,39,139,45],[133,6,140,8],[134,6,141,8],[134,13,141,15],[134,14,141,16],[134,15,141,17,"key"],[134,18,141,20],[134,20,141,22,"value"],[134,25,141,27],[134,26,141,28],[134,27,141,29],[135,4,142,4],[135,5,142,5],[135,6,142,6],[135,7,142,7],[136,4,143,4],[136,8,143,8,"hash"],[136,12,143,12],[137,4,144,4],[137,8,144,8,"searchParams"],[137,20,144,20],[137,21,144,21,"has"],[137,24,144,24],[137,25,144,25],[137,28,144,28],[137,29,144,29],[137,31,144,31],[138,6,145,8,"hash"],[138,10,145,12],[138,13,145,15,"searchParams"],[138,25,145,27],[138,26,145,28,"get"],[138,29,145,31],[138,30,145,32],[138,33,145,35],[138,34,145,36],[138,38,145,40,"undefined"],[138,47,145,49],[139,6,146,8,"searchParams"],[139,18,146,20],[139,19,146,21,"delete"],[139,25,146,27],[139,26,146,28],[139,29,146,31],[139,30,146,32],[140,4,147,4],[141,4,148,4],[142,4,149,4],[142,8,149,10,"searchParamString"],[142,25,149,27],[142,28,149,30,"searchParams"],[142,40,149,42],[142,41,149,43,"toString"],[142,49,149,51],[142,50,149,52],[142,51,149,53],[143,4,150,4],[143,8,150,8,"pathnameWithParams"],[143,26,150,26],[143,29,150,29,"searchParamString"],[143,46,150,46],[143,49,150,49,"pathname"],[143,57,150,57],[143,60,150,60],[143,63,150,63],[143,66,150,66,"searchParamString"],[143,83,150,83],[143,86,150,86,"pathname"],[143,94,150,94],[144,4,151,4,"pathnameWithParams"],[144,22,151,22],[144,25,151,25,"hash"],[144,29,151,29],[144,32,151,32,"pathnameWithParams"],[144,50,151,50],[144,53,151,53],[144,56,151,56],[144,59,151,59,"hash"],[144,63,151,63],[144,66,151,66,"pathnameWithParams"],[144,84,151,84],[145,4,152,4],[145,11,152,11],[146,6,153,8,"segments"],[146,14,153,16],[147,6,154,8,"pathname"],[147,14,154,16],[148,6,155,8,"params"],[148,12,155,14],[149,6,156,8,"unstable_globalHref"],[149,25,156,27],[149,27,156,29],[149,28,156,30],[149,29,156,31],[149,31,156,33,"getPathFromState_forks_1"],[149,55,156,57],[149,56,156,58,"appendBaseUrl"],[149,69,156,71],[149,71,156,73,"pathnameWithParams"],[149,89,156,91],[149,90,156,92],[150,6,157,8,"searchParams"],[150,18,157,20],[151,6,158,8,"pathnameWithParams"],[151,24,158,26],[152,6,159,8],[153,6,160,8,"isIndex"],[153,13,160,15],[153,15,160,17],[154,4,161,4],[154,5,161,5],[155,2,162,0],[156,2,163,0],[156,11,163,9,"safeDecodeURIComponent"],[156,33,163,31,"safeDecodeURIComponent"],[156,34,163,32,"value"],[156,39,163,37],[156,41,163,39],[157,4,164,4],[157,8,164,8],[158,6,165,8],[158,13,165,15],[158,20,165,22,"value"],[158,25,165,27],[158,30,165,32],[158,38,165,40],[158,41,165,43,"decodeURIComponent"],[158,59,165,61],[158,60,165,62,"value"],[158,65,165,67],[158,66,165,68],[158,69,165,71,"value"],[158,74,165,76],[159,4,166,4],[159,5,166,5],[159,6,167,4],[159,12,167,10],[160,6,168,8],[161,6,169,8],[161,13,169,15,"value"],[161,18,169,20],[162,4,170,4],[163,2,171,0],[164,0,171,1],[164,3]],"functionMap":{"names":["<global>","getRouteInfoFromState","Object.entries.map$argument_0","value.map$argument_0","segments.filter$argument_0","segments.filter.flatMap$argument_0","Object.entries.flatMap$argument_0","safeDecodeURIComponent"],"mappings":"AAA;ACgB;2DC+B;mCCK,gCD;KDK;oBGkC;SHE;qBIC;SJoC;4EKE;6BHM,eG;KLG;CDoB;AOC;CPQ"},"hasCjsExports":true},"type":"js/module"}]}