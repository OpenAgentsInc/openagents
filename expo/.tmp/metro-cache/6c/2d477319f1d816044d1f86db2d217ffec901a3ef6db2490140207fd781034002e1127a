{"dependencies":[{"name":"expo-modules-core","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":1,"column":0,"index":0},"end":{"line":1,"column":68,"index":68}}],"key":"fU8WLIPqoAGygnPbZ/QJiQQfXEY=","exportNames":["*"],"imports":1}},{"name":"./ExpoFontLoader","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":2,"column":0,"index":69},"end":{"line":2,"column":46,"index":115}}],"key":"7dk3JQGwGYesJt8OOG3pkBz+dtE=","exportNames":["*"],"imports":1}},{"name":"./FontLoader","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":3,"column":0,"index":116},"end":{"line":3,"column":70,"index":186}}],"key":"ubgLNxOkixzH8pVapAwap9wQ8XU=","exportNames":["*"],"imports":1}}],"output":[{"data":{"code":"__d(function (global, require, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {\n  \"use strict\";\n\n  Object.defineProperty(exports, '__esModule', {\n    value: true\n  });\n  function _interopDefault(e) {\n    return e && e.__esModule ? e : {\n      default: e\n    };\n  }\n  exports.getServerResources = getServerResources;\n  exports.resetServerContext = resetServerContext;\n  exports.registerStaticFont = registerStaticFont;\n  var _expoModulesCore = require(_dependencyMap[0]);\n  var _ExpoFontLoader = require(_dependencyMap[1]);\n  var ExpoFontLoader = _interopDefault(_ExpoFontLoader);\n  var _FontLoader = require(_dependencyMap[2]);\n  /**\n   * @returns the server resources that should be statically extracted.\n   * @private\n   */\n  function getServerResources() {\n    if (!ExpoFontLoader.default.getServerResources) {\n      throw new _expoModulesCore.UnavailabilityError('expo-font', 'getServerResources');\n    }\n    return ExpoFontLoader.default.getServerResources();\n  }\n  /**\n   * @returns clear the server resources from the global scope.\n   * @private\n   */\n  function resetServerContext() {\n    if (!ExpoFontLoader.default.resetServerContext) {\n      throw new _expoModulesCore.UnavailabilityError('expo-font', 'resetServerContext');\n    }\n    return ExpoFontLoader.default.resetServerContext();\n  }\n  function registerStaticFont(fontFamily, source) {\n    // MUST BE A SYNC FUNCTION!\n    if (!source) {\n      throw new _expoModulesCore.CodedError(`ERR_FONT_SOURCE`, `Cannot load null or undefined font source: { \"${fontFamily}\": ${source} }. Expected asset of type \\`FontSource\\` for fontFamily of name: \"${fontFamily}\"`);\n    }\n    var asset = (0, _FontLoader.getAssetForSource)(source);\n    (0, _FontLoader.loadSingleFontAsync)(fontFamily, asset);\n  }\n});","lineCount":47,"map":[[12,2,8,0,"exports"],[12,9,8,0],[12,10,8,0,"getServerResources"],[12,28,8,0],[12,31,8,0,"getServerResources"],[12,49,8,0],[13,2,18,0,"exports"],[13,9,18,0],[13,10,18,0,"resetServerContext"],[13,28,18,0],[13,31,18,0,"resetServerContext"],[13,49,18,0],[14,2,24,0,"exports"],[14,9,24,0],[14,10,24,0,"registerStaticFont"],[14,28,24,0],[14,31,24,0,"registerStaticFont"],[14,49,24,0],[15,2,1,0],[15,6,1,0,"_expoModulesCore"],[15,22,1,0],[15,25,1,0,"require"],[15,32,1,0],[15,33,1,0,"_dependencyMap"],[15,47,1,0],[16,2,2,0],[16,6,2,0,"_ExpoFontLoader"],[16,21,2,0],[16,24,2,0,"require"],[16,31,2,0],[16,32,2,0,"_dependencyMap"],[16,46,2,0],[17,2,2,0],[17,6,2,0,"ExpoFontLoader"],[17,20,2,0],[17,23,2,0,"_interopDefault"],[17,38,2,0],[17,39,2,0,"_ExpoFontLoader"],[17,54,2,0],[18,2,3,0],[18,6,3,0,"_FontLoader"],[18,17,3,0],[18,20,3,0,"require"],[18,27,3,0],[18,28,3,0,"_dependencyMap"],[18,42,3,0],[19,2,4,0],[20,0,5,0],[21,0,6,0],[22,0,7,0],[23,2,8,7],[23,11,8,16,"getServerResources"],[23,29,8,34,"getServerResources"],[23,30,8,34],[23,32,8,37],[24,4,9,4],[24,8,9,8],[24,9,9,9,"ExpoFontLoader"],[24,23,9,23],[24,24,9,23,"default"],[24,31,9,23],[24,32,9,24,"getServerResources"],[24,50,9,42],[24,52,9,44],[25,6,10,8],[25,12,10,14],[25,16,10,18,"UnavailabilityError"],[25,32,10,37],[25,33,10,37,"UnavailabilityError"],[25,52,10,37],[25,53,10,38],[25,64,10,49],[25,66,10,51],[25,86,10,71],[25,87,10,72],[26,4,11,4],[27,4,12,4],[27,11,12,11,"ExpoFontLoader"],[27,25,12,25],[27,26,12,25,"default"],[27,33,12,25],[27,34,12,26,"getServerResources"],[27,52,12,44],[27,53,12,45],[27,54,12,46],[28,2,13,0],[29,2,14,0],[30,0,15,0],[31,0,16,0],[32,0,17,0],[33,2,18,7],[33,11,18,16,"resetServerContext"],[33,29,18,34,"resetServerContext"],[33,30,18,34],[33,32,18,37],[34,4,19,4],[34,8,19,8],[34,9,19,9,"ExpoFontLoader"],[34,23,19,23],[34,24,19,23,"default"],[34,31,19,23],[34,32,19,24,"resetServerContext"],[34,50,19,42],[34,52,19,44],[35,6,20,8],[35,12,20,14],[35,16,20,18,"UnavailabilityError"],[35,32,20,37],[35,33,20,37,"UnavailabilityError"],[35,52,20,37],[35,53,20,38],[35,64,20,49],[35,66,20,51],[35,86,20,71],[35,87,20,72],[36,4,21,4],[37,4,22,4],[37,11,22,11,"ExpoFontLoader"],[37,25,22,25],[37,26,22,25,"default"],[37,33,22,25],[37,34,22,26,"resetServerContext"],[37,52,22,44],[37,53,22,45],[37,54,22,46],[38,2,23,0],[39,2,24,7],[39,11,24,16,"registerStaticFont"],[39,29,24,34,"registerStaticFont"],[39,30,24,35,"fontFamily"],[39,40,24,45],[39,42,24,47,"source"],[39,48,24,53],[39,50,24,55],[40,4,25,4],[41,4,26,4],[41,8,26,8],[41,9,26,9,"source"],[41,15,26,15],[41,17,26,17],[42,6,27,8],[42,12,27,14],[42,16,27,18,"CodedError"],[42,32,27,28],[42,33,27,28,"CodedError"],[42,43,27,28],[42,44,27,29],[42,61,27,46],[42,63,27,48],[42,112,27,97,"fontFamily"],[42,122,27,107],[42,128,27,113,"source"],[42,134,27,119],[42,204,27,189,"fontFamily"],[42,214,27,199],[42,217,27,202],[42,218,27,203],[43,4,28,4],[44,4,29,4],[44,8,29,10,"asset"],[44,13,29,15],[44,16,29,18],[44,20,29,18,"getAssetForSource"],[44,31,29,35],[44,32,29,35,"getAssetForSource"],[44,49,29,35],[44,51,29,36,"source"],[44,57,29,42],[44,58,29,43],[45,4,30,4],[45,8,30,4,"loadSingleFontAsync"],[45,19,30,23],[45,20,30,23,"loadSingleFontAsync"],[45,39,30,23],[45,41,30,24,"fontFamily"],[45,51,30,34],[45,53,30,36,"asset"],[45,58,30,41],[45,59,30,42],[46,2,31,0],[47,0,31,1],[47,3]],"functionMap":{"names":["<global>","getServerResources","resetServerContext","registerStaticFont"],"mappings":"AAA;OCO;CDK;OEK;CFK;OGC;CHO"},"hasCjsExports":false},"type":"js/module"}]}