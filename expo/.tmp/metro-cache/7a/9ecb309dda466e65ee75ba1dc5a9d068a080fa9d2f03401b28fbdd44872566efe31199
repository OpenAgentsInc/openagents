{"dependencies":[{"name":"../../global-state/router-store","data":{"asyncType":null,"isESMImport":false,"locs":[{"start":{"line":6,"column":23,"index":287},"end":{"line":6,"column":65,"index":329}}],"key":"34G8cf9eMVuL1UIt4w1T43KGPlk=","exportNames":["*"],"imports":1}},{"name":"../../global-state/routing","data":{"asyncType":null,"isESMImport":false,"locs":[{"start":{"line":7,"column":18,"index":349},"end":{"line":7,"column":55,"index":386}}],"key":"/KYD16J3C+S2+TKpFA4/GL5ghgM=","exportNames":["*"],"imports":1}},{"name":"../href","data":{"asyncType":null,"isESMImport":false,"locs":[{"start":{"line":8,"column":15,"index":403},"end":{"line":8,"column":33,"index":421}}],"key":"JFYDN89CjCE9uy6rzcI/l/zLru8=","exportNames":["*"],"imports":1}},{"name":"../../navigationParams","data":{"asyncType":null,"isESMImport":false,"locs":[{"start":{"line":9,"column":27,"index":450},"end":{"line":9,"column":60,"index":483}}],"key":"XAh+4Y1ikoKrpGxORep8MZ3uXwI=","exportNames":["*"],"imports":1}}],"output":[{"data":{"code":"__d(function (global, require, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {\n  \"use strict\";\n\n  Object.defineProperty(exports, \"__esModule\", {\n    value: true\n  });\n  exports.getTabPathFromRootStateByHref = getTabPathFromRootStateByHref;\n  exports.getPreloadedRouteFromRootStateByHref = getPreloadedRouteFromRootStateByHref;\n  exports.deepEqual = deepEqual;\n  var router_store_1 = require(_dependencyMap[0]);\n  var routing_1 = require(_dependencyMap[1]);\n  var href_1 = require(_dependencyMap[2]);\n  var navigationParams_1 = require(_dependencyMap[3]);\n  function getTabPathFromRootStateByHref(href, rootState) {\n    var hrefState = router_store_1.store.getStateForHref((0, href_1.resolveHref)(href));\n    var state = rootState;\n    if (!hrefState || !state) {\n      return [];\n    }\n    // Replicating the logic from `linkTo`\n    var _ref = (0, routing_1.findDivergentState)(hrefState, state, true),\n      navigationRoutes = _ref.navigationRoutes;\n    if (!navigationRoutes.length) {\n      return [];\n    }\n    var tabPath = [];\n    navigationRoutes.forEach((route, i, arr) => {\n      if (route.state?.type === 'tab') {\n        var tabState = route.state;\n        var oldTabKey = tabState.routes[tabState.index].key;\n        // The next route will be either stack inside a tab or a new tab key\n        if (!arr[i + 1]) {\n          throw new Error(`New tab route is missing for ${route.key}. This is likely an internal Expo Router bug.`);\n        }\n        var newTabKey = arr[i + 1].key;\n        tabPath.push({\n          oldTabKey,\n          newTabKey\n        });\n      }\n    });\n    return tabPath;\n  }\n  function getPreloadedRouteFromRootStateByHref(href, rootState) {\n    var hrefState = router_store_1.store.getStateForHref((0, href_1.resolveHref)(href));\n    var state = rootState;\n    if (!hrefState || !state) {\n      return undefined;\n    }\n    // Replicating the logic from `linkTo`\n    var _ref2 = (0, routing_1.findDivergentState)(hrefState, state, true),\n      navigationState = _ref2.navigationState,\n      actionStateRoute = _ref2.actionStateRoute;\n    if (!navigationState || !actionStateRoute) {\n      return undefined;\n    }\n    if (navigationState.type === 'stack') {\n      var stackState = navigationState;\n      var payload = (0, routing_1.getPayloadFromStateRoute)(actionStateRoute);\n      var preloadedRoute = stackState.preloadedRoutes.find(route => route.name === actionStateRoute.name && deepEqual((0, navigationParams_1.removeInternalExpoRouterParams)(route.params), (0, navigationParams_1.removeInternalExpoRouterParams)(payload.params)));\n      var activeRoute = stackState.routes[stackState.index];\n      // When the active route is the same as the preloaded route,\n      // then we should not navigate. It aligns with base link behavior.\n      if (activeRoute.name === preloadedRoute?.name && deepEqual(\n      // using ?? {}, because from our perspective undefined === {}, as both mean no params\n      (0, navigationParams_1.removeInternalExpoRouterParams)(activeRoute.params ?? {}), (0, navigationParams_1.removeInternalExpoRouterParams)(payload.params ?? {}))) {\n        return undefined;\n      }\n      return preloadedRoute;\n    }\n    return undefined;\n  }\n  function deepEqual(a, b) {\n    if (a === b) {\n      return true;\n    }\n    if (a == null || b == null) {\n      return false;\n    }\n    if (typeof a !== 'object' || typeof b !== 'object') {\n      return false;\n    }\n    var keys = Object.keys(a);\n    return keys.length === Object.keys(b).length && keys.every(key => deepEqual(a[key], b[key]));\n  }\n});","lineCount":86,"map":[[2,2,1,0],[2,14,1,12],[4,2,2,0,"Object"],[4,8,2,6],[4,9,2,7,"defineProperty"],[4,23,2,21],[4,24,2,22,"exports"],[4,31,2,29],[4,33,2,31],[4,45,2,43],[4,47,2,45],[5,4,2,47,"value"],[5,9,2,52],[5,11,2,54],[6,2,2,59],[6,3,2,60],[6,4,2,61],[7,2,3,0,"exports"],[7,9,3,7],[7,10,3,8,"getTabPathFromRootStateByHref"],[7,39,3,37],[7,42,3,40,"getTabPathFromRootStateByHref"],[7,71,3,69],[8,2,4,0,"exports"],[8,9,4,7],[8,10,4,8,"getPreloadedRouteFromRootStateByHref"],[8,46,4,44],[8,49,4,47,"getPreloadedRouteFromRootStateByHref"],[8,85,4,83],[9,2,5,0,"exports"],[9,9,5,7],[9,10,5,8,"deepEqual"],[9,19,5,17],[9,22,5,20,"deepEqual"],[9,31,5,29],[10,2,6,0],[10,6,6,6,"router_store_1"],[10,20,6,20],[10,23,6,23,"require"],[10,30,6,30],[10,31,6,30,"_dependencyMap"],[10,45,6,30],[10,48,6,64],[10,49,6,65],[11,2,7,0],[11,6,7,6,"routing_1"],[11,15,7,15],[11,18,7,18,"require"],[11,25,7,25],[11,26,7,25,"_dependencyMap"],[11,40,7,25],[11,43,7,54],[11,44,7,55],[12,2,8,0],[12,6,8,6,"href_1"],[12,12,8,12],[12,15,8,15,"require"],[12,22,8,22],[12,23,8,22,"_dependencyMap"],[12,37,8,22],[12,40,8,32],[12,41,8,33],[13,2,9,0],[13,6,9,6,"navigationParams_1"],[13,24,9,24],[13,27,9,27,"require"],[13,34,9,34],[13,35,9,34,"_dependencyMap"],[13,49,9,34],[13,52,9,59],[13,53,9,60],[14,2,10,0],[14,11,10,9,"getTabPathFromRootStateByHref"],[14,40,10,38,"getTabPathFromRootStateByHref"],[14,41,10,39,"href"],[14,45,10,43],[14,47,10,45,"rootState"],[14,56,10,54],[14,58,10,56],[15,4,11,4],[15,8,11,10,"hrefState"],[15,17,11,19],[15,20,11,22,"router_store_1"],[15,34,11,36],[15,35,11,37,"store"],[15,40,11,42],[15,41,11,43,"getStateForHref"],[15,56,11,58],[15,57,11,59],[15,58,11,60],[15,59,11,61],[15,61,11,63,"href_1"],[15,67,11,69],[15,68,11,70,"resolveHref"],[15,79,11,81],[15,81,11,83,"href"],[15,85,11,87],[15,86,11,88],[15,87,11,89],[16,4,12,4],[16,8,12,10,"state"],[16,13,12,15],[16,16,12,18,"rootState"],[16,25,12,27],[17,4,13,4],[17,8,13,8],[17,9,13,9,"hrefState"],[17,18,13,18],[17,22,13,22],[17,23,13,23,"state"],[17,28,13,28],[17,30,13,30],[18,6,14,8],[18,13,14,15],[18,15,14,17],[19,4,15,4],[20,4,16,4],[21,4,17,4],[21,8,17,4,"_ref"],[21,12,17,4],[21,15,17,33],[21,16,17,34],[21,17,17,35],[21,19,17,37,"routing_1"],[21,28,17,46],[21,29,17,47,"findDivergentState"],[21,47,17,65],[21,49,17,67,"hrefState"],[21,58,17,76],[21,60,17,78,"state"],[21,65,17,83],[21,67,17,85],[21,71,17,89],[21,72,17,90],[22,6,17,12,"navigationRoutes"],[22,22,17,28],[22,25,17,28,"_ref"],[22,29,17,28],[22,30,17,12,"navigationRoutes"],[22,46,17,28],[23,4,18,4],[23,8,18,8],[23,9,18,9,"navigationRoutes"],[23,25,18,25],[23,26,18,26,"length"],[23,32,18,32],[23,34,18,34],[24,6,19,8],[24,13,19,15],[24,15,19,17],[25,4,20,4],[26,4,21,4],[26,8,21,10,"tabPath"],[26,15,21,17],[26,18,21,20],[26,20,21,22],[27,4,22,4,"navigationRoutes"],[27,20,22,20],[27,21,22,21,"forEach"],[27,28,22,28],[27,29,22,29],[27,30,22,30,"route"],[27,35,22,35],[27,37,22,37,"i"],[27,38,22,38],[27,40,22,40,"arr"],[27,43,22,43],[27,48,22,48],[28,6,23,8],[28,10,23,12,"route"],[28,15,23,17],[28,16,23,18,"state"],[28,21,23,23],[28,23,23,25,"type"],[28,27,23,29],[28,32,23,34],[28,37,23,39],[28,39,23,41],[29,8,24,12],[29,12,24,18,"tabState"],[29,20,24,26],[29,23,24,29,"route"],[29,28,24,34],[29,29,24,35,"state"],[29,34,24,40],[30,8,25,12],[30,12,25,18,"oldTabKey"],[30,21,25,27],[30,24,25,30,"tabState"],[30,32,25,38],[30,33,25,39,"routes"],[30,39,25,45],[30,40,25,46,"tabState"],[30,48,25,54],[30,49,25,55,"index"],[30,54,25,60],[30,55,25,61],[30,56,25,62,"key"],[30,59,25,65],[31,8,26,12],[32,8,27,12],[32,12,27,16],[32,13,27,17,"arr"],[32,16,27,20],[32,17,27,21,"i"],[32,18,27,22],[32,21,27,25],[32,22,27,26],[32,23,27,27],[32,25,27,29],[33,10,28,16],[33,16,28,22],[33,20,28,26,"Error"],[33,25,28,31],[33,26,28,32],[33,58,28,64,"route"],[33,63,28,69],[33,64,28,70,"key"],[33,67,28,73],[33,114,28,120],[33,115,28,121],[34,8,29,12],[35,8,30,12],[35,12,30,18,"newTabKey"],[35,21,30,27],[35,24,30,30,"arr"],[35,27,30,33],[35,28,30,34,"i"],[35,29,30,35],[35,32,30,38],[35,33,30,39],[35,34,30,40],[35,35,30,41,"key"],[35,38,30,44],[36,8,31,12,"tabPath"],[36,15,31,19],[36,16,31,20,"push"],[36,20,31,24],[36,21,31,25],[37,10,31,27,"oldTabKey"],[37,19,31,36],[38,10,31,38,"newTabKey"],[39,8,31,48],[39,9,31,49],[39,10,31,50],[40,6,32,8],[41,4,33,4],[41,5,33,5],[41,6,33,6],[42,4,34,4],[42,11,34,11,"tabPath"],[42,18,34,18],[43,2,35,0],[44,2,36,0],[44,11,36,9,"getPreloadedRouteFromRootStateByHref"],[44,47,36,45,"getPreloadedRouteFromRootStateByHref"],[44,48,36,46,"href"],[44,52,36,50],[44,54,36,52,"rootState"],[44,63,36,61],[44,65,36,63],[45,4,37,4],[45,8,37,10,"hrefState"],[45,17,37,19],[45,20,37,22,"router_store_1"],[45,34,37,36],[45,35,37,37,"store"],[45,40,37,42],[45,41,37,43,"getStateForHref"],[45,56,37,58],[45,57,37,59],[45,58,37,60],[45,59,37,61],[45,61,37,63,"href_1"],[45,67,37,69],[45,68,37,70,"resolveHref"],[45,79,37,81],[45,81,37,83,"href"],[45,85,37,87],[45,86,37,88],[45,87,37,89],[46,4,38,4],[46,8,38,10,"state"],[46,13,38,15],[46,16,38,18,"rootState"],[46,25,38,27],[47,4,39,4],[47,8,39,8],[47,9,39,9,"hrefState"],[47,18,39,18],[47,22,39,22],[47,23,39,23,"state"],[47,28,39,28],[47,30,39,30],[48,6,40,8],[48,13,40,15,"undefined"],[48,22,40,24],[49,4,41,4],[50,4,42,4],[51,4,43,4],[51,8,43,4,"_ref2"],[51,13,43,4],[51,16,43,50],[51,17,43,51],[51,18,43,52],[51,20,43,54,"routing_1"],[51,29,43,63],[51,30,43,64,"findDivergentState"],[51,48,43,82],[51,50,43,84,"hrefState"],[51,59,43,93],[51,61,43,95,"state"],[51,66,43,100],[51,68,43,102],[51,72,43,106],[51,73,43,107],[52,6,43,12,"navigationState"],[52,21,43,27],[52,24,43,27,"_ref2"],[52,29,43,27],[52,30,43,12,"navigationState"],[52,45,43,27],[53,6,43,29,"actionStateRoute"],[53,22,43,45],[53,25,43,45,"_ref2"],[53,30,43,45],[53,31,43,29,"actionStateRoute"],[53,47,43,45],[54,4,44,4],[54,8,44,8],[54,9,44,9,"navigationState"],[54,24,44,24],[54,28,44,28],[54,29,44,29,"actionStateRoute"],[54,45,44,45],[54,47,44,47],[55,6,45,8],[55,13,45,15,"undefined"],[55,22,45,24],[56,4,46,4],[57,4,47,4],[57,8,47,8,"navigationState"],[57,23,47,23],[57,24,47,24,"type"],[57,28,47,28],[57,33,47,33],[57,40,47,40],[57,42,47,42],[58,6,48,8],[58,10,48,14,"stackState"],[58,20,48,24],[58,23,48,27,"navigationState"],[58,38,48,42],[59,6,49,8],[59,10,49,14,"payload"],[59,17,49,21],[59,20,49,24],[59,21,49,25],[59,22,49,26],[59,24,49,28,"routing_1"],[59,33,49,37],[59,34,49,38,"getPayloadFromStateRoute"],[59,58,49,62],[59,60,49,64,"actionStateRoute"],[59,76,49,80],[59,77,49,81],[60,6,50,8],[60,10,50,14,"preloadedRoute"],[60,24,50,28],[60,27,50,31,"stackState"],[60,37,50,41],[60,38,50,42,"preloadedRoutes"],[60,53,50,57],[60,54,50,58,"find"],[60,58,50,62],[60,59,50,64,"route"],[60,64,50,69],[60,68,50,74,"route"],[60,73,50,79],[60,74,50,80,"name"],[60,78,50,84],[60,83,50,89,"actionStateRoute"],[60,99,50,105],[60,100,50,106,"name"],[60,104,50,110],[60,108,51,12,"deepEqual"],[60,117,51,21],[60,118,51,22],[60,119,51,23],[60,120,51,24],[60,122,51,26,"navigationParams_1"],[60,140,51,44],[60,141,51,45,"removeInternalExpoRouterParams"],[60,171,51,75],[60,173,51,77,"route"],[60,178,51,82],[60,179,51,83,"params"],[60,185,51,89],[60,186,51,90],[60,188,51,92],[60,189,51,93],[60,190,51,94],[60,192,51,96,"navigationParams_1"],[60,210,51,114],[60,211,51,115,"removeInternalExpoRouterParams"],[60,241,51,145],[60,243,51,147,"payload"],[60,250,51,154],[60,251,51,155,"params"],[60,257,51,161],[60,258,51,162],[60,259,51,163],[60,260,51,164],[61,6,52,8],[61,10,52,14,"activeRoute"],[61,21,52,25],[61,24,52,28,"stackState"],[61,34,52,38],[61,35,52,39,"routes"],[61,41,52,45],[61,42,52,46,"stackState"],[61,52,52,56],[61,53,52,57,"index"],[61,58,52,62],[61,59,52,63],[62,6,53,8],[63,6,54,8],[64,6,55,8],[64,10,55,12,"activeRoute"],[64,21,55,23],[64,22,55,24,"name"],[64,26,55,28],[64,31,55,33,"preloadedRoute"],[64,45,55,47],[64,47,55,49,"name"],[64,51,55,53],[64,55,56,12,"deepEqual"],[64,64,56,21],[65,6,57,12],[66,6,58,12],[66,7,58,13],[66,8,58,14],[66,10,58,16,"navigationParams_1"],[66,28,58,34],[66,29,58,35,"removeInternalExpoRouterParams"],[66,59,58,65],[66,61,58,67,"activeRoute"],[66,72,58,78],[66,73,58,79,"params"],[66,79,58,85],[66,83,58,89],[66,84,58,90],[66,85,58,91],[66,86,58,92],[66,88,58,94],[66,89,58,95],[66,90,58,96],[66,92,58,98,"navigationParams_1"],[66,110,58,116],[66,111,58,117,"removeInternalExpoRouterParams"],[66,141,58,147],[66,143,58,149,"payload"],[66,150,58,156],[66,151,58,157,"params"],[66,157,58,163],[66,161,58,167],[66,162,58,168],[66,163,58,169],[66,164,58,170],[66,165,58,171],[66,167,58,173],[67,8,59,12],[67,15,59,19,"undefined"],[67,24,59,28],[68,6,60,8],[69,6,61,8],[69,13,61,15,"preloadedRoute"],[69,27,61,29],[70,4,62,4],[71,4,63,4],[71,11,63,11,"undefined"],[71,20,63,20],[72,2,64,0],[73,2,65,0],[73,11,65,9,"deepEqual"],[73,20,65,18,"deepEqual"],[73,21,65,19,"a"],[73,22,65,20],[73,24,65,22,"b"],[73,25,65,23],[73,27,65,25],[74,4,66,4],[74,8,66,8,"a"],[74,9,66,9],[74,14,66,14,"b"],[74,15,66,15],[74,17,66,17],[75,6,67,8],[75,13,67,15],[75,17,67,19],[76,4,68,4],[77,4,69,4],[77,8,69,8,"a"],[77,9,69,9],[77,13,69,13],[77,17,69,17],[77,21,69,21,"b"],[77,22,69,22],[77,26,69,26],[77,30,69,30],[77,32,69,32],[78,6,70,8],[78,13,70,15],[78,18,70,20],[79,4,71,4],[80,4,72,4],[80,8,72,8],[80,15,72,15,"a"],[80,16,72,16],[80,21,72,21],[80,29,72,29],[80,33,72,33],[80,40,72,40,"b"],[80,41,72,41],[80,46,72,46],[80,54,72,54],[80,56,72,56],[81,6,73,8],[81,13,73,15],[81,18,73,20],[82,4,74,4],[83,4,75,4],[83,8,75,10,"keys"],[83,12,75,14],[83,15,75,17,"Object"],[83,21,75,23],[83,22,75,24,"keys"],[83,26,75,28],[83,27,75,29,"a"],[83,28,75,30],[83,29,75,31],[84,4,76,4],[84,11,76,11,"keys"],[84,15,76,15],[84,16,76,16,"length"],[84,22,76,22],[84,27,76,27,"Object"],[84,33,76,33],[84,34,76,34,"keys"],[84,38,76,38],[84,39,76,39,"b"],[84,40,76,40],[84,41,76,41],[84,42,76,42,"length"],[84,48,76,48],[84,52,76,52,"keys"],[84,56,76,56],[84,57,76,57,"every"],[84,62,76,62],[84,63,76,64,"key"],[84,66,76,67],[84,70,76,72,"deepEqual"],[84,79,76,81],[84,80,76,82,"a"],[84,81,76,83],[84,82,76,84,"key"],[84,85,76,87],[84,86,76,88],[84,88,76,90,"b"],[84,89,76,91],[84,90,76,92,"key"],[84,93,76,95],[84,94,76,96],[84,95,76,97],[84,96,76,98],[85,2,77,0],[86,0,77,1],[86,3]],"functionMap":{"names":["<global>","getTabPathFromRootStateByHref","navigationRoutes.forEach$argument_0","getPreloadedRouteFromRootStateByHref","stackState.preloadedRoutes.find$argument_0","deepEqual","keys.every$argument_0"],"mappings":"AAA;ACS;6BCY;KDW;CDE;AGC;+DCc;mKDC;CHa;AKC;+DCW,kCD;CLC"},"hasCjsExports":true},"type":"js/module"}]}