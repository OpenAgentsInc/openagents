{"dependencies":[{"name":"@babel/runtime/helpers/asyncToGenerator","data":{"asyncType":null,"isESMImport":false,"locs":[],"key":"YisBBiy2Xm9DEVdFebZ2nbgAHBo=","exportNames":["*"],"imports":1}},{"name":"expo-modules-core","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":1,"column":0,"index":0},"end":{"line":1,"column":66,"index":66}}],"key":"fU8WLIPqoAGygnPbZ/QJiQQfXEY=","exportNames":["*"],"imports":1}},{"name":"./ExpoHaptics","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":3,"column":0,"index":68},"end":{"line":3,"column":40,"index":108}}],"key":"3WqQQRS5WG7zFWoPm3OZ82Alno4=","exportNames":["*"],"imports":1}},{"name":"./Haptics.types","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":4,"column":0,"index":109},"end":{"line":4,"column":96,"index":205}}],"key":"4K2GreqvhWei0+qUJVORf63x8ww=","exportNames":["*"],"imports":1}}],"output":[{"data":{"code":"__d(function (global, require, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {\n  \"use strict\";\n\n  Object.defineProperty(exports, '__esModule', {\n    value: true\n  });\n  function _interopDefault(e) {\n    return e && e.__esModule ? e : {\n      default: e\n    };\n  }\n  exports.notificationAsync = notificationAsync;\n  exports.impactAsync = impactAsync;\n  exports.selectionAsync = selectionAsync;\n  exports.performAndroidHapticsAsync = performAndroidHapticsAsync;\n  Object.defineProperty(exports, \"NotificationFeedbackType\", {\n    enumerable: true,\n    get: function () {\n      return _HapticsTypes.NotificationFeedbackType;\n    }\n  });\n  Object.defineProperty(exports, \"ImpactFeedbackStyle\", {\n    enumerable: true,\n    get: function () {\n      return _HapticsTypes.ImpactFeedbackStyle;\n    }\n  });\n  Object.defineProperty(exports, \"AndroidHaptics\", {\n    enumerable: true,\n    get: function () {\n      return _HapticsTypes.AndroidHaptics;\n    }\n  });\n  var _babelRuntimeHelpersAsyncToGenerator = require(_dependencyMap[0]);\n  var _asyncToGenerator = _interopDefault(_babelRuntimeHelpersAsyncToGenerator);\n  var _expoModulesCore = require(_dependencyMap[1]);\n  var _ExpoHaptics = require(_dependencyMap[2]);\n  var ExpoHaptics = _interopDefault(_ExpoHaptics);\n  var _HapticsTypes = require(_dependencyMap[3]);\n  // @needsAudit\n  /**\n   * The kind of notification response used in the feedback.\n   * @param type A notification feedback type that on Android is simulated using [`Vibrator`](https://developer.android.com/reference/android/os/Vibrator)\n   * and iOS is directly mapped to [`UINotificationFeedbackType`](https://developer.apple.com/documentation/uikit/uinotificationfeedbacktype).\n   * You can use one of `Haptics.NotificationFeedbackType.{Success, Warning, Error}`.\n   * @return A `Promise` which fulfills once native size haptics functionality is triggered.\n   */\n  function notificationAsync() {\n    return _notificationAsync.apply(this, arguments);\n  } // @needsAudit\n  /**\n   * @param style A collision indicator that on Android is simulated using [`Vibrator`](https://developer.android.com/reference/android/os/Vibrator)\n   * and on iOS, it is directly mapped to [`UIImpactFeedbackStyle`](https://developer.apple.com/documentation/uikit/uiimpactfeedbackgenerator/feedbackstyle).\n   * You can use one of `Haptics.ImpactFeedbackStyle.{Light, Medium, Heavy, Rigid, Soft}`.\n   * @return A `Promise` which fulfills once native size haptics functionality is triggered.\n   * @see Android's `Vibrator` API is not recommended for implementing haptics feedback. **Instead, you should use\n   * [`performAndroidHapticsAsync`](#hapticsperformandroidhapticsasynctype), which is similar to iOS haptic feedback and does not require\n   * `VIBRATE` permission.**\n   */\n  function _notificationAsync() {\n    _notificationAsync = (0, _asyncToGenerator.default)(function* () {\n      var type = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : _HapticsTypes.NotificationFeedbackType.Success;\n      if (!ExpoHaptics.default?.notificationAsync) {\n        throw new _expoModulesCore.UnavailabilityError('Haptics', 'notificationAsync');\n      }\n      yield ExpoHaptics.default.notificationAsync(type);\n    });\n    return _notificationAsync.apply(this, arguments);\n  }\n  function impactAsync() {\n    return _impactAsync.apply(this, arguments);\n  } // @needsAudit\n  /**\n   * Used to let a user know when a selection change has been registered.\n   * @return A `Promise` which fulfills once native size haptics functionality is triggered.\n   */\n  function _impactAsync() {\n    _impactAsync = (0, _asyncToGenerator.default)(function* () {\n      var style = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : _HapticsTypes.ImpactFeedbackStyle.Medium;\n      if (!ExpoHaptics.default?.impactAsync) {\n        throw new _expoModulesCore.UnavailabilityError('Haptic', 'impactAsync');\n      }\n      yield ExpoHaptics.default.impactAsync(style);\n    });\n    return _impactAsync.apply(this, arguments);\n  }\n  function selectionAsync() {\n    return _selectionAsync.apply(this, arguments);\n  }\n  /**\n   * Use the device haptics engine to provide physical feedback to the user.\n   *\n   * @platform android\n   */\n  function _selectionAsync() {\n    _selectionAsync = (0, _asyncToGenerator.default)(function* () {\n      if (!ExpoHaptics.default?.selectionAsync) {\n        throw new _expoModulesCore.UnavailabilityError('Haptic', 'selectionAsync');\n      }\n      yield ExpoHaptics.default.selectionAsync();\n    });\n    return _selectionAsync.apply(this, arguments);\n  }\n  function performAndroidHapticsAsync(_x) {\n    return _performAndroidHapticsAsync.apply(this, arguments);\n  }\n  function _performAndroidHapticsAsync() {\n    _performAndroidHapticsAsync = (0, _asyncToGenerator.default)(function* (type) {\n      {\n        return;\n      }\n      ExpoHaptics.default.performHapticsAsync(type);\n    });\n    return _performAndroidHapticsAsync.apply(this, arguments);\n  }\n});","lineCount":116,"map":[[12,2,14,0,"exports"],[12,9,14,0],[12,10,14,0,"notificationAsync"],[12,27,14,0],[12,30,14,0,"notificationAsync"],[12,47,14,0],[13,2,33,0,"exports"],[13,9,33,0],[13,10,33,0,"impactAsync"],[13,21,33,0],[13,24,33,0,"impactAsync"],[13,35,33,0],[14,2,47,0,"exports"],[14,9,47,0],[14,10,47,0,"selectionAsync"],[14,24,47,0],[14,27,47,0,"selectionAsync"],[14,41,47,0],[15,2,59,0,"exports"],[15,9,59,0],[15,10,59,0,"performAndroidHapticsAsync"],[15,36,59,0],[15,39,59,0,"performAndroidHapticsAsync"],[15,65,59,0],[16,2,66,0,"Object"],[16,8,66,0],[16,9,66,0,"defineProperty"],[16,23,66,0],[16,24,66,0,"exports"],[16,31,66,0],[17,4,66,0,"enumerable"],[17,14,66,0],[18,4,66,0,"get"],[18,7,66,0],[18,18,66,0,"get"],[18,19,66,0],[19,6,66,0],[19,13,66,9,"NotificationFeedbackType"],[19,26,66,33],[19,27,66,33,"NotificationFeedbackType"],[19,51,66,33],[20,4,66,33],[21,2,66,33],[22,2,66,0,"Object"],[22,8,66,0],[22,9,66,0,"defineProperty"],[22,23,66,0],[22,24,66,0,"exports"],[22,31,66,0],[23,4,66,0,"enumerable"],[23,14,66,0],[24,4,66,0,"get"],[24,7,66,0],[24,18,66,0,"get"],[24,19,66,0],[25,6,66,0],[25,13,66,35,"ImpactFeedbackStyle"],[25,26,66,54],[25,27,66,54,"ImpactFeedbackStyle"],[25,46,66,54],[26,4,66,54],[27,2,66,54],[28,2,66,0,"Object"],[28,8,66,0],[28,9,66,0,"defineProperty"],[28,23,66,0],[28,24,66,0,"exports"],[28,31,66,0],[29,4,66,0,"enumerable"],[29,14,66,0],[30,4,66,0,"get"],[30,7,66,0],[30,18,66,0,"get"],[30,19,66,0],[31,6,66,0],[31,13,66,56,"AndroidHaptics"],[31,26,66,70],[31,27,66,70,"AndroidHaptics"],[31,41,66,70],[32,4,66,70],[33,2,66,70],[34,2,66,73],[34,6,66,73,"_babelRuntimeHelpersAsyncToGenerator"],[34,42,66,73],[34,45,66,73,"require"],[34,52,66,73],[34,53,66,73,"_dependencyMap"],[34,67,66,73],[35,2,66,73],[35,6,66,73,"_asyncToGenerator"],[35,23,66,73],[35,26,66,73,"_interopDefault"],[35,41,66,73],[35,42,66,73,"_babelRuntimeHelpersAsyncToGenerator"],[35,78,66,73],[36,2,1,0],[36,6,1,0,"_expoModulesCore"],[36,22,1,0],[36,25,1,0,"require"],[36,32,1,0],[36,33,1,0,"_dependencyMap"],[36,47,1,0],[37,2,3,0],[37,6,3,0,"_ExpoHaptics"],[37,18,3,0],[37,21,3,0,"require"],[37,28,3,0],[37,29,3,0,"_dependencyMap"],[37,43,3,0],[38,2,3,0],[38,6,3,0,"ExpoHaptics"],[38,17,3,0],[38,20,3,0,"_interopDefault"],[38,35,3,0],[38,36,3,0,"_ExpoHaptics"],[38,48,3,0],[39,2,4,0],[39,6,4,0,"_HapticsTypes"],[39,19,4,0],[39,22,4,0,"require"],[39,29,4,0],[39,30,4,0,"_dependencyMap"],[39,44,4,0],[40,2,6,0],[41,2,7,0],[42,0,8,0],[43,0,9,0],[44,0,10,0],[45,0,11,0],[46,0,12,0],[47,0,13,0],[48,2,7,0],[48,11,14,22,"notificationAsync"],[48,28,14,39,"notificationAsync"],[48,29,14,39],[49,4,14,39],[49,11,14,39,"_notificationAsync"],[49,29,14,39],[49,30,14,39,"apply"],[49,35,14,39],[49,42,14,39,"arguments"],[49,51,14,39],[50,2,14,39],[50,4,23,0],[51,2,24,0],[52,0,25,0],[53,0,26,0],[54,0,27,0],[55,0,28,0],[56,0,29,0],[57,0,30,0],[58,0,31,0],[59,0,32,0],[60,2,24,0],[60,11,24,0,"_notificationAsync"],[60,30,24,0],[61,4,24,0,"_notificationAsync"],[61,22,24,0],[61,29,24,0,"_asyncToGenerator"],[61,46,24,0],[61,47,24,0,"default"],[61,54,24,0],[61,56,14,7],[61,69,16,17],[62,6,16,17],[62,10,15,2,"type"],[62,14,15,32],[62,17,15,32,"arguments"],[62,26,15,32],[62,27,15,32,"length"],[62,33,15,32],[62,41,15,32,"arguments"],[62,50,15,32],[62,58,15,32,"undefined"],[62,67,15,32],[62,70,15,32,"arguments"],[62,79,15,32],[62,85,15,35,"NotificationFeedbackType"],[62,98,15,59],[62,99,15,59,"NotificationFeedbackType"],[62,123,15,59],[62,124,15,60,"Success"],[62,131,15,67],[63,6,17,2],[63,10,17,6],[63,11,17,7,"ExpoHaptics"],[63,22,17,18],[63,23,17,18,"default"],[63,30,17,18],[63,32,17,20,"notificationAsync"],[63,49,17,37],[63,51,17,39],[64,8,18,4],[64,14,18,10],[64,18,18,14,"UnavailabilityError"],[64,34,18,33],[64,35,18,33,"UnavailabilityError"],[64,54,18,33],[64,55,18,34],[64,64,18,43],[64,66,18,45],[64,85,18,64],[64,86,18,65],[65,6,19,2],[66,6,20,2],[66,12,20,8,"ExpoHaptics"],[66,23,20,19],[66,24,20,19,"default"],[66,31,20,19],[66,32,20,20,"notificationAsync"],[66,49,20,37],[66,50,20,38,"type"],[66,54,20,42],[66,55,20,43],[67,4,21,0],[67,5,21,1],[68,4,21,1],[68,11,21,1,"_notificationAsync"],[68,29,21,1],[68,30,21,1,"apply"],[68,35,21,1],[68,42,21,1,"arguments"],[68,51,21,1],[69,2,21,1],[70,2,21,1],[70,11,33,22,"impactAsync"],[70,22,33,33,"impactAsync"],[70,23,33,33],[71,4,33,33],[71,11,33,33,"_impactAsync"],[71,23,33,33],[71,24,33,33,"apply"],[71,29,33,33],[71,36,33,33,"arguments"],[71,45,33,33],[72,2,33,33],[72,4,42,0],[73,2,43,0],[74,0,44,0],[75,0,45,0],[76,0,46,0],[77,2,43,0],[77,11,43,0,"_impactAsync"],[77,24,43,0],[78,4,43,0,"_impactAsync"],[78,16,43,0],[78,23,43,0,"_asyncToGenerator"],[78,40,43,0],[78,41,43,0,"default"],[78,48,43,0],[78,50,33,7],[78,63,35,17],[79,6,35,17],[79,10,34,2,"style"],[79,15,34,28],[79,18,34,28,"arguments"],[79,27,34,28],[79,28,34,28,"length"],[79,34,34,28],[79,42,34,28,"arguments"],[79,51,34,28],[79,59,34,28,"undefined"],[79,68,34,28],[79,71,34,28,"arguments"],[79,80,34,28],[79,86,34,31,"ImpactFeedbackStyle"],[79,99,34,50],[79,100,34,50,"ImpactFeedbackStyle"],[79,119,34,50],[79,120,34,51,"Medium"],[79,126,34,57],[80,6,36,2],[80,10,36,6],[80,11,36,7,"ExpoHaptics"],[80,22,36,18],[80,23,36,18,"default"],[80,30,36,18],[80,32,36,20,"impactAsync"],[80,43,36,31],[80,45,36,33],[81,8,37,4],[81,14,37,10],[81,18,37,14,"UnavailabilityError"],[81,34,37,33],[81,35,37,33,"UnavailabilityError"],[81,54,37,33],[81,55,37,34],[81,63,37,42],[81,65,37,44],[81,78,37,57],[81,79,37,58],[82,6,38,2],[83,6,39,2],[83,12,39,8,"ExpoHaptics"],[83,23,39,19],[83,24,39,19,"default"],[83,31,39,19],[83,32,39,20,"impactAsync"],[83,43,39,31],[83,44,39,32,"style"],[83,49,39,37],[83,50,39,38],[84,4,40,0],[84,5,40,1],[85,4,40,1],[85,11,40,1,"_impactAsync"],[85,23,40,1],[85,24,40,1,"apply"],[85,29,40,1],[85,36,40,1,"arguments"],[85,45,40,1],[86,2,40,1],[87,2,40,1],[87,11,47,22,"selectionAsync"],[87,25,47,36,"selectionAsync"],[87,26,47,36],[88,4,47,36],[88,11,47,36,"_selectionAsync"],[88,26,47,36],[88,27,47,36,"apply"],[88,32,47,36],[88,39,47,36,"arguments"],[88,48,47,36],[89,2,47,36],[90,2,54,0],[91,0,55,0],[92,0,56,0],[93,0,57,0],[94,0,58,0],[95,2,54,0],[95,11,54,0,"_selectionAsync"],[95,27,54,0],[96,4,54,0,"_selectionAsync"],[96,19,54,0],[96,26,54,0,"_asyncToGenerator"],[96,43,54,0],[96,44,54,0,"default"],[96,51,54,0],[96,53,47,7],[96,66,47,54],[97,6,48,2],[97,10,48,6],[97,11,48,7,"ExpoHaptics"],[97,22,48,18],[97,23,48,18,"default"],[97,30,48,18],[97,32,48,20,"selectionAsync"],[97,46,48,34],[97,48,48,36],[98,8,49,4],[98,14,49,10],[98,18,49,14,"UnavailabilityError"],[98,34,49,33],[98,35,49,33,"UnavailabilityError"],[98,54,49,33],[98,55,49,34],[98,63,49,42],[98,65,49,44],[98,81,49,60],[98,82,49,61],[99,6,50,2],[100,6,51,2],[100,12,51,8,"ExpoHaptics"],[100,23,51,19],[100,24,51,19,"default"],[100,31,51,19],[100,32,51,20,"selectionAsync"],[100,46,51,34],[100,47,51,35],[100,48,51,36],[101,4,52,0],[101,5,52,1],[102,4,52,1],[102,11,52,1,"_selectionAsync"],[102,26,52,1],[102,27,52,1,"apply"],[102,32,52,1],[102,39,52,1,"arguments"],[102,48,52,1],[103,2,52,1],[104,2,52,1],[104,11,59,22,"performAndroidHapticsAsync"],[104,37,59,48,"performAndroidHapticsAsync"],[104,38,59,48,"_x"],[104,40,59,48],[105,4,59,48],[105,11,59,48,"_performAndroidHapticsAsync"],[105,38,59,48],[105,39,59,48,"apply"],[105,44,59,48],[105,51,59,48,"arguments"],[105,60,59,48],[106,2,59,48],[107,2,59,48],[107,11,59,48,"_performAndroidHapticsAsync"],[107,39,59,48],[108,4,59,48,"_performAndroidHapticsAsync"],[108,31,59,48],[108,38,59,48,"_asyncToGenerator"],[108,55,59,48],[108,56,59,48,"default"],[108,63,59,48],[108,65,59,7],[108,76,59,49,"type"],[108,80,59,69],[108,82,59,71],[109,6,60,33],[110,8,61,4],[111,6,62,2],[112,6,63,2,"ExpoHaptics"],[112,17,63,13],[112,18,63,13,"default"],[112,25,63,13],[112,26,63,14,"performHapticsAsync"],[112,45,63,33],[112,46,63,34,"type"],[112,50,63,38],[112,51,63,39],[113,4,64,0],[113,5,64,1],[114,4,64,1],[114,11,64,1,"_performAndroidHapticsAsync"],[114,38,64,1],[114,39,64,1,"apply"],[114,44,64,1],[114,51,64,1,"arguments"],[114,60,64,1],[115,2,64,1],[116,0,64,1],[116,3]],"functionMap":{"names":["<global>","notificationAsync","impactAsync","selectionAsync","performAndroidHapticsAsync"],"mappings":"AAA;OCa;CDO;OEY;CFO;OGO;CHK;OIO;CJK"},"hasCjsExports":false},"type":"js/module"}]}