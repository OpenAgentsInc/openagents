{"dependencies":[{"name":"@babel/runtime/helpers/classCallCheck","data":{"asyncType":null,"isESMImport":false,"locs":[],"key":"yg7e6laZwmpbIvId5jovq9ugXp8=","exportNames":["*"],"imports":1}},{"name":"@babel/runtime/helpers/createClass","data":{"asyncType":null,"isESMImport":false,"locs":[],"key":"Z6pzkVZ2fvxBLkFTgVVOy4UDj30=","exportNames":["*"],"imports":1}},{"name":"@babel/runtime/helpers/callSuper","data":{"asyncType":null,"isESMImport":false,"locs":[],"key":"378KbBHdmndC3iMXZ2Ix8oB3LeE=","exportNames":["*"],"imports":1}},{"name":"@babel/runtime/helpers/inherits","data":{"asyncType":null,"isESMImport":false,"locs":[],"key":"y0uNg4LxF1CLscQChxzgo5dfjvA=","exportNames":["*"],"imports":1}},{"name":"react","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":1,"column":0,"index":0},"end":{"line":1,"column":31,"index":31}}],"key":"RtGiGa+/H7VrI7GDQDLhO1UbpU8=","exportNames":["*"],"imports":1}},{"name":"react-native","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":2,"column":0,"index":32},"end":{"line":7,"column":22,"index":133}}],"key":"KyzuX10g6ixS9UfynhmjlvCIG3g=","exportNames":["*"],"imports":1}},{"name":"./customDirectEventTypes","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":8,"column":0,"index":134},"end":{"line":8,"column":66,"index":200}}],"key":"Ma+NL+aygNje9FkYPbYorogBWdc=","exportNames":["*"],"imports":1}},{"name":"../RNGestureHandlerModule","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":9,"column":0,"index":201},"end":{"line":9,"column":63,"index":264}}],"key":"bY7FGgfi8WGOEKHKyXsenNEOYXM=","exportNames":["*"],"imports":1}},{"name":"../State","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":10,"column":0,"index":265},"end":{"line":10,"column":33,"index":298}}],"key":"ISRoyBmrsYyTcSqLDCBIFNoRZWE=","exportNames":["*"],"imports":1}},{"name":"./handlersRegistry","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":11,"column":0,"index":299},"end":{"line":15,"column":28,"index":414}}],"key":"icHMSVIKxbHLSdF6K64ideInyBg=","exportNames":["*"],"imports":1}},{"name":"./getNextHandlerTag","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":16,"column":0,"index":415},"end":{"line":16,"column":56,"index":471}}],"key":"ASeSN4ZNwd93et71FExQyqcEKrQ=","exportNames":["*"],"imports":1}},{"name":"./utils","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":23,"column":0,"index":585},"end":{"line":23,"column":64,"index":649}}],"key":"fIqjJ6Rx8c7Khc/wm9kX7hQXC5I=","exportNames":["*"],"imports":1}},{"name":"../findNodeHandle","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":24,"column":0,"index":650},"end":{"line":24,"column":47,"index":697}}],"key":"xyNSnMFPN/DtDOjbkd/LduwteJ8=","exportNames":["*"],"imports":1}},{"name":"../utils","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":26,"column":0,"index":738},"end":{"line":32,"column":18,"index":830}}],"key":"mL7nJyZhzUYx+zMcIt1cBzVuRps=","exportNames":["*"],"imports":1}},{"name":"../ActionType","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":33,"column":0,"index":831},"end":{"line":33,"column":43,"index":874}}],"key":"9/RyJNk4Ge0yFKi3o3v4pSn63xw=","exportNames":["*"],"imports":1}},{"name":"./PressabilityDebugView","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":34,"column":0,"index":875},"end":{"line":34,"column":64,"index":939}}],"key":"xiOM100qt13MoYC/wKaLkt2GEAw=","exportNames":["*"],"imports":1}},{"name":"../GestureHandlerRootViewContext","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":35,"column":0,"index":940},"end":{"line":35,"column":77,"index":1017}}],"key":"4dFi+SgkqvO8MS5HEh2OcvBDODc=","exportNames":["*"],"imports":1}},{"name":"../ghQueueMicrotask","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":36,"column":0,"index":1018},"end":{"line":36,"column":55,"index":1073}}],"key":"Ty3ERJQ4RajY8XDWg1+a8wq7RdE=","exportNames":["*"],"imports":1}},{"name":"../mountRegistry","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":37,"column":0,"index":1074},"end":{"line":37,"column":49,"index":1123}}],"key":"oDeWMahf4tOBx8qk8Rg2qrQUZVM=","exportNames":["*"],"imports":1}},{"name":"react/jsx-runtime","data":{"asyncType":null,"isESMImport":false,"locs":[],"key":"3suYSPX9nHbHZ1xNTsKXtKj0atE=","exportNames":["*"],"imports":1}}],"output":[{"data":{"code":"__d(function (global, require, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {\n  \"use strict\";\n\n  Object.defineProperty(exports, '__esModule', {\n    value: true\n  });\n  function _interopDefault(e) {\n    return e && e.__esModule ? e : {\n      default: e\n    };\n  }\n  function _interopNamespace(e) {\n    if (e && e.__esModule) return e;\n    var n = {};\n    if (e) Object.keys(e).forEach(function (k) {\n      var d = Object.getOwnPropertyDescriptor(e, k);\n      Object.defineProperty(n, k, d.get ? d : {\n        enumerable: true,\n        get: function () {\n          return e[k];\n        }\n      });\n    });\n    n.default = e;\n    return n;\n  }\n  Object.defineProperty(exports, \"default\", {\n    enumerable: true,\n    get: function () {\n      return createHandler;\n    }\n  });\n  var _babelRuntimeHelpersClassCallCheck = require(_dependencyMap[0]);\n  var _classCallCheck = _interopDefault(_babelRuntimeHelpersClassCallCheck);\n  var _babelRuntimeHelpersCreateClass = require(_dependencyMap[1]);\n  var _createClass = _interopDefault(_babelRuntimeHelpersCreateClass);\n  var _babelRuntimeHelpersCallSuper = require(_dependencyMap[2]);\n  var _callSuper = _interopDefault(_babelRuntimeHelpersCallSuper);\n  var _babelRuntimeHelpersInherits = require(_dependencyMap[3]);\n  var _inherits = _interopDefault(_babelRuntimeHelpersInherits);\n  var _react = require(_dependencyMap[4]);\n  var React = _interopNamespace(_react);\n  var _reactNative = require(_dependencyMap[5]);\n  var _customDirectEventTypes = require(_dependencyMap[6]);\n  var _RNGestureHandlerModule = require(_dependencyMap[7]);\n  var RNGestureHandlerModule = _interopDefault(_RNGestureHandlerModule);\n  var _State = require(_dependencyMap[8]);\n  var _handlersRegistry = require(_dependencyMap[9]);\n  var _getNextHandlerTag = require(_dependencyMap[10]);\n  var _utils = require(_dependencyMap[11]);\n  var _findNodeHandle = require(_dependencyMap[12]);\n  var findNodeHandle = _interopDefault(_findNodeHandle);\n  var _utils2 = require(_dependencyMap[13]);\n  var _ActionType = require(_dependencyMap[14]);\n  var _PressabilityDebugView = require(_dependencyMap[15]);\n  var _GestureHandlerRootViewContext = require(_dependencyMap[16]);\n  var GestureHandlerRootViewContext = _interopDefault(_GestureHandlerRootViewContext);\n  var _ghQueueMicrotask = require(_dependencyMap[17]);\n  var _mountRegistry = require(_dependencyMap[18]);\n  var _reactJsxRuntime = require(_dependencyMap[19]);\n  var UIManagerAny = _reactNative.UIManager;\n  _customDirectEventTypes.customDirectEventTypes.topGestureHandlerEvent = {\n    registrationName: 'onGestureHandlerEvent'\n  };\n  var customGHEventsConfigFabricAndroid = {\n    topOnGestureHandlerEvent: {\n      registrationName: 'onGestureHandlerEvent'\n    },\n    topOnGestureHandlerStateChange: {\n      registrationName: 'onGestureHandlerStateChange'\n    }\n  };\n  var customGHEventsConfig = {\n    onGestureHandlerEvent: {\n      registrationName: 'onGestureHandlerEvent'\n    },\n    onGestureHandlerStateChange: {\n      registrationName: 'onGestureHandlerStateChange'\n    },\n    // When using React Native Gesture Handler for Animated.event with useNativeDriver: true\n    // on Android with Fabric enabled, the native part still sends the native events to JS\n    // but prefixed with \"top\". We cannot simply rename the events above so they are prefixed\n    // with \"top\" instead of \"on\" because in such case Animated.events would not be registered.\n    // That's why we need to register another pair of event names.\n    // The incoming events will be queued but never handled.\n    // Without this piece of code below, you'll get the following JS error:\n    // Unsupported top level event type \"topOnGestureHandlerEvent\" dispatched\n    ...((0, _utils2.isFabric)() && false && customGHEventsConfigFabricAndroid)\n  };\n\n  // Add gesture specific events to genericDirectEventTypes object exported from UIManager\n  // native module.\n  // Once new event types are registered with react it is possible to dispatch these\n  // events to all kind of native views.\n  UIManagerAny.genericDirectEventTypes = {\n    ...UIManagerAny.genericDirectEventTypes,\n    ...customGHEventsConfig\n  };\n  var UIManagerConstants = UIManagerAny.getViewManagerConfig?.('getConstants');\n  if (UIManagerConstants) {\n    UIManagerConstants.genericDirectEventTypes = {\n      ...UIManagerConstants.genericDirectEventTypes,\n      ...customGHEventsConfig\n    };\n  }\n\n  // Wrap JS responder calls and notify gesture handler manager\n  var _UIManagerAny$setJSRe = UIManagerAny.setJSResponder,\n    oldSetJSResponder = _UIManagerAny$setJSRe === undefined ? () => {\n      // no-op\n    } : _UIManagerAny$setJSRe,\n    _UIManagerAny$clearJS = UIManagerAny.clearJSResponder,\n    oldClearJSResponder = _UIManagerAny$clearJS === undefined ? () => {\n      // no-op\n    } : _UIManagerAny$clearJS;\n  UIManagerAny.setJSResponder = (tag, blockNativeResponder) => {\n    RNGestureHandlerModule.default.handleSetJSResponder(tag, blockNativeResponder);\n    oldSetJSResponder(tag, blockNativeResponder);\n  };\n  UIManagerAny.clearJSResponder = () => {\n    RNGestureHandlerModule.default.handleClearJSResponder();\n    oldClearJSResponder();\n  };\n  var allowTouches = true;\n  var DEV_ON_ANDROID = false;\n  // Toggled inspector blocks touch events in order to allow inspecting on Android\n  // This needs to be a global variable in order to set initial state for `allowTouches` property in Handler component\n\n  function hasUnresolvedRefs(props) {\n    // TODO(TS) - add type for extract arg\n    var extract = refs => {\n      if (!Array.isArray(refs)) {\n        return refs && refs.current === null;\n      }\n      return refs.some(r => r && r.current === null);\n    };\n    return extract(props['simultaneousHandlers']) || extract(props['waitFor']);\n  }\n  var stateToPropMappings = {\n    [_State.State.UNDETERMINED]: undefined,\n    [_State.State.BEGAN]: 'onBegan',\n    [_State.State.FAILED]: 'onFailed',\n    [_State.State.CANCELLED]: 'onCancelled',\n    [_State.State.ACTIVE]: 'onActivated',\n    [_State.State.END]: 'onEnded'\n  };\n\n  // TODO(TS) fix event types\n\n  var UNRESOLVED_REFS_RETRY_LIMIT = 1;\n\n  // TODO(TS) - make sure that BaseGestureHandlerProps doesn't need other generic parameter to work with custom properties.\n  function createHandler(_ref) {\n    var name = _ref.name,\n      _ref$allowedProps = _ref.allowedProps,\n      allowedProps = _ref$allowedProps === undefined ? [] : _ref$allowedProps,\n      _ref$config = _ref.config,\n      config = _ref$config === undefined ? {} : _ref$config,\n      transformProps = _ref.transformProps,\n      _ref$customNativeProp = _ref.customNativeProps,\n      customNativeProps = _ref$customNativeProp === undefined ? [] : _ref$customNativeProp;\n    var Handler = /*#__PURE__*/function (_React$Component) {\n      function Handler(props) {\n        var _this;\n        (0, _classCallCheck.default)(this, Handler);\n        _this = (0, _callSuper.default)(this, Handler, [props]);\n        _this.handlerTag = -1;\n        _this.onGestureHandlerEvent = event => {\n          if (event.nativeEvent.handlerTag === _this.handlerTag) {\n            if (typeof _this.props.onGestureEvent === 'function') {\n              _this.props.onGestureEvent?.(event);\n            }\n          } else {\n            _this.props.onGestureHandlerEvent?.(event);\n          }\n        };\n        // TODO(TS) - make sure this is right type for event\n        _this.onGestureHandlerStateChange = event => {\n          if (event.nativeEvent.handlerTag === _this.handlerTag) {\n            if (typeof _this.props.onHandlerStateChange === 'function') {\n              _this.props.onHandlerStateChange?.(event);\n            }\n            var state = event.nativeEvent.state;\n            var stateEventName = stateToPropMappings[state];\n            var eventHandler = stateEventName && _this.props[stateEventName];\n            if (eventHandler && typeof eventHandler === 'function') {\n              eventHandler(event);\n            }\n          } else {\n            _this.props.onGestureHandlerStateChange?.(event);\n          }\n        };\n        _this.refHandler = node => {\n          _this.viewNode = node;\n          var child = React.Children.only(_this.props.children);\n          // @ts-ignore Since React 19 ref is accessible as standard prop\n          // https://react.dev/blog/2024/04/25/react-19-upgrade-guide#deprecated-element-ref\n          var ref = (0, _utils2.isReact19)() ? child.props?.ref : child?.ref;\n          if (!ref) {\n            return;\n          }\n          if (typeof ref === 'function') {\n            ref(node);\n          } else {\n            ref.current = node;\n          }\n        };\n        _this.createGestureHandler = newConfig => {\n          _this.handlerTag = (0, _getNextHandlerTag.getNextHandlerTag)();\n          _this.config = newConfig;\n          RNGestureHandlerModule.default.createGestureHandler(name, _this.handlerTag, newConfig);\n        };\n        _this.attachGestureHandler = newViewTag => {\n          _this.viewTag = newViewTag;\n          {\n            (0, _handlersRegistry.registerOldGestureHandler)(_this.handlerTag, {\n              onGestureEvent: _this.onGestureHandlerEvent,\n              onGestureStateChange: _this.onGestureHandlerStateChange\n            });\n            var actionType = (() => {\n              var onGestureEvent = _this.props?.onGestureEvent;\n              var isGestureHandlerWorklet = onGestureEvent && ('current' in onGestureEvent || 'workletEventHandler' in onGestureEvent);\n              var onHandlerStateChange = _this.props?.onHandlerStateChange;\n              var isStateChangeHandlerWorklet = onHandlerStateChange && ('current' in onHandlerStateChange || 'workletEventHandler' in onHandlerStateChange);\n              var isReanimatedHandler = isGestureHandlerWorklet || isStateChangeHandlerWorklet;\n              if (isReanimatedHandler) {\n                // Reanimated worklet\n                return _ActionType.ActionType.REANIMATED_WORKLET;\n              } else if (onGestureEvent && '__isNative' in onGestureEvent) {\n                // Animated.event with useNativeDriver: true\n                return _ActionType.ActionType.NATIVE_ANIMATED_EVENT;\n              } else {\n                // JS callback or Animated.event with useNativeDriver: false\n                return _ActionType.ActionType.JS_FUNCTION_OLD_API;\n              }\n            })();\n            RNGestureHandlerModule.default.attachGestureHandler(_this.handlerTag, newViewTag, actionType);\n          }\n          (0, _utils.scheduleFlushOperations)();\n          (0, _ghQueueMicrotask.ghQueueMicrotask)(() => {\n            _mountRegistry.MountRegistry.gestureHandlerWillMount(_this);\n          });\n        };\n        _this.updateGestureHandler = newConfig => {\n          _this.config = newConfig;\n          RNGestureHandlerModule.default.updateGestureHandler(_this.handlerTag, newConfig);\n          (0, _utils.scheduleFlushOperations)();\n        };\n        _this.config = {};\n        _this.propsRef = /*#__PURE__*/React.createRef();\n        _this.isMountedRef = /*#__PURE__*/React.createRef();\n        _this.state = {\n          allowTouches\n        };\n        if (props.id) {\n          if (_handlersRegistry.handlerIDToTag[props.id] !== undefined) {\n            throw new Error(`Handler with ID \"${props.id}\" already registered`);\n          }\n          _handlersRegistry.handlerIDToTag[props.id] = _this.handlerTag;\n        }\n        return _this;\n      }\n      (0, _inherits.default)(Handler, _React$Component);\n      return (0, _createClass.default)(Handler, [{\n        key: \"componentDidMount\",\n        value: function componentDidMount() {\n          var props = this.props;\n          this.isMountedRef.current = true;\n          if (hasUnresolvedRefs(props)) {\n            // If there are unresolved refs (e.g. \".current\" has not yet been set)\n            // passed as `simultaneousHandlers` or `waitFor`, we enqueue a call to\n            // _update method that will try to update native handler props using\n            // queueMicrotask. This makes it so update() function gets called after all\n            // react components are mounted and we expect the missing ref object to\n            // be resolved by then.\n            (0, _ghQueueMicrotask.ghQueueMicrotask)(() => {\n              this.update(UNRESOLVED_REFS_RETRY_LIMIT);\n            });\n          }\n          this.createGestureHandler((0, _utils.filterConfig)(transformProps ? transformProps(this.props) : this.props, [...allowedProps, ...customNativeProps], config));\n          if (!this.viewNode) {\n            throw new Error(`[Gesture Handler] Failed to obtain view for ${Handler.displayName}. Note that old API doesn't support functional components.`);\n          }\n          this.attachGestureHandler((0, findNodeHandle.default)(this.viewNode)); // TODO(TS) - check if this can be null\n        }\n      }, {\n        key: \"componentDidUpdate\",\n        value: function componentDidUpdate() {\n          var viewTag = (0, findNodeHandle.default)(this.viewNode);\n          if (this.viewTag !== viewTag) {\n            this.attachGestureHandler(viewTag); // TODO(TS) - check interaction between _viewTag & findNodeHandle\n          }\n          this.update(UNRESOLVED_REFS_RETRY_LIMIT);\n        }\n      }, {\n        key: \"componentWillUnmount\",\n        value: function componentWillUnmount() {\n          this.inspectorToggleListener?.remove();\n          this.isMountedRef.current = false;\n          {\n            (0, _handlersRegistry.unregisterOldGestureHandler)(this.handlerTag);\n          }\n          RNGestureHandlerModule.default.dropGestureHandler(this.handlerTag);\n          (0, _utils.scheduleFlushOperations)();\n          // We can't use this.props.id directly due to TS generic type narrowing bug, see https://github.com/microsoft/TypeScript/issues/13995 for more context\n          var handlerID = this.props.id;\n          if (handlerID) {\n            // eslint-disable-next-line @typescript-eslint/no-dynamic-delete\n            delete _handlersRegistry.handlerIDToTag[handlerID];\n          }\n          _mountRegistry.MountRegistry.gestureHandlerWillUnmount(this);\n        }\n      }, {\n        key: \"update\",\n        value: function update(remainingTries) {\n          if (!this.isMountedRef.current) {\n            return;\n          }\n          var props = this.props;\n\n          // When ref is set via a function i.e. `ref={(r) => refObject.current = r}` instead of\n          // `ref={refObject}` it's possible that it won't be resolved in time. Seems like trying\n          // again is easy enough fix.\n          if (hasUnresolvedRefs(props) && remainingTries > 0) {\n            (0, _ghQueueMicrotask.ghQueueMicrotask)(() => {\n              this.update(remainingTries - 1);\n            });\n          } else {\n            var newConfig = (0, _utils.filterConfig)(transformProps ? transformProps(this.props) : this.props, [...allowedProps, ...customNativeProps], config);\n            if (!(0, _utils2.deepEqual)(this.config, newConfig)) {\n              this.updateGestureHandler(newConfig);\n            }\n          }\n        }\n\n        // eslint-disable-next-line @eslint-react/no-unused-class-component-members\n      }, {\n        key: \"setNativeProps\",\n        value: function setNativeProps(updates) {\n          var mergedProps = {\n            ...this.props,\n            ...updates\n          };\n          var newConfig = (0, _utils.filterConfig)(transformProps ? transformProps(mergedProps) : mergedProps, [...allowedProps, ...customNativeProps], config);\n          this.updateGestureHandler(newConfig);\n        }\n      }, {\n        key: \"render\",\n        value: function render() {\n          var gestureEventHandler = this.onGestureHandlerEvent;\n          // Another instance of https://github.com/microsoft/TypeScript/issues/13995\n\n          var _this$props = this.props,\n            onGestureEvent = _this$props.onGestureEvent,\n            onGestureHandlerEvent = _this$props.onGestureHandlerEvent;\n          if (onGestureEvent && typeof onGestureEvent !== 'function') {\n            // If it's not a method it should be an native Animated.event\n            // object. We set it directly as the handler for the view\n            // In this case nested handlers are not going to be supported\n            if (onGestureHandlerEvent) {\n              throw new Error('Nesting touch handlers with native animated driver is not supported yet');\n            }\n            gestureEventHandler = onGestureEvent;\n          } else {\n            if (onGestureHandlerEvent && typeof onGestureHandlerEvent !== 'function') {\n              throw new Error('Nesting touch handlers with native animated driver is not supported yet');\n            }\n          }\n          var gestureStateEventHandler = this.onGestureHandlerStateChange;\n          // Another instance of https://github.com/microsoft/TypeScript/issues/13995\n\n          var _this$props2 = this.props,\n            onHandlerStateChange = _this$props2.onHandlerStateChange,\n            onGestureHandlerStateChange = _this$props2.onGestureHandlerStateChange;\n          if (onHandlerStateChange && typeof onHandlerStateChange !== 'function') {\n            // If it's not a method it should be an native Animated.event\n            // object. We set it directly as the handler for the view\n            // In this case nested handlers are not going to be supported\n            if (onGestureHandlerStateChange) {\n              throw new Error('Nesting touch handlers with native animated driver is not supported yet');\n            }\n            gestureStateEventHandler = onHandlerStateChange;\n          } else {\n            if (onGestureHandlerStateChange && typeof onGestureHandlerStateChange !== 'function') {\n              throw new Error('Nesting touch handlers with native animated driver is not supported yet');\n            }\n          }\n          var events = {\n            onGestureHandlerEvent: this.state.allowTouches ? gestureEventHandler : undefined,\n            onGestureHandlerStateChange: this.state.allowTouches ? gestureStateEventHandler : undefined\n          };\n          this.propsRef.current = events;\n          var child = null;\n          try {\n            child = React.Children.only(this.props.children);\n          } catch (e) {\n            throw new Error((0, _utils2.tagMessage)(`${name} got more than one view as a child. If you want the gesture to work on multiple views, wrap them with a common parent and attach the gesture to that view.`));\n          }\n          var grandChildren = child.props.children;\n          return /*#__PURE__*/React.cloneElement(child, {\n            ref: this.refHandler,\n            collapsable: false,\n            ...((0, _utils2.isTestEnv)() ? {\n              handlerType: name,\n              handlerTag: this.handlerTag,\n              enabled: this.props.enabled\n            } : {}),\n            testID: this.props.testID ?? child.props.testID,\n            ...events\n          }, grandChildren);\n        }\n      }]);\n    }(React.Component);\n    Handler.displayName = name;\n    Handler.contextType = GestureHandlerRootViewContext.default;\n    return Handler;\n  }\n});","lineCount":418,"map":[[27,2,169,15,"Object"],[27,8,169,15],[27,9,169,15,"defineProperty"],[27,23,169,15],[27,24,169,15,"exports"],[27,31,169,15],[28,4,169,15,"enumerable"],[28,14,169,15],[29,4,169,15,"get"],[29,7,169,15],[29,18,169,15,"get"],[29,19,169,15],[30,6,169,15],[30,13,169,15,"createHandler"],[30,26,169,15],[31,4,169,15],[32,2,169,15],[33,2,572,1],[33,6,572,1,"_babelRuntimeHelpersClassCallCheck"],[33,40,572,1],[33,43,572,1,"require"],[33,50,572,1],[33,51,572,1,"_dependencyMap"],[33,65,572,1],[34,2,572,1],[34,6,572,1,"_classCallCheck"],[34,21,572,1],[34,24,572,1,"_interopDefault"],[34,39,572,1],[34,40,572,1,"_babelRuntimeHelpersClassCallCheck"],[34,74,572,1],[35,2,572,1],[35,6,572,1,"_babelRuntimeHelpersCreateClass"],[35,37,572,1],[35,40,572,1,"require"],[35,47,572,1],[35,48,572,1,"_dependencyMap"],[35,62,572,1],[36,2,572,1],[36,6,572,1,"_createClass"],[36,18,572,1],[36,21,572,1,"_interopDefault"],[36,36,572,1],[36,37,572,1,"_babelRuntimeHelpersCreateClass"],[36,68,572,1],[37,2,572,1],[37,6,572,1,"_babelRuntimeHelpersCallSuper"],[37,35,572,1],[37,38,572,1,"require"],[37,45,572,1],[37,46,572,1,"_dependencyMap"],[37,60,572,1],[38,2,572,1],[38,6,572,1,"_callSuper"],[38,16,572,1],[38,19,572,1,"_interopDefault"],[38,34,572,1],[38,35,572,1,"_babelRuntimeHelpersCallSuper"],[38,64,572,1],[39,2,572,1],[39,6,572,1,"_babelRuntimeHelpersInherits"],[39,34,572,1],[39,37,572,1,"require"],[39,44,572,1],[39,45,572,1,"_dependencyMap"],[39,59,572,1],[40,2,572,1],[40,6,572,1,"_inherits"],[40,15,572,1],[40,18,572,1,"_interopDefault"],[40,33,572,1],[40,34,572,1,"_babelRuntimeHelpersInherits"],[40,62,572,1],[41,2,1,0],[41,6,1,0,"_react"],[41,12,1,0],[41,15,1,0,"require"],[41,22,1,0],[41,23,1,0,"_dependencyMap"],[41,37,1,0],[42,2,1,0],[42,6,1,0,"React"],[42,11,1,0],[42,14,1,0,"_interopNamespace"],[42,31,1,0],[42,32,1,0,"_react"],[42,38,1,0],[43,2,2,0],[43,6,2,0,"_reactNative"],[43,18,2,0],[43,21,2,0,"require"],[43,28,2,0],[43,29,2,0,"_dependencyMap"],[43,43,2,0],[44,2,8,0],[44,6,8,0,"_customDirectEventTypes"],[44,29,8,0],[44,32,8,0,"require"],[44,39,8,0],[44,40,8,0,"_dependencyMap"],[44,54,8,0],[45,2,9,0],[45,6,9,0,"_RNGestureHandlerModule"],[45,29,9,0],[45,32,9,0,"require"],[45,39,9,0],[45,40,9,0,"_dependencyMap"],[45,54,9,0],[46,2,9,0],[46,6,9,0,"RNGestureHandlerModule"],[46,28,9,0],[46,31,9,0,"_interopDefault"],[46,46,9,0],[46,47,9,0,"_RNGestureHandlerModule"],[46,70,9,0],[47,2,10,0],[47,6,10,0,"_State"],[47,12,10,0],[47,15,10,0,"require"],[47,22,10,0],[47,23,10,0,"_dependencyMap"],[47,37,10,0],[48,2,11,0],[48,6,11,0,"_handlersRegistry"],[48,23,11,0],[48,26,11,0,"require"],[48,33,11,0],[48,34,11,0,"_dependencyMap"],[48,48,11,0],[49,2,16,0],[49,6,16,0,"_getNextHandlerTag"],[49,24,16,0],[49,27,16,0,"require"],[49,34,16,0],[49,35,16,0,"_dependencyMap"],[49,49,16,0],[50,2,23,0],[50,6,23,0,"_utils"],[50,12,23,0],[50,15,23,0,"require"],[50,22,23,0],[50,23,23,0,"_dependencyMap"],[50,37,23,0],[51,2,24,0],[51,6,24,0,"_findNodeHandle"],[51,21,24,0],[51,24,24,0,"require"],[51,31,24,0],[51,32,24,0,"_dependencyMap"],[51,46,24,0],[52,2,24,0],[52,6,24,0,"findNodeHandle"],[52,20,24,0],[52,23,24,0,"_interopDefault"],[52,38,24,0],[52,39,24,0,"_findNodeHandle"],[52,54,24,0],[53,2,26,0],[53,6,26,0,"_utils2"],[53,13,26,0],[53,16,26,0,"require"],[53,23,26,0],[53,24,26,0,"_dependencyMap"],[53,38,26,0],[54,2,33,0],[54,6,33,0,"_ActionType"],[54,17,33,0],[54,20,33,0,"require"],[54,27,33,0],[54,28,33,0,"_dependencyMap"],[54,42,33,0],[55,2,34,0],[55,6,34,0,"_PressabilityDebugView"],[55,28,34,0],[55,31,34,0,"require"],[55,38,34,0],[55,39,34,0,"_dependencyMap"],[55,53,34,0],[56,2,35,0],[56,6,35,0,"_GestureHandlerRootViewContext"],[56,36,35,0],[56,39,35,0,"require"],[56,46,35,0],[56,47,35,0,"_dependencyMap"],[56,61,35,0],[57,2,35,0],[57,6,35,0,"GestureHandlerRootViewContext"],[57,35,35,0],[57,38,35,0,"_interopDefault"],[57,53,35,0],[57,54,35,0,"_GestureHandlerRootViewContext"],[57,84,35,0],[58,2,36,0],[58,6,36,0,"_ghQueueMicrotask"],[58,23,36,0],[58,26,36,0,"require"],[58,33,36,0],[58,34,36,0,"_dependencyMap"],[58,48,36,0],[59,2,37,0],[59,6,37,0,"_mountRegistry"],[59,20,37,0],[59,23,37,0,"require"],[59,30,37,0],[59,31,37,0,"_dependencyMap"],[59,45,37,0],[60,2,37,49],[60,6,37,49,"_reactJsxRuntime"],[60,22,37,49],[60,25,37,49,"require"],[60,32,37,49],[60,33,37,49,"_dependencyMap"],[60,47,37,49],[61,2,40,0],[61,6,40,6,"UIManagerAny"],[61,18,40,18],[61,21,40,21,"UIManager"],[61,33,40,30],[61,34,40,30,"UIManager"],[61,43,40,37],[62,2,42,0,"customDirectEventTypes"],[62,25,42,22],[62,26,42,22,"customDirectEventTypes"],[62,48,42,22],[62,49,42,23,"topGestureHandlerEvent"],[62,71,42,45],[62,74,42,48],[63,4,43,2,"registrationName"],[63,20,43,18],[63,22,43,20],[64,2,44,0],[64,3,44,1],[65,2,46,0],[65,6,46,6,"customGHEventsConfigFabricAndroid"],[65,39,46,39],[65,42,46,42],[66,4,47,2,"topOnGestureHandlerEvent"],[66,28,47,26],[66,30,47,28],[67,6,47,30,"registrationName"],[67,22,47,46],[67,24,47,48],[68,4,47,72],[68,5,47,73],[69,4,48,2,"topOnGestureHandlerStateChange"],[69,34,48,32],[69,36,48,34],[70,6,49,4,"registrationName"],[70,22,49,20],[70,24,49,22],[71,4,50,2],[72,2,51,0],[72,3,51,1],[73,2,53,0],[73,6,53,6,"customGHEventsConfig"],[73,26,53,26],[73,29,53,29],[74,4,54,2,"onGestureHandlerEvent"],[74,25,54,23],[74,27,54,25],[75,6,54,27,"registrationName"],[75,22,54,43],[75,24,54,45],[76,4,54,69],[76,5,54,70],[77,4,55,2,"onGestureHandlerStateChange"],[77,31,55,29],[77,33,55,31],[78,6,56,4,"registrationName"],[78,22,56,20],[78,24,56,22],[79,4,57,2],[79,5,57,3],[80,4,59,2],[81,4,60,2],[82,4,61,2],[83,4,62,2],[84,4,63,2],[85,4,64,2],[86,4,65,2],[87,4,66,2],[88,4,67,2],[88,8,67,6],[88,12,67,6,"isFabric"],[88,19,67,14],[88,20,67,14,"isFabric"],[88,28,67,14],[88,30,67,15],[88,31,67,16],[88,40,68,29],[88,44,69,4,"customGHEventsConfigFabricAndroid"],[88,77,69,37],[89,2,70,0],[89,3,70,1],[91,2,72,0],[92,2,73,0],[93,2,74,0],[94,2,75,0],[95,2,76,0,"UIManagerAny"],[95,14,76,12],[95,15,76,13,"genericDirectEventTypes"],[95,38,76,36],[95,41,76,39],[96,4,77,2],[96,7,77,5,"UIManagerAny"],[96,19,77,17],[96,20,77,18,"genericDirectEventTypes"],[96,43,77,41],[97,4,78,2],[97,7,78,5,"customGHEventsConfig"],[98,2,79,0],[98,3,79,1],[99,2,81,0],[99,6,81,6,"UIManagerConstants"],[99,24,81,24],[99,27,81,27,"UIManagerAny"],[99,39,81,39],[99,40,81,40,"getViewManagerConfig"],[99,60,81,60],[99,63,81,63],[99,77,81,77],[99,78,81,78],[100,2,83,0],[100,6,83,4,"UIManagerConstants"],[100,24,83,22],[100,26,83,24],[101,4,84,2,"UIManagerConstants"],[101,22,84,20],[101,23,84,21,"genericDirectEventTypes"],[101,46,84,44],[101,49,84,47],[102,6,85,4],[102,9,85,7,"UIManagerConstants"],[102,27,85,25],[102,28,85,26,"genericDirectEventTypes"],[102,51,85,49],[103,6,86,4],[103,9,86,7,"customGHEventsConfig"],[104,4,87,2],[104,5,87,3],[105,2,88,0],[107,2,90,0],[108,2,91,0],[108,6,91,0,"_UIManagerAny$setJSRe"],[108,27,91,0],[108,30,98,4,"UIManagerAny"],[108,42,98,16],[108,43,92,2,"setJSResponder"],[108,57,92,16],[109,4,92,18,"oldSetJSResponder"],[109,21,92,35],[109,24,92,35,"_UIManagerAny$setJSRe"],[109,45,92,35],[109,50,92,35,"undefined"],[109,59,92,35],[109,62,92,38],[109,68,92,44],[110,6,93,4],[111,4,93,4],[111,5,94,3],[111,8,94,3,"_UIManagerAny$setJSRe"],[111,29,94,3],[112,4,94,3,"_UIManagerAny$clearJS"],[112,25,94,3],[112,28,98,4,"UIManagerAny"],[112,40,98,16],[112,41,95,2,"clearJSResponder"],[112,57,95,18],[113,4,95,20,"oldClearJSResponder"],[113,23,95,39],[113,26,95,39,"_UIManagerAny$clearJS"],[113,47,95,39],[113,52,95,39,"undefined"],[113,61,95,39],[113,64,95,42],[113,70,95,48],[114,6,96,4],[115,4,96,4],[115,5,97,3],[115,8,97,3,"_UIManagerAny$clearJS"],[115,29,97,3],[116,2,99,0,"UIManagerAny"],[116,14,99,12],[116,15,99,13,"setJSResponder"],[116,29,99,27],[116,32,99,30],[116,33,99,31,"tag"],[116,36,99,42],[116,38,99,44,"blockNativeResponder"],[116,58,99,73],[116,63,99,78],[117,4,100,2,"RNGestureHandlerModule"],[117,26,100,24],[117,27,100,24,"default"],[117,34,100,24],[117,35,100,25,"handleSetJSResponder"],[117,55,100,45],[117,56,100,46,"tag"],[117,59,100,49],[117,61,100,51,"blockNativeResponder"],[117,81,100,71],[117,82,100,72],[118,4,101,2,"oldSetJSResponder"],[118,21,101,19],[118,22,101,20,"tag"],[118,25,101,23],[118,27,101,25,"blockNativeResponder"],[118,47,101,45],[118,48,101,46],[119,2,102,0],[119,3,102,1],[120,2,103,0,"UIManagerAny"],[120,14,103,12],[120,15,103,13,"clearJSResponder"],[120,31,103,29],[120,34,103,32],[120,40,103,38],[121,4,104,2,"RNGestureHandlerModule"],[121,26,104,24],[121,27,104,24,"default"],[121,34,104,24],[121,35,104,25,"handleClearJSResponder"],[121,57,104,47],[121,58,104,48],[121,59,104,49],[122,4,105,2,"oldClearJSResponder"],[122,23,105,21],[122,24,105,22],[122,25,105,23],[123,2,106,0],[123,3,106,1],[124,2,108,0],[124,6,108,4,"allowTouches"],[124,18,108,16],[124,21,108,19],[124,25,108,23],[125,2,109,0],[125,6,109,6,"DEV_ON_ANDROID"],[125,20,109,20],[125,28,109,59],[126,2,110,0],[127,2,111,0],[129,2,121,0],[129,11,121,9,"hasUnresolvedRefs"],[129,28,121,26,"hasUnresolvedRefs"],[129,29,122,2,"props"],[129,34,122,24],[129,36,123,2],[130,4,124,2],[131,4,125,2],[131,8,125,8,"extract"],[131,15,125,15],[131,18,125,19,"refs"],[131,22,125,36],[131,26,125,41],[132,6,126,4],[132,10,126,8],[132,11,126,9,"Array"],[132,16,126,14],[132,17,126,15,"isArray"],[132,24,126,22],[132,25,126,23,"refs"],[132,29,126,27],[132,30,126,28],[132,32,126,30],[133,8,127,6],[133,15,127,13,"refs"],[133,19,127,17],[133,23,127,21,"refs"],[133,27,127,25],[133,28,127,26,"current"],[133,35,127,33],[133,40,127,38],[133,44,127,42],[134,6,128,4],[135,6,129,4],[135,13,129,11,"refs"],[135,17,129,15],[135,18,129,16,"some"],[135,22,129,20],[135,23,129,22,"r"],[135,24,129,23],[135,28,129,28,"r"],[135,29,129,29],[135,33,129,33,"r"],[135,34,129,34],[135,35,129,35,"current"],[135,42,129,42],[135,47,129,47],[135,51,129,51],[135,52,129,52],[136,4,130,2],[136,5,130,3],[137,4,131,2],[137,11,131,9,"extract"],[137,18,131,16],[137,19,131,17,"props"],[137,24,131,22],[137,25,131,23],[137,47,131,45],[137,48,131,46],[137,49,131,47],[137,53,131,51,"extract"],[137,60,131,58],[137,61,131,59,"props"],[137,66,131,64],[137,67,131,65],[137,76,131,74],[137,77,131,75],[137,78,131,76],[138,2,132,0],[139,2,134,0],[139,6,134,6,"stateToPropMappings"],[139,25,134,25],[139,28,134,28],[140,4,135,2],[140,5,135,3,"State"],[140,11,135,8],[140,12,135,8,"State"],[140,17,135,8],[140,18,135,9,"UNDETERMINED"],[140,30,135,21],[140,33,135,24,"undefined"],[140,42,135,33],[141,4,136,2],[141,5,136,3,"State"],[141,11,136,8],[141,12,136,8,"State"],[141,17,136,8],[141,18,136,9,"BEGAN"],[141,23,136,14],[141,26,136,17],[141,35,136,26],[142,4,137,2],[142,5,137,3,"State"],[142,11,137,8],[142,12,137,8,"State"],[142,17,137,8],[142,18,137,9,"FAILED"],[142,24,137,15],[142,27,137,18],[142,37,137,28],[143,4,138,2],[143,5,138,3,"State"],[143,11,138,8],[143,12,138,8,"State"],[143,17,138,8],[143,18,138,9,"CANCELLED"],[143,27,138,18],[143,30,138,21],[143,43,138,34],[144,4,139,2],[144,5,139,3,"State"],[144,11,139,8],[144,12,139,8,"State"],[144,17,139,8],[144,18,139,9,"ACTIVE"],[144,24,139,15],[144,27,139,18],[144,40,139,31],[145,4,140,2],[145,5,140,3,"State"],[145,11,140,8],[145,12,140,8,"State"],[145,17,140,8],[145,18,140,9,"END"],[145,21,140,12],[145,24,140,15],[146,2,141,0],[146,3,141,10],[148,2,152,0],[150,2,166,0],[150,6,166,6,"UNRESOLVED_REFS_RETRY_LIMIT"],[150,33,166,33],[150,36,166,36],[150,37,166,37],[152,2,168,0],[153,2,169,15],[153,11,169,24,"createHandler"],[153,24,169,37,"createHandler"],[153,25,169,37,"_ref"],[153,29,169,37],[153,31,178,76],[154,4,178,76],[154,8,173,2,"name"],[154,12,173,6],[154,15,173,6,"_ref"],[154,19,173,6],[154,20,173,2,"name"],[154,24,173,6],[155,6,173,6,"_ref$allowedProps"],[155,23,173,6],[155,26,173,6,"_ref"],[155,30,173,6],[155,31,174,2,"allowedProps"],[155,43,174,14],[156,6,174,2,"allowedProps"],[156,18,174,14],[156,21,174,14,"_ref$allowedProps"],[156,38,174,14],[156,43,174,14,"undefined"],[156,52,174,14],[156,55,174,17],[156,57,174,19],[156,60,174,19,"_ref$allowedProps"],[156,77,174,19],[157,6,174,19,"_ref$config"],[157,17,174,19],[157,20,174,19,"_ref"],[157,24,174,19],[157,25,175,2,"config"],[157,31,175,8],[158,6,175,2,"config"],[158,12,175,8],[158,15,175,8,"_ref$config"],[158,26,175,8],[158,31,175,8,"undefined"],[158,40,175,8],[158,43,175,11],[158,44,175,12],[158,45,175,13],[158,48,175,13,"_ref$config"],[158,59,175,13],[159,6,176,2,"transformProps"],[159,20,176,16],[159,23,176,16,"_ref"],[159,27,176,16],[159,28,176,2,"transformProps"],[159,42,176,16],[160,6,176,16,"_ref$customNativeProp"],[160,27,176,16],[160,30,176,16,"_ref"],[160,34,176,16],[160,35,177,2,"customNativeProps"],[160,52,177,19],[161,6,177,2,"customNativeProps"],[161,23,177,19],[161,26,177,19,"_ref$customNativeProp"],[161,47,177,19],[161,52,177,19,"undefined"],[161,61,177,19],[161,64,177,22],[161,66,177,24],[161,69,177,24,"_ref$customNativeProp"],[161,90,177,24],[162,4,177,24],[162,8,182,8,"Handler"],[162,15,182,15],[162,41,182,15,"_React$Component"],[162,57,182,15],[163,6,197,4],[163,15,197,4,"Handler"],[163,23,197,16,"props"],[163,28,197,48],[163,30,197,50],[164,8,197,50],[164,12,197,50,"_this"],[164,17,197,50],[165,8,197,50],[165,12,197,50,"_classCallCheck"],[165,27,197,50],[165,28,197,50,"default"],[165,35,197,50],[165,43,197,50,"Handler"],[165,50,197,50],[166,8,198,6,"_this"],[166,13,198,6],[166,20,198,6,"_callSuper"],[166,30,198,6],[166,31,198,6,"default"],[166,38,198,6],[166,46,198,6,"Handler"],[166,53,198,6],[166,56,198,12,"props"],[166,61,198,17],[167,8,198,19,"_this"],[167,13,198,19],[167,14,189,12,"handlerTag"],[167,24,189,22],[168,8,189,22,"_this"],[168,13,189,22],[168,14,279,12,"onGestureHandlerEvent"],[168,35,279,33],[168,38,279,37,"event"],[168,43,279,59],[168,47,279,64],[169,10,280,6],[169,14,280,10,"event"],[169,19,280,15],[169,20,280,16,"nativeEvent"],[169,31,280,27],[169,32,280,28,"handlerTag"],[169,42,280,38],[169,47,280,43,"_this"],[169,52,280,43],[169,53,280,48,"handlerTag"],[169,63,280,58],[169,65,280,60],[170,12,281,8],[170,16,281,12],[170,23,281,19,"_this"],[170,28,281,19],[170,29,281,24,"props"],[170,34,281,29],[170,35,281,30,"onGestureEvent"],[170,49,281,44],[170,54,281,49],[170,64,281,59],[170,66,281,61],[171,14,282,10,"_this"],[171,19,282,10],[171,20,282,15,"props"],[171,25,282,20],[171,26,282,21,"onGestureEvent"],[171,40,282,35],[171,43,282,38,"event"],[171,48,282,43],[171,49,282,44],[172,12,283,8],[173,10,284,6],[173,11,284,7],[173,17,284,13],[174,12,285,8,"_this"],[174,17,285,8],[174,18,285,13,"props"],[174,23,285,18],[174,24,285,19,"onGestureHandlerEvent"],[174,45,285,40],[174,48,285,43,"event"],[174,53,285,48],[174,54,285,49],[175,10,286,6],[176,8,287,4],[176,9,287,5],[177,8,289,4],[178,8,289,4,"_this"],[178,13,289,4],[178,14,290,12,"onGestureHandlerStateChange"],[178,41,290,39],[178,44,291,6,"event"],[178,49,291,39],[178,53,292,9],[179,10,293,6],[179,14,293,10,"event"],[179,19,293,15],[179,20,293,16,"nativeEvent"],[179,31,293,27],[179,32,293,28,"handlerTag"],[179,42,293,38],[179,47,293,43,"_this"],[179,52,293,43],[179,53,293,48,"handlerTag"],[179,63,293,58],[179,65,293,60],[180,12,294,8],[180,16,294,12],[180,23,294,19,"_this"],[180,28,294,19],[180,29,294,24,"props"],[180,34,294,29],[180,35,294,30,"onHandlerStateChange"],[180,55,294,50],[180,60,294,55],[180,70,294,65],[180,72,294,67],[181,14,295,10,"_this"],[181,19,295,10],[181,20,295,15,"props"],[181,25,295,20],[181,26,295,21,"onHandlerStateChange"],[181,46,295,41],[181,49,295,44,"event"],[181,54,295,49],[181,55,295,50],[182,12,296,8],[183,12,298,8],[183,16,298,14,"state"],[183,21,298,42],[183,24,298,45,"event"],[183,29,298,50],[183,30,298,51,"nativeEvent"],[183,41,298,62],[183,42,298,63,"state"],[183,47,298,68],[184,12,299,8],[184,16,299,14,"stateEventName"],[184,30,299,28],[184,33,299,31,"stateToPropMappings"],[184,52,299,50],[184,53,299,51,"state"],[184,58,299,56],[184,59,299,57],[185,12,300,8],[185,16,300,14,"eventHandler"],[185,28,300,26],[185,31,300,29,"stateEventName"],[185,45,300,43],[185,49,300,47,"_this"],[185,54,300,47],[185,55,300,52,"props"],[185,60,300,57],[185,61,300,58,"stateEventName"],[185,75,300,72],[185,76,300,73],[186,12,301,8],[186,16,301,12,"eventHandler"],[186,28,301,24],[186,32,301,28],[186,39,301,35,"eventHandler"],[186,51,301,47],[186,56,301,52],[186,66,301,62],[186,68,301,64],[187,14,302,10,"eventHandler"],[187,26,302,22],[187,27,302,23,"event"],[187,32,302,28],[187,33,302,29],[188,12,303,8],[189,10,304,6],[189,11,304,7],[189,17,304,13],[190,12,305,8,"_this"],[190,17,305,8],[190,18,305,13,"props"],[190,23,305,18],[190,24,305,19,"onGestureHandlerStateChange"],[190,51,305,46],[190,54,305,49,"event"],[190,59,305,54],[190,60,305,55],[191,10,306,6],[192,8,307,4],[192,9,307,5],[193,8,307,5,"_this"],[193,13,307,5],[193,14,309,12,"refHandler"],[193,24,309,22],[193,27,309,26,"node"],[193,31,309,35],[193,35,309,40],[194,10,310,6,"_this"],[194,15,310,6],[194,16,310,11,"viewNode"],[194,24,310,19],[194,27,310,22,"node"],[194,31,310,26],[195,10,312,6],[195,14,312,12,"child"],[195,19,312,17],[195,22,312,20,"React"],[195,27,312,25],[195,28,312,26,"Children"],[195,36,312,34],[195,37,312,35,"only"],[195,41,312,39],[195,42,312,40,"_this"],[195,47,312,40],[195,48,312,45,"props"],[195,53,312,50],[195,54,312,51,"children"],[195,62,312,59],[195,63,312,60],[196,10,313,6],[197,10,314,6],[198,10,315,6],[198,14,315,12,"ref"],[198,17,315,15],[198,20,315,18],[198,24,315,18,"isReact19"],[198,31,315,27],[198,32,315,27,"isReact19"],[198,41,315,27],[198,43,315,28],[198,44,315,29],[198,47,315,33,"child"],[198,52,315,38],[198,53,315,56,"props"],[198,58,315,61],[198,60,315,63,"ref"],[198,63,315,66],[198,66,315,69,"child"],[198,71,315,74],[198,73,315,76,"ref"],[198,76,315,79],[199,10,317,6],[199,14,317,10],[199,15,317,11,"ref"],[199,18,317,14],[199,20,317,16],[200,12,318,8],[201,10,319,6],[202,10,321,6],[202,14,321,10],[202,21,321,17,"ref"],[202,24,321,20],[202,29,321,25],[202,39,321,35],[202,41,321,37],[203,12,322,8,"ref"],[203,15,322,11],[203,16,322,12,"node"],[203,20,322,16],[203,21,322,17],[204,10,323,6],[204,11,323,7],[204,17,323,13],[205,12,324,8,"ref"],[205,15,324,11],[205,16,324,12,"current"],[205,23,324,19],[205,26,324,22,"node"],[205,30,324,26],[206,10,325,6],[207,8,326,4],[207,9,326,5],[208,8,326,5,"_this"],[208,13,326,5],[208,14,328,12,"createGestureHandler"],[208,34,328,32],[208,37,329,6,"newConfig"],[208,46,329,50],[208,50,330,9],[209,10,331,6,"_this"],[209,15,331,6],[209,16,331,11,"handlerTag"],[209,26,331,21],[209,29,331,24],[209,33,331,24,"getNextHandlerTag"],[209,51,331,41],[209,52,331,41,"getNextHandlerTag"],[209,69,331,41],[209,71,331,42],[209,72,331,43],[210,10,332,6,"_this"],[210,15,332,6],[210,16,332,11,"config"],[210,22,332,17],[210,25,332,20,"newConfig"],[210,34,332,29],[211,10,334,6,"RNGestureHandlerModule"],[211,32,334,28],[211,33,334,28,"default"],[211,40,334,28],[211,41,334,29,"createGestureHandler"],[211,61,334,49],[211,62,335,8,"name"],[211,66,335,12],[211,68,336,8,"_this"],[211,73,336,8],[211,74,336,13,"handlerTag"],[211,84,336,23],[211,86,337,8,"newConfig"],[211,95,338,6],[211,96,338,7],[212,8,339,4],[212,9,339,5],[213,8,339,5,"_this"],[213,13,339,5],[213,14,341,12,"attachGestureHandler"],[213,34,341,32],[213,37,341,36,"newViewTag"],[213,47,341,54],[213,51,341,59],[214,10,342,6,"_this"],[214,15,342,6],[214,16,342,11,"viewTag"],[214,23,342,18],[214,26,342,21,"newViewTag"],[214,36,342,31],[215,10,354,13],[216,12,355,8],[216,16,355,8,"registerOldGestureHandler"],[216,33,355,33],[216,34,355,33,"registerOldGestureHandler"],[216,59,355,33],[216,61,355,34,"_this"],[216,66,355,34],[216,67,355,39,"handlerTag"],[216,77,355,49],[216,79,355,51],[217,14,356,10,"onGestureEvent"],[217,28,356,24],[217,30,356,26,"_this"],[217,35,356,26],[217,36,356,31,"onGestureHandlerEvent"],[217,57,356,52],[218,14,357,10,"onGestureStateChange"],[218,34,357,30],[218,36,357,32,"_this"],[218,41,357,32],[218,42,357,37,"onGestureHandlerStateChange"],[219,12,358,8],[219,13,358,9],[219,14,358,10],[220,12,360,8],[220,16,360,14,"actionType"],[220,26,360,24],[220,29,360,27],[220,30,360,28],[220,36,360,34],[221,14,361,10],[221,18,361,16,"onGestureEvent"],[221,32,361,30],[221,35,361,33,"_this"],[221,40,361,33],[221,41,361,38,"props"],[221,46,361,43],[221,48,361,45,"onGestureEvent"],[221,62,361,59],[222,14,362,10],[222,18,362,16,"isGestureHandlerWorklet"],[222,41,362,39],[222,44,363,12,"onGestureEvent"],[222,58,363,26],[222,63,364,13],[222,72,364,22],[222,76,364,26,"onGestureEvent"],[222,90,364,40],[222,94,365,14],[222,115,365,35],[222,119,365,39,"onGestureEvent"],[222,133,365,53],[222,134,365,54],[223,14,366,10],[223,18,366,16,"onHandlerStateChange"],[223,38,366,36],[223,41,366,39,"_this"],[223,46,366,39],[223,47,366,44,"props"],[223,52,366,49],[223,54,366,51,"onHandlerStateChange"],[223,74,366,71],[224,14,367,10],[224,18,367,16,"isStateChangeHandlerWorklet"],[224,45,367,43],[224,48,368,12,"onHandlerStateChange"],[224,68,368,32],[224,73,369,13],[224,82,369,22],[224,86,369,26,"onHandlerStateChange"],[224,106,369,46],[224,110,370,14],[224,131,370,35],[224,135,370,39,"onHandlerStateChange"],[224,155,370,59],[224,156,370,60],[225,14,371,10],[225,18,371,16,"isReanimatedHandler"],[225,37,371,35],[225,40,372,12,"isGestureHandlerWorklet"],[225,63,372,35],[225,67,372,39,"isStateChangeHandlerWorklet"],[225,94,372,66],[226,14,373,10],[226,18,373,14,"isReanimatedHandler"],[226,37,373,33],[226,39,373,35],[227,16,374,12],[228,16,375,12],[228,23,375,19,"ActionType"],[228,34,375,29],[228,35,375,29,"ActionType"],[228,45,375,29],[228,46,375,30,"REANIMATED_WORKLET"],[228,64,375,48],[229,14,376,10],[229,15,376,11],[229,21,376,17],[229,25,376,21,"onGestureEvent"],[229,39,376,35],[229,43,376,39],[229,55,376,51],[229,59,376,55,"onGestureEvent"],[229,73,376,69],[229,75,376,71],[230,16,377,12],[231,16,378,12],[231,23,378,19,"ActionType"],[231,34,378,29],[231,35,378,29,"ActionType"],[231,45,378,29],[231,46,378,30,"NATIVE_ANIMATED_EVENT"],[231,67,378,51],[232,14,379,10],[232,15,379,11],[232,21,379,17],[233,16,380,12],[234,16,381,12],[234,23,381,19,"ActionType"],[234,34,381,29],[234,35,381,29,"ActionType"],[234,45,381,29],[234,46,381,30,"JS_FUNCTION_OLD_API"],[234,65,381,49],[235,14,382,10],[236,12,383,8],[236,13,383,9],[236,15,383,11],[236,16,383,12],[237,12,385,8,"RNGestureHandlerModule"],[237,34,385,30],[237,35,385,30,"default"],[237,42,385,30],[237,43,385,31,"attachGestureHandler"],[237,63,385,51],[237,64,386,10,"_this"],[237,69,386,10],[237,70,386,15,"handlerTag"],[237,80,386,25],[237,82,387,10,"newViewTag"],[237,92,387,20],[237,94,388,10,"actionType"],[237,104,389,8],[237,105,389,9],[238,10,390,6],[239,10,392,6],[239,14,392,6,"scheduleFlushOperations"],[239,20,392,29],[239,21,392,29,"scheduleFlushOperations"],[239,44,392,29],[239,46,392,30],[239,47,392,31],[240,10,394,6],[240,14,394,6,"ghQueueMicrotask"],[240,31,394,22],[240,32,394,22,"ghQueueMicrotask"],[240,48,394,22],[240,50,394,23],[240,56,394,29],[241,12,395,8,"MountRegistry"],[241,26,395,21],[241,27,395,21,"MountRegistry"],[241,40,395,21],[241,41,395,22,"gestureHandlerWillMount"],[241,64,395,45],[241,65,395,45,"_this"],[241,70,395,50],[241,71,395,51],[242,10,396,6],[242,11,396,7],[242,12,396,8],[243,8,397,4],[243,9,397,5],[244,8,397,5,"_this"],[244,13,397,5],[244,14,399,12,"updateGestureHandler"],[244,34,399,32],[244,37,400,6,"newConfig"],[244,46,400,50],[244,50,401,9],[245,10,402,6,"_this"],[245,15,402,6],[245,16,402,11,"config"],[245,22,402,17],[245,25,402,20,"newConfig"],[245,34,402,29],[246,10,404,6,"RNGestureHandlerModule"],[246,32,404,28],[246,33,404,28,"default"],[246,40,404,28],[246,41,404,29,"updateGestureHandler"],[246,61,404,49],[246,62,404,50,"_this"],[246,67,404,50],[246,68,404,55,"handlerTag"],[246,78,404,65],[246,80,404,67,"newConfig"],[246,89,404,76],[246,90,404,77],[247,10,405,6],[247,14,405,6,"scheduleFlushOperations"],[247,20,405,29],[247,21,405,29,"scheduleFlushOperations"],[247,44,405,29],[247,46,405,30],[247,47,405,31],[248,8,406,4],[248,9,406,5],[249,8,199,6,"_this"],[249,13,199,6],[249,14,199,11,"config"],[249,20,199,17],[249,23,199,20],[249,24,199,21],[249,25,199,22],[250,8,200,6,"_this"],[250,13,200,6],[250,14,200,11,"propsRef"],[250,22,200,19],[250,38,200,22,"React"],[250,43,200,27],[250,44,200,28,"createRef"],[250,53,200,37],[250,54,200,38],[250,55,200,39],[251,8,201,6,"_this"],[251,13,201,6],[251,14,201,11,"isMountedRef"],[251,26,201,23],[251,42,201,26,"React"],[251,47,201,31],[251,48,201,32,"createRef"],[251,57,201,41],[251,58,201,42],[251,59,201,43],[252,8,202,6,"_this"],[252,13,202,6],[252,14,202,11,"state"],[252,19,202,16],[252,22,202,19],[253,10,202,21,"allowTouches"],[254,8,202,34],[254,9,202,35],[255,8,203,6],[255,12,203,10,"props"],[255,17,203,15],[255,18,203,16,"id"],[255,20,203,18],[255,22,203,20],[256,10,204,8],[256,14,204,12,"handlerIDToTag"],[256,31,204,26],[256,32,204,26,"handlerIDToTag"],[256,46,204,26],[256,47,204,27,"props"],[256,52,204,32],[256,53,204,33,"id"],[256,55,204,35],[256,56,204,36],[256,61,204,41,"undefined"],[256,70,204,50],[256,72,204,52],[257,12,205,10],[257,18,205,16],[257,22,205,20,"Error"],[257,27,205,25],[257,28,205,26],[257,48,205,46,"props"],[257,53,205,51],[257,54,205,52,"id"],[257,56,205,54],[257,78,205,76],[257,79,205,77],[258,10,206,8],[259,10,207,8,"handlerIDToTag"],[259,27,207,22],[259,28,207,22,"handlerIDToTag"],[259,42,207,22],[259,43,207,23,"props"],[259,48,207,28],[259,49,207,29,"id"],[259,51,207,31],[259,52,207,32],[259,55,207,35,"_this"],[259,60,207,35],[259,61,207,40,"handlerTag"],[259,71,207,50],[260,8,208,6],[261,8,208,7],[261,15,208,7,"_this"],[261,20,208,7],[262,6,209,4],[263,6,209,5],[263,10,209,5,"_inherits"],[263,19,209,5],[263,20,209,5,"default"],[263,27,209,5],[263,29,209,5,"Handler"],[263,36,209,5],[263,38,209,5,"_React$Component"],[263,54,209,5],[264,6,209,5],[264,17,209,5,"_createClass"],[264,29,209,5],[264,30,209,5,"default"],[264,37,209,5],[264,39,209,5,"Handler"],[264,46,209,5],[265,8,209,5,"key"],[265,11,209,5],[266,8,209,5,"value"],[266,13,209,5],[266,15,211,4],[266,24,211,4,"componentDidMount"],[266,41,211,21,"componentDidMount"],[266,42,211,21],[266,44,211,24],[267,10,212,6],[267,14,212,12,"props"],[267,19,212,34],[267,22,212,37],[267,26,212,41],[267,27,212,42,"props"],[267,32,212,47],[268,10,213,6],[268,14,213,10],[268,15,213,11,"isMountedRef"],[268,27,213,23],[268,28,213,24,"current"],[268,35,213,31],[268,38,213,34],[268,42,213,38],[269,10,224,6],[269,14,224,10,"hasUnresolvedRefs"],[269,31,224,27],[269,32,224,28,"props"],[269,37,224,33],[269,38,224,34],[269,40,224,36],[270,12,225,8],[271,12,226,8],[272,12,227,8],[273,12,228,8],[274,12,229,8],[275,12,230,8],[276,12,231,8],[276,16,231,8,"ghQueueMicrotask"],[276,33,231,24],[276,34,231,24,"ghQueueMicrotask"],[276,50,231,24],[276,52,231,25],[276,58,231,31],[277,14,232,10],[277,18,232,14],[277,19,232,15,"update"],[277,25,232,21],[277,26,232,22,"UNRESOLVED_REFS_RETRY_LIMIT"],[277,53,232,49],[277,54,232,50],[278,12,233,8],[278,13,233,9],[278,14,233,10],[279,10,234,6],[280,10,236,6],[280,14,236,10],[280,15,236,11,"createGestureHandler"],[280,35,236,31],[280,36,237,8],[280,40,237,8,"filterConfig"],[280,46,237,20],[280,47,237,20,"filterConfig"],[280,59,237,20],[280,61,238,10,"transformProps"],[280,75,238,24],[280,78,238,27,"transformProps"],[280,92,238,41],[280,93,238,42],[280,97,238,46],[280,98,238,47,"props"],[280,103,238,52],[280,104,238,53],[280,107,238,56],[280,111,238,60],[280,112,238,61,"props"],[280,117,238,66],[280,119,239,10],[280,120,239,11],[280,123,239,14,"allowedProps"],[280,135,239,26],[280,137,239,28],[280,140,239,31,"customNativeProps"],[280,157,239,48],[280,158,239,49],[280,160,240,10,"config"],[280,166,241,8],[280,167,242,6],[280,168,242,7],[281,10,244,6],[281,14,244,10],[281,15,244,11],[281,19,244,15],[281,20,244,16,"viewNode"],[281,28,244,24],[281,30,244,26],[282,12,245,8],[282,18,245,14],[282,22,245,18,"Error"],[282,27,245,23],[282,28,246,10],[282,75,246,57,"Handler"],[282,82,246,64],[282,83,246,65,"displayName"],[282,94,246,76],[282,154,247,8],[282,155,247,9],[283,10,248,6],[284,10,250,6],[284,14,250,10],[284,15,250,11,"attachGestureHandler"],[284,35,250,31],[284,36,250,32],[284,40,250,32,"findNodeHandle"],[284,54,250,46],[284,55,250,46,"default"],[284,62,250,46],[284,64,250,47],[284,68,250,51],[284,69,250,52,"viewNode"],[284,77,250,60],[284,78,250,71],[284,79,250,72],[284,80,250,73],[284,81,250,74],[285,8,251,4],[286,6,251,5],[287,8,251,5,"key"],[287,11,251,5],[288,8,251,5,"value"],[288,13,251,5],[288,15,253,4],[288,24,253,4,"componentDidUpdate"],[288,42,253,22,"componentDidUpdate"],[288,43,253,22],[288,45,253,25],[289,10,254,6],[289,14,254,12,"viewTag"],[289,21,254,19],[289,24,254,22],[289,28,254,22,"findNodeHandle"],[289,42,254,36],[289,43,254,36,"default"],[289,50,254,36],[289,52,254,37],[289,56,254,41],[289,57,254,42,"viewNode"],[289,65,254,50],[289,66,254,51],[290,10,255,6],[290,14,255,10],[290,18,255,14],[290,19,255,15,"viewTag"],[290,26,255,22],[290,31,255,27,"viewTag"],[290,38,255,34],[290,40,255,36],[291,12,256,8],[291,16,256,12],[291,17,256,13,"attachGestureHandler"],[291,37,256,33],[291,38,256,34,"viewTag"],[291,45,256,51],[291,46,256,52],[291,47,256,53],[291,48,256,54],[292,10,257,6],[293,10,258,6],[293,14,258,10],[293,15,258,11,"update"],[293,21,258,17],[293,22,258,18,"UNRESOLVED_REFS_RETRY_LIMIT"],[293,49,258,45],[293,50,258,46],[294,8,259,4],[295,6,259,5],[296,8,259,5,"key"],[296,11,259,5],[297,8,259,5,"value"],[297,13,259,5],[297,15,261,4],[297,24,261,4,"componentWillUnmount"],[297,44,261,24,"componentWillUnmount"],[297,45,261,24],[297,47,261,27],[298,10,262,6],[298,14,262,10],[298,15,262,11,"inspectorToggleListener"],[298,38,262,34],[298,40,262,36,"remove"],[298,46,262,42],[298,47,262,43],[298,48,262,44],[299,10,263,6],[299,14,263,10],[299,15,263,11,"isMountedRef"],[299,27,263,23],[299,28,263,24,"current"],[299,35,263,31],[299,38,263,34],[299,43,263,39],[300,10,264,33],[301,12,265,8],[301,16,265,8,"unregisterOldGestureHandler"],[301,33,265,35],[301,34,265,35,"unregisterOldGestureHandler"],[301,61,265,35],[301,63,265,36],[301,67,265,40],[301,68,265,41,"handlerTag"],[301,78,265,51],[301,79,265,52],[302,10,266,6],[303,10,267,6,"RNGestureHandlerModule"],[303,32,267,28],[303,33,267,28,"default"],[303,40,267,28],[303,41,267,29,"dropGestureHandler"],[303,59,267,47],[303,60,267,48],[303,64,267,52],[303,65,267,53,"handlerTag"],[303,75,267,63],[303,76,267,64],[304,10,268,6],[304,14,268,6,"scheduleFlushOperations"],[304,20,268,29],[304,21,268,29,"scheduleFlushOperations"],[304,44,268,29],[304,46,268,30],[304,47,268,31],[305,10,269,6],[306,10,270,6],[306,14,270,12,"handlerID"],[306,23,270,41],[306,26,270,44],[306,30,270,48],[306,31,270,49,"props"],[306,36,270,54],[306,37,270,55,"id"],[306,39,270,57],[307,10,271,6],[307,14,271,10,"handlerID"],[307,23,271,19],[307,25,271,21],[308,12,272,8],[309,12,273,8],[309,19,273,15,"handlerIDToTag"],[309,36,273,29],[309,37,273,29,"handlerIDToTag"],[309,51,273,29],[309,52,273,30,"handlerID"],[309,61,273,39],[309,62,273,40],[310,10,274,6],[311,10,276,6,"MountRegistry"],[311,24,276,19],[311,25,276,19,"MountRegistry"],[311,38,276,19],[311,39,276,20,"gestureHandlerWillUnmount"],[311,64,276,45],[311,65,276,46],[311,69,276,50],[311,70,276,51],[312,8,277,4],[313,6,277,5],[314,8,277,5,"key"],[314,11,277,5],[315,8,277,5,"value"],[315,13,277,5],[315,15,408,4],[315,24,408,12,"update"],[315,30,408,18,"update"],[315,31,408,19,"remainingTries"],[315,45,408,41],[315,47,408,43],[316,10,409,6],[316,14,409,10],[316,15,409,11],[316,19,409,15],[316,20,409,16,"isMountedRef"],[316,32,409,28],[316,33,409,29,"current"],[316,40,409,36],[316,42,409,38],[317,12,410,8],[318,10,411,6],[319,10,413,6],[319,14,413,12,"props"],[319,19,413,34],[319,22,413,37],[319,26,413,41],[319,27,413,42,"props"],[319,32,413,47],[321,10,415,6],[322,10,416,6],[323,10,417,6],[324,10,418,6],[324,14,418,10,"hasUnresolvedRefs"],[324,31,418,27],[324,32,418,28,"props"],[324,37,418,33],[324,38,418,34],[324,42,418,38,"remainingTries"],[324,56,418,52],[324,59,418,55],[324,60,418,56],[324,62,418,58],[325,12,419,8],[325,16,419,8,"ghQueueMicrotask"],[325,33,419,24],[325,34,419,24,"ghQueueMicrotask"],[325,50,419,24],[325,52,419,25],[325,58,419,31],[326,14,420,10],[326,18,420,14],[326,19,420,15,"update"],[326,25,420,21],[326,26,420,22,"remainingTries"],[326,40,420,36],[326,43,420,39],[326,44,420,40],[326,45,420,41],[327,12,421,8],[327,13,421,9],[327,14,421,10],[328,10,422,6],[328,11,422,7],[328,17,422,13],[329,12,423,8],[329,16,423,14,"newConfig"],[329,25,423,23],[329,28,423,26],[329,32,423,26,"filterConfig"],[329,38,423,38],[329,39,423,38,"filterConfig"],[329,51,423,38],[329,53,424,10,"transformProps"],[329,67,424,24],[329,70,424,27,"transformProps"],[329,84,424,41],[329,85,424,42],[329,89,424,46],[329,90,424,47,"props"],[329,95,424,52],[329,96,424,53],[329,99,424,56],[329,103,424,60],[329,104,424,61,"props"],[329,109,424,66],[329,111,425,10],[329,112,425,11],[329,115,425,14,"allowedProps"],[329,127,425,26],[329,129,425,28],[329,132,425,31,"customNativeProps"],[329,149,425,48],[329,150,425,49],[329,152,426,10,"config"],[329,158,427,8],[329,159,427,9],[330,12,428,8],[330,16,428,12],[330,17,428,13],[330,21,428,13,"deepEqual"],[330,28,428,22],[330,29,428,22,"deepEqual"],[330,38,428,22],[330,40,428,23],[330,44,428,27],[330,45,428,28,"config"],[330,51,428,34],[330,53,428,36,"newConfig"],[330,62,428,45],[330,63,428,46],[330,65,428,48],[331,14,429,10],[331,18,429,14],[331,19,429,15,"updateGestureHandler"],[331,39,429,35],[331,40,429,36,"newConfig"],[331,49,429,45],[331,50,429,46],[332,12,430,8],[333,10,431,6],[334,8,432,4],[336,8,434,4],[337,6,434,4],[338,8,434,4,"key"],[338,11,434,4],[339,8,434,4,"value"],[339,13,434,4],[339,15,435,4],[339,24,435,4,"setNativeProps"],[339,38,435,18,"setNativeProps"],[339,39,435,19,"updates"],[339,46,435,31],[339,48,435,33],[340,10,436,6],[340,14,436,12,"mergedProps"],[340,25,436,23],[340,28,436,26],[341,12,436,28],[341,15,436,31],[341,19,436,35],[341,20,436,36,"props"],[341,25,436,41],[342,12,436,43],[342,15,436,46,"updates"],[343,10,436,54],[343,11,436,55],[344,10,437,6],[344,14,437,12,"newConfig"],[344,23,437,21],[344,26,437,24],[344,30,437,24,"filterConfig"],[344,36,437,36],[344,37,437,36,"filterConfig"],[344,49,437,36],[344,51,438,8,"transformProps"],[344,65,438,22],[344,68,438,25,"transformProps"],[344,82,438,39],[344,83,438,40,"mergedProps"],[344,94,438,51],[344,95,438,52],[344,98,438,55,"mergedProps"],[344,109,438,66],[344,111,439,8],[344,112,439,9],[344,115,439,12,"allowedProps"],[344,127,439,24],[344,129,439,26],[344,132,439,29,"customNativeProps"],[344,149,439,46],[344,150,439,47],[344,152,440,8,"config"],[344,158,441,6],[344,159,441,7],[345,10,442,6],[345,14,442,10],[345,15,442,11,"updateGestureHandler"],[345,35,442,31],[345,36,442,32,"newConfig"],[345,45,442,41],[345,46,442,42],[346,8,443,4],[347,6,443,5],[348,8,443,5,"key"],[348,11,443,5],[349,8,443,5,"value"],[349,13,443,5],[349,15,445,4],[349,24,445,4,"render"],[349,30,445,10,"render"],[349,31,445,10],[349,33,445,13],[350,10,453,6],[350,14,453,10,"gestureEventHandler"],[350,33,453,29],[350,36,453,32],[350,40,453,36],[350,41,453,37,"onGestureHandlerEvent"],[350,62,453,58],[351,10,454,6],[353,10,459,6],[353,14,459,6,"_this$props"],[353,25,459,6],[353,28,460,8],[353,32,460,12],[353,33,460,13,"props"],[353,38,460,18],[354,12,459,14,"onGestureEvent"],[354,26,459,28],[354,29,459,28,"_this$props"],[354,40,459,28],[354,41,459,14,"onGestureEvent"],[354,55,459,28],[355,12,459,30,"onGestureHandlerEvent"],[355,33,459,51],[355,36,459,51,"_this$props"],[355,47,459,51],[355,48,459,30,"onGestureHandlerEvent"],[355,69,459,51],[356,10,461,6],[356,14,461,10,"onGestureEvent"],[356,28,461,24],[356,32,461,28],[356,39,461,35,"onGestureEvent"],[356,53,461,49],[356,58,461,54],[356,68,461,64],[356,70,461,66],[357,12,462,8],[358,12,463,8],[359,12,464,8],[360,12,465,8],[360,16,465,12,"onGestureHandlerEvent"],[360,37,465,33],[360,39,465,35],[361,14,466,10],[361,20,466,16],[361,24,466,20,"Error"],[361,29,466,25],[361,30,467,12],[361,103,468,10],[361,104,468,11],[362,12,469,8],[363,12,470,8,"gestureEventHandler"],[363,31,470,27],[363,34,470,30,"onGestureEvent"],[363,48,470,44],[364,10,471,6],[364,11,471,7],[364,17,471,13],[365,12,472,8],[365,16,473,10,"onGestureHandlerEvent"],[365,37,473,31],[365,41,474,10],[365,48,474,17,"onGestureHandlerEvent"],[365,69,474,38],[365,74,474,43],[365,84,474,53],[365,86,475,10],[366,14,476,10],[366,20,476,16],[366,24,476,20,"Error"],[366,29,476,25],[366,30,477,12],[366,103,478,10],[366,104,478,11],[367,12,479,8],[368,10,480,6],[369,10,482,6],[369,14,482,10,"gestureStateEventHandler"],[369,38,482,34],[369,41,482,37],[369,45,482,41],[369,46,482,42,"onGestureHandlerStateChange"],[369,73,482,69],[370,10,483,6],[372,10,488,6],[372,14,488,6,"_this$props2"],[372,26,488,6],[372,29,491,40],[372,33,491,44],[372,34,491,45,"props"],[372,39,491,50],[373,12,489,8,"onHandlerStateChange"],[373,32,489,28],[373,35,489,28,"_this$props2"],[373,47,489,28],[373,48,489,8,"onHandlerStateChange"],[373,68,489,28],[374,12,490,8,"onGestureHandlerStateChange"],[374,39,490,35],[374,42,490,35,"_this$props2"],[374,54,490,35],[374,55,490,8,"onGestureHandlerStateChange"],[374,82,490,35],[375,10,492,6],[375,14,492,10,"onHandlerStateChange"],[375,34,492,30],[375,38,492,34],[375,45,492,41,"onHandlerStateChange"],[375,65,492,61],[375,70,492,66],[375,80,492,76],[375,82,492,78],[376,12,493,8],[377,12,494,8],[378,12,495,8],[379,12,496,8],[379,16,496,12,"onGestureHandlerStateChange"],[379,43,496,39],[379,45,496,41],[380,14,497,10],[380,20,497,16],[380,24,497,20,"Error"],[380,29,497,25],[380,30,498,12],[380,103,499,10],[380,104,499,11],[381,12,500,8],[382,12,501,8,"gestureStateEventHandler"],[382,36,501,32],[382,39,501,35,"onHandlerStateChange"],[382,59,501,55],[383,10,502,6],[383,11,502,7],[383,17,502,13],[384,12,503,8],[384,16,504,10,"onGestureHandlerStateChange"],[384,43,504,37],[384,47,505,10],[384,54,505,17,"onGestureHandlerStateChange"],[384,81,505,44],[384,86,505,49],[384,96,505,59],[384,98,506,10],[385,14,507,10],[385,20,507,16],[385,24,507,20,"Error"],[385,29,507,25],[385,30,508,12],[385,103,509,10],[385,104,509,11],[386,12,510,8],[387,10,511,6],[388,10,512,6],[388,14,512,12,"events"],[388,20,512,18],[388,23,512,21],[389,12,513,8,"onGestureHandlerEvent"],[389,33,513,29],[389,35,513,31],[389,39,513,35],[389,40,513,36,"state"],[389,45,513,41],[389,46,513,42,"allowTouches"],[389,58,513,54],[389,61,514,12,"gestureEventHandler"],[389,80,514,31],[389,83,515,12,"undefined"],[389,92,515,21],[390,12,516,8,"onGestureHandlerStateChange"],[390,39,516,35],[390,41,516,37],[390,45,516,41],[390,46,516,42,"state"],[390,51,516,47],[390,52,516,48,"allowTouches"],[390,64,516,60],[390,67,517,12,"gestureStateEventHandler"],[390,91,517,36],[390,94,518,12,"undefined"],[391,10,519,6],[391,11,519,7],[392,10,521,6],[392,14,521,10],[392,15,521,11,"propsRef"],[392,23,521,19],[392,24,521,20,"current"],[392,31,521,27],[392,34,521,30,"events"],[392,40,521,36],[393,10,523,6],[393,14,523,10,"child"],[393,19,523,20],[393,22,523,23],[393,26,523,27],[394,10,524,6],[394,14,524,10],[395,12,525,8,"child"],[395,17,525,13],[395,20,525,16,"React"],[395,25,525,21],[395,26,525,22,"Children"],[395,34,525,30],[395,35,525,31,"only"],[395,39,525,35],[395,40,525,36],[395,44,525,40],[395,45,525,41,"props"],[395,50,525,46],[395,51,525,47,"children"],[395,59,525,55],[395,60,525,56],[396,10,526,6],[396,11,526,7],[396,12,526,8],[396,19,526,15,"e"],[396,20,526,16],[396,22,526,18],[397,12,527,8],[397,18,527,14],[397,22,527,18,"Error"],[397,27,527,23],[397,28,528,10],[397,32,528,10,"tagMessage"],[397,39,528,20],[397,40,528,20,"tagMessage"],[397,50,528,20],[397,52,529,12],[397,55,529,15,"name"],[397,59,529,19],[397,215,530,10],[397,216,531,8],[397,217,531,9],[398,10,532,6],[399,10,534,6],[399,14,534,10,"grandChildren"],[399,27,534,23],[399,30,534,26,"child"],[399,35,534,31],[399,36,534,32,"props"],[399,41,534,37],[399,42,534,38,"children"],[399,50,534,46],[400,10,552,6],[400,30,552,13,"React"],[400,35,552,18],[400,36,552,19,"cloneElement"],[400,48,552,31],[400,49,553,8,"child"],[400,54,553,13],[400,56,554,8],[401,12,555,10,"ref"],[401,15,555,13],[401,17,555,15],[401,21,555,19],[401,22,555,20,"refHandler"],[401,32,555,30],[402,12,556,10,"collapsable"],[402,23,556,21],[402,25,556,23],[402,30,556,28],[403,12,557,10],[403,16,557,14],[403,20,557,14,"isTestEnv"],[403,27,557,23],[403,28,557,23,"isTestEnv"],[403,37,557,23],[403,39,557,24],[403,40,557,25],[403,43,558,14],[404,14,559,16,"handlerType"],[404,25,559,27],[404,27,559,29,"name"],[404,31,559,33],[405,14,560,16,"handlerTag"],[405,24,560,26],[405,26,560,28],[405,30,560,32],[405,31,560,33,"handlerTag"],[405,41,560,43],[406,14,561,16,"enabled"],[406,21,561,23],[406,23,561,25],[406,27,561,29],[406,28,561,30,"props"],[406,33,561,35],[406,34,561,36,"enabled"],[407,12,562,14],[407,13,562,15],[407,16,563,14],[407,17,563,15],[407,18,563,16],[407,19,563,17],[408,12,564,10,"testID"],[408,18,564,16],[408,20,564,18],[408,24,564,22],[408,25,564,23,"props"],[408,30,564,28],[408,31,564,29,"testID"],[408,37,564,35],[408,41,564,39,"child"],[408,46,564,44],[408,47,564,45,"props"],[408,52,564,50],[408,53,564,51,"testID"],[408,59,564,57],[409,12,565,10],[409,15,565,13,"events"],[410,10,566,8],[410,11,566,9],[410,13,567,8,"grandChildren"],[410,26,568,6],[410,27,568,7],[411,8,569,4],[412,6,569,5],[413,4,569,5],[413,6,182,24,"React"],[413,11,182,29],[413,12,182,30,"Component"],[413,21,182,39],[414,4,182,8,"Handler"],[414,11,182,15],[414,12,186,11,"displayName"],[414,23,186,22],[414,26,186,25,"name"],[414,30,186,29],[415,4,182,8,"Handler"],[415,11,182,15],[415,12,187,11,"contextType"],[415,23,187,22],[415,26,187,25,"GestureHandlerRootViewContext"],[415,55,187,54],[415,56,187,54,"default"],[415,63,187,54],[416,4,571,2],[416,11,571,9,"Handler"],[416,18,571,16],[417,2,572,0],[418,0,572,1],[418,3]],"functionMap":{"names":["<global>","<anonymous>","UIManagerAny.setJSResponder","UIManagerAny.clearJSResponder","DeviceEventEmitter.addListener$argument_1","hasUnresolvedRefs","extract","refs.some$argument_0","createHandler","Handler","Handler#constructor","Handler#componentDidMount","setState$argument_0","ghQueueMicrotask$argument_0","Handler#componentDidUpdate","Handler#componentWillUnmount","Handler#onGestureHandlerEvent","Handler#onGestureHandlerStateChange","Handler#refHandler","Handler#createGestureHandler","Handler#attachGestureHandler","Handler#updateGestureHandler","Handler#update","Handler#setNativeProps","Handler#render"],"mappings":"AAA;sCC2F;GDE;0CCC;GDE;8BEE;CFG;gCGC;CHG;2DIO;GJE;AKM;kBCI;qBCI,8BD;GDC;CLE;eQqC;ECa;ICe;KDY;IEE;UPO;0BQC,yBR;WOE;yBEU;SFE;KFkB;IKE;KLM;IME;KNgB;oCOE;KPQ;0CQG;KRiB;yBSE;KTiB;mCUE;KVW;mCWE;4BnBmB;SmBuB;uBPW;OOE;KXC;mCYE;KZO;IaE;yBTW;SSE;KbW;IcG;KdQ;IeE;Kf4H;GDC;CRE"},"hasCjsExports":false},"type":"js/module"}]}