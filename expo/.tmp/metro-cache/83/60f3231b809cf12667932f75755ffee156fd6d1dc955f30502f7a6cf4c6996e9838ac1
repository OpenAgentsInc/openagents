{"dependencies":[],"output":[{"data":{"code":"__d(function (global, require, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {\n  function stringifyNode(node, custom) {\n    var type = node.type;\n    var value = node.value;\n    var buf;\n    var customResult;\n    if (custom && (customResult = custom(node)) !== undefined) {\n      return customResult;\n    } else if (type === \"word\" || type === \"space\") {\n      return value;\n    } else if (type === \"string\") {\n      buf = node.quote || \"\";\n      return buf + value + (node.unclosed ? \"\" : buf);\n    } else if (type === \"comment\") {\n      return \"/*\" + value + (node.unclosed ? \"\" : \"*/\");\n    } else if (type === \"div\") {\n      return (node.before || \"\") + value + (node.after || \"\");\n    } else if (Array.isArray(node.nodes)) {\n      buf = stringify(node.nodes, custom);\n      if (type !== \"function\") {\n        return buf;\n      }\n      return value + \"(\" + (node.before || \"\") + buf + (node.after || \"\") + (node.unclosed ? \"\" : \")\");\n    }\n    return value;\n  }\n  function stringify(nodes, custom) {\n    var result, i;\n    if (Array.isArray(nodes)) {\n      result = \"\";\n      for (i = nodes.length - 1; ~i; i -= 1) {\n        result = stringifyNode(nodes[i], custom) + result;\n      }\n      return result;\n    }\n    return stringifyNode(nodes, custom);\n  }\n  module.exports = stringify;\n});","lineCount":39,"map":[[2,2,1,0],[2,11,1,9,"stringifyNode"],[2,24,1,22,"stringifyNode"],[2,25,1,23,"node"],[2,29,1,27],[2,31,1,29,"custom"],[2,37,1,35],[2,39,1,37],[3,4,2,2],[3,8,2,6,"type"],[3,12,2,10],[3,15,2,13,"node"],[3,19,2,17],[3,20,2,18,"type"],[3,24,2,22],[4,4,3,2],[4,8,3,6,"value"],[4,13,3,11],[4,16,3,14,"node"],[4,20,3,18],[4,21,3,19,"value"],[4,26,3,24],[5,4,4,2],[5,8,4,6,"buf"],[5,11,4,9],[6,4,5,2],[6,8,5,6,"customResult"],[6,20,5,18],[7,4,7,2],[7,8,7,6,"custom"],[7,14,7,12],[7,18,7,16],[7,19,7,17,"customResult"],[7,31,7,29],[7,34,7,32,"custom"],[7,40,7,38],[7,41,7,39,"node"],[7,45,7,43],[7,46,7,44],[7,52,7,50,"undefined"],[7,61,7,59],[7,63,7,61],[8,6,8,4],[8,13,8,11,"customResult"],[8,25,8,23],[9,4,9,2],[9,5,9,3],[9,11,9,9],[9,15,9,13,"type"],[9,19,9,17],[9,24,9,22],[9,30,9,28],[9,34,9,32,"type"],[9,38,9,36],[9,43,9,41],[9,50,9,48],[9,52,9,50],[10,6,10,4],[10,13,10,11,"value"],[10,18,10,16],[11,4,11,2],[11,5,11,3],[11,11,11,9],[11,15,11,13,"type"],[11,19,11,17],[11,24,11,22],[11,32,11,30],[11,34,11,32],[12,6,12,4,"buf"],[12,9,12,7],[12,12,12,10,"node"],[12,16,12,14],[12,17,12,15,"quote"],[12,22,12,20],[12,26,12,24],[12,28,12,26],[13,6,13,4],[13,13,13,11,"buf"],[13,16,13,14],[13,19,13,17,"value"],[13,24,13,22],[13,28,13,26,"node"],[13,32,13,30],[13,33,13,31,"unclosed"],[13,41,13,39],[13,44,13,42],[13,46,13,44],[13,49,13,47,"buf"],[13,52,13,50],[13,53,13,51],[14,4,14,2],[14,5,14,3],[14,11,14,9],[14,15,14,13,"type"],[14,19,14,17],[14,24,14,22],[14,33,14,31],[14,35,14,33],[15,6,15,4],[15,13,15,11],[15,17,15,15],[15,20,15,18,"value"],[15,25,15,23],[15,29,15,27,"node"],[15,33,15,31],[15,34,15,32,"unclosed"],[15,42,15,40],[15,45,15,43],[15,47,15,45],[15,50,15,48],[15,54,15,52],[15,55,15,53],[16,4,16,2],[16,5,16,3],[16,11,16,9],[16,15,16,13,"type"],[16,19,16,17],[16,24,16,22],[16,29,16,27],[16,31,16,29],[17,6,17,4],[17,13,17,11],[17,14,17,12,"node"],[17,18,17,16],[17,19,17,17,"before"],[17,25,17,23],[17,29,17,27],[17,31,17,29],[17,35,17,33,"value"],[17,40,17,38],[17,44,17,42,"node"],[17,48,17,46],[17,49,17,47,"after"],[17,54,17,52],[17,58,17,56],[17,60,17,58],[17,61,17,59],[18,4,18,2],[18,5,18,3],[18,11,18,9],[18,15,18,13,"Array"],[18,20,18,18],[18,21,18,19,"isArray"],[18,28,18,26],[18,29,18,27,"node"],[18,33,18,31],[18,34,18,32,"nodes"],[18,39,18,37],[18,40,18,38],[18,42,18,40],[19,6,19,4,"buf"],[19,9,19,7],[19,12,19,10,"stringify"],[19,21,19,19],[19,22,19,20,"node"],[19,26,19,24],[19,27,19,25,"nodes"],[19,32,19,30],[19,34,19,32,"custom"],[19,40,19,38],[19,41,19,39],[20,6,20,4],[20,10,20,8,"type"],[20,14,20,12],[20,19,20,17],[20,29,20,27],[20,31,20,29],[21,8,21,6],[21,15,21,13,"buf"],[21,18,21,16],[22,6,22,4],[23,6,23,4],[23,13,24,6,"value"],[23,18,24,11],[23,21,25,6],[23,24,25,9],[23,28,26,7,"node"],[23,32,26,11],[23,33,26,12,"before"],[23,39,26,18],[23,43,26,22],[23,45,26,24],[23,46,26,25],[23,49,27,6,"buf"],[23,52,27,9],[23,56,28,7,"node"],[23,60,28,11],[23,61,28,12,"after"],[23,66,28,17],[23,70,28,21],[23,72,28,23],[23,73,28,24],[23,77,29,7,"node"],[23,81,29,11],[23,82,29,12,"unclosed"],[23,90,29,20],[23,93,29,23],[23,95,29,25],[23,98,29,28],[23,101,29,31],[23,102,29,32],[24,4,31,2],[25,4,32,2],[25,11,32,9,"value"],[25,16,32,14],[26,2,33,0],[27,2,35,0],[27,11,35,9,"stringify"],[27,20,35,18,"stringify"],[27,21,35,19,"nodes"],[27,26,35,24],[27,28,35,26,"custom"],[27,34,35,32],[27,36,35,34],[28,4,36,2],[28,8,36,6,"result"],[28,14,36,12],[28,16,36,14,"i"],[28,17,36,15],[29,4,38,2],[29,8,38,6,"Array"],[29,13,38,11],[29,14,38,12,"isArray"],[29,21,38,19],[29,22,38,20,"nodes"],[29,27,38,25],[29,28,38,26],[29,30,38,28],[30,6,39,4,"result"],[30,12,39,10],[30,15,39,13],[30,17,39,15],[31,6,40,4],[31,11,40,9,"i"],[31,12,40,10],[31,15,40,13,"nodes"],[31,20,40,18],[31,21,40,19,"length"],[31,27,40,25],[31,30,40,28],[31,31,40,29],[31,33,40,31],[31,34,40,32,"i"],[31,35,40,33],[31,37,40,35,"i"],[31,38,40,36],[31,42,40,40],[31,43,40,41],[31,45,40,43],[32,8,41,6,"result"],[32,14,41,12],[32,17,41,15,"stringifyNode"],[32,30,41,28],[32,31,41,29,"nodes"],[32,36,41,34],[32,37,41,35,"i"],[32,38,41,36],[32,39,41,37],[32,41,41,39,"custom"],[32,47,41,45],[32,48,41,46],[32,51,41,49,"result"],[32,57,41,55],[33,6,42,4],[34,6,43,4],[34,13,43,11,"result"],[34,19,43,17],[35,4,44,2],[36,4,45,2],[36,11,45,9,"stringifyNode"],[36,24,45,22],[36,25,45,23,"nodes"],[36,30,45,28],[36,32,45,30,"custom"],[36,38,45,36],[36,39,45,37],[37,2,46,0],[38,2,48,0,"module"],[38,8,48,6],[38,9,48,7,"exports"],[38,16,48,14],[38,19,48,17,"stringify"],[38,28,48,26],[39,0,48,27],[39,3]],"functionMap":{"names":["stringifyNode","<global>","stringify"],"mappings":"AAA;CCgC;ACE;CDW"},"hasCjsExports":true},"type":"js/module"}]}