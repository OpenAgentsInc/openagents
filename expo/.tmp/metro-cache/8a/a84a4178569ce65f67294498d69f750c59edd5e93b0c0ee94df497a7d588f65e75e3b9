{"dependencies":[{"name":"react","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":1,"column":0,"index":0},"end":{"line":1,"column":26,"index":26}}],"key":"RtGiGa+/H7VrI7GDQDLhO1UbpU8=","exportNames":["*"],"imports":1}},{"name":"react-native","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":2,"column":0,"index":27},"end":{"line":2,"column":42,"index":69}}],"key":"KyzuX10g6ixS9UfynhmjlvCIG3g=","exportNames":["*"],"imports":1}},{"name":"../../fabric/gamma/SplitViewHostNativeComponent","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":3,"column":0,"index":70},"end":{"line":3,"column":91,"index":161}}],"key":"FQfZPbu0UeV6nGoIWuBn02+qn8o=","exportNames":["*"],"imports":1}},{"name":"react/jsx-runtime","data":{"asyncType":null,"isESMImport":false,"locs":[],"key":"3suYSPX9nHbHZ1xNTsKXtKj0atE=","exportNames":["*"],"imports":1}}],"output":[{"data":{"code":"__d(function (global, require, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {\n  \"use strict\";\n\n  Object.defineProperty(exports, '__esModule', {\n    value: true\n  });\n  function _interopDefault(e) {\n    return e && e.__esModule ? e : {\n      default: e\n    };\n  }\n  Object.defineProperty(exports, \"default\", {\n    enumerable: true,\n    get: function () {\n      return _default;\n    }\n  });\n  var _react = require(_dependencyMap[0]);\n  var React = _interopDefault(_react);\n  var _reactNative = require(_dependencyMap[1]);\n  var _fabricGammaSplitViewHostNativeComponent = require(_dependencyMap[2]);\n  var SplitViewHostNativeComponent = _interopDefault(_fabricGammaSplitViewHostNativeComponent);\n  var _reactJsxRuntime = require(_dependencyMap[3]);\n  // According to the UIKit documentation: https://developer.apple.com/documentation/uikit/uisplitviewcontroller/displaymode-swift.enum\n  // Only specific pairs for displayMode - splitBehavior are valid and others may lead to unexpected results.\n  // Therefore, we're adding check on the JS side to return a feedback to the client when that pairing isn't valid.\n  // However, we're not blocking these props to be set on the native side, because it doesn't crash, just the result or transitions may not work as expected.\n  var displayModeForSplitViewCompatibilityMap = {\n    tile: ['secondaryOnly', 'oneBesideSecondary', 'twoBesideSecondary'],\n    overlay: ['secondaryOnly', 'oneOverSecondary', 'twoOverSecondary'],\n    displace: ['secondaryOnly', 'oneBesideSecondary', 'twoDisplaceSecondary'],\n    automatic: [] // placeholder for satisfying types; we'll handle it specially in logic\n  };\n  var isValidDisplayModeForSplitBehavior = (displayMode, splitBehavior) => {\n    if (splitBehavior === 'automatic') {\n      // for automatic we cannot easily verify the compatibility, because it depends on the system preference for display mode, therefore we're assuming that 'automatic' has only valid combinations\n      return true;\n    }\n    return displayModeForSplitViewCompatibilityMap[splitBehavior].includes(displayMode);\n  };\n\n  /**\n   * EXPERIMENTAL API, MIGHT CHANGE W/O ANY NOTICE\n   */\n  function SplitViewHost(props) {\n    var preferredDisplayMode = props.preferredDisplayMode,\n      preferredSplitBehavior = props.preferredSplitBehavior;\n    React.default.useEffect(() => {\n      if (preferredDisplayMode && preferredSplitBehavior) {\n        var isValid = isValidDisplayModeForSplitBehavior(preferredDisplayMode, preferredSplitBehavior);\n        if (!isValid) {\n          var validDisplayModes = displayModeForSplitViewCompatibilityMap[preferredSplitBehavior];\n          console.warn(`Invalid display mode \"${preferredDisplayMode}\" for split behavior \"${preferredSplitBehavior}\".` + `\\nValid modes for \"${preferredSplitBehavior}\" are: ${validDisplayModes.join(', ')}.`);\n        }\n      }\n    }, [preferredDisplayMode, preferredSplitBehavior]);\n    return /*#__PURE__*/(0, _reactJsxRuntime.jsx)(SplitViewHostNativeComponent.default, {\n      ...props,\n      style: styles.container,\n      children: props.children\n    });\n  }\n  var styles = _reactNative.StyleSheet.create({\n    container: {\n      flex: 1\n    }\n  });\n  var _default = SplitViewHost;\n});","lineCount":69,"map":[[12,2,75,0,"Object"],[12,8,75,0],[12,9,75,0,"defineProperty"],[12,23,75,0],[12,24,75,0,"exports"],[12,31,75,0],[13,4,75,0,"enumerable"],[13,14,75,0],[14,4,75,0,"get"],[14,7,75,0],[14,18,75,0,"get"],[14,19,75,0],[15,6,75,0],[15,13,75,0,"_default"],[15,21,75,0],[16,4,75,0],[17,2,75,0],[18,2,1,0],[18,6,1,0,"_react"],[18,12,1,0],[18,15,1,0,"require"],[18,22,1,0],[18,23,1,0,"_dependencyMap"],[18,37,1,0],[19,2,1,0],[19,6,1,0,"React"],[19,11,1,0],[19,14,1,0,"_interopDefault"],[19,29,1,0],[19,30,1,0,"_react"],[19,36,1,0],[20,2,2,0],[20,6,2,0,"_reactNative"],[20,18,2,0],[20,21,2,0,"require"],[20,28,2,0],[20,29,2,0,"_dependencyMap"],[20,43,2,0],[21,2,3,0],[21,6,3,0,"_fabricGammaSplitViewHostNativeComponent"],[21,46,3,0],[21,49,3,0,"require"],[21,56,3,0],[21,57,3,0,"_dependencyMap"],[21,71,3,0],[22,2,3,0],[22,6,3,0,"SplitViewHostNativeComponent"],[22,34,3,0],[22,37,3,0,"_interopDefault"],[22,52,3,0],[22,53,3,0,"_fabricGammaSplitViewHostNativeComponent"],[22,93,3,0],[23,2,3,91],[23,6,3,91,"_reactJsxRuntime"],[23,22,3,91],[23,25,3,91,"require"],[23,32,3,91],[23,33,3,91,"_dependencyMap"],[23,47,3,91],[24,2,10,0],[25,2,11,0],[26,2,12,0],[27,2,13,0],[28,2,14,0],[28,6,14,6,"displayModeForSplitViewCompatibilityMap"],[28,45,17,1],[28,48,17,4],[29,4,18,2,"tile"],[29,8,18,6],[29,10,18,8],[29,11,18,9],[29,26,18,24],[29,28,18,26],[29,48,18,46],[29,50,18,48],[29,70,18,68],[29,71,18,69],[30,4,19,2,"overlay"],[30,11,19,9],[30,13,19,11],[30,14,19,12],[30,29,19,27],[30,31,19,29],[30,49,19,47],[30,51,19,49],[30,69,19,67],[30,70,19,68],[31,4,20,2,"displace"],[31,12,20,10],[31,14,20,12],[31,15,20,13],[31,30,20,28],[31,32,20,30],[31,52,20,50],[31,54,20,52],[31,76,20,74],[31,77,20,75],[32,4,21,2,"automatic"],[32,13,21,11],[32,15,21,13],[32,17,21,15],[32,18,21,17],[33,2,22,0],[33,3,22,1],[34,2,24,0],[34,6,24,6,"isValidDisplayModeForSplitBehavior"],[34,40,24,40],[34,43,24,43,"isValidDisplayModeForSplitBehavior"],[34,44,25,2,"displayMode"],[34,55,25,35],[34,57,26,2,"splitBehavior"],[34,70,26,39],[34,75,27,5],[35,4,28,2],[35,8,28,6,"splitBehavior"],[35,21,28,19],[35,26,28,24],[35,37,28,35],[35,39,28,37],[36,6,29,4],[37,6,30,4],[37,13,30,11],[37,17,30,15],[38,4,31,2],[39,4,32,2],[39,11,32,9,"displayModeForSplitViewCompatibilityMap"],[39,50,32,48],[39,51,32,49,"splitBehavior"],[39,64,32,62],[39,65,32,63],[39,66,32,64,"includes"],[39,74,32,72],[39,75,33,4,"displayMode"],[39,86,34,2],[39,87,34,3],[40,2,35,0],[40,3,35,1],[42,2,37,0],[43,0,38,0],[44,0,39,0],[45,2,40,0],[45,11,40,9,"SplitViewHost"],[45,24,40,22,"SplitViewHost"],[45,25,40,23,"props"],[45,30,40,48],[45,32,40,50],[46,4,41,2],[46,8,41,10,"preferredDisplayMode"],[46,28,41,30],[46,31,41,59,"props"],[46,36,41,64],[46,37,41,10,"preferredDisplayMode"],[46,57,41,30],[47,6,41,32,"preferredSplitBehavior"],[47,28,41,54],[47,31,41,59,"props"],[47,36,41,64],[47,37,41,32,"preferredSplitBehavior"],[47,59,41,54],[48,4,43,2,"React"],[48,9,43,7],[48,10,43,7,"default"],[48,17,43,7],[48,18,43,8,"useEffect"],[48,27,43,17],[48,28,43,18],[48,34,43,24],[49,6,44,4],[49,10,44,8,"preferredDisplayMode"],[49,30,44,28],[49,34,44,32,"preferredSplitBehavior"],[49,56,44,54],[49,58,44,56],[50,8,45,6],[50,12,45,12,"isValid"],[50,19,45,19],[50,22,45,22,"isValidDisplayModeForSplitBehavior"],[50,56,45,56],[50,57,46,8,"preferredDisplayMode"],[50,77,46,28],[50,79,47,8,"preferredSplitBehavior"],[50,101,48,6],[50,102,48,7],[51,8,49,6],[51,12,49,10],[51,13,49,11,"isValid"],[51,20,49,18],[51,22,49,20],[52,10,50,8],[52,14,50,14,"validDisplayModes"],[52,31,50,31],[52,34,51,10,"displayModeForSplitViewCompatibilityMap"],[52,73,51,49],[52,74,51,50,"preferredSplitBehavior"],[52,96,51,72],[52,97,51,73],[53,10,52,8,"console"],[53,17,52,15],[53,18,52,16,"warn"],[53,22,52,20],[53,23,53,10],[53,48,53,35,"preferredDisplayMode"],[53,68,53,55],[53,93,53,80,"preferredSplitBehavior"],[53,115,53,102],[53,119,53,106],[53,122,54,12],[53,144,54,34,"preferredSplitBehavior"],[53,166,54,56],[53,176,54,66,"validDisplayModes"],[53,193,54,83],[53,194,54,84,"join"],[53,198,54,88],[53,199,55,14],[53,203,56,12],[53,204,56,13],[53,207,57,8],[53,208,57,9],[54,8,58,6],[55,6,59,4],[56,4,60,2],[56,5,60,3],[56,7,60,5],[56,8,60,6,"preferredDisplayMode"],[56,28,60,26],[56,30,60,28,"preferredSplitBehavior"],[56,52,60,50],[56,53,60,51],[56,54,60,52],[57,4,62,2],[57,24,63,4],[57,28,63,4,"_reactJsxRuntime"],[57,44,63,4],[57,45,63,4,"jsx"],[57,48,63,4],[57,50,63,5,"SplitViewHostNativeComponent"],[57,78,63,33],[57,79,63,33,"default"],[57,86,63,33],[58,6,63,33],[58,9,63,38,"props"],[58,14,63,43],[59,6,63,45,"style"],[59,11,63,50],[59,13,63,52,"styles"],[59,19,63,58],[59,20,63,59,"container"],[59,29,63,69],[60,6,63,69,"children"],[60,14,63,69],[60,16,64,7,"props"],[60,21,64,12],[60,22,64,13,"children"],[61,4,64,21],[61,5,65,34],[61,6,65,35],[62,2,67,0],[63,2,69,0],[63,6,69,6,"styles"],[63,12,69,12],[63,15,69,15,"StyleSheet"],[63,27,69,25],[63,28,69,25,"StyleSheet"],[63,38,69,25],[63,39,69,26,"create"],[63,45,69,32],[63,46,69,33],[64,4,70,2,"container"],[64,13,70,11],[64,15,70,13],[65,6,71,4,"flex"],[65,10,71,8],[65,12,71,10],[66,4,72,2],[67,2,73,0],[67,3,73,1],[67,4,73,2],[68,2,75,0],[68,6,75,0,"_default"],[68,14,75,0],[68,17,75,15,"SplitViewHost"],[68,30,75,28],[69,0,75,29],[69,3]],"functionMap":{"names":["<global>","isValidDisplayModeForSplitBehavior","SplitViewHost","React.useEffect$argument_0"],"mappings":"AAA;2CCuB;CDW;AEK;kBCG;GDiB;CFO"},"hasCjsExports":false},"type":"js/module"}]}