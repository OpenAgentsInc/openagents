{"dependencies":[{"name":"../../utils","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":1,"column":0,"index":0},"end":{"line":1,"column":55,"index":55}}],"key":"ByXat9lt9duIJLDmSeH0V+tRq1s=","exportNames":["*"],"imports":1}},{"name":"../../../mountRegistry","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":2,"column":0,"index":56},"end":{"line":2,"column":55,"index":111}}],"key":"ZDu7aL2iuT3Od7iyX13y9sY9XZQ=","exportNames":["*"],"imports":1}},{"name":"react","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":4,"column":0,"index":160},"end":{"line":4,"column":34,"index":194}}],"key":"RtGiGa+/H7VrI7GDQDLhO1UbpU8=","exportNames":["*"],"imports":1}}],"output":[{"data":{"code":"__d(function (global, require, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {\n  \"use strict\";\n\n  Object.defineProperty(exports, '__esModule', {\n    value: true\n  });\n  exports.useMountReactions = useMountReactions;\n  var _utils = require(_dependencyMap[0]);\n  var _mountRegistry = require(_dependencyMap[1]);\n  var _react = require(_dependencyMap[2]);\n  function shouldUpdateDetector(relation, gesture) {\n    if (relation === undefined) {\n      return false;\n    }\n    for (var tag of (0, _utils.transformIntoHandlerTags)(relation)) {\n      if (tag === gesture.handlerTag) {\n        return true;\n      }\n    }\n    return false;\n  }\n  function useMountReactions(updateDetector, state) {\n    (0, _react.useEffect)(() => {\n      return _mountRegistry.MountRegistry.addMountListener(gesture => {\n        // At this point the ref in the gesture config should be updated, so we can check if one of the gestures\n        // set in a relation with the gesture got mounted. If so, we need to update the detector to propagate\n        // the changes to the native side.\n        for (var attachedGesture of state.attachedGestures) {\n          var blocksHandlers = attachedGesture.config.blocksHandlers;\n          var requireToFail = attachedGesture.config.requireToFail;\n          var simultaneousWith = attachedGesture.config.simultaneousWith;\n          if (shouldUpdateDetector(blocksHandlers, gesture) || shouldUpdateDetector(requireToFail, gesture) || shouldUpdateDetector(simultaneousWith, gesture)) {\n            updateDetector();\n\n            // We can safely return here, if any other gestures should be updated, they will be by the above call\n            return;\n          }\n        }\n      });\n    }, [updateDetector, state]);\n  }\n});","lineCount":42,"map":[[7,2,24,0,"exports"],[7,9,24,0],[7,10,24,0,"useMountReactions"],[7,27,24,0],[7,30,24,0,"useMountReactions"],[7,47,24,0],[8,2,1,0],[8,6,1,0,"_utils"],[8,12,1,0],[8,15,1,0,"require"],[8,22,1,0],[8,23,1,0,"_dependencyMap"],[8,37,1,0],[9,2,2,0],[9,6,2,0,"_mountRegistry"],[9,20,2,0],[9,23,2,0,"require"],[9,30,2,0],[9,31,2,0,"_dependencyMap"],[9,45,2,0],[10,2,4,0],[10,6,4,0,"_react"],[10,12,4,0],[10,15,4,0,"require"],[10,22,4,0],[10,23,4,0,"_dependencyMap"],[10,37,4,0],[11,2,7,0],[11,11,7,9,"shouldUpdateDetector"],[11,31,7,29,"shouldUpdateDetector"],[11,32,8,2,"relation"],[11,40,8,36],[11,42,9,2,"gesture"],[11,49,9,33],[11,51,10,2],[12,4,11,2],[12,8,11,6,"relation"],[12,16,11,14],[12,21,11,19,"undefined"],[12,30,11,28],[12,32,11,30],[13,6,12,4],[13,13,12,11],[13,18,12,16],[14,4,13,2],[15,4,15,2],[15,9,15,7],[15,13,15,13,"tag"],[15,16,15,16],[15,20,15,20],[15,24,15,20,"transformIntoHandlerTags"],[15,30,15,44],[15,31,15,44,"transformIntoHandlerTags"],[15,55,15,44],[15,57,15,45,"relation"],[15,65,15,53],[15,66,15,54],[15,68,15,56],[16,6,16,4],[16,10,16,8,"tag"],[16,13,16,11],[16,18,16,16,"gesture"],[16,25,16,23],[16,26,16,24,"handlerTag"],[16,36,16,34],[16,38,16,36],[17,8,17,6],[17,15,17,13],[17,19,17,17],[18,6,18,4],[19,4,19,2],[20,4,21,2],[20,11,21,9],[20,16,21,14],[21,2,22,0],[22,2,24,7],[22,11,24,16,"useMountReactions"],[22,28,24,33,"useMountReactions"],[22,29,25,2,"updateDetector"],[22,43,25,28],[22,45,26,2,"state"],[22,50,26,29],[22,52,27,2],[23,4,28,2],[23,8,28,2,"useEffect"],[23,14,28,11],[23,15,28,11,"useEffect"],[23,24,28,11],[23,26,28,12],[23,32,28,18],[24,6,29,4],[24,13,29,11,"MountRegistry"],[24,27,29,24],[24,28,29,24,"MountRegistry"],[24,41,29,24],[24,42,29,25,"addMountListener"],[24,58,29,41],[24,59,29,43,"gesture"],[24,66,29,50],[24,70,29,55],[25,8,30,6],[26,8,31,6],[27,8,32,6],[28,8,33,6],[28,13,33,11],[28,17,33,17,"attachedGesture"],[28,32,33,32],[28,36,33,36,"state"],[28,41,33,41],[28,42,33,42,"attachedGestures"],[28,58,33,58],[28,60,33,60],[29,10,34,8],[29,14,34,14,"blocksHandlers"],[29,28,34,28],[29,31,34,31,"attachedGesture"],[29,46,34,46],[29,47,34,47,"config"],[29,53,34,53],[29,54,34,54,"blocksHandlers"],[29,68,34,68],[30,10,35,8],[30,14,35,14,"requireToFail"],[30,27,35,27],[30,30,35,30,"attachedGesture"],[30,45,35,45],[30,46,35,46,"config"],[30,52,35,52],[30,53,35,53,"requireToFail"],[30,66,35,66],[31,10,36,8],[31,14,36,14,"simultaneousWith"],[31,30,36,30],[31,33,36,33,"attachedGesture"],[31,48,36,48],[31,49,36,49,"config"],[31,55,36,55],[31,56,36,56,"simultaneousWith"],[31,72,36,72],[32,10,38,8],[32,14,39,10,"shouldUpdateDetector"],[32,34,39,30],[32,35,39,31,"blocksHandlers"],[32,49,39,45],[32,51,39,47,"gesture"],[32,58,39,54],[32,59,39,55],[32,63,40,10,"shouldUpdateDetector"],[32,83,40,30],[32,84,40,31,"requireToFail"],[32,97,40,44],[32,99,40,46,"gesture"],[32,106,40,53],[32,107,40,54],[32,111,41,10,"shouldUpdateDetector"],[32,131,41,30],[32,132,41,31,"simultaneousWith"],[32,148,41,47],[32,150,41,49,"gesture"],[32,157,41,56],[32,158,41,57],[32,160,42,10],[33,12,43,10,"updateDetector"],[33,26,43,24],[33,27,43,25],[33,28,43,26],[35,12,45,10],[36,12,46,10],[37,10,47,8],[38,8,48,6],[39,6,49,4],[39,7,49,5],[39,8,49,6],[40,4,50,2],[40,5,50,3],[40,7,50,5],[40,8,50,6,"updateDetector"],[40,22,50,20],[40,24,50,22,"state"],[40,29,50,27],[40,30,50,28],[40,31,50,29],[41,2,51,0],[42,0,51,1],[42,3]],"functionMap":{"names":["<global>","shouldUpdateDetector","useMountReactions","useEffect$argument_0","MountRegistry.addMountListener$argument_0"],"mappings":"AAA;ACM;CDe;OEE;YCI;0CCC;KDoB;GDC;CFC"},"hasCjsExports":false},"type":"js/module"}]}