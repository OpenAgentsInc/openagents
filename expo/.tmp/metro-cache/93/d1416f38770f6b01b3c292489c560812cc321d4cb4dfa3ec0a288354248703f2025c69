{"dependencies":[],"output":[{"data":{"code":"__d(function (global, require, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {\n  /**\n   * Copyright (c) 2013-present, Facebook, Inc.\n   *\n   * This source code is licensed under the MIT license found in the\n   * LICENSE file in the root directory of this source tree.\n   */\n\n  'use strict';\n\n  /**\n   * Use invariant() to assert state which your program assumes to be true.\n   *\n   * Provide sprintf-style format (only %s is supported) and arguments\n   * to provide information about what broke and what you were\n   * expecting.\n   *\n   * The invariant message will be stripped in production, but the invariant\n   * will remain to ensure logic does not differ in production.\n   */\n  var invariant = function (condition, format, a, b, c, d, e, f) {\n    if (!condition) {\n      var error;\n      if (format === undefined) {\n        error = new Error(\"Minified exception occurred; use the non-minified dev environment for the full error message and additional helpful warnings.\");\n      } else {\n        var args = [a, b, c, d, e, f];\n        var argIndex = 0;\n        error = new Error(format.replace(/%s/g, function () {\n          return args[argIndex++];\n        }));\n        error.name = 'Invariant Violation';\n      }\n      error.framesToPop = 1; // we don't care about invariant's own frame\n      throw error;\n    }\n  };\n  module.exports = invariant;\n});","lineCount":39,"map":[[2,2,1,0],[3,0,2,0],[4,0,3,0],[5,0,4,0],[6,0,5,0],[7,0,6,0],[9,2,8,0],[9,14,8,12],[11,2,10,0],[12,0,11,0],[13,0,12,0],[14,0,13,0],[15,0,14,0],[16,0,15,0],[17,0,16,0],[18,0,17,0],[19,0,18,0],[20,0,19,0],[21,2,21,0],[21,6,21,4,"invariant"],[21,15,21,13],[21,18,21,16],[21,27,21,16,"invariant"],[21,28,21,25,"condition"],[21,37,21,34],[21,39,21,36,"format"],[21,45,21,42],[21,47,21,44,"a"],[21,48,21,45],[21,50,21,47,"b"],[21,51,21,48],[21,53,21,50,"c"],[21,54,21,51],[21,56,21,53,"d"],[21,57,21,54],[21,59,21,56,"e"],[21,60,21,57],[21,62,21,59,"f"],[21,63,21,60],[21,65,21,62],[22,4,28,2],[22,8,28,6],[22,9,28,7,"condition"],[22,18,28,16],[22,20,28,18],[23,6,29,4],[23,10,29,8,"error"],[23,15,29,13],[24,6,30,4],[24,10,30,8,"format"],[24,16,30,14],[24,21,30,19,"undefined"],[24,30,30,28],[24,32,30,30],[25,8,31,6,"error"],[25,13,31,11],[25,16,31,14],[25,20,31,18,"Error"],[25,25,31,23],[25,153,34,6],[25,154,34,7],[26,6,35,4],[26,7,35,5],[26,13,35,11],[27,8,36,6],[27,12,36,10,"args"],[27,16,36,14],[27,19,36,17],[27,20,36,18,"a"],[27,21,36,19],[27,23,36,21,"b"],[27,24,36,22],[27,26,36,24,"c"],[27,27,36,25],[27,29,36,27,"d"],[27,30,36,28],[27,32,36,30,"e"],[27,33,36,31],[27,35,36,33,"f"],[27,36,36,34],[27,37,36,35],[28,8,37,6],[28,12,37,10,"argIndex"],[28,20,37,18],[28,23,37,21],[28,24,37,22],[29,8,38,6,"error"],[29,13,38,11],[29,16,38,14],[29,20,38,18,"Error"],[29,25,38,23],[29,26,39,8,"format"],[29,32,39,14],[29,33,39,15,"replace"],[29,40,39,22],[29,41,39,23],[29,46,39,28],[29,48,39,30],[29,60,39,41],[30,10,39,43],[30,17,39,50,"args"],[30,21,39,54],[30,22,39,55,"argIndex"],[30,30,39,63],[30,32,39,65],[30,33,39,66],[31,8,39,68],[31,9,39,69],[31,10,40,6],[31,11,40,7],[32,8,41,6,"error"],[32,13,41,11],[32,14,41,12,"name"],[32,18,41,16],[32,21,41,19],[32,42,41,40],[33,6,42,4],[34,6,44,4,"error"],[34,11,44,9],[34,12,44,10,"framesToPop"],[34,23,44,21],[34,26,44,24],[34,27,44,25],[34,28,44,26],[34,29,44,27],[35,6,45,4],[35,12,45,10,"error"],[35,17,45,15],[36,4,46,2],[37,2,47,0],[37,3,47,1],[38,2,49,0,"module"],[38,8,49,6],[38,9,49,7,"exports"],[38,16,49,14],[38,19,49,17,"invariant"],[38,28,49,26],[39,0,49,27],[39,3]],"functionMap":{"names":["<global>","invariant","format.replace$argument_1"],"mappings":"AAA;gBCoB;8BCkB,uCD;CDQ"},"hasCjsExports":true},"type":"js/module"}]}