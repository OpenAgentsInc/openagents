{"dependencies":[{"name":"react/jsx-runtime","data":{"asyncType":null,"isESMImport":false,"locs":[],"key":"3suYSPX9nHbHZ1xNTsKXtKj0atE=","exportNames":["*"],"imports":1}},{"name":"@react-navigation/native","data":{"asyncType":null,"isESMImport":false,"locs":[{"start":{"line":7,"column":17,"index":256},"end":{"line":7,"column":52,"index":291}}],"key":"uE+cRVNnMKkS9OYKR5fpRqPul5s=","exportNames":["*"],"imports":1}},{"name":"react","data":{"asyncType":null,"isESMImport":false,"locs":[{"start":{"line":8,"column":32,"index":325},"end":{"line":8,"column":48,"index":341}}],"key":"XN65eZP/QkNMzaBAXbG/zPyidpY=","exportNames":["*"],"imports":1}},{"name":"./ExpoHeadModule","data":{"asyncType":null,"isESMImport":false,"locs":[{"start":{"line":9,"column":25,"index":369},"end":{"line":9,"column":52,"index":396}}],"key":"ndiRcMDu3/NRmP7i5zWTqKXhhyw=","exportNames":["*"],"imports":1}},{"name":"./url","data":{"asyncType":null,"isESMImport":false,"locs":[{"start":{"line":10,"column":14,"index":412},"end":{"line":10,"column":30,"index":428}}],"key":"uPuCk1oMCGEQGPes4SyVoRoPRJo=","exportNames":["*"],"imports":1}},{"name":"../hooks","data":{"asyncType":null,"isESMImport":false,"locs":[{"start":{"line":11,"column":16,"index":446},"end":{"line":11,"column":35,"index":465}}],"key":"v2Yuhjr6LxgVylgzuY6yqo/x8nY=","exportNames":["*"],"imports":1}}],"output":[{"data":{"code":"__d(function (global, require, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {\n  \"use strict\";\n\n  var _reactJsxRuntime = require(_dependencyMap[0]);\n  var __importDefault = this && this.__importDefault || function (mod) {\n    return mod && mod.__esModule ? mod : {\n      \"default\": mod\n    };\n  };\n  Object.defineProperty(exports, \"__esModule\", {\n    value: true\n  });\n  exports.Head = undefined;\n  var native_1 = require(_dependencyMap[1]);\n  var react_1 = __importDefault(require(_dependencyMap[2]));\n  var ExpoHeadModule_1 = require(_dependencyMap[3]);\n  var url_1 = require(_dependencyMap[4]);\n  var hooks_1 = require(_dependencyMap[5]);\n  function urlToId(url) {\n    return url.replace(/[^a-zA-Z0-9]/g, '-');\n  }\n  function getLastSegment(path) {\n    // Remove the extension\n    var lastSegment = path.split('/').pop() ?? '';\n    return lastSegment.replace(/\\.[^/.]+$/, '').split('?')[0];\n  }\n  // TODO: Use Head Provider to collect all props so only one Head is rendered for a given route.\n  function useAddressableLink() {\n    var pathname = (0, hooks_1.useUnstableGlobalHref)();\n    var params = (0, hooks_1.useLocalSearchParams)();\n    var url = (0, url_1.getStaticUrlFromExpoRouter)(pathname);\n    return {\n      url,\n      pathname,\n      params\n    };\n  }\n  function useMetaChildren(children) {\n    return react_1.default.useMemo(() => {\n      var renderableChildren = [];\n      var metaChildren = [];\n      react_1.default.Children.forEach(children, child => {\n        if (!react_1.default.isValidElement(child)) {\n          return;\n        }\n        if (typeof child.type === 'string') {\n          metaChildren.push(child);\n        } else {\n          renderableChildren.push(child);\n        }\n      });\n      return {\n        children: renderableChildren,\n        metaChildren\n      };\n    }, [children]);\n  }\n  function serializedMetaChildren(meta) {\n    var validMeta = meta.filter(child => child.type === 'meta' || child.type === 'title');\n    return validMeta.map(child => {\n      if (child.type === 'title') {\n        return {\n          type: 'title',\n          props: {\n            children: child.props && typeof child.props === 'object' && 'children' in child.props && typeof child.props.children === 'string' ? child.props.children : undefined\n          }\n        };\n      }\n      return {\n        type: 'meta',\n        props: {\n          property: child.props && typeof child.props === 'object' && 'property' in child.props && typeof child.props.property === 'string' ? child.props.property : undefined,\n          content: child.props && typeof child.props === 'object' && 'content' in child.props && typeof child.props.content === 'string' ? child.props.content : undefined\n        }\n      };\n    });\n  }\n  function useActivityFromMetaChildren(meta) {\n    var _useAddressableLink = useAddressableLink(),\n      href = _useAddressableLink.url,\n      pathname = _useAddressableLink.pathname;\n    var previousMeta = react_1.default.useRef([]);\n    var cachedActivity = react_1.default.useRef({});\n    var sortedMeta = react_1.default.useMemo(() => serializedMetaChildren(meta), [meta]);\n    var url = react_1.default.useMemo(() => {\n      var urlMeta = sortedMeta.find(child => child.type === 'meta' && child.props.property === 'og:url');\n      if (urlMeta) {\n        // Support =`/foo/bar` -> `https://example.com/foo/bar`\n        if (urlMeta.props.content?.startsWith('/')) {\n          return (0, url_1.getStaticUrlFromExpoRouter)(urlMeta.props.content);\n        }\n        return urlMeta.props.content;\n      }\n      return href;\n    }, [sortedMeta, href]);\n    var title = react_1.default.useMemo(() => {\n      var titleTag = sortedMeta.find(child => child.type === 'title');\n      if (titleTag) {\n        return titleTag.props.children ?? '';\n      }\n      var titleMeta = sortedMeta.find(child => child.type === 'meta' && child.props.property === 'og:title');\n      if (titleMeta) {\n        return titleMeta.props.content ?? '';\n      }\n      return getLastSegment(pathname);\n    }, [sortedMeta, pathname]);\n    var activity = react_1.default.useMemo(() => {\n      if (!!previousMeta.current && !!cachedActivity.current && deepObjectCompare(previousMeta.current, sortedMeta)) {\n        return cachedActivity.current;\n      }\n      previousMeta.current = sortedMeta;\n      var userActivity = {};\n      sortedMeta.forEach(child => {\n        if (\n        // <meta />\n        child.type === 'meta') {\n          var _child$props = child.props,\n            property = _child$props.property,\n            content = _child$props.content;\n          switch (property) {\n            case 'og:description':\n              userActivity.description = content;\n              break;\n            // Custom properties\n            case 'expo:handoff':\n              userActivity.isEligibleForHandoff = isTruthy(content);\n              break;\n            case 'expo:spotlight':\n              userActivity.isEligibleForSearch = isTruthy(content);\n              break;\n          }\n          // // <meta name=\"keywords\" content=\"foo,bar,baz\" />\n          // if ([\"keywords\"].includes(name)) {\n          //   userActivity.keywords = Array.isArray(content)\n          //     ? content\n          //     : content.split(\",\");\n          // }\n        }\n      });\n      cachedActivity.current = userActivity;\n      return userActivity;\n    }, [meta, pathname, href]);\n    var parsedActivity = {\n      keywords: [title],\n      ...activity,\n      title,\n      webpageURL: url,\n      activityType: ExpoHeadModule_1.ExpoHead.activities.INDEXED_ROUTE,\n      userInfo: {\n        // TODO: This may need to be  versioned in the future, e.g. `_v1` if we change the format.\n        href\n      }\n    };\n    return parsedActivity;\n  }\n  function isTruthy(value) {\n    return [true, 'true'].includes(value);\n  }\n  function HeadNative(props) {\n    var isFocused = (0, native_1.useIsFocused)();\n    if (!isFocused) {\n      return /*#__PURE__*/_reactJsxRuntime.jsx(UnfocusedHead, {});\n    }\n    return /*#__PURE__*/_reactJsxRuntime.jsx(FocusedHead, {\n      ...props\n    });\n  }\n  function UnfocusedHead(props) {\n    var _useMetaChildren = useMetaChildren(props.children),\n      children = _useMetaChildren.children;\n    return /*#__PURE__*/_reactJsxRuntime.jsx(_reactJsxRuntime.Fragment, {\n      children: children\n    });\n  }\n  function FocusedHead(props) {\n    var _useMetaChildren2 = useMetaChildren(props.children),\n      metaChildren = _useMetaChildren2.metaChildren,\n      children = _useMetaChildren2.children;\n    var activity = useActivityFromMetaChildren(metaChildren);\n    useRegisterCurrentActivity(activity);\n    return /*#__PURE__*/_reactJsxRuntime.jsx(_reactJsxRuntime.Fragment, {\n      children: children\n    });\n  }\n  // segments => activity\n  var activities = new Map();\n  function useRegisterCurrentActivity(activity) {\n    // ID is tied to Expo Router and agnostic of URLs to ensure dynamic parameters are not considered.\n    // Using all segments ensures that cascading routes are considered.\n    var activityId = urlToId((0, hooks_1.usePathname)() || '/');\n    var cascadingId = urlToId((0, hooks_1.useSegments)().join('-') || '-');\n    var activityIds = Array.from(activities.keys());\n    var cascadingActivity = react_1.default.useMemo(() => {\n      // Get all nested activities together, then update the id to match the current pathname.\n      // This enables cases like `/user/[name]/post/[id]` to match all nesting, while still having a URL-specific ID, i.e. `/user/evanbacon/post/123`\n      var cascadingActivity = activities.has(cascadingId) ? {\n        ...activities.get(cascadingId),\n        ...activity,\n        id: activityId\n      } : {\n        ...activity,\n        id: activityId\n      };\n      activities.set(cascadingId, cascadingActivity);\n      return cascadingActivity;\n    }, [cascadingId, activityId, activity, activityIds]);\n    var previousActivity = react_1.default.useRef(null);\n    react_1.default.useEffect(() => {\n      if (!cascadingActivity) {\n        return () => {};\n      }\n      if (!!previousActivity.current && deepObjectCompare(previousActivity.current, cascadingActivity)) {\n        return () => {};\n      }\n      previousActivity.current = cascadingActivity;\n      if (!cascadingActivity.id) {\n        throw new Error('Activity must have an ID');\n      }\n      // If no features are enabled, then skip registering the activity\n      if (cascadingActivity.isEligibleForHandoff || cascadingActivity.isEligibleForSearch) {\n        ExpoHeadModule_1.ExpoHead?.createActivity(cascadingActivity);\n      }\n      return () => {};\n    }, [cascadingActivity]);\n    react_1.default.useEffect(() => {\n      return () => {\n        if (activityId) {\n          ExpoHeadModule_1.ExpoHead?.suspendActivity(activityId);\n        }\n      };\n    }, [activityId]);\n  }\n  function deepObjectCompare(a, b) {\n    if (typeof a !== typeof b) {\n      return false;\n    }\n    if (typeof a === 'object') {\n      if (Array.isArray(a) !== Array.isArray(b)) {\n        return false;\n      }\n      if (Array.isArray(a)) {\n        if (a.length !== b.length) {\n          return false;\n        }\n        return a.every((item, index) => deepObjectCompare(item, b[index]));\n      }\n      // handle null\n      if (a === null || b === null) {\n        return a === b;\n      }\n      var aKeys = Object.keys(a);\n      var bKeys = Object.keys(b);\n      if (aKeys.length !== bKeys.length) {\n        return false;\n      }\n      return aKeys.every(key => deepObjectCompare(a[key], b[key]));\n    }\n    return a === b;\n  }\n  HeadNative.Provider = react_1.default.Fragment;\n  function HeadShim(props) {\n    return null;\n  }\n  HeadShim.Provider = react_1.default.Fragment;\n  // Native Head is only enabled in bare iOS apps.\n  exports.Head = ExpoHeadModule_1.ExpoHead ? HeadNative : HeadShim;\n});","lineCount":267,"map":[[2,2,1,0],[2,14,1,12],[4,2,1,13],[4,6,1,13,"_reactJsxRuntime"],[4,22,1,13],[4,25,1,13,"require"],[4,32,1,13],[4,33,1,13,"_dependencyMap"],[4,47,1,13],[5,2,2,0],[5,6,2,4,"__importDefault"],[5,21,2,19],[5,24,2,23],[5,28,2,27],[5,32,2,31],[5,36,2,35],[5,37,2,36,"__importDefault"],[5,52,2,51],[5,56,2,56],[5,66,2,66,"mod"],[5,69,2,69],[5,71,2,71],[6,4,3,4],[6,11,3,12,"mod"],[6,14,3,15],[6,18,3,19,"mod"],[6,21,3,22],[6,22,3,23,"__esModule"],[6,32,3,33],[6,35,3,37,"mod"],[6,38,3,40],[6,41,3,43],[7,6,3,45],[7,15,3,54],[7,17,3,56,"mod"],[8,4,3,60],[8,5,3,61],[9,2,4,0],[9,3,4,1],[10,2,5,0,"Object"],[10,8,5,6],[10,9,5,7,"defineProperty"],[10,23,5,21],[10,24,5,22,"exports"],[10,31,5,29],[10,33,5,31],[10,45,5,43],[10,47,5,45],[11,4,5,47,"value"],[11,9,5,52],[11,11,5,54],[12,2,5,59],[12,3,5,60],[12,4,5,61],[13,2,6,0,"exports"],[13,9,6,7],[13,10,6,8,"Head"],[13,14,6,12],[13,17,6,12,"undefined"],[13,26,6,21],[14,2,7,0],[14,6,7,6,"native_1"],[14,14,7,14],[14,17,7,17,"require"],[14,24,7,24],[14,25,7,24,"_dependencyMap"],[14,39,7,24],[14,42,7,51],[14,43,7,52],[15,2,8,0],[15,6,8,6,"react_1"],[15,13,8,13],[15,16,8,16,"__importDefault"],[15,31,8,31],[15,32,8,32,"require"],[15,39,8,39],[15,40,8,39,"_dependencyMap"],[15,54,8,39],[15,57,8,47],[15,58,8,48],[15,59,8,49],[16,2,9,0],[16,6,9,6,"ExpoHeadModule_1"],[16,22,9,22],[16,25,9,25,"require"],[16,32,9,32],[16,33,9,32,"_dependencyMap"],[16,47,9,32],[16,50,9,51],[16,51,9,52],[17,2,10,0],[17,6,10,6,"url_1"],[17,11,10,11],[17,14,10,14,"require"],[17,21,10,21],[17,22,10,21,"_dependencyMap"],[17,36,10,21],[17,39,10,29],[17,40,10,30],[18,2,11,0],[18,6,11,6,"hooks_1"],[18,13,11,13],[18,16,11,16,"require"],[18,23,11,23],[18,24,11,23,"_dependencyMap"],[18,38,11,23],[18,41,11,34],[18,42,11,35],[19,2,12,0],[19,11,12,9,"urlToId"],[19,18,12,16,"urlToId"],[19,19,12,17,"url"],[19,22,12,20],[19,24,12,22],[20,4,13,4],[20,11,13,11,"url"],[20,14,13,14],[20,15,13,15,"replace"],[20,22,13,22],[20,23,13,23],[20,38,13,38],[20,40,13,40],[20,43,13,43],[20,44,13,44],[21,2,14,0],[22,2,15,0],[22,11,15,9,"getLastSegment"],[22,25,15,23,"getLastSegment"],[22,26,15,24,"path"],[22,30,15,28],[22,32,15,30],[23,4,16,4],[24,4,17,4],[24,8,17,10,"lastSegment"],[24,19,17,21],[24,22,17,24,"path"],[24,26,17,28],[24,27,17,29,"split"],[24,32,17,34],[24,33,17,35],[24,36,17,38],[24,37,17,39],[24,38,17,40,"pop"],[24,41,17,43],[24,42,17,44],[24,43,17,45],[24,47,17,49],[24,49,17,51],[25,4,18,4],[25,11,18,11,"lastSegment"],[25,22,18,22],[25,23,18,23,"replace"],[25,30,18,30],[25,31,18,31],[25,42,18,42],[25,44,18,44],[25,46,18,46],[25,47,18,47],[25,48,18,48,"split"],[25,53,18,53],[25,54,18,54],[25,57,18,57],[25,58,18,58],[25,59,18,59],[25,60,18,60],[25,61,18,61],[26,2,19,0],[27,2,20,0],[28,2,21,0],[28,11,21,9,"useAddressableLink"],[28,29,21,27,"useAddressableLink"],[28,30,21,27],[28,32,21,30],[29,4,22,4],[29,8,22,10,"pathname"],[29,16,22,18],[29,19,22,21],[29,20,22,22],[29,21,22,23],[29,23,22,25,"hooks_1"],[29,30,22,32],[29,31,22,33,"useUnstableGlobalHref"],[29,52,22,54],[29,54,22,56],[29,55,22,57],[30,4,23,4],[30,8,23,10,"params"],[30,14,23,16],[30,17,23,19],[30,18,23,20],[30,19,23,21],[30,21,23,23,"hooks_1"],[30,28,23,30],[30,29,23,31,"useLocalSearchParams"],[30,49,23,51],[30,51,23,53],[30,52,23,54],[31,4,24,4],[31,8,24,10,"url"],[31,11,24,13],[31,14,24,16],[31,15,24,17],[31,16,24,18],[31,18,24,20,"url_1"],[31,23,24,25],[31,24,24,26,"getStaticUrlFromExpoRouter"],[31,50,24,52],[31,52,24,54,"pathname"],[31,60,24,62],[31,61,24,63],[32,4,25,4],[32,11,25,11],[33,6,25,13,"url"],[33,9,25,16],[34,6,25,18,"pathname"],[34,14,25,26],[35,6,25,28,"params"],[36,4,25,35],[36,5,25,36],[37,2,26,0],[38,2,27,0],[38,11,27,9,"useMetaChildren"],[38,26,27,24,"useMetaChildren"],[38,27,27,25,"children"],[38,35,27,33],[38,37,27,35],[39,4,28,4],[39,11,28,11,"react_1"],[39,18,28,18],[39,19,28,19,"default"],[39,26,28,26],[39,27,28,27,"useMemo"],[39,34,28,34],[39,35,28,35],[39,41,28,41],[40,6,29,8],[40,10,29,14,"renderableChildren"],[40,28,29,32],[40,31,29,35],[40,33,29,37],[41,6,30,8],[41,10,30,14,"metaChildren"],[41,22,30,26],[41,25,30,29],[41,27,30,31],[42,6,31,8,"react_1"],[42,13,31,15],[42,14,31,16,"default"],[42,21,31,23],[42,22,31,24,"Children"],[42,30,31,32],[42,31,31,33,"forEach"],[42,38,31,40],[42,39,31,41,"children"],[42,47,31,49],[42,49,31,52,"child"],[42,54,31,57],[42,58,31,62],[43,8,32,12],[43,12,32,16],[43,13,32,17,"react_1"],[43,20,32,24],[43,21,32,25,"default"],[43,28,32,32],[43,29,32,33,"isValidElement"],[43,43,32,47],[43,44,32,48,"child"],[43,49,32,53],[43,50,32,54],[43,52,32,56],[44,10,33,16],[45,8,34,12],[46,8,35,12],[46,12,35,16],[46,19,35,23,"child"],[46,24,35,28],[46,25,35,29,"type"],[46,29,35,33],[46,34,35,38],[46,42,35,46],[46,44,35,48],[47,10,36,16,"metaChildren"],[47,22,36,28],[47,23,36,29,"push"],[47,27,36,33],[47,28,36,34,"child"],[47,33,36,39],[47,34,36,40],[48,8,37,12],[48,9,37,13],[48,15,38,17],[49,10,39,16,"renderableChildren"],[49,28,39,34],[49,29,39,35,"push"],[49,33,39,39],[49,34,39,40,"child"],[49,39,39,45],[49,40,39,46],[50,8,40,12],[51,6,41,8],[51,7,41,9],[51,8,41,10],[52,6,42,8],[52,13,42,15],[53,8,42,17,"children"],[53,16,42,25],[53,18,42,27,"renderableChildren"],[53,36,42,45],[54,8,42,47,"metaChildren"],[55,6,42,60],[55,7,42,61],[56,4,43,4],[56,5,43,5],[56,7,43,7],[56,8,43,8,"children"],[56,16,43,16],[56,17,43,17],[56,18,43,18],[57,2,44,0],[58,2,45,0],[58,11,45,9,"serializedMetaChildren"],[58,33,45,31,"serializedMetaChildren"],[58,34,45,32,"meta"],[58,38,45,36],[58,40,45,38],[59,4,46,4],[59,8,46,10,"validMeta"],[59,17,46,19],[59,20,46,22,"meta"],[59,24,46,26],[59,25,46,27,"filter"],[59,31,46,33],[59,32,46,35,"child"],[59,37,46,40],[59,41,46,45,"child"],[59,46,46,50],[59,47,46,51,"type"],[59,51,46,55],[59,56,46,60],[59,62,46,66],[59,66,46,70,"child"],[59,71,46,75],[59,72,46,76,"type"],[59,76,46,80],[59,81,46,85],[59,88,46,92],[59,89,46,93],[60,4,47,4],[60,11,47,11,"validMeta"],[60,20,47,20],[60,21,47,21,"map"],[60,24,47,24],[60,25,47,26,"child"],[60,30,47,31],[60,34,47,36],[61,6,48,8],[61,10,48,12,"child"],[61,15,48,17],[61,16,48,18,"type"],[61,20,48,22],[61,25,48,27],[61,32,48,34],[61,34,48,36],[62,8,49,12],[62,15,49,19],[63,10,50,16,"type"],[63,14,50,20],[63,16,50,22],[63,23,50,29],[64,10,51,16,"props"],[64,15,51,21],[64,17,51,23],[65,12,52,20,"children"],[65,20,52,28],[65,22,52,30,"child"],[65,27,52,35],[65,28,52,36,"props"],[65,33,52,41],[65,37,53,24],[65,44,53,31,"child"],[65,49,53,36],[65,50,53,37,"props"],[65,55,53,42],[65,60,53,47],[65,68,53,55],[65,72,54,24],[65,82,54,34],[65,86,54,38,"child"],[65,91,54,43],[65,92,54,44,"props"],[65,97,54,49],[65,101,55,24],[65,108,55,31,"child"],[65,113,55,36],[65,114,55,37,"props"],[65,119,55,42],[65,120,55,43,"children"],[65,128,55,51],[65,133,55,56],[65,141,55,64],[65,144,56,26,"child"],[65,149,56,31],[65,150,56,32,"props"],[65,155,56,37],[65,156,56,38,"children"],[65,164,56,46],[65,167,57,26,"undefined"],[66,10,58,16],[67,8,59,12],[67,9,59,13],[68,6,60,8],[69,6,61,8],[69,13,61,15],[70,8,62,12,"type"],[70,12,62,16],[70,14,62,18],[70,20,62,24],[71,8,63,12,"props"],[71,13,63,17],[71,15,63,19],[72,10,64,16,"property"],[72,18,64,24],[72,20,64,26,"child"],[72,25,64,31],[72,26,64,32,"props"],[72,31,64,37],[72,35,65,20],[72,42,65,27,"child"],[72,47,65,32],[72,48,65,33,"props"],[72,53,65,38],[72,58,65,43],[72,66,65,51],[72,70,66,20],[72,80,66,30],[72,84,66,34,"child"],[72,89,66,39],[72,90,66,40,"props"],[72,95,66,45],[72,99,67,20],[72,106,67,27,"child"],[72,111,67,32],[72,112,67,33,"props"],[72,117,67,38],[72,118,67,39,"property"],[72,126,67,47],[72,131,67,52],[72,139,67,60],[72,142,68,22,"child"],[72,147,68,27],[72,148,68,28,"props"],[72,153,68,33],[72,154,68,34,"property"],[72,162,68,42],[72,165,69,22,"undefined"],[72,174,69,31],[73,10,70,16,"content"],[73,17,70,23],[73,19,70,25,"child"],[73,24,70,30],[73,25,70,31,"props"],[73,30,70,36],[73,34,71,20],[73,41,71,27,"child"],[73,46,71,32],[73,47,71,33,"props"],[73,52,71,38],[73,57,71,43],[73,65,71,51],[73,69,72,20],[73,78,72,29],[73,82,72,33,"child"],[73,87,72,38],[73,88,72,39,"props"],[73,93,72,44],[73,97,73,20],[73,104,73,27,"child"],[73,109,73,32],[73,110,73,33,"props"],[73,115,73,38],[73,116,73,39,"content"],[73,123,73,46],[73,128,73,51],[73,136,73,59],[73,139,74,22,"child"],[73,144,74,27],[73,145,74,28,"props"],[73,150,74,33],[73,151,74,34,"content"],[73,158,74,41],[73,161,75,22,"undefined"],[74,8,76,12],[75,6,77,8],[75,7,77,9],[76,4,78,4],[76,5,78,5],[76,6,78,6],[77,2,79,0],[78,2,80,0],[78,11,80,9,"useActivityFromMetaChildren"],[78,38,80,36,"useActivityFromMetaChildren"],[78,39,80,37,"meta"],[78,43,80,41],[78,45,80,43],[79,4,81,4],[79,8,81,4,"_useAddressableLink"],[79,27,81,4],[79,30,81,36,"useAddressableLink"],[79,48,81,54],[79,49,81,55],[79,50,81,56],[80,6,81,17,"href"],[80,10,81,21],[80,13,81,21,"_useAddressableLink"],[80,32,81,21],[80,33,81,12,"url"],[80,36,81,15],[81,6,81,23,"pathname"],[81,14,81,31],[81,17,81,31,"_useAddressableLink"],[81,36,81,31],[81,37,81,23,"pathname"],[81,45,81,31],[82,4,82,4],[82,8,82,10,"previousMeta"],[82,20,82,22],[82,23,82,25,"react_1"],[82,30,82,32],[82,31,82,33,"default"],[82,38,82,40],[82,39,82,41,"useRef"],[82,45,82,47],[82,46,82,48],[82,48,82,50],[82,49,82,51],[83,4,83,4],[83,8,83,10,"cachedActivity"],[83,22,83,24],[83,25,83,27,"react_1"],[83,32,83,34],[83,33,83,35,"default"],[83,40,83,42],[83,41,83,43,"useRef"],[83,47,83,49],[83,48,83,50],[83,49,83,51],[83,50,83,52],[83,51,83,53],[84,4,84,4],[84,8,84,10,"sortedMeta"],[84,18,84,20],[84,21,84,23,"react_1"],[84,28,84,30],[84,29,84,31,"default"],[84,36,84,38],[84,37,84,39,"useMemo"],[84,44,84,46],[84,45,84,47],[84,51,84,53,"serializedMetaChildren"],[84,73,84,75],[84,74,84,76,"meta"],[84,78,84,80],[84,79,84,81],[84,81,84,83],[84,82,84,84,"meta"],[84,86,84,88],[84,87,84,89],[84,88,84,90],[85,4,85,4],[85,8,85,10,"url"],[85,11,85,13],[85,14,85,16,"react_1"],[85,21,85,23],[85,22,85,24,"default"],[85,29,85,31],[85,30,85,32,"useMemo"],[85,37,85,39],[85,38,85,40],[85,44,85,46],[86,6,86,8],[86,10,86,14,"urlMeta"],[86,17,86,21],[86,20,86,24,"sortedMeta"],[86,30,86,34],[86,31,86,35,"find"],[86,35,86,39],[86,36,86,41,"child"],[86,41,86,46],[86,45,86,51,"child"],[86,50,86,56],[86,51,86,57,"type"],[86,55,86,61],[86,60,86,66],[86,66,86,72],[86,70,86,76,"child"],[86,75,86,81],[86,76,86,82,"props"],[86,81,86,87],[86,82,86,88,"property"],[86,90,86,96],[86,95,86,101],[86,103,86,109],[86,104,86,110],[87,6,87,8],[87,10,87,12,"urlMeta"],[87,17,87,19],[87,19,87,21],[88,8,88,12],[89,8,89,12],[89,12,89,16,"urlMeta"],[89,19,89,23],[89,20,89,24,"props"],[89,25,89,29],[89,26,89,30,"content"],[89,33,89,37],[89,35,89,39,"startsWith"],[89,45,89,49],[89,46,89,50],[89,49,89,53],[89,50,89,54],[89,52,89,56],[90,10,90,16],[90,17,90,23],[90,18,90,24],[90,19,90,25],[90,21,90,27,"url_1"],[90,26,90,32],[90,27,90,33,"getStaticUrlFromExpoRouter"],[90,53,90,59],[90,55,90,61,"urlMeta"],[90,62,90,68],[90,63,90,69,"props"],[90,68,90,74],[90,69,90,75,"content"],[90,76,90,82],[90,77,90,83],[91,8,91,12],[92,8,92,12],[92,15,92,19,"urlMeta"],[92,22,92,26],[92,23,92,27,"props"],[92,28,92,32],[92,29,92,33,"content"],[92,36,92,40],[93,6,93,8],[94,6,94,8],[94,13,94,15,"href"],[94,17,94,19],[95,4,95,4],[95,5,95,5],[95,7,95,7],[95,8,95,8,"sortedMeta"],[95,18,95,18],[95,20,95,20,"href"],[95,24,95,24],[95,25,95,25],[95,26,95,26],[96,4,96,4],[96,8,96,10,"title"],[96,13,96,15],[96,16,96,18,"react_1"],[96,23,96,25],[96,24,96,26,"default"],[96,31,96,33],[96,32,96,34,"useMemo"],[96,39,96,41],[96,40,96,42],[96,46,96,48],[97,6,97,8],[97,10,97,14,"titleTag"],[97,18,97,22],[97,21,97,25,"sortedMeta"],[97,31,97,35],[97,32,97,36,"find"],[97,36,97,40],[97,37,97,42,"child"],[97,42,97,47],[97,46,97,52,"child"],[97,51,97,57],[97,52,97,58,"type"],[97,56,97,62],[97,61,97,67],[97,68,97,74],[97,69,97,75],[98,6,98,8],[98,10,98,12,"titleTag"],[98,18,98,20],[98,20,98,22],[99,8,99,12],[99,15,99,19,"titleTag"],[99,23,99,27],[99,24,99,28,"props"],[99,29,99,33],[99,30,99,34,"children"],[99,38,99,42],[99,42,99,46],[99,44,99,48],[100,6,100,8],[101,6,101,8],[101,10,101,14,"titleMeta"],[101,19,101,23],[101,22,101,26,"sortedMeta"],[101,32,101,36],[101,33,101,37,"find"],[101,37,101,41],[101,38,101,43,"child"],[101,43,101,48],[101,47,101,53,"child"],[101,52,101,58],[101,53,101,59,"type"],[101,57,101,63],[101,62,101,68],[101,68,101,74],[101,72,101,78,"child"],[101,77,101,83],[101,78,101,84,"props"],[101,83,101,89],[101,84,101,90,"property"],[101,92,101,98],[101,97,101,103],[101,107,101,113],[101,108,101,114],[102,6,102,8],[102,10,102,12,"titleMeta"],[102,19,102,21],[102,21,102,23],[103,8,103,12],[103,15,103,19,"titleMeta"],[103,24,103,28],[103,25,103,29,"props"],[103,30,103,34],[103,31,103,35,"content"],[103,38,103,42],[103,42,103,46],[103,44,103,48],[104,6,104,8],[105,6,105,8],[105,13,105,15,"getLastSegment"],[105,27,105,29],[105,28,105,30,"pathname"],[105,36,105,38],[105,37,105,39],[106,4,106,4],[106,5,106,5],[106,7,106,7],[106,8,106,8,"sortedMeta"],[106,18,106,18],[106,20,106,20,"pathname"],[106,28,106,28],[106,29,106,29],[106,30,106,30],[107,4,107,4],[107,8,107,10,"activity"],[107,16,107,18],[107,19,107,21,"react_1"],[107,26,107,28],[107,27,107,29,"default"],[107,34,107,36],[107,35,107,37,"useMemo"],[107,42,107,44],[107,43,107,45],[107,49,107,51],[108,6,108,8],[108,10,108,12],[108,11,108,13],[108,12,108,14,"previousMeta"],[108,24,108,26],[108,25,108,27,"current"],[108,32,108,34],[108,36,109,12],[108,37,109,13],[108,38,109,14,"cachedActivity"],[108,52,109,28],[108,53,109,29,"current"],[108,60,109,36],[108,64,110,12,"deepObjectCompare"],[108,81,110,29],[108,82,110,30,"previousMeta"],[108,94,110,42],[108,95,110,43,"current"],[108,102,110,50],[108,104,110,52,"sortedMeta"],[108,114,110,62],[108,115,110,63],[108,117,110,65],[109,8,111,12],[109,15,111,19,"cachedActivity"],[109,29,111,33],[109,30,111,34,"current"],[109,37,111,41],[110,6,112,8],[111,6,113,8,"previousMeta"],[111,18,113,20],[111,19,113,21,"current"],[111,26,113,28],[111,29,113,31,"sortedMeta"],[111,39,113,41],[112,6,114,8],[112,10,114,14,"userActivity"],[112,22,114,26],[112,25,114,29],[112,26,114,30],[112,27,114,31],[113,6,115,8,"sortedMeta"],[113,16,115,18],[113,17,115,19,"forEach"],[113,24,115,26],[113,25,115,28,"child"],[113,30,115,33],[113,34,115,38],[114,8,116,12],[115,8,117,12],[116,8,118,12,"child"],[116,13,118,17],[116,14,118,18,"type"],[116,18,118,22],[116,23,118,27],[116,29,118,33],[116,31,118,35],[117,10,119,16],[117,14,119,16,"_child$props"],[117,26,119,16],[117,29,119,46,"child"],[117,34,119,51],[117,35,119,52,"props"],[117,40,119,57],[118,12,119,24,"property"],[118,20,119,32],[118,23,119,32,"_child$props"],[118,35,119,32],[118,36,119,24,"property"],[118,44,119,32],[119,12,119,34,"content"],[119,19,119,41],[119,22,119,41,"_child$props"],[119,34,119,41],[119,35,119,34,"content"],[119,42,119,41],[120,10,120,16],[120,18,120,24,"property"],[120,26,120,32],[121,12,121,20],[121,17,121,25],[121,33,121,41],[122,14,122,24,"userActivity"],[122,26,122,36],[122,27,122,37,"description"],[122,38,122,48],[122,41,122,51,"content"],[122,48,122,58],[123,14,123,24],[124,12,124,20],[125,12,125,20],[125,17,125,25],[125,31,125,39],[126,14,126,24,"userActivity"],[126,26,126,36],[126,27,126,37,"isEligibleForHandoff"],[126,47,126,57],[126,50,126,60,"isTruthy"],[126,58,126,68],[126,59,126,69,"content"],[126,66,126,76],[126,67,126,77],[127,14,127,24],[128,12,128,20],[128,17,128,25],[128,33,128,41],[129,14,129,24,"userActivity"],[129,26,129,36],[129,27,129,37,"isEligibleForSearch"],[129,46,129,56],[129,49,129,59,"isTruthy"],[129,57,129,67],[129,58,129,68,"content"],[129,65,129,75],[129,66,129,76],[130,14,130,24],[131,10,131,16],[132,10,132,16],[133,10,133,16],[134,10,134,16],[135,10,135,16],[136,10,136,16],[137,10,137,16],[138,8,138,12],[139,6,139,8],[139,7,139,9],[139,8,139,10],[140,6,140,8,"cachedActivity"],[140,20,140,22],[140,21,140,23,"current"],[140,28,140,30],[140,31,140,33,"userActivity"],[140,43,140,45],[141,6,141,8],[141,13,141,15,"userActivity"],[141,25,141,27],[142,4,142,4],[142,5,142,5],[142,7,142,7],[142,8,142,8,"meta"],[142,12,142,12],[142,14,142,14,"pathname"],[142,22,142,22],[142,24,142,24,"href"],[142,28,142,28],[142,29,142,29],[142,30,142,30],[143,4,143,4],[143,8,143,10,"parsedActivity"],[143,22,143,24],[143,25,143,27],[144,6,144,8,"keywords"],[144,14,144,16],[144,16,144,18],[144,17,144,19,"title"],[144,22,144,24],[144,23,144,25],[145,6,145,8],[145,9,145,11,"activity"],[145,17,145,19],[146,6,146,8,"title"],[146,11,146,13],[147,6,147,8,"webpageURL"],[147,16,147,18],[147,18,147,20,"url"],[147,21,147,23],[148,6,148,8,"activityType"],[148,18,148,20],[148,20,148,22,"ExpoHeadModule_1"],[148,36,148,38],[148,37,148,39,"ExpoHead"],[148,45,148,47],[148,46,148,48,"activities"],[148,56,148,58],[148,57,148,59,"INDEXED_ROUTE"],[148,70,148,72],[149,6,149,8,"userInfo"],[149,14,149,16],[149,16,149,18],[150,8,150,12],[151,8,151,12,"href"],[152,6,152,8],[153,4,153,4],[153,5,153,5],[154,4,154,4],[154,11,154,11,"parsedActivity"],[154,25,154,25],[155,2,155,0],[156,2,156,0],[156,11,156,9,"isTruthy"],[156,19,156,17,"isTruthy"],[156,20,156,18,"value"],[156,25,156,23],[156,27,156,25],[157,4,157,4],[157,11,157,11],[157,12,157,12],[157,16,157,16],[157,18,157,18],[157,24,157,24],[157,25,157,25],[157,26,157,26,"includes"],[157,34,157,34],[157,35,157,35,"value"],[157,40,157,40],[157,41,157,41],[158,2,158,0],[159,2,159,0],[159,11,159,9,"HeadNative"],[159,21,159,19,"HeadNative"],[159,22,159,20,"props"],[159,27,159,25],[159,29,159,27],[160,4,160,4],[160,8,160,10,"isFocused"],[160,17,160,19],[160,20,160,22],[160,21,160,23],[160,22,160,24],[160,24,160,26,"native_1"],[160,32,160,34],[160,33,160,35,"useIsFocused"],[160,45,160,47],[160,47,160,49],[160,48,160,50],[161,4,161,4],[161,8,161,8],[161,9,161,9,"isFocused"],[161,18,161,18],[161,20,161,20],[162,6,162,8],[162,26,162,15,"_reactJsxRuntime"],[162,42,162,15],[162,43,162,15,"jsx"],[162,46,162,15],[162,47,162,16,"UnfocusedHead"],[162,60,162,29],[162,64,162,31],[162,65,162,32],[163,4,163,4],[164,4,164,4],[164,24,164,11,"_reactJsxRuntime"],[164,40,164,11],[164,41,164,11,"jsx"],[164,44,164,11],[164,45,164,12,"FocusedHead"],[164,56,164,23],[165,6,164,23],[165,9,164,28,"props"],[166,4,164,33],[166,5,164,35],[166,6,164,36],[167,2,165,0],[168,2,166,0],[168,11,166,9,"UnfocusedHead"],[168,24,166,22,"UnfocusedHead"],[168,25,166,23,"props"],[168,30,166,28],[168,32,166,30],[169,4,167,4],[169,8,167,4,"_useMetaChildren"],[169,24,167,4],[169,27,167,25,"useMetaChildren"],[169,42,167,40],[169,43,167,41,"props"],[169,48,167,46],[169,49,167,47,"children"],[169,57,167,55],[169,58,167,56],[170,6,167,12,"children"],[170,14,167,20],[170,17,167,20,"_useMetaChildren"],[170,33,167,20],[170,34,167,12,"children"],[170,42,167,20],[171,4,168,4],[171,24,168,11,"_reactJsxRuntime"],[171,40,168,11],[171,41,168,11,"jsx"],[171,44,168,11],[171,45,168,11,"_reactJsxRuntime"],[171,61,168,11],[171,62,168,11,"Fragment"],[171,70,168,11],[172,6,168,11,"children"],[172,14,168,11],[172,16,168,14,"children"],[173,4,168,22],[173,5,168,25],[173,6,168,26],[174,2,169,0],[175,2,170,0],[175,11,170,9,"FocusedHead"],[175,22,170,20,"FocusedHead"],[175,23,170,21,"props"],[175,28,170,26],[175,30,170,28],[176,4,171,4],[176,8,171,4,"_useMetaChildren2"],[176,25,171,4],[176,28,171,39,"useMetaChildren"],[176,43,171,54],[176,44,171,55,"props"],[176,49,171,60],[176,50,171,61,"children"],[176,58,171,69],[176,59,171,70],[177,6,171,12,"metaChildren"],[177,18,171,24],[177,21,171,24,"_useMetaChildren2"],[177,38,171,24],[177,39,171,12,"metaChildren"],[177,51,171,24],[178,6,171,26,"children"],[178,14,171,34],[178,17,171,34,"_useMetaChildren2"],[178,34,171,34],[178,35,171,26,"children"],[178,43,171,34],[179,4,172,4],[179,8,172,10,"activity"],[179,16,172,18],[179,19,172,21,"useActivityFromMetaChildren"],[179,46,172,48],[179,47,172,49,"metaChildren"],[179,59,172,61],[179,60,172,62],[180,4,173,4,"useRegisterCurrentActivity"],[180,30,173,30],[180,31,173,31,"activity"],[180,39,173,39],[180,40,173,40],[181,4,174,4],[181,24,174,11,"_reactJsxRuntime"],[181,40,174,11],[181,41,174,11,"jsx"],[181,44,174,11],[181,45,174,11,"_reactJsxRuntime"],[181,61,174,11],[181,62,174,11,"Fragment"],[181,70,174,11],[182,6,174,11,"children"],[182,14,174,11],[182,16,174,14,"children"],[183,4,174,22],[183,5,174,25],[183,6,174,26],[184,2,175,0],[185,2,176,0],[186,2,177,0],[186,6,177,6,"activities"],[186,16,177,16],[186,19,177,19],[186,23,177,23,"Map"],[186,26,177,26],[186,27,177,27],[186,28,177,28],[187,2,178,0],[187,11,178,9,"useRegisterCurrentActivity"],[187,37,178,35,"useRegisterCurrentActivity"],[187,38,178,36,"activity"],[187,46,178,44],[187,48,178,46],[188,4,179,4],[189,4,180,4],[190,4,181,4],[190,8,181,10,"activityId"],[190,18,181,20],[190,21,181,23,"urlToId"],[190,28,181,30],[190,29,181,31],[190,30,181,32],[190,31,181,33],[190,33,181,35,"hooks_1"],[190,40,181,42],[190,41,181,43,"usePathname"],[190,52,181,54],[190,54,181,56],[190,55,181,57],[190,59,181,61],[190,62,181,64],[190,63,181,65],[191,4,182,4],[191,8,182,10,"cascadingId"],[191,19,182,21],[191,22,182,24,"urlToId"],[191,29,182,31],[191,30,182,32],[191,31,182,33],[191,32,182,34],[191,34,182,36,"hooks_1"],[191,41,182,43],[191,42,182,44,"useSegments"],[191,53,182,55],[191,55,182,57],[191,56,182,58],[191,57,182,59,"join"],[191,61,182,63],[191,62,182,64],[191,65,182,67],[191,66,182,68],[191,70,182,72],[191,73,182,75],[191,74,182,76],[192,4,183,4],[192,8,183,10,"activityIds"],[192,19,183,21],[192,22,183,24,"Array"],[192,27,183,29],[192,28,183,30,"from"],[192,32,183,34],[192,33,183,35,"activities"],[192,43,183,45],[192,44,183,46,"keys"],[192,48,183,50],[192,49,183,51],[192,50,183,52],[192,51,183,53],[193,4,184,4],[193,8,184,10,"cascadingActivity"],[193,25,184,27],[193,28,184,30,"react_1"],[193,35,184,37],[193,36,184,38,"default"],[193,43,184,45],[193,44,184,46,"useMemo"],[193,51,184,53],[193,52,184,54],[193,58,184,60],[194,6,185,8],[195,6,186,8],[196,6,187,8],[196,10,187,14,"cascadingActivity"],[196,27,187,31],[196,30,187,34,"activities"],[196,40,187,44],[196,41,187,45,"has"],[196,44,187,48],[196,45,187,49,"cascadingId"],[196,56,187,60],[196,57,187,61],[196,60,188,14],[197,8,189,16],[197,11,189,19,"activities"],[197,21,189,29],[197,22,189,30,"get"],[197,25,189,33],[197,26,189,34,"cascadingId"],[197,37,189,45],[197,38,189,46],[198,8,190,16],[198,11,190,19,"activity"],[198,19,190,27],[199,8,191,16,"id"],[199,10,191,18],[199,12,191,20,"activityId"],[200,6,192,12],[200,7,192,13],[200,10,193,14],[201,8,194,16],[201,11,194,19,"activity"],[201,19,194,27],[202,8,195,16,"id"],[202,10,195,18],[202,12,195,20,"activityId"],[203,6,196,12],[203,7,196,13],[204,6,197,8,"activities"],[204,16,197,18],[204,17,197,19,"set"],[204,20,197,22],[204,21,197,23,"cascadingId"],[204,32,197,34],[204,34,197,36,"cascadingActivity"],[204,51,197,53],[204,52,197,54],[205,6,198,8],[205,13,198,15,"cascadingActivity"],[205,30,198,32],[206,4,199,4],[206,5,199,5],[206,7,199,7],[206,8,199,8,"cascadingId"],[206,19,199,19],[206,21,199,21,"activityId"],[206,31,199,31],[206,33,199,33,"activity"],[206,41,199,41],[206,43,199,43,"activityIds"],[206,54,199,54],[206,55,199,55],[206,56,199,56],[207,4,200,4],[207,8,200,10,"previousActivity"],[207,24,200,26],[207,27,200,29,"react_1"],[207,34,200,36],[207,35,200,37,"default"],[207,42,200,44],[207,43,200,45,"useRef"],[207,49,200,51],[207,50,200,52],[207,54,200,56],[207,55,200,57],[208,4,201,4,"react_1"],[208,11,201,11],[208,12,201,12,"default"],[208,19,201,19],[208,20,201,20,"useEffect"],[208,29,201,29],[208,30,201,30],[208,36,201,36],[209,6,202,8],[209,10,202,12],[209,11,202,13,"cascadingActivity"],[209,28,202,30],[209,30,202,32],[210,8,203,12],[210,15,203,19],[210,21,203,25],[210,22,203,27],[210,23,203,28],[211,6,204,8],[212,6,205,8],[212,10,205,12],[212,11,205,13],[212,12,205,14,"previousActivity"],[212,28,205,30],[212,29,205,31,"current"],[212,36,205,38],[212,40,206,12,"deepObjectCompare"],[212,57,206,29],[212,58,206,30,"previousActivity"],[212,74,206,46],[212,75,206,47,"current"],[212,82,206,54],[212,84,206,56,"cascadingActivity"],[212,101,206,73],[212,102,206,74],[212,104,206,76],[213,8,207,12],[213,15,207,19],[213,21,207,25],[213,22,207,27],[213,23,207,28],[214,6,208,8],[215,6,209,8,"previousActivity"],[215,22,209,24],[215,23,209,25,"current"],[215,30,209,32],[215,33,209,35,"cascadingActivity"],[215,50,209,52],[216,6,210,8],[216,10,210,12],[216,11,210,13,"cascadingActivity"],[216,28,210,30],[216,29,210,31,"id"],[216,31,210,33],[216,33,210,35],[217,8,211,12],[217,14,211,18],[217,18,211,22,"Error"],[217,23,211,27],[217,24,211,28],[217,50,211,54],[217,51,211,55],[218,6,212,8],[219,6,213,8],[220,6,214,8],[220,10,214,12,"cascadingActivity"],[220,27,214,29],[220,28,214,30,"isEligibleForHandoff"],[220,48,214,50],[220,52,214,54,"cascadingActivity"],[220,69,214,71],[220,70,214,72,"isEligibleForSearch"],[220,89,214,91],[220,91,214,93],[221,8,215,12,"ExpoHeadModule_1"],[221,24,215,28],[221,25,215,29,"ExpoHead"],[221,33,215,37],[221,35,215,39,"createActivity"],[221,49,215,53],[221,50,215,54,"cascadingActivity"],[221,67,215,71],[221,68,215,72],[222,6,216,8],[223,6,217,8],[223,13,217,15],[223,19,217,21],[223,20,217,23],[223,21,217,24],[224,4,218,4],[224,5,218,5],[224,7,218,7],[224,8,218,8,"cascadingActivity"],[224,25,218,25],[224,26,218,26],[224,27,218,27],[225,4,219,4,"react_1"],[225,11,219,11],[225,12,219,12,"default"],[225,19,219,19],[225,20,219,20,"useEffect"],[225,29,219,29],[225,30,219,30],[225,36,219,36],[226,6,220,8],[226,13,220,15],[226,19,220,21],[227,8,221,12],[227,12,221,16,"activityId"],[227,22,221,26],[227,24,221,28],[228,10,222,16,"ExpoHeadModule_1"],[228,26,222,32],[228,27,222,33,"ExpoHead"],[228,35,222,41],[228,37,222,43,"suspendActivity"],[228,52,222,58],[228,53,222,59,"activityId"],[228,63,222,69],[228,64,222,70],[229,8,223,12],[230,6,224,8],[230,7,224,9],[231,4,225,4],[231,5,225,5],[231,7,225,7],[231,8,225,8,"activityId"],[231,18,225,18],[231,19,225,19],[231,20,225,20],[232,2,226,0],[233,2,227,0],[233,11,227,9,"deepObjectCompare"],[233,28,227,26,"deepObjectCompare"],[233,29,227,27,"a"],[233,30,227,28],[233,32,227,30,"b"],[233,33,227,31],[233,35,227,33],[234,4,228,4],[234,8,228,8],[234,15,228,15,"a"],[234,16,228,16],[234,21,228,21],[234,28,228,28,"b"],[234,29,228,29],[234,31,228,31],[235,6,229,8],[235,13,229,15],[235,18,229,20],[236,4,230,4],[237,4,231,4],[237,8,231,8],[237,15,231,15,"a"],[237,16,231,16],[237,21,231,21],[237,29,231,29],[237,31,231,31],[238,6,232,8],[238,10,232,12,"Array"],[238,15,232,17],[238,16,232,18,"isArray"],[238,23,232,25],[238,24,232,26,"a"],[238,25,232,27],[238,26,232,28],[238,31,232,33,"Array"],[238,36,232,38],[238,37,232,39,"isArray"],[238,44,232,46],[238,45,232,47,"b"],[238,46,232,48],[238,47,232,49],[238,49,232,51],[239,8,233,12],[239,15,233,19],[239,20,233,24],[240,6,234,8],[241,6,235,8],[241,10,235,12,"Array"],[241,15,235,17],[241,16,235,18,"isArray"],[241,23,235,25],[241,24,235,26,"a"],[241,25,235,27],[241,26,235,28],[241,28,235,30],[242,8,236,12],[242,12,236,16,"a"],[242,13,236,17],[242,14,236,18,"length"],[242,20,236,24],[242,25,236,29,"b"],[242,26,236,30],[242,27,236,31,"length"],[242,33,236,37],[242,35,236,39],[243,10,237,16],[243,17,237,23],[243,22,237,28],[244,8,238,12],[245,8,239,12],[245,15,239,19,"a"],[245,16,239,20],[245,17,239,21,"every"],[245,22,239,26],[245,23,239,27],[245,24,239,28,"item"],[245,28,239,32],[245,30,239,34,"index"],[245,35,239,39],[245,40,239,44,"deepObjectCompare"],[245,57,239,61],[245,58,239,62,"item"],[245,62,239,66],[245,64,239,68,"b"],[245,65,239,69],[245,66,239,70,"index"],[245,71,239,75],[245,72,239,76],[245,73,239,77],[245,74,239,78],[246,6,240,8],[247,6,241,8],[248,6,242,8],[248,10,242,12,"a"],[248,11,242,13],[248,16,242,18],[248,20,242,22],[248,24,242,26,"b"],[248,25,242,27],[248,30,242,32],[248,34,242,36],[248,36,242,38],[249,8,243,12],[249,15,243,19,"a"],[249,16,243,20],[249,21,243,25,"b"],[249,22,243,26],[250,6,244,8],[251,6,245,8],[251,10,245,14,"aKeys"],[251,15,245,19],[251,18,245,22,"Object"],[251,24,245,28],[251,25,245,29,"keys"],[251,29,245,33],[251,30,245,34,"a"],[251,31,245,35],[251,32,245,36],[252,6,246,8],[252,10,246,14,"bKeys"],[252,15,246,19],[252,18,246,22,"Object"],[252,24,246,28],[252,25,246,29,"keys"],[252,29,246,33],[252,30,246,34,"b"],[252,31,246,35],[252,32,246,36],[253,6,247,8],[253,10,247,12,"aKeys"],[253,15,247,17],[253,16,247,18,"length"],[253,22,247,24],[253,27,247,29,"bKeys"],[253,32,247,34],[253,33,247,35,"length"],[253,39,247,41],[253,41,247,43],[254,8,248,12],[254,15,248,19],[254,20,248,24],[255,6,249,8],[256,6,250,8],[256,13,250,15,"aKeys"],[256,18,250,20],[256,19,250,21,"every"],[256,24,250,26],[256,25,250,28,"key"],[256,28,250,31],[256,32,250,36,"deepObjectCompare"],[256,49,250,53],[256,50,250,54,"a"],[256,51,250,55],[256,52,250,56,"key"],[256,55,250,59],[256,56,250,60],[256,58,250,62,"b"],[256,59,250,63],[256,60,250,64,"key"],[256,63,250,67],[256,64,250,68],[256,65,250,69],[256,66,250,70],[257,4,251,4],[258,4,252,4],[258,11,252,11,"a"],[258,12,252,12],[258,17,252,17,"b"],[258,18,252,18],[259,2,253,0],[260,2,254,0,"HeadNative"],[260,12,254,10],[260,13,254,11,"Provider"],[260,21,254,19],[260,24,254,22,"react_1"],[260,31,254,29],[260,32,254,30,"default"],[260,39,254,37],[260,40,254,38,"Fragment"],[260,48,254,46],[261,2,255,0],[261,11,255,9,"HeadShim"],[261,19,255,17,"HeadShim"],[261,20,255,18,"props"],[261,25,255,23],[261,27,255,25],[262,4,256,4],[262,11,256,11],[262,15,256,15],[263,2,257,0],[264,2,258,0,"HeadShim"],[264,10,258,8],[264,11,258,9,"Provider"],[264,19,258,17],[264,22,258,20,"react_1"],[264,29,258,27],[264,30,258,28,"default"],[264,37,258,35],[264,38,258,36,"Fragment"],[264,46,258,44],[265,2,259,0],[266,2,260,0,"exports"],[266,9,260,7],[266,10,260,8,"Head"],[266,14,260,12],[266,17,260,15,"ExpoHeadModule_1"],[266,33,260,31],[266,34,260,32,"ExpoHead"],[266,42,260,40],[266,45,260,43,"HeadNative"],[266,55,260,53],[266,58,260,56,"HeadShim"],[266,66,260,64],[267,0,260,65],[267,3]],"functionMap":{"names":["<global>","<anonymous>","urlToId","getLastSegment","useAddressableLink","useMetaChildren","react_1._default.useMemo$argument_0","react_1._default.Children.forEach$argument_1","serializedMetaChildren","meta.filter$argument_0","validMeta.map$argument_0","useActivityFromMetaChildren","sortedMeta.find$argument_0","sortedMeta.forEach$argument_0","isTruthy","HeadNative","UnfocusedHead","FocusedHead","useRegisterCurrentActivity","react_1._default.useEffect$argument_0","deepObjectCompare","a.every$argument_0","aKeys.every$argument_0","HeadShim"],"mappings":"AAA;wDCC;CDE;AEQ;CFE;AGC;CHI;AIE;CJK;AKC;mCCC;mDCG;SDU;KDE;CLC;AQC;kCCC,0DD;yBEC;KF+B;CRC;AWC;+CLI,kCK;wCLC;wCMC,qEN;KKS;0CLC;yCMC,iCN;0CMI,uEN;KKK;6CLC;2BOQ;SPwB;KKG;CXa;AcC;CdE;AeC;CfM;AgBC;ChBG;AiBC;CjBK;AkBG;sDZM;KYe;8BCE;mBlBE,SkB;mBlBI,SkB;elBU,SkB;KDC;8BCC;elBC;SkBI;KDC;ClBC;AoBC;2BCY,kDD;2BEW,0CF;CpBG;AuBE;CvBE"},"hasCjsExports":true},"type":"js/module"}]}