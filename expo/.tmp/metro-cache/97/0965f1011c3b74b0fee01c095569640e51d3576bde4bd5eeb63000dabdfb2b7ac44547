{"dependencies":[{"name":"react-native","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":1,"column":0,"index":0},"end":{"line":1,"column":40,"index":40}}],"key":"KyzuX10g6ixS9UfynhmjlvCIG3g=","exportNames":["*"],"imports":1}}],"output":[{"data":{"code":"__d(function (global, require, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {\n  \"use strict\";\n\n  Object.defineProperty(exports, '__esModule', {\n    value: true\n  });\n  Object.defineProperty(exports, \"SHEET_FIT_TO_CONTENTS\", {\n    enumerable: true,\n    get: function () {\n      return SHEET_FIT_TO_CONTENTS;\n    }\n  });\n  Object.defineProperty(exports, \"SHEET_COMPAT_LARGE\", {\n    enumerable: true,\n    get: function () {\n      return SHEET_COMPAT_LARGE;\n    }\n  });\n  Object.defineProperty(exports, \"SHEET_COMPAT_MEDIUM\", {\n    enumerable: true,\n    get: function () {\n      return SHEET_COMPAT_MEDIUM;\n    }\n  });\n  Object.defineProperty(exports, \"SHEET_COMPAT_ALL\", {\n    enumerable: true,\n    get: function () {\n      return SHEET_COMPAT_ALL;\n    }\n  });\n  Object.defineProperty(exports, \"SHEET_DIMMED_ALWAYS\", {\n    enumerable: true,\n    get: function () {\n      return SHEET_DIMMED_ALWAYS;\n    }\n  });\n  exports.assertDetentsArrayIsSorted = assertDetentsArrayIsSorted;\n  exports.resolveSheetAllowedDetents = resolveSheetAllowedDetents;\n  exports.resolveSheetLargestUndimmedDetent = resolveSheetLargestUndimmedDetent;\n  exports.resolveSheetInitialDetentIndex = resolveSheetInitialDetentIndex;\n  require(_dependencyMap[0]);\n  // This value must be kept in sync with native side.\n  var SHEET_FIT_TO_CONTENTS = [-1];\n  var SHEET_COMPAT_LARGE = [1.0];\n  var SHEET_COMPAT_MEDIUM = [0.5];\n  var SHEET_COMPAT_ALL = [0.5, 1.0];\n  var SHEET_DIMMED_ALWAYS = -1;\n  function assertDetentsArrayIsSorted(array) {\n    for (var i = 1; i < array.length; i++) {\n      if (array[i - 1] > array[i]) {\n        throw new Error('[RNScreens] The detent array is not sorted in ascending order!');\n      }\n    }\n  }\n\n  // These exist to transform old 'legacy' values used by the formsheet API to the new API shape.\n  // We can get rid of it, once we get rid of support for legacy values: 'large', 'medium', 'all'.\n  function resolveSheetAllowedDetents(allowedDetentsCompat) {\n    if (Array.isArray(allowedDetentsCompat)) {\n      return allowedDetentsCompat;\n    } else if (allowedDetentsCompat === 'fitToContents') {\n      return SHEET_FIT_TO_CONTENTS;\n    } else if (allowedDetentsCompat === 'large') {\n      return SHEET_COMPAT_LARGE;\n    } else if (allowedDetentsCompat === 'medium') {\n      return SHEET_COMPAT_MEDIUM;\n    } else if (allowedDetentsCompat === 'all') {\n      return SHEET_COMPAT_ALL;\n    } else {\n      // Safe default, only large detent is allowed.\n      return SHEET_COMPAT_LARGE;\n    }\n  }\n  function resolveSheetLargestUndimmedDetent(lud, lastDetentIndex) {\n    if (typeof lud === 'number') {\n      if (!isIndexInClosedRange(lud, SHEET_DIMMED_ALWAYS, lastDetentIndex)) {\n        // Return default in production\n        return SHEET_DIMMED_ALWAYS;\n      }\n      return lud;\n    } else if (lud === 'last') {\n      return lastDetentIndex;\n    } else if (lud === 'none' || lud === 'all') {\n      return SHEET_DIMMED_ALWAYS;\n    } else if (lud === 'large') {\n      return 1;\n    } else if (lud === 'medium') {\n      return 0;\n    } else {\n      // Safe default, every detent is dimmed\n      return SHEET_DIMMED_ALWAYS;\n    }\n  }\n  function resolveSheetInitialDetentIndex(index, lastDetentIndex) {\n    if (index === 'last') {\n      index = lastDetentIndex;\n    } else if (index == null) {\n      // Intentional check for undefined & null ^\n      index = 0;\n    }\n    if (!isIndexInClosedRange(index, 0, lastDetentIndex)) {\n      // Return default in production\n      return 0;\n    }\n    return index;\n  }\n  function isIndexInClosedRange(value, lowerBound, upperBound) {\n    return Number.isInteger(value) && value >= lowerBound && value <= upperBound;\n  }\n});","lineCount":110,"map":[[7,2,5,0,"Object"],[7,8,5,0],[7,9,5,0,"defineProperty"],[7,23,5,0],[7,24,5,0,"exports"],[7,31,5,0],[8,4,5,0,"enumerable"],[8,14,5,0],[9,4,5,0,"get"],[9,7,5,0],[9,18,5,0,"get"],[9,19,5,0],[10,6,5,0],[10,13,5,0,"SHEET_FIT_TO_CONTENTS"],[10,34,5,0],[11,4,5,0],[12,2,5,0],[13,2,6,0,"Object"],[13,8,6,0],[13,9,6,0,"defineProperty"],[13,23,6,0],[13,24,6,0,"exports"],[13,31,6,0],[14,4,6,0,"enumerable"],[14,14,6,0],[15,4,6,0,"get"],[15,7,6,0],[15,18,6,0,"get"],[15,19,6,0],[16,6,6,0],[16,13,6,0,"SHEET_COMPAT_LARGE"],[16,31,6,0],[17,4,6,0],[18,2,6,0],[19,2,7,0,"Object"],[19,8,7,0],[19,9,7,0,"defineProperty"],[19,23,7,0],[19,24,7,0,"exports"],[19,31,7,0],[20,4,7,0,"enumerable"],[20,14,7,0],[21,4,7,0,"get"],[21,7,7,0],[21,18,7,0,"get"],[21,19,7,0],[22,6,7,0],[22,13,7,0,"SHEET_COMPAT_MEDIUM"],[22,32,7,0],[23,4,7,0],[24,2,7,0],[25,2,8,0,"Object"],[25,8,8,0],[25,9,8,0,"defineProperty"],[25,23,8,0],[25,24,8,0,"exports"],[25,31,8,0],[26,4,8,0,"enumerable"],[26,14,8,0],[27,4,8,0,"get"],[27,7,8,0],[27,18,8,0,"get"],[27,19,8,0],[28,6,8,0],[28,13,8,0,"SHEET_COMPAT_ALL"],[28,29,8,0],[29,4,8,0],[30,2,8,0],[31,2,9,0,"Object"],[31,8,9,0],[31,9,9,0,"defineProperty"],[31,23,9,0],[31,24,9,0,"exports"],[31,31,9,0],[32,4,9,0,"enumerable"],[32,14,9,0],[33,4,9,0,"get"],[33,7,9,0],[33,18,9,0,"get"],[33,19,9,0],[34,6,9,0],[34,13,9,0,"SHEET_DIMMED_ALWAYS"],[34,32,9,0],[35,4,9,0],[36,2,9,0],[37,2,11,0,"exports"],[37,9,11,0],[37,10,11,0,"assertDetentsArrayIsSorted"],[37,36,11,0],[37,39,11,0,"assertDetentsArrayIsSorted"],[37,65,11,0],[38,2,23,0,"exports"],[38,9,23,0],[38,10,23,0,"resolveSheetAllowedDetents"],[38,36,23,0],[38,39,23,0,"resolveSheetAllowedDetents"],[38,65,23,0],[39,2,53,0,"exports"],[39,9,53,0],[39,10,53,0,"resolveSheetLargestUndimmedDetent"],[39,43,53,0],[39,46,53,0,"resolveSheetLargestUndimmedDetent"],[39,79,53,0],[40,2,82,0,"exports"],[40,9,82,0],[40,10,82,0,"resolveSheetInitialDetentIndex"],[40,40,82,0],[40,43,82,0,"resolveSheetInitialDetentIndex"],[40,73,82,0],[41,2,1,0,"require"],[41,9,1,0],[41,10,1,0,"_dependencyMap"],[41,24,1,0],[42,2,4,0],[43,2,5,7],[43,6,5,13,"SHEET_FIT_TO_CONTENTS"],[43,27,5,34],[43,30,5,37],[43,34,5,41],[44,2,6,7],[44,6,6,13,"SHEET_COMPAT_LARGE"],[44,24,6,31],[44,27,6,34],[44,28,6,35],[44,31,6,38],[44,32,6,39],[45,2,7,7],[45,6,7,13,"SHEET_COMPAT_MEDIUM"],[45,25,7,32],[45,28,7,35],[45,29,7,36],[45,32,7,39],[45,33,7,40],[46,2,8,7],[46,6,8,13,"SHEET_COMPAT_ALL"],[46,22,8,29],[46,25,8,32],[46,26,8,33],[46,29,8,36],[46,31,8,38],[46,34,8,41],[46,35,8,42],[47,2,9,7],[47,6,9,13,"SHEET_DIMMED_ALWAYS"],[47,25,9,32],[47,30,9,37],[48,2,11,7],[48,11,11,16,"assertDetentsArrayIsSorted"],[48,37,11,42,"assertDetentsArrayIsSorted"],[48,38,11,43,"array"],[48,43,11,58],[48,45,11,60],[49,4,12,2],[49,9,12,7],[49,13,12,11,"i"],[49,14,12,12],[49,17,12,15],[49,18,12,16],[49,20,12,18,"i"],[49,21,12,19],[49,24,12,22,"array"],[49,29,12,27],[49,30,12,28,"length"],[49,36,12,34],[49,38,12,36,"i"],[49,39,12,37],[49,41,12,39],[49,43,12,41],[50,6,13,4],[50,10,13,8,"array"],[50,15,13,13],[50,16,13,14,"i"],[50,17,13,15],[50,20,13,18],[50,21,13,19],[50,22,13,20],[50,25,13,23,"array"],[50,30,13,28],[50,31,13,29,"i"],[50,32,13,30],[50,33,13,31],[50,35,13,33],[51,8,14,6],[51,14,14,12],[51,18,14,16,"Error"],[51,23,14,21],[51,24,15,8],[51,88,16,6],[51,89,16,7],[52,6,17,4],[53,4,18,2],[54,2,19,0],[56,2,21,0],[57,2,22,0],[58,2,23,7],[58,11,23,16,"resolveSheetAllowedDetents"],[58,37,23,42,"resolveSheetAllowedDetents"],[58,38,24,2,"allowedDetentsCompat"],[58,58,24,58],[58,60,25,12],[59,4,26,2],[59,8,26,6,"Array"],[59,13,26,11],[59,14,26,12,"isArray"],[59,21,26,19],[59,22,26,20,"allowedDetentsCompat"],[59,42,26,40],[59,43,26,41],[59,45,26,43],[60,6,38,4],[60,13,38,11,"allowedDetentsCompat"],[60,33,38,31],[61,4,39,2],[61,5,39,3],[61,11,39,9],[61,15,39,13,"allowedDetentsCompat"],[61,35,39,33],[61,40,39,38],[61,55,39,53],[61,57,39,55],[62,6,40,4],[62,13,40,11,"SHEET_FIT_TO_CONTENTS"],[62,34,40,32],[63,4,41,2],[63,5,41,3],[63,11,41,9],[63,15,41,13,"allowedDetentsCompat"],[63,35,41,33],[63,40,41,38],[63,47,41,45],[63,49,41,47],[64,6,42,4],[64,13,42,11,"SHEET_COMPAT_LARGE"],[64,31,42,29],[65,4,43,2],[65,5,43,3],[65,11,43,9],[65,15,43,13,"allowedDetentsCompat"],[65,35,43,33],[65,40,43,38],[65,48,43,46],[65,50,43,48],[66,6,44,4],[66,13,44,11,"SHEET_COMPAT_MEDIUM"],[66,32,44,30],[67,4,45,2],[67,5,45,3],[67,11,45,9],[67,15,45,13,"allowedDetentsCompat"],[67,35,45,33],[67,40,45,38],[67,45,45,43],[67,47,45,45],[68,6,46,4],[68,13,46,11,"SHEET_COMPAT_ALL"],[68,29,46,27],[69,4,47,2],[69,5,47,3],[69,11,47,9],[70,6,48,4],[71,6,49,4],[71,13,49,11,"SHEET_COMPAT_LARGE"],[71,31,49,29],[72,4,50,2],[73,2,51,0],[74,2,53,7],[74,11,53,16,"resolveSheetLargestUndimmedDetent"],[74,44,53,49,"resolveSheetLargestUndimmedDetent"],[74,45,54,2,"lud"],[74,48,54,53],[74,50,55,2,"lastDetentIndex"],[74,65,55,25],[74,67,56,10],[75,4,57,2],[75,8,57,6],[75,15,57,13,"lud"],[75,18,57,16],[75,23,57,21],[75,31,57,29],[75,33,57,31],[76,6,58,4],[76,10,58,8],[76,11,58,9,"isIndexInClosedRange"],[76,31,58,29],[76,32,58,30,"lud"],[76,35,58,33],[76,37,58,35,"SHEET_DIMMED_ALWAYS"],[76,56,58,54],[76,58,58,56,"lastDetentIndex"],[76,73,58,71],[76,74,58,72],[76,76,58,74],[77,8,64,6],[78,8,65,6],[78,15,65,13,"SHEET_DIMMED_ALWAYS"],[78,34,65,32],[79,6,66,4],[80,6,67,4],[80,13,67,11,"lud"],[80,16,67,14],[81,4,68,2],[81,5,68,3],[81,11,68,9],[81,15,68,13,"lud"],[81,18,68,16],[81,23,68,21],[81,29,68,27],[81,31,68,29],[82,6,69,4],[82,13,69,11,"lastDetentIndex"],[82,28,69,26],[83,4,70,2],[83,5,70,3],[83,11,70,9],[83,15,70,13,"lud"],[83,18,70,16],[83,23,70,21],[83,29,70,27],[83,33,70,31,"lud"],[83,36,70,34],[83,41,70,39],[83,46,70,44],[83,48,70,46],[84,6,71,4],[84,13,71,11,"SHEET_DIMMED_ALWAYS"],[84,32,71,30],[85,4,72,2],[85,5,72,3],[85,11,72,9],[85,15,72,13,"lud"],[85,18,72,16],[85,23,72,21],[85,30,72,28],[85,32,72,30],[86,6,73,4],[86,13,73,11],[86,14,73,12],[87,4,74,2],[87,5,74,3],[87,11,74,9],[87,15,74,13,"lud"],[87,18,74,16],[87,23,74,21],[87,31,74,29],[87,33,74,31],[88,6,75,4],[88,13,75,11],[88,14,75,12],[89,4,76,2],[89,5,76,3],[89,11,76,9],[90,6,77,4],[91,6,78,4],[91,13,78,11,"SHEET_DIMMED_ALWAYS"],[91,32,78,30],[92,4,79,2],[93,2,80,0],[94,2,82,7],[94,11,82,16,"resolveSheetInitialDetentIndex"],[94,41,82,46,"resolveSheetInitialDetentIndex"],[94,42,83,2,"index"],[94,47,83,47],[94,49,84,2,"lastDetentIndex"],[94,64,84,25],[94,66,85,10],[95,4,86,2],[95,8,86,6,"index"],[95,13,86,11],[95,18,86,16],[95,24,86,22],[95,26,86,24],[96,6,87,4,"index"],[96,11,87,9],[96,14,87,12,"lastDetentIndex"],[96,29,87,27],[97,4,88,2],[97,5,88,3],[97,11,88,9],[97,15,88,13,"index"],[97,20,88,18],[97,24,88,22],[97,28,88,26],[97,30,88,28],[98,6,89,4],[99,6,90,4,"index"],[99,11,90,9],[99,14,90,12],[99,15,90,13],[100,4,91,2],[101,4,92,2],[101,8,92,6],[101,9,92,7,"isIndexInClosedRange"],[101,29,92,27],[101,30,92,28,"index"],[101,35,92,33],[101,37,92,35],[101,38,92,36],[101,40,92,38,"lastDetentIndex"],[101,55,92,53],[101,56,92,54],[101,58,92,56],[102,6,98,4],[103,6,99,4],[103,13,99,11],[103,14,99,12],[104,4,100,2],[105,4,101,2],[105,11,101,9,"index"],[105,16,101,14],[106,2,102,0],[107,2,104,0],[107,11,104,9,"isIndexInClosedRange"],[107,31,104,29,"isIndexInClosedRange"],[107,32,105,2,"value"],[107,37,105,15],[107,39,106,2,"lowerBound"],[107,49,106,20],[107,51,107,2,"upperBound"],[107,61,107,20],[107,63,108,11],[108,4,109,2],[108,11,109,9,"Number"],[108,17,109,15],[108,18,109,16,"isInteger"],[108,27,109,25],[108,28,109,26,"value"],[108,33,109,31],[108,34,109,32],[108,38,109,36,"value"],[108,43,109,41],[108,47,109,45,"lowerBound"],[108,57,109,55],[108,61,109,59,"value"],[108,66,109,64],[108,70,109,68,"upperBound"],[108,80,109,78],[109,2,110,0],[110,0,110,1],[110,3]],"functionMap":{"names":["<global>","assertDetentsArrayIsSorted","resolveSheetAllowedDetents","resolveSheetLargestUndimmedDetent","resolveSheetInitialDetentIndex","isIndexInClosedRange"],"mappings":"AAA;OCU;CDQ;OEI;CF4B;OGE;CH2B;OIE;CJoB;AKE;CLM"},"hasCjsExports":false},"type":"js/module"}]}