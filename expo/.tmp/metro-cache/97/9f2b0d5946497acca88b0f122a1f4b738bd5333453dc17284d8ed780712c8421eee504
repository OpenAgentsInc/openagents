{"dependencies":[{"name":"./common/utils","data":{"asyncType":null,"isESMImport":false,"locs":[{"start":{"line":11,"column":22,"index":272},"end":{"line":11,"column":47,"index":297}},{"start":{"line":12,"column":22,"index":328},"end":{"line":12,"column":47,"index":353}},{"start":{"line":13,"column":22,"index":389},"end":{"line":13,"column":47,"index":414}}],"key":"c5vMU64+McjPMkF8t+lFCw6WyMQ=","exportNames":["*"],"imports":3}}],"output":[{"data":{"code":"__d(function (global, require, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {\n  /**\n   * class Renderer\n   *\n   * Generates HTML from parsed token stream. Each instance has independent\n   * copy of rules. Those can be rewritten with ease. Also, you can add new\n   * rules if you create plugin and adds new token types.\n   **/\n  'use strict';\n\n  var assign = require(_dependencyMap[0]).assign;\n  var unescapeAll = require(_dependencyMap[0]).unescapeAll;\n  var escapeHtml = require(_dependencyMap[0]).escapeHtml;\n\n  ////////////////////////////////////////////////////////////////////////////////\n\n  var default_rules = {};\n  default_rules.code_inline = function (tokens, idx, options, env, slf) {\n    var token = tokens[idx];\n    return '<code' + slf.renderAttrs(token) + '>' + escapeHtml(tokens[idx].content) + '</code>';\n  };\n  default_rules.code_block = function (tokens, idx, options, env, slf) {\n    var token = tokens[idx];\n    return '<pre' + slf.renderAttrs(token) + '><code>' + escapeHtml(tokens[idx].content) + '</code></pre>\\n';\n  };\n  default_rules.fence = function (tokens, idx, options, env, slf) {\n    var token = tokens[idx],\n      info = token.info ? unescapeAll(token.info).trim() : '',\n      langName = '',\n      highlighted,\n      i,\n      tmpAttrs,\n      tmpToken;\n    if (info) {\n      langName = info.split(/\\s+/g)[0];\n    }\n    if (options.highlight) {\n      highlighted = options.highlight(token.content, langName) || escapeHtml(token.content);\n    } else {\n      highlighted = escapeHtml(token.content);\n    }\n    if (highlighted.indexOf('<pre') === 0) {\n      return highlighted + '\\n';\n    }\n\n    // If language exists, inject class gently, without modifying original token.\n    // May be, one day we will add .clone() for token and simplify this part, but\n    // now we prefer to keep things local.\n    if (info) {\n      i = token.attrIndex('class');\n      tmpAttrs = token.attrs ? token.attrs.slice() : [];\n      if (i < 0) {\n        tmpAttrs.push(['class', options.langPrefix + langName]);\n      } else {\n        tmpAttrs[i][1] += ' ' + options.langPrefix + langName;\n      }\n\n      // Fake token just to render attributes\n      tmpToken = {\n        attrs: tmpAttrs\n      };\n      return '<pre><code' + slf.renderAttrs(tmpToken) + '>' + highlighted + '</code></pre>\\n';\n    }\n    return '<pre><code' + slf.renderAttrs(token) + '>' + highlighted + '</code></pre>\\n';\n  };\n  default_rules.image = function (tokens, idx, options, env, slf) {\n    var token = tokens[idx];\n\n    // \"alt\" attr MUST be set, even if empty. Because it's mandatory and\n    // should be placed on proper position for tests.\n    //\n    // Replace content with actual value\n\n    token.attrs[token.attrIndex('alt')][1] = slf.renderInlineAsText(token.children, options, env);\n    return slf.renderToken(tokens, idx, options);\n  };\n  default_rules.hardbreak = function (tokens, idx, options /*, env */) {\n    return options.xhtmlOut ? '<br />\\n' : '<br>\\n';\n  };\n  default_rules.softbreak = function (tokens, idx, options /*, env */) {\n    return options.breaks ? options.xhtmlOut ? '<br />\\n' : '<br>\\n' : '\\n';\n  };\n  default_rules.text = function (tokens, idx /*, options, env */) {\n    return escapeHtml(tokens[idx].content);\n  };\n  default_rules.html_block = function (tokens, idx /*, options, env */) {\n    return tokens[idx].content;\n  };\n  default_rules.html_inline = function (tokens, idx /*, options, env */) {\n    return tokens[idx].content;\n  };\n\n  /**\n   * new Renderer()\n   *\n   * Creates new [[Renderer]] instance and fill [[Renderer#rules]] with defaults.\n   **/\n  function Renderer() {\n    /**\n     * Renderer#rules -> Object\n     *\n     * Contains render rules for tokens. Can be updated and extended.\n     *\n     * ##### Example\n     *\n     * ```javascript\n     * var md = require('markdown-it')();\n     *\n     * md.renderer.rules.strong_open  = function () { return '<b>'; };\n     * md.renderer.rules.strong_close = function () { return '</b>'; };\n     *\n     * var result = md.renderInline(...);\n     * ```\n     *\n     * Each rule is called as independent static function with fixed signature:\n     *\n     * ```javascript\n     * function my_token_render(tokens, idx, options, env, renderer) {\n     *   // ...\n     *   return renderedHTML;\n     * }\n     * ```\n     *\n     * See [source code](https://github.com/markdown-it/markdown-it/blob/master/lib/renderer.js)\n     * for more details and examples.\n     **/\n    this.rules = assign({}, default_rules);\n  }\n\n  /**\n   * Renderer.renderAttrs(token) -> String\n   *\n   * Render token attributes to string.\n   **/\n  Renderer.prototype.renderAttrs = function renderAttrs(token) {\n    var i, l, result;\n    if (!token.attrs) {\n      return '';\n    }\n    result = '';\n    for (i = 0, l = token.attrs.length; i < l; i++) {\n      result += ' ' + escapeHtml(token.attrs[i][0]) + '=\"' + escapeHtml(token.attrs[i][1]) + '\"';\n    }\n    return result;\n  };\n\n  /**\n   * Renderer.renderToken(tokens, idx, options) -> String\n   * - tokens (Array): list of tokens\n   * - idx (Numbed): token index to render\n   * - options (Object): params of parser instance\n   *\n   * Default token renderer. Can be overriden by custom function\n   * in [[Renderer#rules]].\n   **/\n  Renderer.prototype.renderToken = function renderToken(tokens, idx, options) {\n    var nextToken,\n      result = '',\n      needLf = false,\n      token = tokens[idx];\n\n    // Tight list paragraphs\n    if (token.hidden) {\n      return '';\n    }\n\n    // Insert a newline between hidden paragraph and subsequent opening\n    // block-level tag.\n    //\n    // For example, here we should insert a newline before blockquote:\n    //  - a\n    //    >\n    //\n    if (token.block && token.nesting !== -1 && idx && tokens[idx - 1].hidden) {\n      result += '\\n';\n    }\n\n    // Add token name, e.g. `<img`\n    result += (token.nesting === -1 ? '</' : '<') + token.tag;\n\n    // Encode attributes, e.g. `<img src=\"foo\"`\n    result += this.renderAttrs(token);\n\n    // Add a slash for self-closing tags, e.g. `<img src=\"foo\" /`\n    if (token.nesting === 0 && options.xhtmlOut) {\n      result += ' /';\n    }\n\n    // Check if we need to add a newline after this tag\n    if (token.block) {\n      needLf = true;\n      if (token.nesting === 1) {\n        if (idx + 1 < tokens.length) {\n          nextToken = tokens[idx + 1];\n          if (nextToken.type === 'inline' || nextToken.hidden) {\n            // Block-level tag containing an inline tag.\n            //\n            needLf = false;\n          } else if (nextToken.nesting === -1 && nextToken.tag === token.tag) {\n            // Opening tag + closing tag of the same type. E.g. `<li></li>`.\n            //\n            needLf = false;\n          }\n        }\n      }\n    }\n    result += needLf ? '>\\n' : '>';\n    return result;\n  };\n\n  /**\n   * Renderer.renderInline(tokens, options, env) -> String\n   * - tokens (Array): list on block tokens to renter\n   * - options (Object): params of parser instance\n   * - env (Object): additional data from parsed input (references, for example)\n   *\n   * The same as [[Renderer.render]], but for single token of `inline` type.\n   **/\n  Renderer.prototype.renderInline = function (tokens, options, env) {\n    var type,\n      result = '',\n      rules = this.rules;\n    for (var i = 0, len = tokens.length; i < len; i++) {\n      type = tokens[i].type;\n      if (typeof rules[type] !== 'undefined') {\n        result += rules[type](tokens, i, options, env, this);\n      } else {\n        result += this.renderToken(tokens, i, options);\n      }\n    }\n    return result;\n  };\n\n  /** internal\n   * Renderer.renderInlineAsText(tokens, options, env) -> String\n   * - tokens (Array): list on block tokens to renter\n   * - options (Object): params of parser instance\n   * - env (Object): additional data from parsed input (references, for example)\n   *\n   * Special kludge for image `alt` attributes to conform CommonMark spec.\n   * Don't try to use it! Spec requires to show `alt` content with stripped markup,\n   * instead of simple escaping.\n   **/\n  Renderer.prototype.renderInlineAsText = function (tokens, options, env) {\n    var result = '';\n    for (var i = 0, len = tokens.length; i < len; i++) {\n      if (tokens[i].type === 'text') {\n        result += tokens[i].content;\n      } else if (tokens[i].type === 'image') {\n        result += this.renderInlineAsText(tokens[i].children, options, env);\n      }\n    }\n    return result;\n  };\n\n  /**\n   * Renderer.render(tokens, options, env) -> String\n   * - tokens (Array): list on block tokens to renter\n   * - options (Object): params of parser instance\n   * - env (Object): additional data from parsed input (references, for example)\n   *\n   * Takes token stream and generates HTML. Probably, you will never need to call\n   * this method directly.\n   **/\n  Renderer.prototype.render = function (tokens, options, env) {\n    var i,\n      len,\n      type,\n      result = '',\n      rules = this.rules;\n    for (i = 0, len = tokens.length; i < len; i++) {\n      type = tokens[i].type;\n      if (type === 'inline') {\n        result += this.renderInline(tokens[i].children, options, env);\n      } else if (typeof rules[type] !== 'undefined') {\n        result += rules[tokens[i].type](tokens, i, options, env, this);\n      } else {\n        result += this.renderToken(tokens, i, options, env);\n      }\n    }\n    return result;\n  };\n  module.exports = Renderer;\n});","lineCount":284,"map":[[2,2,1,0],[3,0,2,0],[4,0,3,0],[5,0,4,0],[6,0,5,0],[7,0,6,0],[8,0,7,0],[9,2,8,0],[9,14,8,12],[11,2,11,0],[11,6,11,4,"assign"],[11,12,11,10],[11,15,11,22,"require"],[11,22,11,29],[11,23,11,29,"_dependencyMap"],[11,37,11,29],[11,40,11,46],[11,41,11,47],[11,42,11,48,"assign"],[11,48,11,54],[12,2,12,0],[12,6,12,4,"unescapeAll"],[12,17,12,15],[12,20,12,22,"require"],[12,27,12,29],[12,28,12,29,"_dependencyMap"],[12,42,12,29],[12,45,12,46],[12,46,12,47],[12,47,12,48,"unescapeAll"],[12,58,12,59],[13,2,13,0],[13,6,13,4,"escapeHtml"],[13,16,13,14],[13,19,13,22,"require"],[13,26,13,29],[13,27,13,29,"_dependencyMap"],[13,41,13,29],[13,44,13,46],[13,45,13,47],[13,46,13,48,"escapeHtml"],[13,56,13,58],[15,2,16,0],[17,2,18,0],[17,6,18,4,"default_rules"],[17,19,18,17],[17,22,18,20],[17,23,18,21],[17,24,18,22],[18,2,21,0,"default_rules"],[18,15,21,13],[18,16,21,14,"code_inline"],[18,27,21,25],[18,30,21,28],[18,40,21,38,"tokens"],[18,46,21,44],[18,48,21,46,"idx"],[18,51,21,49],[18,53,21,51,"options"],[18,60,21,58],[18,62,21,60,"env"],[18,65,21,63],[18,67,21,65,"slf"],[18,70,21,68],[18,72,21,70],[19,4,22,2],[19,8,22,6,"token"],[19,13,22,11],[19,16,22,14,"tokens"],[19,22,22,20],[19,23,22,21,"idx"],[19,26,22,24],[19,27,22,25],[20,4,24,2],[20,11,24,10],[20,18,24,17],[20,21,24,20,"slf"],[20,24,24,23],[20,25,24,24,"renderAttrs"],[20,36,24,35],[20,37,24,36,"token"],[20,42,24,41],[20,43,24,42],[20,46,24,45],[20,49,24,48],[20,52,25,10,"escapeHtml"],[20,62,25,20],[20,63,25,21,"tokens"],[20,69,25,27],[20,70,25,28,"idx"],[20,73,25,31],[20,74,25,32],[20,75,25,33,"content"],[20,82,25,40],[20,83,25,41],[20,86,26,10],[20,95,26,19],[21,2,27,0],[21,3,27,1],[22,2,30,0,"default_rules"],[22,15,30,13],[22,16,30,14,"code_block"],[22,26,30,24],[22,29,30,27],[22,39,30,37,"tokens"],[22,45,30,43],[22,47,30,45,"idx"],[22,50,30,48],[22,52,30,50,"options"],[22,59,30,57],[22,61,30,59,"env"],[22,64,30,62],[22,66,30,64,"slf"],[22,69,30,67],[22,71,30,69],[23,4,31,2],[23,8,31,6,"token"],[23,13,31,11],[23,16,31,14,"tokens"],[23,22,31,20],[23,23,31,21,"idx"],[23,26,31,24],[23,27,31,25],[24,4,33,2],[24,11,33,10],[24,17,33,16],[24,20,33,19,"slf"],[24,23,33,22],[24,24,33,23,"renderAttrs"],[24,35,33,34],[24,36,33,35,"token"],[24,41,33,40],[24,42,33,41],[24,45,33,44],[24,54,33,53],[24,57,34,10,"escapeHtml"],[24,67,34,20],[24,68,34,21,"tokens"],[24,74,34,27],[24,75,34,28,"idx"],[24,78,34,31],[24,79,34,32],[24,80,34,33,"content"],[24,87,34,40],[24,88,34,41],[24,91,35,10],[24,108,35,27],[25,2,36,0],[25,3,36,1],[26,2,39,0,"default_rules"],[26,15,39,13],[26,16,39,14,"fence"],[26,21,39,19],[26,24,39,22],[26,34,39,32,"tokens"],[26,40,39,38],[26,42,39,40,"idx"],[26,45,39,43],[26,47,39,45,"options"],[26,54,39,52],[26,56,39,54,"env"],[26,59,39,57],[26,61,39,59,"slf"],[26,64,39,62],[26,66,39,64],[27,4,40,2],[27,8,40,6,"token"],[27,13,40,11],[27,16,40,14,"tokens"],[27,22,40,20],[27,23,40,21,"idx"],[27,26,40,24],[27,27,40,25],[28,6,41,6,"info"],[28,10,41,10],[28,13,41,13,"token"],[28,18,41,18],[28,19,41,19,"info"],[28,23,41,23],[28,26,41,26,"unescapeAll"],[28,37,41,37],[28,38,41,38,"token"],[28,43,41,43],[28,44,41,44,"info"],[28,48,41,48],[28,49,41,49],[28,50,41,50,"trim"],[28,54,41,54],[28,55,41,55],[28,56,41,56],[28,59,41,59],[28,61,41,61],[29,6,42,6,"langName"],[29,14,42,14],[29,17,42,17],[29,19,42,19],[30,6,43,6,"highlighted"],[30,17,43,17],[31,6,43,19,"i"],[31,7,43,20],[32,6,43,22,"tmpAttrs"],[32,14,43,30],[33,6,43,32,"tmpToken"],[33,14,43,40],[34,4,45,2],[34,8,45,6,"info"],[34,12,45,10],[34,14,45,12],[35,6,46,4,"langName"],[35,14,46,12],[35,17,46,15,"info"],[35,21,46,19],[35,22,46,20,"split"],[35,27,46,25],[35,28,46,26],[35,34,46,32],[35,35,46,33],[35,36,46,34],[35,37,46,35],[35,38,46,36],[36,4,47,2],[37,4,49,2],[37,8,49,6,"options"],[37,15,49,13],[37,16,49,14,"highlight"],[37,25,49,23],[37,27,49,25],[38,6,50,4,"highlighted"],[38,17,50,15],[38,20,50,18,"options"],[38,27,50,25],[38,28,50,26,"highlight"],[38,37,50,35],[38,38,50,36,"token"],[38,43,50,41],[38,44,50,42,"content"],[38,51,50,49],[38,53,50,51,"langName"],[38,61,50,59],[38,62,50,60],[38,66,50,64,"escapeHtml"],[38,76,50,74],[38,77,50,75,"token"],[38,82,50,80],[38,83,50,81,"content"],[38,90,50,88],[38,91,50,89],[39,4,51,2],[39,5,51,3],[39,11,51,9],[40,6,52,4,"highlighted"],[40,17,52,15],[40,20,52,18,"escapeHtml"],[40,30,52,28],[40,31,52,29,"token"],[40,36,52,34],[40,37,52,35,"content"],[40,44,52,42],[40,45,52,43],[41,4,53,2],[42,4,55,2],[42,8,55,6,"highlighted"],[42,19,55,17],[42,20,55,18,"indexOf"],[42,27,55,25],[42,28,55,26],[42,34,55,32],[42,35,55,33],[42,40,55,38],[42,41,55,39],[42,43,55,41],[43,6,56,4],[43,13,56,11,"highlighted"],[43,24,56,22],[43,27,56,25],[43,31,56,29],[44,4,57,2],[46,4,59,2],[47,4,60,2],[48,4,61,2],[49,4,62,2],[49,8,62,6,"info"],[49,12,62,10],[49,14,62,12],[50,6,63,4,"i"],[50,7,63,5],[50,10,63,15,"token"],[50,15,63,20],[50,16,63,21,"attrIndex"],[50,25,63,30],[50,26,63,31],[50,33,63,38],[50,34,63,39],[51,6,64,4,"tmpAttrs"],[51,14,64,12],[51,17,64,15,"token"],[51,22,64,20],[51,23,64,21,"attrs"],[51,28,64,26],[51,31,64,29,"token"],[51,36,64,34],[51,37,64,35,"attrs"],[51,42,64,40],[51,43,64,41,"slice"],[51,48,64,46],[51,49,64,47],[51,50,64,48],[51,53,64,51],[51,55,64,53],[52,6,66,4],[52,10,66,8,"i"],[52,11,66,9],[52,14,66,12],[52,15,66,13],[52,17,66,15],[53,8,67,6,"tmpAttrs"],[53,16,67,14],[53,17,67,15,"push"],[53,21,67,19],[53,22,67,20],[53,23,67,22],[53,30,67,29],[53,32,67,31,"options"],[53,39,67,38],[53,40,67,39,"langPrefix"],[53,50,67,49],[53,53,67,52,"langName"],[53,61,67,60],[53,62,67,62],[53,63,67,63],[54,6,68,4],[54,7,68,5],[54,13,68,11],[55,8,69,6,"tmpAttrs"],[55,16,69,14],[55,17,69,15,"i"],[55,18,69,16],[55,19,69,17],[55,20,69,18],[55,21,69,19],[55,22,69,20],[55,26,69,24],[55,29,69,27],[55,32,69,30,"options"],[55,39,69,37],[55,40,69,38,"langPrefix"],[55,50,69,48],[55,53,69,51,"langName"],[55,61,69,59],[56,6,70,4],[58,6,72,4],[59,6,73,4,"tmpToken"],[59,14,73,12],[59,17,73,15],[60,8,74,6,"attrs"],[60,13,74,11],[60,15,74,13,"tmpAttrs"],[61,6,75,4],[61,7,75,5],[62,6,77,4],[62,13,77,12],[62,25,77,24],[62,28,77,27,"slf"],[62,31,77,30],[62,32,77,31,"renderAttrs"],[62,43,77,42],[62,44,77,43,"tmpToken"],[62,52,77,51],[62,53,77,52],[62,56,77,55],[62,59,77,58],[62,62,78,12,"highlighted"],[62,73,78,23],[62,76,79,12],[62,93,79,29],[63,4,80,2],[64,4,83,2],[64,11,83,10],[64,23,83,22],[64,26,83,25,"slf"],[64,29,83,28],[64,30,83,29,"renderAttrs"],[64,41,83,40],[64,42,83,41,"token"],[64,47,83,46],[64,48,83,47],[64,51,83,50],[64,54,83,53],[64,57,84,10,"highlighted"],[64,68,84,21],[64,71,85,10],[64,88,85,27],[65,2,86,0],[65,3,86,1],[66,2,89,0,"default_rules"],[66,15,89,13],[66,16,89,14,"image"],[66,21,89,19],[66,24,89,22],[66,34,89,32,"tokens"],[66,40,89,38],[66,42,89,40,"idx"],[66,45,89,43],[66,47,89,45,"options"],[66,54,89,52],[66,56,89,54,"env"],[66,59,89,57],[66,61,89,59,"slf"],[66,64,89,62],[66,66,89,64],[67,4,90,2],[67,8,90,6,"token"],[67,13,90,11],[67,16,90,14,"tokens"],[67,22,90,20],[67,23,90,21,"idx"],[67,26,90,24],[67,27,90,25],[69,4,92,2],[70,4,93,2],[71,4,94,2],[72,4,95,2],[74,4,97,2,"token"],[74,9,97,7],[74,10,97,8,"attrs"],[74,15,97,13],[74,16,97,14,"token"],[74,21,97,19],[74,22,97,20,"attrIndex"],[74,31,97,29],[74,32,97,30],[74,37,97,35],[74,38,97,36],[74,39,97,37],[74,40,97,38],[74,41,97,39],[74,42,97,40],[74,45,98,4,"slf"],[74,48,98,7],[74,49,98,8,"renderInlineAsText"],[74,67,98,26],[74,68,98,27,"token"],[74,73,98,32],[74,74,98,33,"children"],[74,82,98,41],[74,84,98,43,"options"],[74,91,98,50],[74,93,98,52,"env"],[74,96,98,55],[74,97,98,56],[75,4,100,2],[75,11,100,9,"slf"],[75,14,100,12],[75,15,100,13,"renderToken"],[75,26,100,24],[75,27,100,25,"tokens"],[75,33,100,31],[75,35,100,33,"idx"],[75,38,100,36],[75,40,100,38,"options"],[75,47,100,45],[75,48,100,46],[76,2,101,0],[76,3,101,1],[77,2,104,0,"default_rules"],[77,15,104,13],[77,16,104,14,"hardbreak"],[77,25,104,23],[77,28,104,26],[77,38,104,36,"tokens"],[77,44,104,42],[77,46,104,44,"idx"],[77,49,104,47],[77,51,104,49,"options"],[77,58,104,56],[77,59,104,57],[77,71,104,69],[78,4,105,2],[78,11,105,9,"options"],[78,18,105,16],[78,19,105,17,"xhtmlOut"],[78,27,105,25],[78,30,105,28],[78,40,105,38],[78,43,105,41],[78,51,105,49],[79,2,106,0],[79,3,106,1],[80,2,107,0,"default_rules"],[80,15,107,13],[80,16,107,14,"softbreak"],[80,25,107,23],[80,28,107,26],[80,38,107,36,"tokens"],[80,44,107,42],[80,46,107,44,"idx"],[80,49,107,47],[80,51,107,49,"options"],[80,58,107,56],[80,59,107,57],[80,71,107,69],[81,4,108,2],[81,11,108,9,"options"],[81,18,108,16],[81,19,108,17,"breaks"],[81,25,108,23],[81,28,108,27,"options"],[81,35,108,34],[81,36,108,35,"xhtmlOut"],[81,44,108,43],[81,47,108,46],[81,57,108,56],[81,60,108,59],[81,68,108,67],[81,71,108,71],[81,75,108,75],[82,2,109,0],[82,3,109,1],[83,2,112,0,"default_rules"],[83,15,112,13],[83,16,112,14,"text"],[83,20,112,18],[83,23,112,21],[83,33,112,31,"tokens"],[83,39,112,37],[83,41,112,39,"idx"],[83,44,112,42],[83,45,112,43],[83,66,112,64],[84,4,113,2],[84,11,113,9,"escapeHtml"],[84,21,113,19],[84,22,113,20,"tokens"],[84,28,113,26],[84,29,113,27,"idx"],[84,32,113,30],[84,33,113,31],[84,34,113,32,"content"],[84,41,113,39],[84,42,113,40],[85,2,114,0],[85,3,114,1],[86,2,117,0,"default_rules"],[86,15,117,13],[86,16,117,14,"html_block"],[86,26,117,24],[86,29,117,27],[86,39,117,37,"tokens"],[86,45,117,43],[86,47,117,45,"idx"],[86,50,117,48],[86,51,117,49],[86,72,117,70],[87,4,118,2],[87,11,118,9,"tokens"],[87,17,118,15],[87,18,118,16,"idx"],[87,21,118,19],[87,22,118,20],[87,23,118,21,"content"],[87,30,118,28],[88,2,119,0],[88,3,119,1],[89,2,120,0,"default_rules"],[89,15,120,13],[89,16,120,14,"html_inline"],[89,27,120,25],[89,30,120,28],[89,40,120,38,"tokens"],[89,46,120,44],[89,48,120,46,"idx"],[89,51,120,49],[89,52,120,50],[89,73,120,71],[90,4,121,2],[90,11,121,9,"tokens"],[90,17,121,15],[90,18,121,16,"idx"],[90,21,121,19],[90,22,121,20],[90,23,121,21,"content"],[90,30,121,28],[91,2,122,0],[91,3,122,1],[93,2,125,0],[94,0,126,0],[95,0,127,0],[96,0,128,0],[97,0,129,0],[98,2,130,0],[98,11,130,9,"Renderer"],[98,19,130,17,"Renderer"],[98,20,130,17],[98,22,130,20],[99,4,132,2],[100,0,133,0],[101,0,134,0],[102,0,135,0],[103,0,136,0],[104,0,137,0],[105,0,138,0],[106,0,139,0],[107,0,140,0],[108,0,141,0],[109,0,142,0],[110,0,143,0],[111,0,144,0],[112,0,145,0],[113,0,146,0],[114,0,147,0],[115,0,148,0],[116,0,149,0],[117,0,150,0],[118,0,151,0],[119,0,152,0],[120,0,153,0],[121,0,154,0],[122,0,155,0],[123,0,156,0],[124,0,157,0],[125,0,158,0],[126,0,159,0],[127,4,160,2],[127,8,160,6],[127,9,160,7,"rules"],[127,14,160,12],[127,17,160,15,"assign"],[127,23,160,21],[127,24,160,22],[127,25,160,23],[127,26,160,24],[127,28,160,26,"default_rules"],[127,41,160,39],[127,42,160,40],[128,2,161,0],[130,2,164,0],[131,0,165,0],[132,0,166,0],[133,0,167,0],[134,0,168,0],[135,2,169,0,"Renderer"],[135,10,169,8],[135,11,169,9,"prototype"],[135,20,169,18],[135,21,169,19,"renderAttrs"],[135,32,169,30],[135,35,169,33],[135,44,169,42,"renderAttrs"],[135,55,169,53,"renderAttrs"],[135,56,169,54,"token"],[135,61,169,59],[135,63,169,61],[136,4,170,2],[136,8,170,6,"i"],[136,9,170,7],[136,11,170,9,"l"],[136,12,170,10],[136,14,170,12,"result"],[136,20,170,18],[137,4,172,2],[137,8,172,6],[137,9,172,7,"token"],[137,14,172,12],[137,15,172,13,"attrs"],[137,20,172,18],[137,22,172,20],[138,6,172,22],[138,13,172,29],[138,15,172,31],[139,4,172,33],[140,4,174,2,"result"],[140,10,174,8],[140,13,174,11],[140,15,174,13],[141,4,176,2],[141,9,176,7,"i"],[141,10,176,8],[141,13,176,11],[141,14,176,12],[141,16,176,14,"l"],[141,17,176,15],[141,20,176,18,"token"],[141,25,176,23],[141,26,176,24,"attrs"],[141,31,176,29],[141,32,176,30,"length"],[141,38,176,36],[141,40,176,38,"i"],[141,41,176,39],[141,44,176,42,"l"],[141,45,176,43],[141,47,176,45,"i"],[141,48,176,46],[141,50,176,48],[141,52,176,50],[142,6,177,4,"result"],[142,12,177,10],[142,16,177,14],[142,19,177,17],[142,22,177,20,"escapeHtml"],[142,32,177,30],[142,33,177,31,"token"],[142,38,177,36],[142,39,177,37,"attrs"],[142,44,177,42],[142,45,177,43,"i"],[142,46,177,44],[142,47,177,45],[142,48,177,46],[142,49,177,47],[142,50,177,48],[142,51,177,49],[142,54,177,52],[142,58,177,56],[142,61,177,59,"escapeHtml"],[142,71,177,69],[142,72,177,70,"token"],[142,77,177,75],[142,78,177,76,"attrs"],[142,83,177,81],[142,84,177,82,"i"],[142,85,177,83],[142,86,177,84],[142,87,177,85],[142,88,177,86],[142,89,177,87],[142,90,177,88],[142,93,177,91],[142,96,177,94],[143,4,178,2],[144,4,180,2],[144,11,180,9,"result"],[144,17,180,15],[145,2,181,0],[145,3,181,1],[147,2,184,0],[148,0,185,0],[149,0,186,0],[150,0,187,0],[151,0,188,0],[152,0,189,0],[153,0,190,0],[154,0,191,0],[155,0,192,0],[156,2,193,0,"Renderer"],[156,10,193,8],[156,11,193,9,"prototype"],[156,20,193,18],[156,21,193,19,"renderToken"],[156,32,193,30],[156,35,193,33],[156,44,193,42,"renderToken"],[156,55,193,53,"renderToken"],[156,56,193,54,"tokens"],[156,62,193,60],[156,64,193,62,"idx"],[156,67,193,65],[156,69,193,67,"options"],[156,76,193,74],[156,78,193,76],[157,4,194,2],[157,8,194,6,"nextToken"],[157,17,194,15],[158,6,195,6,"result"],[158,12,195,12],[158,15,195,15],[158,17,195,17],[159,6,196,6,"needLf"],[159,12,196,12],[159,15,196,15],[159,20,196,20],[160,6,197,6,"token"],[160,11,197,11],[160,14,197,14,"tokens"],[160,20,197,20],[160,21,197,21,"idx"],[160,24,197,24],[160,25,197,25],[162,4,199,2],[163,4,200,2],[163,8,200,6,"token"],[163,13,200,11],[163,14,200,12,"hidden"],[163,20,200,18],[163,22,200,20],[164,6,201,4],[164,13,201,11],[164,15,201,13],[165,4,202,2],[167,4,204,2],[168,4,205,2],[169,4,206,2],[170,4,207,2],[171,4,208,2],[172,4,209,2],[173,4,210,2],[174,4,211,2],[174,8,211,6,"token"],[174,13,211,11],[174,14,211,12,"block"],[174,19,211,17],[174,23,211,21,"token"],[174,28,211,26],[174,29,211,27,"nesting"],[174,36,211,34],[174,43,211,41],[174,47,211,45,"idx"],[174,50,211,48],[174,54,211,52,"tokens"],[174,60,211,58],[174,61,211,59,"idx"],[174,64,211,62],[174,67,211,65],[174,68,211,66],[174,69,211,67],[174,70,211,68,"hidden"],[174,76,211,74],[174,78,211,76],[175,6,212,4,"result"],[175,12,212,10],[175,16,212,14],[175,20,212,18],[176,4,213,2],[178,4,215,2],[179,4,216,2,"result"],[179,10,216,8],[179,14,216,12],[179,15,216,13,"token"],[179,20,216,18],[179,21,216,19,"nesting"],[179,28,216,26],[179,35,216,33],[179,38,216,36],[179,42,216,40],[179,45,216,43],[179,48,216,46],[179,52,216,50,"token"],[179,57,216,55],[179,58,216,56,"tag"],[179,61,216,59],[181,4,218,2],[182,4,219,2,"result"],[182,10,219,8],[182,14,219,12],[182,18,219,16],[182,19,219,17,"renderAttrs"],[182,30,219,28],[182,31,219,29,"token"],[182,36,219,34],[182,37,219,35],[184,4,221,2],[185,4,222,2],[185,8,222,6,"token"],[185,13,222,11],[185,14,222,12,"nesting"],[185,21,222,19],[185,26,222,24],[185,27,222,25],[185,31,222,29,"options"],[185,38,222,36],[185,39,222,37,"xhtmlOut"],[185,47,222,45],[185,49,222,47],[186,6,223,4,"result"],[186,12,223,10],[186,16,223,14],[186,20,223,18],[187,4,224,2],[189,4,226,2],[190,4,227,2],[190,8,227,6,"token"],[190,13,227,11],[190,14,227,12,"block"],[190,19,227,17],[190,21,227,19],[191,6,228,4,"needLf"],[191,12,228,10],[191,15,228,13],[191,19,228,17],[192,6,230,4],[192,10,230,8,"token"],[192,15,230,13],[192,16,230,14,"nesting"],[192,23,230,21],[192,28,230,26],[192,29,230,27],[192,31,230,29],[193,8,231,6],[193,12,231,10,"idx"],[193,15,231,13],[193,18,231,16],[193,19,231,17],[193,22,231,20,"tokens"],[193,28,231,26],[193,29,231,27,"length"],[193,35,231,33],[193,37,231,35],[194,10,232,8,"nextToken"],[194,19,232,17],[194,22,232,20,"tokens"],[194,28,232,26],[194,29,232,27,"idx"],[194,32,232,30],[194,35,232,33],[194,36,232,34],[194,37,232,35],[195,10,234,8],[195,14,234,12,"nextToken"],[195,23,234,21],[195,24,234,22,"type"],[195,28,234,26],[195,33,234,31],[195,41,234,39],[195,45,234,43,"nextToken"],[195,54,234,52],[195,55,234,53,"hidden"],[195,61,234,59],[195,63,234,61],[196,12,235,10],[197,12,236,10],[198,12,237,10,"needLf"],[198,18,237,16],[198,21,237,19],[198,26,237,24],[199,10,239,8],[199,11,239,9],[199,17,239,15],[199,21,239,19,"nextToken"],[199,30,239,28],[199,31,239,29,"nesting"],[199,38,239,36],[199,45,239,43],[199,49,239,47,"nextToken"],[199,58,239,56],[199,59,239,57,"tag"],[199,62,239,60],[199,67,239,65,"token"],[199,72,239,70],[199,73,239,71,"tag"],[199,76,239,74],[199,78,239,76],[200,12,240,10],[201,12,241,10],[202,12,242,10,"needLf"],[202,18,242,16],[202,21,242,19],[202,26,242,24],[203,10,243,8],[204,8,244,6],[205,6,245,4],[206,4,246,2],[207,4,248,2,"result"],[207,10,248,8],[207,14,248,12,"needLf"],[207,20,248,18],[207,23,248,21],[207,28,248,26],[207,31,248,29],[207,34,248,32],[208,4,250,2],[208,11,250,9,"result"],[208,17,250,15],[209,2,251,0],[209,3,251,1],[211,2,254,0],[212,0,255,0],[213,0,256,0],[214,0,257,0],[215,0,258,0],[216,0,259,0],[217,0,260,0],[218,0,261,0],[219,2,262,0,"Renderer"],[219,10,262,8],[219,11,262,9,"prototype"],[219,20,262,18],[219,21,262,19,"renderInline"],[219,33,262,31],[219,36,262,34],[219,46,262,44,"tokens"],[219,52,262,50],[219,54,262,52,"options"],[219,61,262,59],[219,63,262,61,"env"],[219,66,262,64],[219,68,262,66],[220,4,263,2],[220,8,263,6,"type"],[220,12,263,10],[221,6,264,6,"result"],[221,12,264,12],[221,15,264,15],[221,17,264,17],[222,6,265,6,"rules"],[222,11,265,11],[222,14,265,14],[222,18,265,18],[222,19,265,19,"rules"],[222,24,265,24],[223,4,267,2],[223,9,267,7],[223,13,267,11,"i"],[223,14,267,12],[223,17,267,15],[223,18,267,16],[223,20,267,18,"len"],[223,23,267,21],[223,26,267,24,"tokens"],[223,32,267,30],[223,33,267,31,"length"],[223,39,267,37],[223,41,267,39,"i"],[223,42,267,40],[223,45,267,43,"len"],[223,48,267,46],[223,50,267,48,"i"],[223,51,267,49],[223,53,267,51],[223,55,267,53],[224,6,268,4,"type"],[224,10,268,8],[224,13,268,11,"tokens"],[224,19,268,17],[224,20,268,18,"i"],[224,21,268,19],[224,22,268,20],[224,23,268,21,"type"],[224,27,268,25],[225,6,270,4],[225,10,270,8],[225,17,270,15,"rules"],[225,22,270,20],[225,23,270,21,"type"],[225,27,270,25],[225,28,270,26],[225,33,270,31],[225,44,270,42],[225,46,270,44],[226,8,271,6,"result"],[226,14,271,12],[226,18,271,16,"rules"],[226,23,271,21],[226,24,271,22,"type"],[226,28,271,26],[226,29,271,27],[226,30,271,28,"tokens"],[226,36,271,34],[226,38,271,36,"i"],[226,39,271,37],[226,41,271,39,"options"],[226,48,271,46],[226,50,271,48,"env"],[226,53,271,51],[226,55,271,53],[226,59,271,57],[226,60,271,58],[227,6,272,4],[227,7,272,5],[227,13,272,11],[228,8,273,6,"result"],[228,14,273,12],[228,18,273,16],[228,22,273,20],[228,23,273,21,"renderToken"],[228,34,273,32],[228,35,273,33,"tokens"],[228,41,273,39],[228,43,273,41,"i"],[228,44,273,42],[228,46,273,44,"options"],[228,53,273,51],[228,54,273,52],[229,6,274,4],[230,4,275,2],[231,4,277,2],[231,11,277,9,"result"],[231,17,277,15],[232,2,278,0],[232,3,278,1],[234,2,281,0],[235,0,282,0],[236,0,283,0],[237,0,284,0],[238,0,285,0],[239,0,286,0],[240,0,287,0],[241,0,288,0],[242,0,289,0],[243,0,290,0],[244,2,291,0,"Renderer"],[244,10,291,8],[244,11,291,9,"prototype"],[244,20,291,18],[244,21,291,19,"renderInlineAsText"],[244,39,291,37],[244,42,291,40],[244,52,291,50,"tokens"],[244,58,291,56],[244,60,291,58,"options"],[244,67,291,65],[244,69,291,67,"env"],[244,72,291,70],[244,74,291,72],[245,4,292,2],[245,8,292,6,"result"],[245,14,292,12],[245,17,292,15],[245,19,292,17],[246,4,294,2],[246,9,294,7],[246,13,294,11,"i"],[246,14,294,12],[246,17,294,15],[246,18,294,16],[246,20,294,18,"len"],[246,23,294,21],[246,26,294,24,"tokens"],[246,32,294,30],[246,33,294,31,"length"],[246,39,294,37],[246,41,294,39,"i"],[246,42,294,40],[246,45,294,43,"len"],[246,48,294,46],[246,50,294,48,"i"],[246,51,294,49],[246,53,294,51],[246,55,294,53],[247,6,295,4],[247,10,295,8,"tokens"],[247,16,295,14],[247,17,295,15,"i"],[247,18,295,16],[247,19,295,17],[247,20,295,18,"type"],[247,24,295,22],[247,29,295,27],[247,35,295,33],[247,37,295,35],[248,8,296,6,"result"],[248,14,296,12],[248,18,296,16,"tokens"],[248,24,296,22],[248,25,296,23,"i"],[248,26,296,24],[248,27,296,25],[248,28,296,26,"content"],[248,35,296,33],[249,6,297,4],[249,7,297,5],[249,13,297,11],[249,17,297,15,"tokens"],[249,23,297,21],[249,24,297,22,"i"],[249,25,297,23],[249,26,297,24],[249,27,297,25,"type"],[249,31,297,29],[249,36,297,34],[249,43,297,41],[249,45,297,43],[250,8,298,6,"result"],[250,14,298,12],[250,18,298,16],[250,22,298,20],[250,23,298,21,"renderInlineAsText"],[250,41,298,39],[250,42,298,40,"tokens"],[250,48,298,46],[250,49,298,47,"i"],[250,50,298,48],[250,51,298,49],[250,52,298,50,"children"],[250,60,298,58],[250,62,298,60,"options"],[250,69,298,67],[250,71,298,69,"env"],[250,74,298,72],[250,75,298,73],[251,6,299,4],[252,4,300,2],[253,4,302,2],[253,11,302,9,"result"],[253,17,302,15],[254,2,303,0],[254,3,303,1],[256,2,306,0],[257,0,307,0],[258,0,308,0],[259,0,309,0],[260,0,310,0],[261,0,311,0],[262,0,312,0],[263,0,313,0],[264,0,314,0],[265,2,315,0,"Renderer"],[265,10,315,8],[265,11,315,9,"prototype"],[265,20,315,18],[265,21,315,19,"render"],[265,27,315,25],[265,30,315,28],[265,40,315,38,"tokens"],[265,46,315,44],[265,48,315,46,"options"],[265,55,315,53],[265,57,315,55,"env"],[265,60,315,58],[265,62,315,60],[266,4,316,2],[266,8,316,6,"i"],[266,9,316,7],[267,6,316,9,"len"],[267,9,316,12],[268,6,316,14,"type"],[268,10,316,18],[269,6,317,6,"result"],[269,12,317,12],[269,15,317,15],[269,17,317,17],[270,6,318,6,"rules"],[270,11,318,11],[270,14,318,14],[270,18,318,18],[270,19,318,19,"rules"],[270,24,318,24],[271,4,320,2],[271,9,320,7,"i"],[271,10,320,8],[271,13,320,11],[271,14,320,12],[271,16,320,14,"len"],[271,19,320,17],[271,22,320,20,"tokens"],[271,28,320,26],[271,29,320,27,"length"],[271,35,320,33],[271,37,320,35,"i"],[271,38,320,36],[271,41,320,39,"len"],[271,44,320,42],[271,46,320,44,"i"],[271,47,320,45],[271,49,320,47],[271,51,320,49],[272,6,321,4,"type"],[272,10,321,8],[272,13,321,11,"tokens"],[272,19,321,17],[272,20,321,18,"i"],[272,21,321,19],[272,22,321,20],[272,23,321,21,"type"],[272,27,321,25],[273,6,323,4],[273,10,323,8,"type"],[273,14,323,12],[273,19,323,17],[273,27,323,25],[273,29,323,27],[274,8,324,6,"result"],[274,14,324,12],[274,18,324,16],[274,22,324,20],[274,23,324,21,"renderInline"],[274,35,324,33],[274,36,324,34,"tokens"],[274,42,324,40],[274,43,324,41,"i"],[274,44,324,42],[274,45,324,43],[274,46,324,44,"children"],[274,54,324,52],[274,56,324,54,"options"],[274,63,324,61],[274,65,324,63,"env"],[274,68,324,66],[274,69,324,67],[275,6,325,4],[275,7,325,5],[275,13,325,11],[275,17,325,15],[275,24,325,22,"rules"],[275,29,325,27],[275,30,325,28,"type"],[275,34,325,32],[275,35,325,33],[275,40,325,38],[275,51,325,49],[275,53,325,51],[276,8,326,6,"result"],[276,14,326,12],[276,18,326,16,"rules"],[276,23,326,21],[276,24,326,22,"tokens"],[276,30,326,28],[276,31,326,29,"i"],[276,32,326,30],[276,33,326,31],[276,34,326,32,"type"],[276,38,326,36],[276,39,326,37],[276,40,326,38,"tokens"],[276,46,326,44],[276,48,326,46,"i"],[276,49,326,47],[276,51,326,49,"options"],[276,58,326,56],[276,60,326,58,"env"],[276,63,326,61],[276,65,326,63],[276,69,326,67],[276,70,326,68],[277,6,327,4],[277,7,327,5],[277,13,327,11],[278,8,328,6,"result"],[278,14,328,12],[278,18,328,16],[278,22,328,20],[278,23,328,21,"renderToken"],[278,34,328,32],[278,35,328,33,"tokens"],[278,41,328,39],[278,43,328,41,"i"],[278,44,328,42],[278,46,328,44,"options"],[278,53,328,51],[278,55,328,53,"env"],[278,58,328,56],[278,59,328,57],[279,6,329,4],[280,4,330,2],[281,4,332,2],[281,11,332,9,"result"],[281,17,332,15],[282,2,333,0],[282,3,333,1],[283,2,335,0,"module"],[283,8,335,6],[283,9,335,7,"exports"],[283,16,335,14],[283,19,335,17,"Renderer"],[283,27,335,25],[284,0,335,26],[284,3]],"functionMap":{"names":["<global>","default_rules.code_inline","default_rules.code_block","default_rules.fence","default_rules.image","default_rules.hardbreak","default_rules.softbreak","default_rules.text","default_rules.html_block","default_rules.html_inline","Renderer","renderAttrs","renderToken","Renderer.prototype.renderInline","Renderer.prototype.renderInlineAsText","Renderer.prototype.render"],"mappings":"AAA;4BCoB;CDM;2BEG;CFM;sBGG;CH+C;sBIG;CJY;0BKG;CLE;0BMC;CNE;qBOG;CPE;2BQG;CRE;4BSC;CTE;AUQ;CV+B;iCWQ;CXY;iCYY;CZ0D;kCaW;CbgB;wCca;CdY;4BeY;CfkB"},"hasCjsExports":true},"type":"js/module"}]}