{"dependencies":[],"output":[{"data":{"code":"__d(function (global, require, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {\n  'use strict';\n\n  Object.defineProperty(exports, '__esModule', {\n    value: true\n  });\n  Object.defineProperty(exports, \"valueSetter\", {\n    enumerable: true,\n    get: function () {\n      return valueSetter;\n    }\n  });\n  var _worklet_4151850722360_init_data = {\n    code: \"function valueSetter_reactNativeReanimated_valueSetterTs1(mutable,value){let forceUpdate=arguments.length>2&&arguments[2]!==undefined?arguments[2]:false;const previousAnimation=mutable._animation;if(previousAnimation){previousAnimation.cancelled=true;mutable._animation=null;}if(typeof value==='function'||value!==null&&typeof value==='object'&&value.onFrame!==undefined){const animation=typeof value==='function'?value():value;if(mutable._value===animation.current&&!animation.isHigherOrder&&!forceUpdate){var _animation$callback;(_animation$callback=animation.callback)===null||_animation$callback===void 0||_animation$callback.call(animation,true);return;}const initializeAnimation=function(timestamp){animation.onStart(animation,mutable.value,timestamp,previousAnimation);};const currentTimestamp=global.__frameTimestamp||global._getAnimationTimestamp();initializeAnimation(currentTimestamp);const step=function(newTimestamp){const timestamp=newTimestamp<(animation.timestamp||0)?animation.timestamp:newTimestamp;if(animation.cancelled){var _animation$callback2;(_animation$callback2=animation.callback)===null||_animation$callback2===void 0||_animation$callback2.call(animation,false);return;}const finished=animation.onFrame(animation,timestamp);animation.finished=true;animation.timestamp=timestamp;mutable._value=animation.current;if(finished){var _animation$callback3;(_animation$callback3=animation.callback)===null||_animation$callback3===void 0||_animation$callback3.call(animation,true);}else{requestAnimationFrame(step);}};mutable._animation=animation;step(currentTimestamp);}else{if(mutable._value===value&&!forceUpdate){return;}mutable._value=value;}}\"\n  };\n  var valueSetter = function valueSetter_reactNativeReanimated_valueSetterTs1Factory(_ref) {\n    var _worklet_4151850722360_init_data = _ref._worklet_4151850722360_init_data;\n    var valueSetter = function (mutable, value) {\n      var forceUpdate = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : false;\n      var previousAnimation = mutable._animation;\n      if (previousAnimation) {\n        previousAnimation.cancelled = true;\n        mutable._animation = null;\n      }\n      if (typeof value === 'function' || value !== null && typeof value === 'object' &&\n      // TODO TYPESCRIPT fix this after fixing AnimationObject type\n      value.onFrame !== undefined) {\n        var animation = typeof value === 'function' ?\n        // TODO TYPESCRIPT fix this after fixing AnimationObject type\n        value() :\n        // TODO TYPESCRIPT fix this after fixing AnimationObject type\n        value;\n        // prevent setting again to the same value\n        // and triggering the mappers that treat this value as an input\n        // this happens when the animation's target value(stored in animation.current until animation.onStart is called) is set to the same value as a current one(this._value)\n        // built in animations that are not higher order(withTiming, withSpring) hold target value in .current\n        if (mutable._value === animation.current && !animation.isHigherOrder && !forceUpdate) {\n          animation.callback?.(true);\n          return;\n        }\n        // animated set\n        var initializeAnimation = timestamp => {\n          animation.onStart(animation, mutable.value, timestamp, previousAnimation);\n        };\n        var currentTimestamp = global.__frameTimestamp || global._getAnimationTimestamp();\n        initializeAnimation(currentTimestamp);\n        var step = newTimestamp => {\n          // Function `requestAnimationFrame` adds callback to an array, all the callbacks are flushed with function `__flushAnimationFrame`\n          // Usually we flush them inside function `nativeRequestAnimationFrame` and then the given timestamp is the timestamp of end of the current frame.\n          // However function `__flushAnimationFrame` may also be called inside `registerEventHandler` - then we get actual timestamp which is earlier than the end of the frame.\n\n          var timestamp = newTimestamp < (animation.timestamp || 0) ? animation.timestamp : newTimestamp;\n          if (animation.cancelled) {\n            animation.callback?.(false /* finished */);\n            return;\n          }\n          var finished = animation.onFrame(animation, timestamp);\n          animation.finished = true;\n          animation.timestamp = timestamp;\n          // TODO TYPESCRIPT\n          // For now I'll assume that `animation.current` is always defined\n          // but actually need to dive into animations to understand it\n          mutable._value = animation.current;\n          if (finished) {\n            animation.callback?.(true /* finished */);\n          } else {\n            requestAnimationFrame(step);\n          }\n        };\n        mutable._animation = animation;\n        step(currentTimestamp);\n      } else {\n        // prevent setting again to the same value\n        // and triggering the mappers that treat this value as an input\n        if (mutable._value === value && !forceUpdate) {\n          return;\n        }\n        mutable._value = value;\n      }\n    };\n    valueSetter.__closure = {};\n    valueSetter.__workletHash = 4151850722360;\n    valueSetter.__initData = _worklet_4151850722360_init_data;\n    return valueSetter;\n  }({\n    _worklet_4151850722360_init_data\n  });\n});","lineCount":88,"map":[[2,2,1,0],[2,14,1,12],[4,2,1,13,"Object"],[4,8,1,13],[4,9,1,13,"defineProperty"],[4,23,1,13],[4,24,1,13,"exports"],[4,31,1,13],[5,4,1,13,"value"],[5,9,1,13],[6,2,1,13],[7,2,4,0,"Object"],[7,8,4,0],[7,9,4,0,"defineProperty"],[7,23,4,0],[7,24,4,0,"exports"],[7,31,4,0],[8,4,4,0,"enumerable"],[8,14,4,0],[9,4,4,0,"get"],[9,7,4,0],[9,18,4,0,"get"],[9,19,4,0],[10,6,4,0],[10,13,4,0,"valueSetter"],[10,24,4,0],[11,4,4,0],[12,2,4,0],[13,2,87,1],[13,6,87,1,"_worklet_4151850722360_init_data"],[13,38,87,1],[14,4,87,1,"code"],[14,8,87,1],[15,2,87,1],[16,2,87,1],[16,6,87,1,"valueSetter"],[16,17,87,1],[16,20,4,7],[16,29,4,7,"valueSetter_reactNativeReanimated_valueSetterTs1Factory"],[16,85,4,7,"_ref"],[16,89,4,7],[17,4,4,7],[17,8,4,7,"_worklet_4151850722360_init_data"],[17,40,4,7],[17,43,4,7,"_ref"],[17,47,4,7],[17,48,4,7,"_worklet_4151850722360_init_data"],[17,80,4,7],[18,4,4,7],[18,8,4,7,"valueSetter"],[18,19,4,7],[18,31,4,7,"valueSetter"],[18,32,5,2,"mutable"],[18,39,5,25],[18,41,6,2,"value"],[18,46,6,14],[18,48,8,8],[19,6,8,8],[19,10,7,2,"forceUpdate"],[19,21,7,13],[19,24,7,13,"arguments"],[19,33,7,13],[19,34,7,13,"length"],[19,40,7,13],[19,48,7,13,"arguments"],[19,57,7,13],[19,65,7,13,"undefined"],[19,74,7,13],[19,77,7,13,"arguments"],[19,86,7,13],[19,92,7,16],[19,97,7,21],[20,6,10,2],[20,10,10,8,"previousAnimation"],[20,27,10,25],[20,30,10,28,"mutable"],[20,37,10,35],[20,38,10,36,"_animation"],[20,48,10,46],[21,6,11,2],[21,10,11,6,"previousAnimation"],[21,27,11,23],[21,29,11,25],[22,8,12,4,"previousAnimation"],[22,25,12,21],[22,26,12,22,"cancelled"],[22,35,12,31],[22,38,12,34],[22,42,12,38],[23,8,13,4,"mutable"],[23,15,13,11],[23,16,13,12,"_animation"],[23,26,13,22],[23,29,13,25],[23,33,13,29],[24,6,14,2],[25,6,15,2],[25,10,16,4],[25,17,16,11,"value"],[25,22,16,16],[25,27,16,21],[25,37,16,31],[25,41,17,5,"value"],[25,46,17,10],[25,51,17,15],[25,55,17,19],[25,59,18,6],[25,66,18,13,"value"],[25,71,18,18],[25,76,18,23],[25,84,18,31],[26,6,19,6],[27,6,20,7,"value"],[27,11,20,12],[27,12,20,44,"onFrame"],[27,19,20,51],[27,24,20,56,"undefined"],[27,33,20,66],[27,35,21,4],[28,8,22,4],[28,12,22,10,"animation"],[28,21,22,43],[28,24,23,6],[28,31,23,13,"value"],[28,36,23,18],[28,41,23,23],[28,51,23,33],[29,8,24,10],[30,8,25,11,"value"],[30,13,25,16],[30,14,25,50],[30,15,25,51],[31,8,26,10],[32,8,27,11,"value"],[32,13,27,54],[33,8,28,4],[34,8,29,4],[35,8,30,4],[36,8,31,4],[37,8,32,4],[37,12,33,6,"mutable"],[37,19,33,13],[37,20,33,14,"_value"],[37,26,33,20],[37,31,33,25,"animation"],[37,40,33,34],[37,41,33,35,"current"],[37,48,33,42],[37,52,34,6],[37,53,34,7,"animation"],[37,62,34,16],[37,63,34,17,"isHigherOrder"],[37,76,34,30],[37,80,35,6],[37,81,35,7,"forceUpdate"],[37,92,35,18],[37,94,36,6],[38,10,37,6,"animation"],[38,19,37,15],[38,20,37,16,"callback"],[38,28,37,24],[38,31,37,27],[38,35,37,31],[38,36,37,32],[39,10,38,6],[40,8,39,4],[41,8,40,4],[42,8,41,4],[42,12,41,10,"initializeAnimation"],[42,31,41,29],[42,34,41,33,"timestamp"],[42,43,41,50],[42,47,41,55],[43,10,42,6,"animation"],[43,19,42,15],[43,20,42,16,"onStart"],[43,27,42,23],[43,28,42,24,"animation"],[43,37,42,33],[43,39,42,35,"mutable"],[43,46,42,42],[43,47,42,43,"value"],[43,52,42,48],[43,54,42,50,"timestamp"],[43,63,42,59],[43,65,42,61,"previousAnimation"],[43,82,42,78],[43,83,42,79],[44,8,43,4],[44,9,43,5],[45,8,44,4],[45,12,44,10,"currentTimestamp"],[45,28,44,26],[45,31,45,6,"global"],[45,37,45,12],[45,38,45,13,"__frameTimestamp"],[45,54,45,29],[45,58,45,33,"global"],[45,64,45,39],[45,65,45,40,"_getAnimationTimestamp"],[45,87,45,62],[45,88,45,63],[45,89,45,64],[46,8,46,4,"initializeAnimation"],[46,27,46,23],[46,28,46,24,"currentTimestamp"],[46,44,46,40],[46,45,46,41],[47,8,48,4],[47,12,48,10,"step"],[47,16,48,14],[47,19,48,18,"newTimestamp"],[47,31,48,38],[47,35,48,43],[48,10,49,6],[49,10,50,6],[50,10,51,6],[52,10,53,6],[52,14,53,12,"timestamp"],[52,23,53,21],[52,26,54,8,"newTimestamp"],[52,38,54,20],[52,42,54,24,"animation"],[52,51,54,33],[52,52,54,34,"timestamp"],[52,61,54,43],[52,65,54,47],[52,66,54,48],[52,67,54,49],[52,70,55,12,"animation"],[52,79,55,21],[52,80,55,22,"timestamp"],[52,89,55,31],[52,92,56,12,"newTimestamp"],[52,104,56,24],[53,10,58,6],[53,14,58,10,"animation"],[53,23,58,19],[53,24,58,20,"cancelled"],[53,33,58,29],[53,35,58,31],[54,12,59,8,"animation"],[54,21,59,17],[54,22,59,18,"callback"],[54,30,59,26],[54,33,59,29],[54,38,59,34],[54,39,59,35],[54,53,59,49],[54,54,59,50],[55,12,60,8],[56,10,61,6],[57,10,62,6],[57,14,62,12,"finished"],[57,22,62,20],[57,25,62,23,"animation"],[57,34,62,32],[57,35,62,33,"onFrame"],[57,42,62,40],[57,43,62,41,"animation"],[57,52,62,50],[57,54,62,52,"timestamp"],[57,63,62,61],[57,64,62,62],[58,10,63,6,"animation"],[58,19,63,15],[58,20,63,16,"finished"],[58,28,63,24],[58,31,63,27],[58,35,63,31],[59,10,64,6,"animation"],[59,19,64,15],[59,20,64,16,"timestamp"],[59,29,64,25],[59,32,64,28,"timestamp"],[59,41,64,37],[60,10,65,6],[61,10,66,6],[62,10,67,6],[63,10,68,6,"mutable"],[63,17,68,13],[63,18,68,14,"_value"],[63,24,68,20],[63,27,68,23,"animation"],[63,36,68,32],[63,37,68,33,"current"],[63,44,68,41],[64,10,69,6],[64,14,69,10,"finished"],[64,22,69,18],[64,24,69,20],[65,12,70,8,"animation"],[65,21,70,17],[65,22,70,18,"callback"],[65,30,70,26],[65,33,70,29],[65,37,70,33],[65,38,70,34],[65,52,70,48],[65,53,70,49],[66,10,71,6],[66,11,71,7],[66,17,71,13],[67,12,72,8,"requestAnimationFrame"],[67,33,72,29],[67,34,72,30,"step"],[67,38,72,34],[67,39,72,35],[68,10,73,6],[69,8,74,4],[69,9,74,5],[70,8,76,4,"mutable"],[70,15,76,11],[70,16,76,12,"_animation"],[70,26,76,22],[70,29,76,25,"animation"],[70,38,76,34],[71,8,78,4,"step"],[71,12,78,8],[71,13,78,9,"currentTimestamp"],[71,29,78,25],[71,30,78,26],[72,6,79,2],[72,7,79,3],[72,13,79,9],[73,8,80,4],[74,8,81,4],[75,8,82,4],[75,12,82,8,"mutable"],[75,19,82,15],[75,20,82,16,"_value"],[75,26,82,22],[75,31,82,27,"value"],[75,36,82,32],[75,40,82,36],[75,41,82,37,"forceUpdate"],[75,52,82,48],[75,54,82,50],[76,10,83,6],[77,8,84,4],[78,8,85,4,"mutable"],[78,15,85,11],[78,16,85,12,"_value"],[78,22,85,18],[78,25,85,21,"value"],[78,30,85,26],[79,6,86,2],[80,4,87,0],[80,5,87,1],[81,4,87,1,"valueSetter"],[81,15,87,1],[81,16,87,1,"__closure"],[81,25,87,1],[82,4,87,1,"valueSetter"],[82,15,87,1],[82,16,87,1,"__workletHash"],[82,29,87,1],[83,4,87,1,"valueSetter"],[83,15,87,1],[83,16,87,1,"__initData"],[83,26,87,1],[83,29,87,1,"_worklet_4151850722360_init_data"],[83,61,87,1],[84,4,87,1],[84,11,87,1,"valueSetter"],[84,22,87,1],[85,2,87,1],[85,3,4,7],[86,4,4,7,"_worklet_4151850722360_init_data"],[87,2,4,7],[88,0,4,7],[88,3]],"functionMap":{"names":["<global>","valueSetter","initializeAnimation","step"],"mappings":"AAA;OCG;gCCqC;KDE;iBEK;KF0B;CDa"},"hasCjsExports":false},"type":"js/module"}]}