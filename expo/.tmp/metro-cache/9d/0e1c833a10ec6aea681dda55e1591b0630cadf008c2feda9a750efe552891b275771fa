{"dependencies":[{"name":"@babel/runtime/helpers/slicedToArray","data":{"asyncType":null,"isESMImport":false,"locs":[],"key":"5y7e5+zC7teYEEC6niD9f5zII1M=","exportNames":["*"],"imports":1}},{"name":"react/compiler-runtime","data":{"asyncType":null,"isESMImport":false,"locs":[],"key":"VD3GGmoeDtHcG9PTzWftxssu9VY=","exportNames":["*"],"imports":1}},{"name":"react","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":1,"column":0,"index":0},"end":{"line":1,"column":34,"index":34}}],"key":"RtGiGa+/H7VrI7GDQDLhO1UbpU8=","exportNames":["*"],"imports":1}},{"name":"react-native","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":2,"column":0,"index":35},"end":{"line":2,"column":47,"index":82}}],"key":"KyzuX10g6ixS9UfynhmjlvCIG3g=","exportNames":["*"],"imports":1}},{"name":"expo-font","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":3,"column":0,"index":83},"end":{"line":3,"column":37,"index":120}}],"key":"2pRvmGok3jynt0eNgZSF3SdmQzk=","exportNames":["*"],"imports":1}},{"name":"expo-splash-screen","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":4,"column":0,"index":121},"end":{"line":4,"column":51,"index":172}}],"key":"a2FJfa13Ea2ozNvpuFf5VyHsS1c=","exportNames":["*"],"imports":1}},{"name":"@/constants/theme","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":5,"column":0,"index":173},"end":{"line":5,"column":43,"index":216}}],"key":"mD3yTIKXoSzl9AXGbjTsRUtDaFo=","exportNames":["*"],"imports":1}},{"name":"../assets/fonts/BerkeleyMono-Regular.ttf","data":{"asyncType":null,"isESMImport":false,"locs":[{"start":{"line":38,"column":18,"index":1354},"end":{"line":38,"column":69,"index":1405}}],"key":"Ar3AZIlqs6mQjB5MHbVEovgSmPY=","exportNames":["*"],"imports":1}},{"name":"../assets/fonts/BerkeleyMono-Bold.ttf","data":{"asyncType":null,"isESMImport":false,"locs":[{"start":{"line":39,"column":25,"index":1432},"end":{"line":39,"column":73,"index":1480}}],"key":"pz0IRSXfgMF+VR5vL7YHwltWFt8=","exportNames":["*"],"imports":1}},{"name":"../assets/fonts/BerkeleyMono-Italic.ttf","data":{"asyncType":null,"isESMImport":false,"locs":[{"start":{"line":40,"column":27,"index":1509},"end":{"line":40,"column":77,"index":1559}}],"key":"HETywymQH54WDr5ZKkKiACd0ds8=","exportNames":["*"],"imports":1}},{"name":"../assets/fonts/BerkeleyMono-BoldItalic.ttf","data":{"asyncType":null,"isESMImport":false,"locs":[{"start":{"line":41,"column":31,"index":1592},"end":{"line":41,"column":85,"index":1646}}],"key":"meLYHx+sa1R0Omchcr23TkhWZlo=","exportNames":["*"],"imports":1}}],"output":[{"data":{"code":"__d(function (global, require, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {\n  \"use strict\";\n\n  Object.defineProperty(exports, '__esModule', {\n    value: true\n  });\n  function _interopDefault(e) {\n    return e && e.__esModule ? e : {\n      default: e\n    };\n  }\n  function _interopNamespace(e) {\n    if (e && e.__esModule) return e;\n    var n = {};\n    if (e) Object.keys(e).forEach(function (k) {\n      var d = Object.getOwnPropertyDescriptor(e, k);\n      Object.defineProperty(n, k, d.get ? d : {\n        enumerable: true,\n        get: function () {\n          return e[k];\n        }\n      });\n    });\n    n.default = e;\n    return n;\n  }\n  Object.defineProperty(exports, \"Typography\", {\n    enumerable: true,\n    get: function () {\n      return Typography;\n    }\n  });\n  exports.applyTypographyGlobals = applyTypographyGlobals;\n  exports.useTypographySetup = useTypographySetup;\n  var _babelRuntimeHelpersSlicedToArray = require(_dependencyMap[0]);\n  var _slicedToArray = _interopDefault(_babelRuntimeHelpersSlicedToArray);\n  var _reactCompilerRuntime = require(_dependencyMap[1]);\n  var _react = require(_dependencyMap[2]);\n  var _reactNative = require(_dependencyMap[3]);\n  var _expoFont = require(_dependencyMap[4]);\n  var _expoSplashScreen = require(_dependencyMap[5]);\n  var SplashScreen = _interopNamespace(_expoSplashScreen);\n  var _constantsTheme = require(_dependencyMap[6]);\n  var Typography = {\n    primary: 'BerkeleyMono',\n    bold: 'BerkeleyMono-Bold',\n    italic: 'BerkeleyMono-Italic',\n    boldItalic: 'BerkeleyMono-BoldItalic'\n    // You can add semantic roles here later (e.g., title, label),\n    // but default is to use `primary` for all text.\n  };\n\n  // Load fonts and set global defaults so all <Text/> uses the primary font.\n  var appliedTypographyGlobals = false;\n  function applyTypographyGlobals() {\n    if (appliedTypographyGlobals) return;\n    if (_reactNative.Text.defaultProps == null) _reactNative.Text.defaultProps = {};\n    if (_reactNative.TextInput.defaultProps == null) _reactNative.TextInput.defaultProps = {};\n    var baseTextStyle = {\n      fontFamily: Typography.primary,\n      color: _constantsTheme.Colors.foreground\n    };\n    _reactNative.Text.defaultProps.style = [_reactNative.Text.defaultProps.style, baseTextStyle];\n    _reactNative.TextInput.defaultProps.style = [_reactNative.TextInput.defaultProps.style, baseTextStyle];\n    appliedTypographyGlobals = true;\n  }\n  function useTypographySetup() {\n    var $ = (0, _reactCompilerRuntime.c)(5);\n    var t0;\n    if ($[0] === Symbol.for(\"react.memo_cache_sentinel\")) {\n      t0 = {\n        BerkeleyMono: require(_dependencyMap[7]),\n        \"BerkeleyMono-Bold\": require(_dependencyMap[8]),\n        \"BerkeleyMono-Italic\": require(_dependencyMap[9]),\n        \"BerkeleyMono-BoldItalic\": require(_dependencyMap[10])\n      };\n      $[0] = t0;\n    } else {\n      t0 = $[0];\n    }\n    var _useFonts = (0, _expoFont.useFonts)(t0),\n      _useFonts2 = (0, _slicedToArray.default)(_useFonts, 1),\n      fontsLoaded = _useFonts2[0];\n    var t1;\n    if ($[1] === Symbol.for(\"react.memo_cache_sentinel\")) {\n      t1 = [];\n      $[1] = t1;\n    } else {\n      t1 = $[1];\n    }\n    (0, _react.useEffect)(_temp2, t1);\n    var t2;\n    var t3;\n    if ($[2] !== fontsLoaded) {\n      t2 = () => {\n        if (!fontsLoaded) {\n          return;\n        }\n        SplashScreen.hideAsync().catch(_temp3);\n      };\n      t3 = [fontsLoaded];\n      $[2] = fontsLoaded;\n      $[3] = t2;\n      $[4] = t3;\n    } else {\n      t2 = $[3];\n      t3 = $[4];\n    }\n    (0, _react.useEffect)(t2, t3);\n    return fontsLoaded;\n  }\n  function _temp3() {}\n  function _temp2() {\n    SplashScreen.preventAutoHideAsync().catch(_temp);\n  }\n  function _temp() {}\n});","lineCount":117,"map":[[27,2,7,0,"Object"],[27,8,7,0],[27,9,7,0,"defineProperty"],[27,23,7,0],[27,24,7,0,"exports"],[27,31,7,0],[28,4,7,0,"enumerable"],[28,14,7,0],[29,4,7,0,"get"],[29,7,7,0],[29,18,7,0,"get"],[29,19,7,0],[30,6,7,0],[30,13,7,0,"Typography"],[30,23,7,0],[31,4,7,0],[32,2,7,0],[33,2,19,0,"exports"],[33,9,19,0],[33,10,19,0,"applyTypographyGlobals"],[33,32,19,0],[33,35,19,0,"applyTypographyGlobals"],[33,57,19,0],[34,2,35,0,"exports"],[34,9,35,0],[34,10,35,0,"useTypographySetup"],[34,28,35,0],[34,31,35,0,"useTypographySetup"],[34,49,35,0],[35,2,56,1],[35,6,56,1,"_babelRuntimeHelpersSlicedToArray"],[35,39,56,1],[35,42,56,1,"require"],[35,49,56,1],[35,50,56,1,"_dependencyMap"],[35,64,56,1],[36,2,56,1],[36,6,56,1,"_slicedToArray"],[36,20,56,1],[36,23,56,1,"_interopDefault"],[36,38,56,1],[36,39,56,1,"_babelRuntimeHelpersSlicedToArray"],[36,72,56,1],[37,2,56,1],[37,6,56,1,"_reactCompilerRuntime"],[37,27,56,1],[37,30,56,1,"require"],[37,37,56,1],[37,38,56,1,"_dependencyMap"],[37,52,56,1],[38,2,1,0],[38,6,1,0,"_react"],[38,12,1,0],[38,15,1,0,"require"],[38,22,1,0],[38,23,1,0,"_dependencyMap"],[38,37,1,0],[39,2,2,0],[39,6,2,0,"_reactNative"],[39,18,2,0],[39,21,2,0,"require"],[39,28,2,0],[39,29,2,0,"_dependencyMap"],[39,43,2,0],[40,2,3,0],[40,6,3,0,"_expoFont"],[40,15,3,0],[40,18,3,0,"require"],[40,25,3,0],[40,26,3,0,"_dependencyMap"],[40,40,3,0],[41,2,4,0],[41,6,4,0,"_expoSplashScreen"],[41,23,4,0],[41,26,4,0,"require"],[41,33,4,0],[41,34,4,0,"_dependencyMap"],[41,48,4,0],[42,2,4,0],[42,6,4,0,"SplashScreen"],[42,18,4,0],[42,21,4,0,"_interopNamespace"],[42,38,4,0],[42,39,4,0,"_expoSplashScreen"],[42,56,4,0],[43,2,5,0],[43,6,5,0,"_constantsTheme"],[43,21,5,0],[43,24,5,0,"require"],[43,31,5,0],[43,32,5,0,"_dependencyMap"],[43,46,5,0],[44,2,7,7],[44,6,7,13,"Typography"],[44,16,7,23],[44,19,7,26],[45,4,8,2,"primary"],[45,11,8,9],[45,13,8,11],[45,27,8,25],[46,4,9,2,"bold"],[46,8,9,6],[46,10,9,8],[46,29,9,27],[47,4,10,2,"italic"],[47,10,10,8],[47,12,10,10],[47,33,10,31],[48,4,11,2,"boldItalic"],[48,14,11,12],[48,16,11,14],[49,4,12,2],[50,4,13,2],[51,2,14,0],[51,3,14,1],[53,2,16,0],[54,2,17,0],[54,6,17,4,"appliedTypographyGlobals"],[54,30,17,28],[54,33,17,31],[54,38,17,36],[55,2,19,7],[55,11,19,16,"applyTypographyGlobals"],[55,33,19,38,"applyTypographyGlobals"],[55,34,19,38],[55,36,19,41],[56,4,20,2],[56,8,20,6,"appliedTypographyGlobals"],[56,32,20,30],[56,34,20,32],[57,4,21,2],[57,8,21,7,"Text"],[57,20,21,11],[57,21,21,11,"Text"],[57,25,21,11],[57,26,21,20,"defaultProps"],[57,38,21,32],[57,42,21,36],[57,46,21,40],[57,48,21,43,"Text"],[57,60,21,47],[57,61,21,47,"Text"],[57,65,21,47],[57,66,21,56,"defaultProps"],[57,78,21,68],[57,81,21,71],[57,82,21,72],[57,83,21,73],[58,4,22,2],[58,8,22,7,"TextInput"],[58,20,22,16],[58,21,22,16,"TextInput"],[58,30,22,16],[58,31,22,25,"defaultProps"],[58,43,22,37],[58,47,22,41],[58,51,22,45],[58,53,22,48,"TextInput"],[58,65,22,57],[58,66,22,57,"TextInput"],[58,75,22,57],[58,76,22,66,"defaultProps"],[58,88,22,78],[58,91,22,81],[58,92,22,82],[58,93,22,83],[59,4,23,2],[59,8,23,8,"baseTextStyle"],[59,21,23,21],[59,24,23,24],[60,6,23,26,"fontFamily"],[60,16,23,36],[60,18,23,38,"Typography"],[60,28,23,48],[60,29,23,49,"primary"],[60,36,23,56],[61,6,23,58,"color"],[61,11,23,63],[61,13,23,65,"Colors"],[61,28,23,71],[61,29,23,71,"Colors"],[61,35,23,71],[61,36,23,72,"foreground"],[62,4,23,83],[62,5,23,93],[63,4,24,3,"Text"],[63,16,24,7],[63,17,24,7,"Text"],[63,21,24,7],[63,22,24,16,"defaultProps"],[63,34,24,28],[63,35,24,29,"style"],[63,40,24,34],[63,43,24,37],[63,44,25,5,"Text"],[63,56,25,9],[63,57,25,9,"Text"],[63,61,25,9],[63,62,25,18,"defaultProps"],[63,74,25,30],[63,75,25,31,"style"],[63,80,25,36],[63,82,26,4,"baseTextStyle"],[63,95,26,17],[63,96,27,3],[64,4,28,3,"TextInput"],[64,16,28,12],[64,17,28,12,"TextInput"],[64,26,28,12],[64,27,28,21,"defaultProps"],[64,39,28,33],[64,40,28,34,"style"],[64,45,28,39],[64,48,28,42],[64,49,29,5,"TextInput"],[64,61,29,14],[64,62,29,14,"TextInput"],[64,71,29,14],[64,72,29,23,"defaultProps"],[64,84,29,35],[64,85,29,36,"style"],[64,90,29,41],[64,92,30,4,"baseTextStyle"],[64,105,30,17],[64,106,31,3],[65,4,32,2,"appliedTypographyGlobals"],[65,28,32,26],[65,31,32,29],[65,35,32,33],[66,2,33,0],[67,2,35,7],[67,11,35,7,"useTypographySetup"],[67,30,35,7],[68,4,35,7],[68,8,35,7,"$"],[68,9,35,7],[68,16,35,7,"_reactCompilerRuntime"],[68,37,35,7],[68,38,35,7,"c"],[68,39,35,7],[69,4,35,7],[69,8,35,7,"t0"],[69,10,35,7],[70,4,35,7],[70,8,35,7,"$"],[70,9,35,7],[70,17,35,7,"Symbol"],[70,23,35,7],[70,24,35,7,"for"],[70,27,35,7],[71,6,36,33,"t0"],[71,8,36,33],[72,8,36,33,"BerkeleyMono"],[72,20,36,33],[72,22,38,18,"require"],[72,29,38,25],[72,30,38,25,"_dependencyMap"],[72,44,38,25],[72,47,38,68],[72,48,38,69],[73,8,38,69],[73,29,39,25,"require"],[73,36,39,32],[73,37,39,32,"_dependencyMap"],[73,51,39,32],[73,54,39,72],[73,55,39,73],[74,8,39,73],[74,31,40,27,"require"],[74,38,40,34],[74,39,40,34,"_dependencyMap"],[74,53,40,34],[74,56,40,76],[74,57,40,77],[75,8,40,77],[75,35,41,31,"require"],[75,42,41,38],[75,43,41,38,"_dependencyMap"],[75,57,41,38],[75,61,41,84],[76,6,42,2],[76,7,42,3],[77,6,42,3,"$"],[77,7,42,3],[77,13,42,3,"t0"],[77,15,42,3],[78,4,42,3],[79,6,42,3,"t0"],[79,8,42,3],[79,11,42,3,"$"],[79,12,42,3],[80,4,42,3],[81,4,36,2],[81,8,36,2,"_useFonts"],[81,17,36,2],[81,20,36,24],[81,24,36,24,"useFonts"],[81,33,36,32],[81,34,36,32,"useFonts"],[81,42,36,32],[81,44,36,33,"t0"],[81,46,42,3],[81,47,42,4],[82,6,42,4,"_useFonts2"],[82,16,42,4],[82,23,42,4,"_slicedToArray"],[82,37,42,4],[82,38,42,4,"default"],[82,45,42,4],[82,47,42,4,"_useFonts"],[82,56,42,4],[83,6,42,4,"fontsLoaded"],[83,17,42,4],[83,20,42,4,"_useFonts2"],[83,30,42,4],[84,4,42,5],[84,8,42,5,"t1"],[84,10,42,5],[85,4,42,5],[85,8,42,5,"$"],[85,9,42,5],[85,17,42,5,"Symbol"],[85,23,42,5],[85,24,42,5,"for"],[85,27,42,5],[86,6,47,5,"t1"],[86,8,47,5],[86,13,47,7],[87,6,47,7,"$"],[87,7,47,7],[87,13,47,7,"t1"],[87,15,47,7],[88,4,47,7],[89,6,47,7,"t1"],[89,8,47,7],[89,11,47,7,"$"],[89,12,47,7],[90,4,47,7],[91,4,44,2],[91,8,44,2,"useEffect"],[91,14,44,11],[91,15,44,11,"useEffect"],[91,24,44,11],[91,26,44,12,"_temp2"],[91,32,47,3],[91,34,47,5,"t1"],[91,36,47,7],[91,37,47,8],[92,4,47,8],[92,8,47,8,"t2"],[92,10,47,8],[93,4,47,8],[93,8,47,8,"t3"],[93,10,47,8],[94,4,47,8],[94,8,47,8,"$"],[94,9,47,8],[94,17,47,8,"fontsLoaded"],[94,28,47,8],[95,6,49,12,"t2"],[95,8,49,12],[95,11,49,12,"t2"],[95,12,49,12],[96,8,50,4],[96,12,50,8],[96,13,50,9,"fontsLoaded"],[96,24,50,20],[97,10,50,20],[98,8,50,20],[99,8,52,4,"SplashScreen"],[99,20,52,16],[99,21,52,16,"hideAsync"],[99,30,52,26],[99,31,52,27],[99,32,52,28],[99,33,52,28,"catch"],[99,38,52,34],[99,39,52,35,"_temp3"],[99,45,52,43],[99,46,52,44],[100,6,52,44],[100,7,53,3],[101,6,53,5,"t3"],[101,8,53,5],[101,12,53,6,"fontsLoaded"],[101,23,53,17],[101,24,53,18],[102,6,53,18,"$"],[102,7,53,18],[102,13,53,18,"fontsLoaded"],[102,24,53,18],[103,6,53,18,"$"],[103,7,53,18],[103,13,53,18,"t2"],[103,15,53,18],[104,6,53,18,"$"],[104,7,53,18],[104,13,53,18,"t3"],[104,15,53,18],[105,4,53,18],[106,6,53,18,"t2"],[106,8,53,18],[106,11,53,18,"$"],[106,12,53,18],[107,6,53,18,"t3"],[107,8,53,18],[107,11,53,18,"$"],[107,12,53,18],[108,4,53,18],[109,4,49,2],[109,8,49,2,"useEffect"],[109,14,49,11],[109,15,49,11,"useEffect"],[109,24,49,11],[109,26,49,12,"t2"],[109,28,53,3],[109,30,53,5,"t3"],[109,32,53,18],[109,33,53,19],[110,4,53,19],[110,11,55,9,"fontsLoaded"],[110,22,55,20],[111,2,55,20],[112,2,35,7],[112,11,35,7,"_temp3"],[112,18,35,7],[113,2,35,7],[113,11,35,7,"_temp2"],[113,18,35,7],[114,4,46,4,"SplashScreen"],[114,16,46,16],[114,17,46,16,"preventAutoHideAsync"],[114,37,46,37],[114,38,46,38],[114,39,46,39],[114,40,46,39,"catch"],[114,45,46,45],[114,46,46,46,"_temp"],[114,51,46,54],[114,52,46,55],[115,2,46,55],[116,2,35,7],[116,11,35,7,"_temp"],[116,17,35,7],[117,0,56,1],[117,3]],"functionMap":{"names":["<global>","applyTypographyGlobals","useTypographySetup","useEffect$argument_0","SplashScreen.preventAutoHideAsync._catch$argument_0","SplashScreen.hideAsync._catch$argument_0"],"mappings":"AAA;OCkB;CDc;OEE;YCS;8CCE,QD;GDC;YCE;mCEG,QF;GDC;CFG"},"hasCjsExports":false},"type":"js/module"}]}