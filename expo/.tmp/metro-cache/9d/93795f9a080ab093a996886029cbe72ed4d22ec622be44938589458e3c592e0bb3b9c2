{"dependencies":[],"output":[{"data":{"code":"__d(function (global, require, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {\n  // Parse link label\n  //\n  // this function assumes that first character (\"[\") already matches;\n  // returns the end of the label\n  //\n  'use strict';\n\n  module.exports = function parseLinkLabel(state, start, disableNested) {\n    var level,\n      found,\n      marker,\n      prevPos,\n      labelEnd = -1,\n      max = state.posMax,\n      oldPos = state.pos;\n    state.pos = start + 1;\n    level = 1;\n    while (state.pos < max) {\n      marker = state.src.charCodeAt(state.pos);\n      if (marker === 0x5D /* ] */) {\n        level--;\n        if (level === 0) {\n          found = true;\n          break;\n        }\n      }\n      prevPos = state.pos;\n      state.md.inline.skipToken(state);\n      if (marker === 0x5B /* [ */) {\n        if (prevPos === state.pos - 1) {\n          // increase level if we find text `[`, which is not a part of any token\n          level++;\n        } else if (disableNested) {\n          state.pos = oldPos;\n          return -1;\n        }\n      }\n    }\n    if (found) {\n      labelEnd = state.pos;\n    }\n\n    // restore old state\n    state.pos = oldPos;\n    return labelEnd;\n  };\n});","lineCount":48,"map":[[2,2,1,0],[3,2,2,0],[4,2,3,0],[5,2,4,0],[6,2,5,0],[7,2,6,0],[7,14,6,12],[9,2,8,0,"module"],[9,8,8,6],[9,9,8,7,"exports"],[9,16,8,14],[9,19,8,17],[9,28,8,26,"parseLinkLabel"],[9,42,8,40,"parseLinkLabel"],[9,43,8,41,"state"],[9,48,8,46],[9,50,8,48,"start"],[9,55,8,53],[9,57,8,55,"disableNested"],[9,70,8,68],[9,72,8,70],[10,4,9,2],[10,8,9,6,"level"],[10,13,9,11],[11,6,9,13,"found"],[11,11,9,18],[12,6,9,20,"marker"],[12,12,9,26],[13,6,9,28,"prevPos"],[13,13,9,35],[14,6,10,6,"labelEnd"],[14,14,10,14],[14,19,10,19],[15,6,11,6,"max"],[15,9,11,9],[15,12,11,12,"state"],[15,17,11,17],[15,18,11,18,"posMax"],[15,24,11,24],[16,6,12,6,"oldPos"],[16,12,12,12],[16,15,12,15,"state"],[16,20,12,20],[16,21,12,21,"pos"],[16,24,12,24],[17,4,14,2,"state"],[17,9,14,7],[17,10,14,8,"pos"],[17,13,14,11],[17,16,14,14,"start"],[17,21,14,19],[17,24,14,22],[17,25,14,23],[18,4,15,2,"level"],[18,9,15,7],[18,12,15,10],[18,13,15,11],[19,4,17,2],[19,11,17,9,"state"],[19,16,17,14],[19,17,17,15,"pos"],[19,20,17,18],[19,23,17,21,"max"],[19,26,17,24],[19,28,17,26],[20,6,18,4,"marker"],[20,12,18,10],[20,15,18,13,"state"],[20,20,18,18],[20,21,18,19,"src"],[20,24,18,22],[20,25,18,23,"charCodeAt"],[20,35,18,33],[20,36,18,34,"state"],[20,41,18,39],[20,42,18,40,"pos"],[20,45,18,43],[20,46,18,44],[21,6,19,4],[21,10,19,8,"marker"],[21,16,19,14],[21,21,19,19],[21,25,19,23],[21,26,19,24],[21,35,19,33],[22,8,20,6,"level"],[22,13,20,11],[22,15,20,13],[23,8,21,6],[23,12,21,10,"level"],[23,17,21,15],[23,22,21,20],[23,23,21,21],[23,25,21,23],[24,10,22,8,"found"],[24,15,22,13],[24,18,22,16],[24,22,22,20],[25,10,23,8],[26,8,24,6],[27,6,25,4],[28,6,27,4,"prevPos"],[28,13,27,11],[28,16,27,14,"state"],[28,21,27,19],[28,22,27,20,"pos"],[28,25,27,23],[29,6,28,4,"state"],[29,11,28,9],[29,12,28,10,"md"],[29,14,28,12],[29,15,28,13,"inline"],[29,21,28,19],[29,22,28,20,"skipToken"],[29,31,28,29],[29,32,28,30,"state"],[29,37,28,35],[29,38,28,36],[30,6,29,4],[30,10,29,8,"marker"],[30,16,29,14],[30,21,29,19],[30,25,29,23],[30,26,29,24],[30,35,29,33],[31,8,30,6],[31,12,30,10,"prevPos"],[31,19,30,17],[31,24,30,22,"state"],[31,29,30,27],[31,30,30,28,"pos"],[31,33,30,31],[31,36,30,34],[31,37,30,35],[31,39,30,37],[32,10,31,8],[33,10,32,8,"level"],[33,15,32,13],[33,17,32,15],[34,8,33,6],[34,9,33,7],[34,15,33,13],[34,19,33,17,"disableNested"],[34,32,33,30],[34,34,33,32],[35,10,34,8,"state"],[35,15,34,13],[35,16,34,14,"pos"],[35,19,34,17],[35,22,34,20,"oldPos"],[35,28,34,26],[36,10,35,8],[37,8,36,6],[38,6,37,4],[39,4,38,2],[40,4,40,2],[40,8,40,6,"found"],[40,13,40,11],[40,15,40,13],[41,6,41,4,"labelEnd"],[41,14,41,12],[41,17,41,15,"state"],[41,22,41,20],[41,23,41,21,"pos"],[41,26,41,24],[42,4,42,2],[44,4,44,2],[45,4,45,2,"state"],[45,9,45,7],[45,10,45,8,"pos"],[45,13,45,11],[45,16,45,14,"oldPos"],[45,22,45,20],[46,4,47,2],[46,11,47,9,"labelEnd"],[46,19,47,17],[47,2,48,0],[47,3,48,1],[48,0,48,2],[48,3]],"functionMap":{"names":["<global>","parseLinkLabel"],"mappings":"AAA;iBCO;CDwC"},"hasCjsExports":true},"type":"js/module"}]}