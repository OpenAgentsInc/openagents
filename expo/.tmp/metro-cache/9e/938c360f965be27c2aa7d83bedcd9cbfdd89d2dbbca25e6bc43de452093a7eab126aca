{"dependencies":[{"name":"./Colors","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":2,"column":0,"index":14},"end":{"line":10,"column":18,"index":115}}],"key":"zR6Hzer+l+w/2Wpfyy2UztSb1Pk=","exportNames":["*"],"imports":1}},{"name":"./common","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":11,"column":0,"index":116},"end":{"line":11,"column":57,"index":173}}],"key":"T3X1rGrsueEhPeOGTLhHRm6Tz+4=","exportNames":["*"],"imports":1}},{"name":"./core","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":13,"column":0,"index":224},"end":{"line":13,"column":37,"index":261}}],"key":"0ONCEUiDM4TuRiJMnypk4k7v4nE=","exportNames":["*"],"imports":1}},{"name":"./culori","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":14,"column":0,"index":262},"end":{"line":14,"column":30,"index":292}}],"key":"4qS0vmAbB8g1HsXN+jyiAPHnocA=","exportNames":["*"],"imports":1}},{"name":"./hook/useSharedValue","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":15,"column":0,"index":293},"end":{"line":15,"column":55,"index":348}}],"key":"i4Ic8zb0vc+XX5SmwW/ZGhEhmb4=","exportNames":["*"],"imports":1}},{"name":"./interpolation","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":16,"column":0,"index":349},"end":{"line":16,"column":61,"index":410}}],"key":"Sh+s0sg7+1xEfnYiVkwzHVXvd5Q=","exportNames":["*"],"imports":1}}],"output":[{"data":{"code":"__d(function (global, require, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {\n  'use strict';\n\n  Object.defineProperty(exports, '__esModule', {\n    value: true\n  });\n  function _interopDefault(e) {\n    return e && e.__esModule ? e : {\n      default: e\n    };\n  }\n  Object.defineProperty(exports, \"Extrapolate\", {\n    enumerable: true,\n    get: function () {\n      return Extrapolate;\n    }\n  });\n  Object.defineProperty(exports, \"interpolateColor\", {\n    enumerable: true,\n    get: function () {\n      return interpolateColor;\n    }\n  });\n  Object.defineProperty(exports, \"ColorSpace\", {\n    enumerable: true,\n    get: function () {\n      return ColorSpace;\n    }\n  });\n  exports.useInterpolateConfig = useInterpolateConfig;\n  var _Colors = require(_dependencyMap[0]);\n  var _common = require(_dependencyMap[1]);\n  var _core = require(_dependencyMap[2]);\n  var _culori = require(_dependencyMap[3]);\n  var culori = _interopDefault(_culori);\n  var _hookUseSharedValue = require(_dependencyMap[4]);\n  var _interpolation = require(_dependencyMap[5]);\n  /** @deprecated Please use Extrapolation instead */\n  var Extrapolate = _interpolation.Extrapolation;\n\n  /**\n   * Options for color interpolation.\n   *\n   * @param gamma - Gamma value used in gamma correction. Defaults to `2.2`.\n   * @param useCorrectedHSVInterpolation - Whether to reduce the number of colors\n   *   the interpolation has to go through. Defaults to `true`.\n   */\n  var _worklet_8351409175469_init_data = {\n    code: \"function reactNativeReanimated_interpolateColorTs1(value,inputRange,colors,options){const{interpolate,Extrapolation,hsvToColor}=this.__closure;let h=0;const{useCorrectedHSVInterpolation=true}=options;if(useCorrectedHSVInterpolation){const correctedInputRange=[inputRange[0]];const originalH=colors.h;const correctedH=[originalH[0]];for(let i=1;i<originalH.length;++i){const d=originalH[i]-originalH[i-1];if(originalH[i]>originalH[i-1]&&d>0.5){correctedInputRange.push(inputRange[i]);correctedInputRange.push(inputRange[i]+0.00001);correctedH.push(originalH[i]-1);correctedH.push(originalH[i]);}else if(originalH[i]<originalH[i-1]&&d<-0.5){correctedInputRange.push(inputRange[i]);correctedInputRange.push(inputRange[i]+0.00001);correctedH.push(originalH[i]+1);correctedH.push(originalH[i]);}else{correctedInputRange.push(inputRange[i]);correctedH.push(originalH[i]);}}h=(interpolate(value,correctedInputRange,correctedH,Extrapolation.CLAMP)+1)%1;}else{h=interpolate(value,inputRange,colors.h,Extrapolation.CLAMP);}const s=interpolate(value,inputRange,colors.s,Extrapolation.CLAMP);const v=interpolate(value,inputRange,colors.v,Extrapolation.CLAMP);const a=interpolate(value,inputRange,colors.a,Extrapolation.CLAMP);return hsvToColor(h,s,v,a);}\"\n  };\n  var interpolateColorsHSV = function reactNativeReanimated_interpolateColorTs1Factory(_ref) {\n    var _worklet_8351409175469_init_data = _ref._worklet_8351409175469_init_data,\n      interpolate = _ref.interpolate,\n      Extrapolation = _ref.Extrapolation,\n      hsvToColor = _ref.hsvToColor;\n    var reactNativeReanimated_interpolateColorTs1 = function (value, inputRange, colors, options) {\n      var h = 0;\n      var _options$useCorrected = options.useCorrectedHSVInterpolation,\n        useCorrectedHSVInterpolation = _options$useCorrected === undefined ? true : _options$useCorrected;\n      if (useCorrectedHSVInterpolation) {\n        // if the difference between hues in a range is > 180 deg\n        // then move the hue at the right end of the range +/- 360 deg\n        // and add the next point in the original place + 0.00001 with original hue\n        // to not break the next range\n        var correctedInputRange = [inputRange[0]];\n        var originalH = colors.h;\n        var correctedH = [originalH[0]];\n        for (var i = 1; i < originalH.length; ++i) {\n          var d = originalH[i] - originalH[i - 1];\n          if (originalH[i] > originalH[i - 1] && d > 0.5) {\n            correctedInputRange.push(inputRange[i]);\n            correctedInputRange.push(inputRange[i] + 0.00001);\n            correctedH.push(originalH[i] - 1);\n            correctedH.push(originalH[i]);\n          } else if (originalH[i] < originalH[i - 1] && d < -0.5) {\n            correctedInputRange.push(inputRange[i]);\n            correctedInputRange.push(inputRange[i] + 0.00001);\n            correctedH.push(originalH[i] + 1);\n            correctedH.push(originalH[i]);\n          } else {\n            correctedInputRange.push(inputRange[i]);\n            correctedH.push(originalH[i]);\n          }\n        }\n        h = (interpolate(value, correctedInputRange, correctedH, Extrapolation.CLAMP) + 1) % 1;\n      } else {\n        h = interpolate(value, inputRange, colors.h, Extrapolation.CLAMP);\n      }\n      var s = interpolate(value, inputRange, colors.s, Extrapolation.CLAMP);\n      var v = interpolate(value, inputRange, colors.v, Extrapolation.CLAMP);\n      var a = interpolate(value, inputRange, colors.a, Extrapolation.CLAMP);\n      return hsvToColor(h, s, v, a);\n    };\n    reactNativeReanimated_interpolateColorTs1.__closure = {\n      interpolate,\n      Extrapolation,\n      hsvToColor\n    };\n    reactNativeReanimated_interpolateColorTs1.__workletHash = 8351409175469;\n    reactNativeReanimated_interpolateColorTs1.__initData = _worklet_8351409175469_init_data;\n    return reactNativeReanimated_interpolateColorTs1;\n  }({\n    _worklet_8351409175469_init_data,\n    interpolate: _interpolation.interpolate,\n    Extrapolation: _interpolation.Extrapolation,\n    hsvToColor: _Colors.hsvToColor\n  });\n  var _worklet_4368433701766_init_data = {\n    code: \"function reactNativeReanimated_interpolateColorTs2(x,gamma){return x.map(function(v){return Math.pow(v/255,gamma);});}\"\n  };\n  var toLinearSpace = function reactNativeReanimated_interpolateColorTs2Factory(_ref2) {\n    var _worklet_4368433701766_init_data = _ref2._worklet_4368433701766_init_data;\n    var reactNativeReanimated_interpolateColorTs2 = function (x, gamma) {\n      return x.map(v => Math.pow(v / 255, gamma));\n    };\n    reactNativeReanimated_interpolateColorTs2.__closure = {};\n    reactNativeReanimated_interpolateColorTs2.__workletHash = 4368433701766;\n    reactNativeReanimated_interpolateColorTs2.__initData = _worklet_4368433701766_init_data;\n    return reactNativeReanimated_interpolateColorTs2;\n  }({\n    _worklet_4368433701766_init_data\n  });\n  var _worklet_6610343372134_init_data = {\n    code: \"function reactNativeReanimated_interpolateColorTs3(x,gamma){return Math.round(Math.pow(x,1/gamma)*255);}\"\n  };\n  var toGammaSpace = function reactNativeReanimated_interpolateColorTs3Factory(_ref3) {\n    var _worklet_6610343372134_init_data = _ref3._worklet_6610343372134_init_data;\n    var reactNativeReanimated_interpolateColorTs3 = function (x, gamma) {\n      return Math.round(Math.pow(x, 1 / gamma) * 255);\n    };\n    reactNativeReanimated_interpolateColorTs3.__closure = {};\n    reactNativeReanimated_interpolateColorTs3.__workletHash = 6610343372134;\n    reactNativeReanimated_interpolateColorTs3.__initData = _worklet_6610343372134_init_data;\n    return reactNativeReanimated_interpolateColorTs3;\n  }({\n    _worklet_6610343372134_init_data\n  });\n  var _worklet_4309093770970_init_data = {\n    code: \"function reactNativeReanimated_interpolateColorTs4(value,inputRange,colors,options){const{toLinearSpace,interpolate,Extrapolation,rgbaColor,toGammaSpace}=this.__closure;const{gamma=2.2}=options;let{r:outputR,g:outputG,b:outputB}=colors;if(gamma!==1){outputR=toLinearSpace(outputR,gamma);outputG=toLinearSpace(outputG,gamma);outputB=toLinearSpace(outputB,gamma);}const r=interpolate(value,inputRange,outputR,Extrapolation.CLAMP);const g=interpolate(value,inputRange,outputG,Extrapolation.CLAMP);const b=interpolate(value,inputRange,outputB,Extrapolation.CLAMP);const a=interpolate(value,inputRange,colors.a,Extrapolation.CLAMP);if(gamma===1){return rgbaColor(r,g,b,a);}return rgbaColor(toGammaSpace(r,gamma),toGammaSpace(g,gamma),toGammaSpace(b,gamma),a);}\"\n  };\n  var interpolateColorsRGB = function reactNativeReanimated_interpolateColorTs4Factory(_ref4) {\n    var _worklet_4309093770970_init_data = _ref4._worklet_4309093770970_init_data,\n      toLinearSpace = _ref4.toLinearSpace,\n      interpolate = _ref4.interpolate,\n      Extrapolation = _ref4.Extrapolation,\n      rgbaColor = _ref4.rgbaColor,\n      toGammaSpace = _ref4.toGammaSpace;\n    var reactNativeReanimated_interpolateColorTs4 = function (value, inputRange, colors, options) {\n      var _options$gamma = options.gamma,\n        gamma = _options$gamma === undefined ? 2.2 : _options$gamma;\n      var outputR = colors.r,\n        outputG = colors.g,\n        outputB = colors.b;\n      if (gamma !== 1) {\n        outputR = toLinearSpace(outputR, gamma);\n        outputG = toLinearSpace(outputG, gamma);\n        outputB = toLinearSpace(outputB, gamma);\n      }\n      var r = interpolate(value, inputRange, outputR, Extrapolation.CLAMP);\n      var g = interpolate(value, inputRange, outputG, Extrapolation.CLAMP);\n      var b = interpolate(value, inputRange, outputB, Extrapolation.CLAMP);\n      var a = interpolate(value, inputRange, colors.a, Extrapolation.CLAMP);\n      if (gamma === 1) {\n        return rgbaColor(r, g, b, a);\n      }\n      return rgbaColor(toGammaSpace(r, gamma), toGammaSpace(g, gamma), toGammaSpace(b, gamma), a);\n    };\n    reactNativeReanimated_interpolateColorTs4.__closure = {\n      toLinearSpace,\n      interpolate,\n      Extrapolation,\n      rgbaColor,\n      toGammaSpace\n    };\n    reactNativeReanimated_interpolateColorTs4.__workletHash = 4309093770970;\n    reactNativeReanimated_interpolateColorTs4.__initData = _worklet_4309093770970_init_data;\n    return reactNativeReanimated_interpolateColorTs4;\n  }({\n    _worklet_4309093770970_init_data,\n    toLinearSpace,\n    interpolate: _interpolation.interpolate,\n    Extrapolation: _interpolation.Extrapolation,\n    rgbaColor: _Colors.rgbaColor,\n    toGammaSpace\n  });\n  var _worklet_12431767338194_init_data = {\n    code: \"function reactNativeReanimated_interpolateColorTs5(value,inputRange,colors,_options){const{interpolate,Extrapolation,culori,rgbaColor}=this.__closure;const l=interpolate(value,inputRange,colors.l,Extrapolation.CLAMP);const a=interpolate(value,inputRange,colors.a,Extrapolation.CLAMP);const b=interpolate(value,inputRange,colors.b,Extrapolation.CLAMP);const alpha=interpolate(value,inputRange,colors.alpha,Extrapolation.CLAMP);const{r:_r,g:_g,b:_b,alpha:_alpha}=culori.oklab.convert.toRgb({l:l,a:a,b:b,alpha:alpha});return rgbaColor(_r,_g,_b,_alpha);}\"\n  };\n  var interpolateColorsLAB = function reactNativeReanimated_interpolateColorTs5Factory(_ref5) {\n    var _worklet_12431767338194_init_data = _ref5._worklet_12431767338194_init_data,\n      interpolate = _ref5.interpolate,\n      Extrapolation = _ref5.Extrapolation,\n      culori = _ref5.culori,\n      rgbaColor = _ref5.rgbaColor;\n    var reactNativeReanimated_interpolateColorTs5 = function (value, inputRange, colors, _options) {\n      var l = interpolate(value, inputRange, colors.l, Extrapolation.CLAMP);\n      var a = interpolate(value, inputRange, colors.a, Extrapolation.CLAMP);\n      var b = interpolate(value, inputRange, colors.b, Extrapolation.CLAMP);\n      var alpha = interpolate(value, inputRange, colors.alpha, Extrapolation.CLAMP);\n      var _culori$oklab$convert = culori.oklab.convert.toRgb({\n          l,\n          a,\n          b,\n          alpha\n        }),\n        _r = _culori$oklab$convert.r,\n        _g = _culori$oklab$convert.g,\n        _b = _culori$oklab$convert.b,\n        _alpha = _culori$oklab$convert.alpha;\n      return rgbaColor(_r, _g, _b, _alpha);\n    };\n    reactNativeReanimated_interpolateColorTs5.__closure = {\n      interpolate,\n      Extrapolation,\n      culori,\n      rgbaColor\n    };\n    reactNativeReanimated_interpolateColorTs5.__workletHash = 12431767338194;\n    reactNativeReanimated_interpolateColorTs5.__initData = _worklet_12431767338194_init_data;\n    return reactNativeReanimated_interpolateColorTs5;\n  }({\n    _worklet_12431767338194_init_data,\n    interpolate: _interpolation.interpolate,\n    Extrapolation: _interpolation.Extrapolation,\n    culori: culori.default,\n    rgbaColor: _Colors.rgbaColor\n  });\n  var _worklet_14521513267525_init_data = {\n    code: \"function reactNativeReanimated_interpolateColorTs6(colors,convFromRgb){const{processColor,red,green,blue,opacity}=this.__closure;const ch1=[];const ch2=[];const ch3=[];const alpha=[];for(let i=0;i<colors.length;i++){const color=colors[i];const processedColor=processColor(color);if(typeof processedColor==='number'){const convertedColor=convFromRgb({r:red(processedColor),g:green(processedColor),b:blue(processedColor)});ch1.push(convertedColor.ch1);ch2.push(convertedColor.ch2);ch3.push(convertedColor.ch3);alpha.push(opacity(processedColor));}}return{ch1:ch1,ch2:ch2,ch3:ch3,alpha:alpha};}\"\n  };\n  var _splitColorsIntoChannels = function reactNativeReanimated_interpolateColorTs6Factory(_ref6) {\n    var _worklet_14521513267525_init_data = _ref6._worklet_14521513267525_init_data,\n      processColor = _ref6.processColor,\n      red = _ref6.red,\n      green = _ref6.green,\n      blue = _ref6.blue,\n      opacity = _ref6.opacity;\n    var reactNativeReanimated_interpolateColorTs6 = function (colors, convFromRgb) {\n      var ch1 = [];\n      var ch2 = [];\n      var ch3 = [];\n      var alpha = [];\n      for (var i = 0; i < colors.length; i++) {\n        var color = colors[i];\n        var processedColor = processColor(color);\n        if (typeof processedColor === 'number') {\n          var convertedColor = convFromRgb({\n            r: red(processedColor),\n            g: green(processedColor),\n            b: blue(processedColor)\n          });\n          ch1.push(convertedColor.ch1);\n          ch2.push(convertedColor.ch2);\n          ch3.push(convertedColor.ch3);\n          alpha.push(opacity(processedColor));\n        }\n      }\n      return {\n        ch1,\n        ch2,\n        ch3,\n        alpha\n      };\n    };\n    reactNativeReanimated_interpolateColorTs6.__closure = {\n      processColor,\n      red,\n      green,\n      blue,\n      opacity\n    };\n    reactNativeReanimated_interpolateColorTs6.__workletHash = 14521513267525;\n    reactNativeReanimated_interpolateColorTs6.__initData = _worklet_14521513267525_init_data;\n    return reactNativeReanimated_interpolateColorTs6;\n  }({\n    _worklet_14521513267525_init_data,\n    processColor: _common.processColor,\n    red: _Colors.red,\n    green: _Colors.green,\n    blue: _Colors.blue,\n    opacity: _Colors.opacity\n  });\n  var _worklet_8624448141679_init_data = {\n    code: \"function reactNativeReanimated_interpolateColorTs7(colors){const{_splitColorsIntoChannels}=this.__closure;const{ch1:ch1,ch2:ch2,ch3:ch3,alpha:alpha}=_splitColorsIntoChannels(colors,function(color){return{ch1:color.r,ch2:color.g,ch3:color.b};});return{r:ch1,g:ch2,b:ch3,a:alpha};}\"\n  };\n  var getInterpolateRGB = function reactNativeReanimated_interpolateColorTs7Factory(_ref7) {\n    var _worklet_8624448141679_init_data = _ref7._worklet_8624448141679_init_data,\n      _splitColorsIntoChannels = _ref7._splitColorsIntoChannels;\n    var reactNativeReanimated_interpolateColorTs7 = function (colors) {\n      var _splitColorsIntoChann = _splitColorsIntoChannels(colors, color => ({\n          ch1: color.r,\n          ch2: color.g,\n          ch3: color.b\n        })),\n        ch1 = _splitColorsIntoChann.ch1,\n        ch2 = _splitColorsIntoChann.ch2,\n        ch3 = _splitColorsIntoChann.ch3,\n        alpha = _splitColorsIntoChann.alpha;\n      return {\n        r: ch1,\n        g: ch2,\n        b: ch3,\n        a: alpha\n      };\n    };\n    reactNativeReanimated_interpolateColorTs7.__closure = {\n      _splitColorsIntoChannels\n    };\n    reactNativeReanimated_interpolateColorTs7.__workletHash = 8624448141679;\n    reactNativeReanimated_interpolateColorTs7.__initData = _worklet_8624448141679_init_data;\n    return reactNativeReanimated_interpolateColorTs7;\n  }({\n    _worklet_8624448141679_init_data,\n    _splitColorsIntoChannels\n  });\n  var _worklet_16817866662391_init_data = {\n    code: \"function reactNativeReanimated_interpolateColorTs8(colors){const{_splitColorsIntoChannels,RGBtoHSV}=this.__closure;const{ch1:ch1,ch2:ch2,ch3:ch3,alpha:alpha}=_splitColorsIntoChannels(colors,function(color){const hsvColor=RGBtoHSV(color.r,color.g,color.b);return{ch1:hsvColor.h,ch2:hsvColor.s,ch3:hsvColor.v};});return{h:ch1,s:ch2,v:ch3,a:alpha};}\"\n  };\n  var getInterpolateHSV = function reactNativeReanimated_interpolateColorTs8Factory(_ref8) {\n    var _worklet_16817866662391_init_data = _ref8._worklet_16817866662391_init_data,\n      _splitColorsIntoChannels = _ref8._splitColorsIntoChannels,\n      RGBtoHSV = _ref8.RGBtoHSV;\n    var reactNativeReanimated_interpolateColorTs8 = function (colors) {\n      var _splitColorsIntoChann2 = _splitColorsIntoChannels(colors, color => {\n          var hsvColor = RGBtoHSV(color.r, color.g, color.b);\n          return {\n            ch1: hsvColor.h,\n            ch2: hsvColor.s,\n            ch3: hsvColor.v\n          };\n        }),\n        ch1 = _splitColorsIntoChann2.ch1,\n        ch2 = _splitColorsIntoChann2.ch2,\n        ch3 = _splitColorsIntoChann2.ch3,\n        alpha = _splitColorsIntoChann2.alpha;\n      return {\n        h: ch1,\n        s: ch2,\n        v: ch3,\n        a: alpha\n      };\n    };\n    reactNativeReanimated_interpolateColorTs8.__closure = {\n      _splitColorsIntoChannels,\n      RGBtoHSV\n    };\n    reactNativeReanimated_interpolateColorTs8.__workletHash = 16817866662391;\n    reactNativeReanimated_interpolateColorTs8.__initData = _worklet_16817866662391_init_data;\n    return reactNativeReanimated_interpolateColorTs8;\n  }({\n    _worklet_16817866662391_init_data,\n    _splitColorsIntoChannels,\n    RGBtoHSV: _Colors.RGBtoHSV\n  });\n  var _worklet_4292020092329_init_data = {\n    code: \"function reactNativeReanimated_interpolateColorTs9(colors){const{_splitColorsIntoChannels,culori}=this.__closure;const{ch1:ch1,ch2:ch2,ch3:ch3,alpha:alpha}=_splitColorsIntoChannels(colors,function(color){const labColor=culori.oklab.convert.fromRgb(color);return{ch1:labColor.l,ch2:labColor.a,ch3:labColor.b};});return{l:ch1,a:ch2,b:ch3,alpha:alpha};}\"\n  };\n  var getInterpolateLAB = function reactNativeReanimated_interpolateColorTs9Factory(_ref9) {\n    var _worklet_4292020092329_init_data = _ref9._worklet_4292020092329_init_data,\n      _splitColorsIntoChannels = _ref9._splitColorsIntoChannels,\n      culori = _ref9.culori;\n    var reactNativeReanimated_interpolateColorTs9 = function (colors) {\n      var _splitColorsIntoChann3 = _splitColorsIntoChannels(colors, color => {\n          var labColor = culori.oklab.convert.fromRgb(color);\n          return {\n            ch1: labColor.l,\n            ch2: labColor.a,\n            ch3: labColor.b\n          };\n        }),\n        ch1 = _splitColorsIntoChann3.ch1,\n        ch2 = _splitColorsIntoChann3.ch2,\n        ch3 = _splitColorsIntoChann3.ch3,\n        alpha = _splitColorsIntoChann3.alpha;\n      return {\n        l: ch1,\n        a: ch2,\n        b: ch3,\n        alpha\n      };\n    };\n    reactNativeReanimated_interpolateColorTs9.__closure = {\n      _splitColorsIntoChannels,\n      culori\n    };\n    reactNativeReanimated_interpolateColorTs9.__workletHash = 4292020092329;\n    reactNativeReanimated_interpolateColorTs9.__initData = _worklet_4292020092329_init_data;\n    return reactNativeReanimated_interpolateColorTs9;\n  }({\n    _worklet_4292020092329_init_data,\n    _splitColorsIntoChannels,\n    culori: culori.default\n  });\n\n  /**\n   * Lets you map a value from a range of numbers to a range of colors using\n   * linear interpolation.\n   *\n   * @param value - A number from the `input` range that is going to be mapped to\n   *   the color in the `output` range.\n   * @param inputRange - An array of numbers specifying the input range of the\n   *   interpolation.\n   * @param outputRange - An array of output colors values (eg. \"red\", \"#00FFCC\",\n   *   \"rgba(255, 0, 0, 0.5)\").\n   * @param colorSpace - The color space to use for interpolation. Defaults to\n   *   'RGB'.\n   * @param options - Additional options for interpolation -\n   *   {@link InterpolationOptions}.\n   * @returns The color after interpolation from within the output range in\n   *   rgba(r, g, b, a) format.\n   * @see https://docs.swmansion.com/react-native-reanimated/docs/utilities/interpolateColor\n   */\n  var _worklet_3916696473442_init_data = {\n    code: \"function interpolateColor_reactNativeReanimated_interpolateColorTs10(value,inputRange,outputRange){const{interpolateColorsHSV,getInterpolateHSV,interpolateColorsRGB,getInterpolateRGB,interpolateColorsLAB,getInterpolateLAB}=this.__closure;let colorSpace=arguments.length>3&&arguments[3]!==undefined?arguments[3]:'RGB';let options=arguments.length>4&&arguments[4]!==undefined?arguments[4]:{};if(colorSpace==='HSV'){return interpolateColorsHSV(value,inputRange,getInterpolateHSV(outputRange),options);}else if(colorSpace==='RGB'){return interpolateColorsRGB(value,inputRange,getInterpolateRGB(outputRange),options);}else if(colorSpace==='LAB'){return interpolateColorsLAB(value,inputRange,getInterpolateLAB(outputRange),options);}throw new ReanimatedError(\\\"Invalid color space provided: \\\"+colorSpace+\\\". Supported values are: ['RGB', 'HSV', 'LAB'].\\\");}\"\n  };\n  var interpolateColor = function interpolateColor_reactNativeReanimated_interpolateColorTs10Factory(_ref0) {\n    var _worklet_3916696473442_init_data = _ref0._worklet_3916696473442_init_data,\n      interpolateColorsHSV = _ref0.interpolateColorsHSV,\n      getInterpolateHSV = _ref0.getInterpolateHSV,\n      interpolateColorsRGB = _ref0.interpolateColorsRGB,\n      getInterpolateRGB = _ref0.getInterpolateRGB,\n      interpolateColorsLAB = _ref0.interpolateColorsLAB,\n      getInterpolateLAB = _ref0.getInterpolateLAB;\n    var interpolateColor = function (value, inputRange, outputRange) {\n      var colorSpace = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : 'RGB';\n      var options = arguments.length > 4 && arguments[4] !== undefined ? arguments[4] : {};\n      if (colorSpace === 'HSV') {\n        return interpolateColorsHSV(value, inputRange, getInterpolateHSV(outputRange), options);\n      } else if (colorSpace === 'RGB') {\n        return interpolateColorsRGB(value, inputRange, getInterpolateRGB(outputRange), options);\n      } else if (colorSpace === 'LAB') {\n        return interpolateColorsLAB(value, inputRange, getInterpolateLAB(outputRange), options);\n      }\n      throw new _common.ReanimatedError(`Invalid color space provided: ${colorSpace}. Supported values are: ['RGB', 'HSV', 'LAB'].`);\n    };\n    interpolateColor.__closure = {\n      interpolateColorsHSV,\n      getInterpolateHSV,\n      interpolateColorsRGB,\n      getInterpolateRGB,\n      interpolateColorsLAB,\n      getInterpolateLAB\n    };\n    interpolateColor.__workletHash = 3916696473442;\n    interpolateColor.__initData = _worklet_3916696473442_init_data;\n    return interpolateColor;\n  }({\n    _worklet_3916696473442_init_data,\n    interpolateColorsHSV,\n    getInterpolateHSV,\n    interpolateColorsRGB,\n    getInterpolateRGB,\n    interpolateColorsLAB,\n    getInterpolateLAB\n  });\n  var ColorSpace = /*#__PURE__*/function (ColorSpace) {\n    ColorSpace[ColorSpace[\"RGB\"] = 0] = \"RGB\";\n    ColorSpace[ColorSpace[\"HSV\"] = 1] = \"HSV\";\n    ColorSpace[ColorSpace[\"LAB\"] = 2] = \"LAB\";\n    return ColorSpace;\n  }({});\n  function useInterpolateConfig(inputRange, outputRange) {\n    var colorSpace = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : ColorSpace.RGB;\n    var options = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : {};\n    return (0, _hookUseSharedValue.useSharedValue)({\n      inputRange,\n      outputRange,\n      colorSpace,\n      cache: (0, _core.makeMutable)(null),\n      options\n    });\n  }\n});","lineCount":473,"map":[[2,2,1,0],[2,14,1,12],[4,2,1,13,"Object"],[4,8,1,13],[4,9,1,13,"defineProperty"],[4,23,1,13],[4,24,1,13,"exports"],[4,31,1,13],[5,4,1,13,"value"],[5,9,1,13],[6,2,1,13],[7,2,1,13],[7,11,1,13,"_interopDefault"],[7,27,1,13,"e"],[7,28,1,13],[8,4,1,13],[8,11,1,13,"e"],[8,12,1,13],[8,16,1,13,"e"],[8,17,1,13],[8,18,1,13,"__esModule"],[8,28,1,13],[8,31,1,13,"e"],[8,32,1,13],[9,6,1,13,"default"],[9,13,1,13],[9,15,1,13,"e"],[10,4,1,13],[11,2,1,13],[12,2,19,0,"Object"],[12,8,19,0],[12,9,19,0,"defineProperty"],[12,23,19,0],[12,24,19,0,"exports"],[12,31,19,0],[13,4,19,0,"enumerable"],[13,14,19,0],[14,4,19,0,"get"],[14,7,19,0],[14,18,19,0,"get"],[14,19,19,0],[15,6,19,0],[15,13,19,0,"Extrapolate"],[15,24,19,0],[16,4,19,0],[17,2,19,0],[18,2,313,0,"Object"],[18,8,313,0],[18,9,313,0,"defineProperty"],[18,23,313,0],[18,24,313,0,"exports"],[18,31,313,0],[19,4,313,0,"enumerable"],[19,14,313,0],[20,4,313,0,"get"],[20,7,313,0],[20,18,313,0,"get"],[20,19,313,0],[21,6,313,0],[21,13,313,0,"interpolateColor"],[21,29,313,0],[22,4,313,0],[23,2,313,0],[24,2,351,0,"Object"],[24,8,351,0],[24,9,351,0,"defineProperty"],[24,23,351,0],[24,24,351,0,"exports"],[24,31,351,0],[25,4,351,0,"enumerable"],[25,14,351,0],[26,4,351,0,"get"],[26,7,351,0],[26,18,351,0,"get"],[26,19,351,0],[27,6,351,0],[27,13,351,0,"ColorSpace"],[27,23,351,0],[28,4,351,0],[29,2,351,0],[30,2,365,0,"exports"],[30,9,365,0],[30,10,365,0,"useInterpolateConfig"],[30,30,365,0],[30,33,365,0,"useInterpolateConfig"],[30,53,365,0],[31,2,2,0],[31,6,2,0,"_Colors"],[31,13,2,0],[31,16,2,0,"require"],[31,23,2,0],[31,24,2,0,"_dependencyMap"],[31,38,2,0],[32,2,11,0],[32,6,11,0,"_common"],[32,13,11,0],[32,16,11,0,"require"],[32,23,11,0],[32,24,11,0,"_dependencyMap"],[32,38,11,0],[33,2,13,0],[33,6,13,0,"_core"],[33,11,13,0],[33,14,13,0,"require"],[33,21,13,0],[33,22,13,0,"_dependencyMap"],[33,36,13,0],[34,2,14,0],[34,6,14,0,"_culori"],[34,13,14,0],[34,16,14,0,"require"],[34,23,14,0],[34,24,14,0,"_dependencyMap"],[34,38,14,0],[35,2,14,0],[35,6,14,0,"culori"],[35,12,14,0],[35,15,14,0,"_interopDefault"],[35,30,14,0],[35,31,14,0,"_culori"],[35,38,14,0],[36,2,15,0],[36,6,15,0,"_hookUseSharedValue"],[36,25,15,0],[36,28,15,0,"require"],[36,35,15,0],[36,36,15,0,"_dependencyMap"],[36,50,15,0],[37,2,16,0],[37,6,16,0,"_interpolation"],[37,20,16,0],[37,23,16,0,"require"],[37,30,16,0],[37,31,16,0,"_dependencyMap"],[37,45,16,0],[38,2,18,0],[39,2,19,7],[39,6,19,13,"Extrapolate"],[39,17,19,24],[39,20,19,27,"Extrapolation"],[39,34,19,40],[39,35,19,40,"Extrapolation"],[39,48,19,40],[41,2,21,0],[42,0,22,0],[43,0,23,0],[44,0,24,0],[45,0,25,0],[46,0,26,0],[47,0,27,0],[48,2,21,0],[48,6,21,0,"_worklet_8351409175469_init_data"],[48,38,21,0],[49,4,21,0,"code"],[49,8,21,0],[50,2,21,0],[51,2,33,0],[51,6,33,6,"interpolateColorsHSV"],[51,26,33,26],[51,29,33,29],[51,38,33,29,"reactNativeReanimated_interpolateColorTs1Factory"],[51,87,33,29,"_ref"],[51,91,33,29],[52,4,33,29],[52,8,33,29,"_worklet_8351409175469_init_data"],[52,40,33,29],[52,43,33,29,"_ref"],[52,47,33,29],[52,48,33,29,"_worklet_8351409175469_init_data"],[52,80,33,29],[53,6,69,7,"interpolate"],[53,17,69,18],[53,20,69,18,"_ref"],[53,24,69,18],[53,25,69,7,"interpolate"],[53,36,69,18],[54,6,73,8,"Extrapolation"],[54,19,73,21],[54,22,73,21,"_ref"],[54,26,73,21],[54,27,73,8,"Extrapolation"],[54,40,73,21],[55,6,83,9,"hsvToColor"],[55,16,83,19],[55,19,83,19,"_ref"],[55,23,83,19],[55,24,83,9,"hsvToColor"],[55,34,83,19],[56,4,83,19],[56,8,83,19,"reactNativeReanimated_interpolateColorTs1"],[56,49,83,19],[56,61,83,19,"reactNativeReanimated_interpolateColorTs1"],[56,62,34,2,"value"],[56,67,34,15],[56,69,35,2,"inputRange"],[56,79,35,31],[56,81,36,2,"colors"],[56,87,36,24],[56,89,37,2,"options"],[56,96,37,31],[56,98,38,5],[57,6,40,2],[57,10,40,6,"h"],[57,11,40,7],[57,14,40,10],[57,15,40,11],[58,6,41,2],[58,10,41,2,"_options$useCorrected"],[58,31,41,2],[58,34,41,50,"options"],[58,41,41,57],[58,42,41,10,"useCorrectedHSVInterpolation"],[58,70,41,38],[59,8,41,10,"useCorrectedHSVInterpolation"],[59,36,41,38],[59,39,41,38,"_options$useCorrected"],[59,60,41,38],[59,65,41,38,"undefined"],[59,74,41,38],[59,77,41,41],[59,81,41,45],[59,84,41,45,"_options$useCorrected"],[59,105,41,45],[60,6,42,2],[60,10,42,6,"useCorrectedHSVInterpolation"],[60,38,42,34],[60,40,42,36],[61,8,43,4],[62,8,44,4],[63,8,45,4],[64,8,46,4],[65,8,47,4],[65,12,47,10,"correctedInputRange"],[65,31,47,29],[65,34,47,32],[65,35,47,33,"inputRange"],[65,45,47,43],[65,46,47,44],[65,47,47,45],[65,48,47,46],[65,49,47,47],[66,8,48,4],[66,12,48,10,"originalH"],[66,21,48,19],[66,24,48,22,"colors"],[66,30,48,28],[66,31,48,29,"h"],[66,32,48,30],[67,8,49,4],[67,12,49,10,"correctedH"],[67,22,49,20],[67,25,49,23],[67,26,49,24,"originalH"],[67,35,49,33],[67,36,49,34],[67,37,49,35],[67,38,49,36],[67,39,49,37],[68,8,51,4],[68,13,51,9],[68,17,51,13,"i"],[68,18,51,14],[68,21,51,17],[68,22,51,18],[68,24,51,20,"i"],[68,25,51,21],[68,28,51,24,"originalH"],[68,37,51,33],[68,38,51,34,"length"],[68,44,51,40],[68,46,51,42],[68,48,51,44,"i"],[68,49,51,45],[68,51,51,47],[69,10,52,6],[69,14,52,12,"d"],[69,15,52,13],[69,18,52,16,"originalH"],[69,27,52,25],[69,28,52,26,"i"],[69,29,52,27],[69,30,52,28],[69,33,52,31,"originalH"],[69,42,52,40],[69,43,52,41,"i"],[69,44,52,42],[69,47,52,45],[69,48,52,46],[69,49,52,47],[70,10,53,6],[70,14,53,10,"originalH"],[70,23,53,19],[70,24,53,20,"i"],[70,25,53,21],[70,26,53,22],[70,29,53,25,"originalH"],[70,38,53,34],[70,39,53,35,"i"],[70,40,53,36],[70,43,53,39],[70,44,53,40],[70,45,53,41],[70,49,53,45,"d"],[70,50,53,46],[70,53,53,49],[70,56,53,52],[70,58,53,54],[71,12,54,8,"correctedInputRange"],[71,31,54,27],[71,32,54,28,"push"],[71,36,54,32],[71,37,54,33,"inputRange"],[71,47,54,43],[71,48,54,44,"i"],[71,49,54,45],[71,50,54,46],[71,51,54,47],[72,12,55,8,"correctedInputRange"],[72,31,55,27],[72,32,55,28,"push"],[72,36,55,32],[72,37,55,33,"inputRange"],[72,47,55,43],[72,48,55,44,"i"],[72,49,55,45],[72,50,55,46],[72,53,55,49],[72,60,55,56],[72,61,55,57],[73,12,56,8,"correctedH"],[73,22,56,18],[73,23,56,19,"push"],[73,27,56,23],[73,28,56,24,"originalH"],[73,37,56,33],[73,38,56,34,"i"],[73,39,56,35],[73,40,56,36],[73,43,56,39],[73,44,56,40],[73,45,56,41],[74,12,57,8,"correctedH"],[74,22,57,18],[74,23,57,19,"push"],[74,27,57,23],[74,28,57,24,"originalH"],[74,37,57,33],[74,38,57,34,"i"],[74,39,57,35],[74,40,57,36],[74,41,57,37],[75,10,58,6],[75,11,58,7],[75,17,58,13],[75,21,58,17,"originalH"],[75,30,58,26],[75,31,58,27,"i"],[75,32,58,28],[75,33,58,29],[75,36,58,32,"originalH"],[75,45,58,41],[75,46,58,42,"i"],[75,47,58,43],[75,50,58,46],[75,51,58,47],[75,52,58,48],[75,56,58,52,"d"],[75,57,58,53],[75,64,58,60],[75,66,58,62],[76,12,59,8,"correctedInputRange"],[76,31,59,27],[76,32,59,28,"push"],[76,36,59,32],[76,37,59,33,"inputRange"],[76,47,59,43],[76,48,59,44,"i"],[76,49,59,45],[76,50,59,46],[76,51,59,47],[77,12,60,8,"correctedInputRange"],[77,31,60,27],[77,32,60,28,"push"],[77,36,60,32],[77,37,60,33,"inputRange"],[77,47,60,43],[77,48,60,44,"i"],[77,49,60,45],[77,50,60,46],[77,53,60,49],[77,60,60,56],[77,61,60,57],[78,12,61,8,"correctedH"],[78,22,61,18],[78,23,61,19,"push"],[78,27,61,23],[78,28,61,24,"originalH"],[78,37,61,33],[78,38,61,34,"i"],[78,39,61,35],[78,40,61,36],[78,43,61,39],[78,44,61,40],[78,45,61,41],[79,12,62,8,"correctedH"],[79,22,62,18],[79,23,62,19,"push"],[79,27,62,23],[79,28,62,24,"originalH"],[79,37,62,33],[79,38,62,34,"i"],[79,39,62,35],[79,40,62,36],[79,41,62,37],[80,10,63,6],[80,11,63,7],[80,17,63,13],[81,12,64,8,"correctedInputRange"],[81,31,64,27],[81,32,64,28,"push"],[81,36,64,32],[81,37,64,33,"inputRange"],[81,47,64,43],[81,48,64,44,"i"],[81,49,64,45],[81,50,64,46],[81,51,64,47],[82,12,65,8,"correctedH"],[82,22,65,18],[82,23,65,19,"push"],[82,27,65,23],[82,28,65,24,"originalH"],[82,37,65,33],[82,38,65,34,"i"],[82,39,65,35],[82,40,65,36],[82,41,65,37],[83,10,66,6],[84,8,67,4],[85,8,68,4,"h"],[85,9,68,5],[85,12,69,6],[85,13,69,7,"interpolate"],[85,24,69,18],[85,25,70,8,"value"],[85,30,70,13],[85,32,71,8,"correctedInputRange"],[85,51,71,27],[85,53,72,8,"correctedH"],[85,63,72,18],[85,65,73,8,"Extrapolation"],[85,78,73,21],[85,79,73,22,"CLAMP"],[85,84,74,6],[85,85,74,7],[85,88,75,8],[85,89,75,9],[85,93,76,6],[85,94,76,7],[86,6,77,2],[86,7,77,3],[86,13,77,9],[87,8,78,4,"h"],[87,9,78,5],[87,12,78,8,"interpolate"],[87,23,78,19],[87,24,78,20,"value"],[87,29,78,25],[87,31,78,27,"inputRange"],[87,41,78,37],[87,43,78,39,"colors"],[87,49,78,45],[87,50,78,46,"h"],[87,51,78,47],[87,53,78,49,"Extrapolation"],[87,66,78,62],[87,67,78,63,"CLAMP"],[87,72,78,68],[87,73,78,69],[88,6,79,2],[89,6,80,2],[89,10,80,8,"s"],[89,11,80,9],[89,14,80,12,"interpolate"],[89,25,80,23],[89,26,80,24,"value"],[89,31,80,29],[89,33,80,31,"inputRange"],[89,43,80,41],[89,45,80,43,"colors"],[89,51,80,49],[89,52,80,50,"s"],[89,53,80,51],[89,55,80,53,"Extrapolation"],[89,68,80,66],[89,69,80,67,"CLAMP"],[89,74,80,72],[89,75,80,73],[90,6,81,2],[90,10,81,8,"v"],[90,11,81,9],[90,14,81,12,"interpolate"],[90,25,81,23],[90,26,81,24,"value"],[90,31,81,29],[90,33,81,31,"inputRange"],[90,43,81,41],[90,45,81,43,"colors"],[90,51,81,49],[90,52,81,50,"v"],[90,53,81,51],[90,55,81,53,"Extrapolation"],[90,68,81,66],[90,69,81,67,"CLAMP"],[90,74,81,72],[90,75,81,73],[91,6,82,2],[91,10,82,8,"a"],[91,11,82,9],[91,14,82,12,"interpolate"],[91,25,82,23],[91,26,82,24,"value"],[91,31,82,29],[91,33,82,31,"inputRange"],[91,43,82,41],[91,45,82,43,"colors"],[91,51,82,49],[91,52,82,50,"a"],[91,53,82,51],[91,55,82,53,"Extrapolation"],[91,68,82,66],[91,69,82,67,"CLAMP"],[91,74,82,72],[91,75,82,73],[92,6,83,2],[92,13,83,9,"hsvToColor"],[92,23,83,19],[92,24,83,20,"h"],[92,25,83,21],[92,27,83,23,"s"],[92,28,83,24],[92,30,83,26,"v"],[92,31,83,27],[92,33,83,29,"a"],[92,34,83,30],[92,35,83,31],[93,4,84,0],[93,5,84,1],[94,4,84,1,"reactNativeReanimated_interpolateColorTs1"],[94,45,84,1],[94,46,84,1,"__closure"],[94,55,84,1],[95,6,69,7,"interpolate"],[95,17,69,18],[96,6,73,8,"Extrapolation"],[96,19,73,21],[97,6,83,9,"hsvToColor"],[98,4,83,19],[99,4,83,19,"reactNativeReanimated_interpolateColorTs1"],[99,45,83,19],[99,46,83,19,"__workletHash"],[99,59,83,19],[100,4,83,19,"reactNativeReanimated_interpolateColorTs1"],[100,45,83,19],[100,46,83,19,"__initData"],[100,56,83,19],[100,59,83,19,"_worklet_8351409175469_init_data"],[100,91,83,19],[101,4,83,19],[101,11,83,19,"reactNativeReanimated_interpolateColorTs1"],[101,52,83,19],[102,2,83,19],[102,3,33,29],[103,4,33,29,"_worklet_8351409175469_init_data"],[103,36,33,29],[104,4,69,7,"interpolate"],[104,15,69,18],[104,17,69,7,"interpolate"],[104,31,69,18],[104,32,69,18,"interpolate"],[104,43,69,18],[105,4,73,8,"Extrapolation"],[105,17,73,21],[105,19,73,8,"Extrapolation"],[105,33,73,21],[105,34,73,21,"Extrapolation"],[105,47,73,21],[106,4,83,9,"hsvToColor"],[106,14,83,19],[106,16,83,9,"hsvToColor"],[106,23,83,19],[106,24,83,19,"hsvToColor"],[107,2,83,19],[107,4,84,1],[108,2,84,2],[108,6,84,2,"_worklet_4368433701766_init_data"],[108,38,84,2],[109,4,84,2,"code"],[109,8,84,2],[110,2,84,2],[111,2,86,0],[111,6,86,6,"toLinearSpace"],[111,19,86,19],[111,22,86,22],[111,31,86,22,"reactNativeReanimated_interpolateColorTs2Factory"],[111,80,86,22,"_ref2"],[111,85,86,22],[112,4,86,22],[112,8,86,22,"_worklet_4368433701766_init_data"],[112,40,86,22],[112,43,86,22,"_ref2"],[112,48,86,22],[112,49,86,22,"_worklet_4368433701766_init_data"],[112,81,86,22],[113,4,86,22],[113,8,86,22,"reactNativeReanimated_interpolateColorTs2"],[113,49,86,22],[113,61,86,22,"reactNativeReanimated_interpolateColorTs2"],[113,62,86,23,"x"],[113,63,86,34],[113,65,86,36,"gamma"],[113,70,86,49],[113,72,86,64],[114,6,88,2],[114,13,88,9,"x"],[114,14,88,10],[114,15,88,11,"map"],[114,18,88,14],[114,19,88,16,"v"],[114,20,88,17],[114,24,88,22,"Math"],[114,28,88,26],[114,29,88,27,"pow"],[114,32,88,30],[114,33,88,31,"v"],[114,34,88,32],[114,37,88,35],[114,40,88,38],[114,42,88,40,"gamma"],[114,47,88,45],[114,48,88,46],[114,49,88,47],[115,4,89,0],[115,5,89,1],[116,4,89,1,"reactNativeReanimated_interpolateColorTs2"],[116,45,89,1],[116,46,89,1,"__closure"],[116,55,89,1],[117,4,89,1,"reactNativeReanimated_interpolateColorTs2"],[117,45,89,1],[117,46,89,1,"__workletHash"],[117,59,89,1],[118,4,89,1,"reactNativeReanimated_interpolateColorTs2"],[118,45,89,1],[118,46,89,1,"__initData"],[118,56,89,1],[118,59,89,1,"_worklet_4368433701766_init_data"],[118,91,89,1],[119,4,89,1],[119,11,89,1,"reactNativeReanimated_interpolateColorTs2"],[119,52,89,1],[120,2,89,1],[120,3,86,22],[121,4,86,22,"_worklet_4368433701766_init_data"],[122,2,86,22],[122,4,89,1],[123,2,89,2],[123,6,89,2,"_worklet_6610343372134_init_data"],[123,38,89,2],[124,4,89,2,"code"],[124,8,89,2],[125,2,89,2],[126,2,91,0],[126,6,91,6,"toGammaSpace"],[126,18,91,18],[126,21,91,21],[126,30,91,21,"reactNativeReanimated_interpolateColorTs3Factory"],[126,79,91,21,"_ref3"],[126,84,91,21],[127,4,91,21],[127,8,91,21,"_worklet_6610343372134_init_data"],[127,40,91,21],[127,43,91,21,"_ref3"],[127,48,91,21],[127,49,91,21,"_worklet_6610343372134_init_data"],[127,81,91,21],[128,4,91,21],[128,8,91,21,"reactNativeReanimated_interpolateColorTs3"],[128,49,91,21],[128,61,91,21,"reactNativeReanimated_interpolateColorTs3"],[128,62,91,22,"x"],[128,63,91,31],[128,65,91,33,"gamma"],[128,70,91,46],[128,72,91,59],[129,6,93,2],[129,13,93,9,"Math"],[129,17,93,13],[129,18,93,14,"round"],[129,23,93,19],[129,24,93,20,"Math"],[129,28,93,24],[129,29,93,25,"pow"],[129,32,93,28],[129,33,93,29,"x"],[129,34,93,30],[129,36,93,32],[129,37,93,33],[129,40,93,36,"gamma"],[129,45,93,41],[129,46,93,42],[129,49,93,45],[129,52,93,48],[129,53,93,49],[130,4,94,0],[130,5,94,1],[131,4,94,1,"reactNativeReanimated_interpolateColorTs3"],[131,45,94,1],[131,46,94,1,"__closure"],[131,55,94,1],[132,4,94,1,"reactNativeReanimated_interpolateColorTs3"],[132,45,94,1],[132,46,94,1,"__workletHash"],[132,59,94,1],[133,4,94,1,"reactNativeReanimated_interpolateColorTs3"],[133,45,94,1],[133,46,94,1,"__initData"],[133,56,94,1],[133,59,94,1,"_worklet_6610343372134_init_data"],[133,91,94,1],[134,4,94,1],[134,11,94,1,"reactNativeReanimated_interpolateColorTs3"],[134,52,94,1],[135,2,94,1],[135,3,91,21],[136,4,91,21,"_worklet_6610343372134_init_data"],[137,2,91,21],[137,4,94,1],[138,2,94,2],[138,6,94,2,"_worklet_4309093770970_init_data"],[138,38,94,2],[139,4,94,2,"code"],[139,8,94,2],[140,2,94,2],[141,2,96,0],[141,6,96,6,"interpolateColorsRGB"],[141,26,96,26],[141,29,96,29],[141,38,96,29,"reactNativeReanimated_interpolateColorTs4Factory"],[141,87,96,29,"_ref4"],[141,92,96,29],[142,4,96,29],[142,8,96,29,"_worklet_4309093770970_init_data"],[142,40,96,29],[142,43,96,29,"_ref4"],[142,48,96,29],[142,49,96,29,"_worklet_4309093770970_init_data"],[142,81,96,29],[143,6,106,14,"toLinearSpace"],[143,19,106,27],[143,22,106,27,"_ref4"],[143,27,106,27],[143,28,106,14,"toLinearSpace"],[143,41,106,27],[144,6,110,12,"interpolate"],[144,17,110,23],[144,20,110,23,"_ref4"],[144,25,110,23],[144,26,110,12,"interpolate"],[144,37,110,23],[145,6,110,52,"Extrapolation"],[145,19,110,65],[145,22,110,65,"_ref4"],[145,27,110,65],[145,28,110,52,"Extrapolation"],[145,41,110,65],[146,6,115,11,"rgbaColor"],[146,15,115,20],[146,18,115,20,"_ref4"],[146,23,115,20],[146,24,115,11,"rgbaColor"],[146,33,115,20],[147,6,118,4,"toGammaSpace"],[147,18,118,16],[147,21,118,16,"_ref4"],[147,26,118,16],[147,27,118,4,"toGammaSpace"],[147,39,118,16],[148,4,118,16],[148,8,118,16,"reactNativeReanimated_interpolateColorTs4"],[148,49,118,16],[148,61,118,16,"reactNativeReanimated_interpolateColorTs4"],[148,62,97,2,"value"],[148,67,97,15],[148,69,98,2,"inputRange"],[148,79,98,31],[148,81,99,2,"colors"],[148,87,99,24],[148,89,100,2,"options"],[148,96,100,31],[148,98,101,5],[149,6,103,2],[149,10,103,2,"_options$gamma"],[149,24,103,2],[149,27,103,26,"options"],[149,34,103,33],[149,35,103,10,"gamma"],[149,40,103,15],[150,8,103,10,"gamma"],[150,13,103,15],[150,16,103,15,"_options$gamma"],[150,30,103,15],[150,35,103,15,"undefined"],[150,44,103,15],[150,47,103,18],[150,50,103,21],[150,53,103,21,"_options$gamma"],[150,67,103,21],[151,6,104,2],[151,10,104,11,"outputR"],[151,17,104,18],[151,20,104,47,"colors"],[151,26,104,53],[151,27,104,8,"r"],[151,28,104,9],[152,8,104,23,"outputG"],[152,15,104,30],[152,18,104,47,"colors"],[152,24,104,53],[152,25,104,20,"g"],[152,26,104,21],[153,8,104,35,"outputB"],[153,15,104,42],[153,18,104,47,"colors"],[153,24,104,53],[153,25,104,32,"b"],[153,26,104,33],[154,6,105,2],[154,10,105,6,"gamma"],[154,15,105,11],[154,20,105,16],[154,21,105,17],[154,23,105,19],[155,8,106,4,"outputR"],[155,15,106,11],[155,18,106,14,"toLinearSpace"],[155,31,106,27],[155,32,106,28,"outputR"],[155,39,106,35],[155,41,106,37,"gamma"],[155,46,106,42],[155,47,106,43],[156,8,107,4,"outputG"],[156,15,107,11],[156,18,107,14,"toLinearSpace"],[156,31,107,27],[156,32,107,28,"outputG"],[156,39,107,35],[156,41,107,37,"gamma"],[156,46,107,42],[156,47,107,43],[157,8,108,4,"outputB"],[157,15,108,11],[157,18,108,14,"toLinearSpace"],[157,31,108,27],[157,32,108,28,"outputB"],[157,39,108,35],[157,41,108,37,"gamma"],[157,46,108,42],[157,47,108,43],[158,6,109,2],[159,6,110,2],[159,10,110,8,"r"],[159,11,110,9],[159,14,110,12,"interpolate"],[159,25,110,23],[159,26,110,24,"value"],[159,31,110,29],[159,33,110,31,"inputRange"],[159,43,110,41],[159,45,110,43,"outputR"],[159,52,110,50],[159,54,110,52,"Extrapolation"],[159,67,110,65],[159,68,110,66,"CLAMP"],[159,73,110,71],[159,74,110,72],[160,6,111,2],[160,10,111,8,"g"],[160,11,111,9],[160,14,111,12,"interpolate"],[160,25,111,23],[160,26,111,24,"value"],[160,31,111,29],[160,33,111,31,"inputRange"],[160,43,111,41],[160,45,111,43,"outputG"],[160,52,111,50],[160,54,111,52,"Extrapolation"],[160,67,111,65],[160,68,111,66,"CLAMP"],[160,73,111,71],[160,74,111,72],[161,6,112,2],[161,10,112,8,"b"],[161,11,112,9],[161,14,112,12,"interpolate"],[161,25,112,23],[161,26,112,24,"value"],[161,31,112,29],[161,33,112,31,"inputRange"],[161,43,112,41],[161,45,112,43,"outputB"],[161,52,112,50],[161,54,112,52,"Extrapolation"],[161,67,112,65],[161,68,112,66,"CLAMP"],[161,73,112,71],[161,74,112,72],[162,6,113,2],[162,10,113,8,"a"],[162,11,113,9],[162,14,113,12,"interpolate"],[162,25,113,23],[162,26,113,24,"value"],[162,31,113,29],[162,33,113,31,"inputRange"],[162,43,113,41],[162,45,113,43,"colors"],[162,51,113,49],[162,52,113,50,"a"],[162,53,113,51],[162,55,113,53,"Extrapolation"],[162,68,113,66],[162,69,113,67,"CLAMP"],[162,74,113,72],[162,75,113,73],[163,6,114,2],[163,10,114,6,"gamma"],[163,15,114,11],[163,20,114,16],[163,21,114,17],[163,23,114,19],[164,8,115,4],[164,15,115,11,"rgbaColor"],[164,24,115,20],[164,25,115,21,"r"],[164,26,115,22],[164,28,115,24,"g"],[164,29,115,25],[164,31,115,27,"b"],[164,32,115,28],[164,34,115,30,"a"],[164,35,115,31],[164,36,115,32],[165,6,116,2],[166,6,117,2],[166,13,117,9,"rgbaColor"],[166,22,117,18],[166,23,118,4,"toGammaSpace"],[166,35,118,16],[166,36,118,17,"r"],[166,37,118,18],[166,39,118,20,"gamma"],[166,44,118,25],[166,45,118,26],[166,47,119,4,"toGammaSpace"],[166,59,119,16],[166,60,119,17,"g"],[166,61,119,18],[166,63,119,20,"gamma"],[166,68,119,25],[166,69,119,26],[166,71,120,4,"toGammaSpace"],[166,83,120,16],[166,84,120,17,"b"],[166,85,120,18],[166,87,120,20,"gamma"],[166,92,120,25],[166,93,120,26],[166,95,121,4,"a"],[166,96,122,2],[166,97,122,3],[167,4,123,0],[167,5,123,1],[168,4,123,1,"reactNativeReanimated_interpolateColorTs4"],[168,45,123,1],[168,46,123,1,"__closure"],[168,55,123,1],[169,6,106,14,"toLinearSpace"],[169,19,106,27],[170,6,110,12,"interpolate"],[170,17,110,23],[171,6,110,52,"Extrapolation"],[171,19,110,65],[172,6,115,11,"rgbaColor"],[172,15,115,20],[173,6,118,4,"toGammaSpace"],[174,4,118,16],[175,4,118,16,"reactNativeReanimated_interpolateColorTs4"],[175,45,118,16],[175,46,118,16,"__workletHash"],[175,59,118,16],[176,4,118,16,"reactNativeReanimated_interpolateColorTs4"],[176,45,118,16],[176,46,118,16,"__initData"],[176,56,118,16],[176,59,118,16,"_worklet_4309093770970_init_data"],[176,91,118,16],[177,4,118,16],[177,11,118,16,"reactNativeReanimated_interpolateColorTs4"],[177,52,118,16],[178,2,118,16],[178,3,96,29],[179,4,96,29,"_worklet_4309093770970_init_data"],[179,36,96,29],[180,4,106,14,"toLinearSpace"],[180,17,106,27],[181,4,110,12,"interpolate"],[181,15,110,23],[181,17,110,12,"interpolate"],[181,31,110,23],[181,32,110,23,"interpolate"],[181,43,110,23],[182,4,110,52,"Extrapolation"],[182,17,110,65],[182,19,110,52,"Extrapolation"],[182,33,110,65],[182,34,110,65,"Extrapolation"],[182,47,110,65],[183,4,115,11,"rgbaColor"],[183,13,115,20],[183,15,115,11,"rgbaColor"],[183,22,115,20],[183,23,115,20,"rgbaColor"],[183,32,115,20],[184,4,118,4,"toGammaSpace"],[185,2,118,16],[185,4,123,1],[186,2,123,2],[186,6,123,2,"_worklet_12431767338194_init_data"],[186,39,123,2],[187,4,123,2,"code"],[187,8,123,2],[188,2,123,2],[189,2,125,0],[189,6,125,6,"interpolateColorsLAB"],[189,26,125,26],[189,29,125,29],[189,38,125,29,"reactNativeReanimated_interpolateColorTs5Factory"],[189,87,125,29,"_ref5"],[189,92,125,29],[190,4,125,29],[190,8,125,29,"_worklet_12431767338194_init_data"],[190,41,125,29],[190,44,125,29,"_ref5"],[190,49,125,29],[190,50,125,29,"_worklet_12431767338194_init_data"],[190,83,125,29],[191,6,132,12,"interpolate"],[191,17,132,23],[191,20,132,23,"_ref5"],[191,25,132,23],[191,26,132,12,"interpolate"],[191,37,132,23],[192,6,132,53,"Extrapolation"],[192,19,132,66],[192,22,132,66,"_ref5"],[192,27,132,66],[192,28,132,53,"Extrapolation"],[192,41,132,66],[193,6,146,6,"culori"],[193,12,146,12],[193,15,146,12,"_ref5"],[193,20,146,12],[193,21,146,6,"culori"],[193,27,146,12],[194,6,147,9,"rgbaColor"],[194,15,147,18],[194,18,147,18,"_ref5"],[194,23,147,18],[194,24,147,9,"rgbaColor"],[194,33,147,18],[195,4,147,18],[195,8,147,18,"reactNativeReanimated_interpolateColorTs5"],[195,49,147,18],[195,61,147,18,"reactNativeReanimated_interpolateColorTs5"],[195,62,126,2,"value"],[195,67,126,15],[195,69,127,2,"inputRange"],[195,79,127,31],[195,81,128,2,"colors"],[195,87,128,24],[195,89,129,2,"_options"],[195,97,129,32],[195,99,130,5],[196,6,132,2],[196,10,132,8,"l"],[196,11,132,9],[196,14,132,12,"interpolate"],[196,25,132,23],[196,26,132,24,"value"],[196,31,132,29],[196,33,132,31,"inputRange"],[196,43,132,41],[196,45,132,43,"colors"],[196,51,132,49],[196,52,132,50,"l"],[196,53,132,51],[196,55,132,53,"Extrapolation"],[196,68,132,66],[196,69,132,67,"CLAMP"],[196,74,132,72],[196,75,132,73],[197,6,133,2],[197,10,133,8,"a"],[197,11,133,9],[197,14,133,12,"interpolate"],[197,25,133,23],[197,26,133,24,"value"],[197,31,133,29],[197,33,133,31,"inputRange"],[197,43,133,41],[197,45,133,43,"colors"],[197,51,133,49],[197,52,133,50,"a"],[197,53,133,51],[197,55,133,53,"Extrapolation"],[197,68,133,66],[197,69,133,67,"CLAMP"],[197,74,133,72],[197,75,133,73],[198,6,134,2],[198,10,134,8,"b"],[198,11,134,9],[198,14,134,12,"interpolate"],[198,25,134,23],[198,26,134,24,"value"],[198,31,134,29],[198,33,134,31,"inputRange"],[198,43,134,41],[198,45,134,43,"colors"],[198,51,134,49],[198,52,134,50,"b"],[198,53,134,51],[198,55,134,53,"Extrapolation"],[198,68,134,66],[198,69,134,67,"CLAMP"],[198,74,134,72],[198,75,134,73],[199,6,135,2],[199,10,135,8,"alpha"],[199,15,135,13],[199,18,135,16,"interpolate"],[199,29,135,27],[199,30,136,4,"value"],[199,35,136,9],[199,37,137,4,"inputRange"],[199,47,137,14],[199,49,138,4,"colors"],[199,55,138,10],[199,56,138,11,"alpha"],[199,61,138,16],[199,63,139,4,"Extrapolation"],[199,76,139,17],[199,77,139,18,"CLAMP"],[199,82,140,2],[199,83,140,3],[200,6,141,2],[200,10,141,2,"_culori$oklab$convert"],[200,31,141,2],[200,34,146,6,"culori"],[200,40,146,12],[200,41,146,13,"oklab"],[200,46,146,18],[200,47,146,19,"convert"],[200,54,146,26],[200,55,146,27,"toRgb"],[200,60,146,32],[200,61,146,33],[201,10,146,35,"l"],[201,11,146,36],[202,10,146,38,"a"],[202,11,146,39],[203,10,146,41,"b"],[203,11,146,42],[204,10,146,44,"alpha"],[205,8,146,50],[205,9,146,51],[205,10,146,52],[206,8,142,7,"_r"],[206,10,142,9],[206,13,142,9,"_culori$oklab$convert"],[206,34,142,9],[206,35,142,4,"r"],[206,36,142,5],[207,8,143,7,"_g"],[207,10,143,9],[207,13,143,9,"_culori$oklab$convert"],[207,34,143,9],[207,35,143,4,"g"],[207,36,143,5],[208,8,144,7,"_b"],[208,10,144,9],[208,13,144,9,"_culori$oklab$convert"],[208,34,144,9],[208,35,144,4,"b"],[208,36,144,5],[209,8,145,11,"_alpha"],[209,14,145,17],[209,17,145,17,"_culori$oklab$convert"],[209,38,145,17],[209,39,145,4,"alpha"],[209,44,145,9],[210,6,147,2],[210,13,147,9,"rgbaColor"],[210,22,147,18],[210,23,147,19,"_r"],[210,25,147,21],[210,27,147,23,"_g"],[210,29,147,25],[210,31,147,27,"_b"],[210,33,147,29],[210,35,147,31,"_alpha"],[210,41,147,37],[210,42,147,38],[211,4,148,0],[211,5,148,1],[212,4,148,1,"reactNativeReanimated_interpolateColorTs5"],[212,45,148,1],[212,46,148,1,"__closure"],[212,55,148,1],[213,6,132,12,"interpolate"],[213,17,132,23],[214,6,132,53,"Extrapolation"],[214,19,132,66],[215,6,146,6,"culori"],[215,12,146,12],[216,6,147,9,"rgbaColor"],[217,4,147,18],[218,4,147,18,"reactNativeReanimated_interpolateColorTs5"],[218,45,147,18],[218,46,147,18,"__workletHash"],[218,59,147,18],[219,4,147,18,"reactNativeReanimated_interpolateColorTs5"],[219,45,147,18],[219,46,147,18,"__initData"],[219,56,147,18],[219,59,147,18,"_worklet_12431767338194_init_data"],[219,92,147,18],[220,4,147,18],[220,11,147,18,"reactNativeReanimated_interpolateColorTs5"],[220,52,147,18],[221,2,147,18],[221,3,125,29],[222,4,125,29,"_worklet_12431767338194_init_data"],[222,37,125,29],[223,4,132,12,"interpolate"],[223,15,132,23],[223,17,132,12,"interpolate"],[223,31,132,23],[223,32,132,23,"interpolate"],[223,43,132,23],[224,4,132,53,"Extrapolation"],[224,17,132,66],[224,19,132,53,"Extrapolation"],[224,33,132,66],[224,34,132,66,"Extrapolation"],[224,47,132,66],[225,4,146,6,"culori"],[225,10,146,12],[225,12,146,6,"culori"],[225,18,146,12],[225,19,146,12,"default"],[225,26,146,12],[226,4,147,9,"rgbaColor"],[226,13,147,18],[226,15,147,9,"rgbaColor"],[226,22,147,18],[226,23,147,18,"rgbaColor"],[227,2,147,18],[227,4,148,1],[228,2,148,2],[228,6,148,2,"_worklet_14521513267525_init_data"],[228,39,148,2],[229,4,148,2,"code"],[229,8,148,2],[230,2,148,2],[231,2,150,0],[231,6,150,6,"_splitColorsIntoChannels"],[231,30,150,30],[231,33,150,33],[231,42,150,33,"reactNativeReanimated_interpolateColorTs6Factory"],[231,91,150,33,"_ref6"],[231,96,150,33],[232,4,150,33],[232,8,150,33,"_worklet_14521513267525_init_data"],[232,41,150,33],[232,44,150,33,"_ref6"],[232,49,150,33],[232,50,150,33,"_worklet_14521513267525_init_data"],[232,83,150,33],[233,6,171,27,"processColor"],[233,18,171,39],[233,21,171,39,"_ref6"],[233,26,171,39],[233,27,171,27,"processColor"],[233,39,171,39],[234,6,174,11,"red"],[234,9,174,14],[234,12,174,14,"_ref6"],[234,17,174,14],[234,18,174,11,"red"],[234,21,174,14],[235,6,175,11,"green"],[235,11,175,16],[235,14,175,16,"_ref6"],[235,19,175,16],[235,20,175,11,"green"],[235,25,175,16],[236,6,176,11,"blue"],[236,10,176,15],[236,13,176,15,"_ref6"],[236,18,176,15],[236,19,176,11,"blue"],[236,23,176,15],[237,6,182,17,"opacity"],[237,13,182,24],[237,16,182,24,"_ref6"],[237,21,182,24],[237,22,182,17,"opacity"],[237,29,182,24],[238,4,182,24],[238,8,182,24,"reactNativeReanimated_interpolateColorTs6"],[238,49,182,24],[238,61,182,24,"reactNativeReanimated_interpolateColorTs6"],[238,62,151,2,"colors"],[238,68,151,38],[238,70,152,2,"convFromRgb"],[238,81,156,3],[238,83,162,5],[239,6,164,2],[239,10,164,8,"ch1"],[239,13,164,21],[239,16,164,24],[239,18,164,26],[240,6,165,2],[240,10,165,8,"ch2"],[240,13,165,21],[240,16,165,24],[240,18,165,26],[241,6,166,2],[241,10,166,8,"ch3"],[241,13,166,21],[241,16,166,24],[241,18,166,26],[242,6,167,2],[242,10,167,8,"alpha"],[242,15,167,23],[242,18,167,26],[242,20,167,28],[243,6,169,2],[243,11,169,7],[243,15,169,11,"i"],[243,16,169,12],[243,19,169,15],[243,20,169,16],[243,22,169,18,"i"],[243,23,169,19],[243,26,169,22,"colors"],[243,32,169,28],[243,33,169,29,"length"],[243,39,169,35],[243,41,169,37,"i"],[243,42,169,38],[243,44,169,40],[243,46,169,42],[244,8,170,4],[244,12,170,10,"color"],[244,17,170,15],[244,20,170,18,"colors"],[244,26,170,24],[244,27,170,25,"i"],[244,28,170,26],[244,29,170,27],[245,8,171,4],[245,12,171,10,"processedColor"],[245,26,171,24],[245,29,171,27,"processColor"],[245,41,171,39],[245,42,171,40,"color"],[245,47,171,45],[245,48,171,46],[246,8,172,4],[246,12,172,8],[246,19,172,15,"processedColor"],[246,33,172,29],[246,38,172,34],[246,46,172,42],[246,48,172,44],[247,10,173,6],[247,14,173,12,"convertedColor"],[247,28,173,26],[247,31,173,29,"convFromRgb"],[247,42,173,40],[247,43,173,41],[248,12,174,8,"r"],[248,13,174,9],[248,15,174,11,"red"],[248,18,174,14],[248,19,174,15,"processedColor"],[248,33,174,29],[248,34,174,30],[249,12,175,8,"g"],[249,13,175,9],[249,15,175,11,"green"],[249,20,175,16],[249,21,175,17,"processedColor"],[249,35,175,31],[249,36,175,32],[250,12,176,8,"b"],[250,13,176,9],[250,15,176,11,"blue"],[250,19,176,15],[250,20,176,16,"processedColor"],[250,34,176,30],[251,10,177,6],[251,11,177,7],[251,12,177,8],[252,10,179,6,"ch1"],[252,13,179,9],[252,14,179,10,"push"],[252,18,179,14],[252,19,179,15,"convertedColor"],[252,33,179,29],[252,34,179,30,"ch1"],[252,37,179,33],[252,38,179,34],[253,10,180,6,"ch2"],[253,13,180,9],[253,14,180,10,"push"],[253,18,180,14],[253,19,180,15,"convertedColor"],[253,33,180,29],[253,34,180,30,"ch2"],[253,37,180,33],[253,38,180,34],[254,10,181,6,"ch3"],[254,13,181,9],[254,14,181,10,"push"],[254,18,181,14],[254,19,181,15,"convertedColor"],[254,33,181,29],[254,34,181,30,"ch3"],[254,37,181,33],[254,38,181,34],[255,10,182,6,"alpha"],[255,15,182,11],[255,16,182,12,"push"],[255,20,182,16],[255,21,182,17,"opacity"],[255,28,182,24],[255,29,182,25,"processedColor"],[255,43,182,39],[255,44,182,40],[255,45,182,41],[256,8,183,4],[257,6,184,2],[258,6,186,2],[258,13,186,9],[259,8,187,4,"ch1"],[259,11,187,7],[260,8,188,4,"ch2"],[260,11,188,7],[261,8,189,4,"ch3"],[261,11,189,7],[262,8,190,4,"alpha"],[263,6,191,2],[263,7,191,3],[264,4,192,0],[264,5,192,1],[265,4,192,1,"reactNativeReanimated_interpolateColorTs6"],[265,45,192,1],[265,46,192,1,"__closure"],[265,55,192,1],[266,6,171,27,"processColor"],[266,18,171,39],[267,6,174,11,"red"],[267,9,174,14],[268,6,175,11,"green"],[268,11,175,16],[269,6,176,11,"blue"],[269,10,176,15],[270,6,182,17,"opacity"],[271,4,182,24],[272,4,182,24,"reactNativeReanimated_interpolateColorTs6"],[272,45,182,24],[272,46,182,24,"__workletHash"],[272,59,182,24],[273,4,182,24,"reactNativeReanimated_interpolateColorTs6"],[273,45,182,24],[273,46,182,24,"__initData"],[273,56,182,24],[273,59,182,24,"_worklet_14521513267525_init_data"],[273,92,182,24],[274,4,182,24],[274,11,182,24,"reactNativeReanimated_interpolateColorTs6"],[274,52,182,24],[275,2,182,24],[275,3,150,33],[276,4,150,33,"_worklet_14521513267525_init_data"],[276,37,150,33],[277,4,171,27,"processColor"],[277,16,171,39],[277,18,171,27,"processColor"],[277,25,171,39],[277,26,171,39,"processColor"],[277,38,171,39],[278,4,174,11,"red"],[278,7,174,14],[278,9,174,11,"red"],[278,16,174,14],[278,17,174,14,"red"],[278,20,174,14],[279,4,175,11,"green"],[279,9,175,16],[279,11,175,11,"green"],[279,18,175,16],[279,19,175,16,"green"],[279,24,175,16],[280,4,176,11,"blue"],[280,8,176,15],[280,10,176,11,"blue"],[280,17,176,15],[280,18,176,15,"blue"],[280,22,176,15],[281,4,182,17,"opacity"],[281,11,182,24],[281,13,182,17,"opacity"],[281,20,182,24],[281,21,182,24,"opacity"],[282,2,182,24],[282,4,192,1],[283,2,192,2],[283,6,192,2,"_worklet_8624448141679_init_data"],[283,38,192,2],[284,4,192,2,"code"],[284,8,192,2],[285,2,192,2],[286,2,201,0],[286,6,201,6,"getInterpolateRGB"],[286,23,201,23],[286,26,201,26],[286,35,201,26,"reactNativeReanimated_interpolateColorTs7Factory"],[286,84,201,26,"_ref7"],[286,89,201,26],[287,4,201,26],[287,8,201,26,"_worklet_8624448141679_init_data"],[287,40,201,26],[287,43,201,26,"_ref7"],[287,48,201,26],[287,49,201,26,"_worklet_8624448141679_init_data"],[287,81,201,26],[288,6,205,35,"_splitColorsIntoChannels"],[288,30,205,59],[288,33,205,59,"_ref7"],[288,38,205,59],[288,39,205,35,"_splitColorsIntoChannels"],[288,63,205,59],[289,4,205,59],[289,8,205,59,"reactNativeReanimated_interpolateColorTs7"],[289,49,205,59],[289,61,205,59,"reactNativeReanimated_interpolateColorTs7"],[289,62,202,2,"colors"],[289,68,202,38],[289,70,203,21],[290,6,205,2],[290,10,205,2,"_splitColorsIntoChann"],[290,31,205,2],[290,34,205,35,"_splitColorsIntoChannels"],[290,58,205,59],[290,59,206,4,"colors"],[290,65,206,10],[290,67,207,5,"color"],[290,72,207,10],[290,77,207,16],[291,10,208,6,"ch1"],[291,13,208,9],[291,15,208,11,"color"],[291,20,208,16],[291,21,208,17,"r"],[291,22,208,18],[292,10,209,6,"ch2"],[292,13,209,9],[292,15,209,11,"color"],[292,20,209,16],[292,21,209,17,"g"],[292,22,209,18],[293,10,210,6,"ch3"],[293,13,210,9],[293,15,210,11,"color"],[293,20,210,16],[293,21,210,17,"b"],[294,8,211,4],[294,9,211,5],[294,10,212,2],[294,11,212,3],[295,8,205,10,"ch1"],[295,11,205,13],[295,14,205,13,"_splitColorsIntoChann"],[295,35,205,13],[295,36,205,10,"ch1"],[295,39,205,13],[296,8,205,15,"ch2"],[296,11,205,18],[296,14,205,18,"_splitColorsIntoChann"],[296,35,205,18],[296,36,205,15,"ch2"],[296,39,205,18],[297,8,205,20,"ch3"],[297,11,205,23],[297,14,205,23,"_splitColorsIntoChann"],[297,35,205,23],[297,36,205,20,"ch3"],[297,39,205,23],[298,8,205,25,"alpha"],[298,13,205,30],[298,16,205,30,"_splitColorsIntoChann"],[298,37,205,30],[298,38,205,25,"alpha"],[298,43,205,30],[299,6,214,2],[299,13,214,9],[300,8,215,4,"r"],[300,9,215,5],[300,11,215,7,"ch1"],[300,14,215,10],[301,8,216,4,"g"],[301,9,216,5],[301,11,216,7,"ch2"],[301,14,216,10],[302,8,217,4,"b"],[302,9,217,5],[302,11,217,7,"ch3"],[302,14,217,10],[303,8,218,4,"a"],[303,9,218,5],[303,11,218,7,"alpha"],[304,6,219,2],[304,7,219,3],[305,4,220,0],[305,5,220,1],[306,4,220,1,"reactNativeReanimated_interpolateColorTs7"],[306,45,220,1],[306,46,220,1,"__closure"],[306,55,220,1],[307,6,205,35,"_splitColorsIntoChannels"],[308,4,205,59],[309,4,205,59,"reactNativeReanimated_interpolateColorTs7"],[309,45,205,59],[309,46,205,59,"__workletHash"],[309,59,205,59],[310,4,205,59,"reactNativeReanimated_interpolateColorTs7"],[310,45,205,59],[310,46,205,59,"__initData"],[310,56,205,59],[310,59,205,59,"_worklet_8624448141679_init_data"],[310,91,205,59],[311,4,205,59],[311,11,205,59,"reactNativeReanimated_interpolateColorTs7"],[311,52,205,59],[312,2,205,59],[312,3,201,26],[313,4,201,26,"_worklet_8624448141679_init_data"],[313,36,201,26],[314,4,205,35,"_splitColorsIntoChannels"],[315,2,205,59],[315,4,220,1],[316,2,220,2],[316,6,220,2,"_worklet_16817866662391_init_data"],[316,39,220,2],[317,4,220,2,"code"],[317,8,220,2],[318,2,220,2],[319,2,229,0],[319,6,229,6,"getInterpolateHSV"],[319,23,229,23],[319,26,229,26],[319,35,229,26,"reactNativeReanimated_interpolateColorTs8Factory"],[319,84,229,26,"_ref8"],[319,89,229,26],[320,4,229,26],[320,8,229,26,"_worklet_16817866662391_init_data"],[320,41,229,26],[320,44,229,26,"_ref8"],[320,49,229,26],[320,50,229,26,"_worklet_16817866662391_init_data"],[320,83,229,26],[321,6,233,35,"_splitColorsIntoChannels"],[321,30,233,59],[321,33,233,59,"_ref8"],[321,38,233,59],[321,39,233,35,"_splitColorsIntoChannels"],[321,63,233,59],[322,6,234,21,"RGBtoHSV"],[322,14,234,29],[322,17,234,29,"_ref8"],[322,22,234,29],[322,23,234,21,"RGBtoHSV"],[322,31,234,29],[323,4,234,29],[323,8,234,29,"reactNativeReanimated_interpolateColorTs8"],[323,49,234,29],[323,61,234,29,"reactNativeReanimated_interpolateColorTs8"],[323,62,230,2,"colors"],[323,68,230,38],[323,70,231,21],[324,6,233,2],[324,10,233,2,"_splitColorsIntoChann2"],[324,32,233,2],[324,35,233,35,"_splitColorsIntoChannels"],[324,59,233,59],[324,60,233,60,"colors"],[324,66,233,66],[324,68,233,69,"color"],[324,73,233,74],[324,77,233,79],[325,10,234,4],[325,14,234,10,"hsvColor"],[325,22,234,18],[325,25,234,21,"RGBtoHSV"],[325,33,234,29],[325,34,234,30,"color"],[325,39,234,35],[325,40,234,36,"r"],[325,41,234,37],[325,43,234,39,"color"],[325,48,234,44],[325,49,234,45,"g"],[325,50,234,46],[325,52,234,48,"color"],[325,57,234,53],[325,58,234,54,"b"],[325,59,234,55],[325,60,234,56],[326,10,235,4],[326,17,235,11],[327,12,236,6,"ch1"],[327,15,236,9],[327,17,236,11,"hsvColor"],[327,25,236,19],[327,26,236,20,"h"],[327,27,236,21],[328,12,237,6,"ch2"],[328,15,237,9],[328,17,237,11,"hsvColor"],[328,25,237,19],[328,26,237,20,"s"],[328,27,237,21],[329,12,238,6,"ch3"],[329,15,238,9],[329,17,238,11,"hsvColor"],[329,25,238,19],[329,26,238,20,"v"],[330,10,239,4],[330,11,239,5],[331,8,240,2],[331,9,240,3],[331,10,240,4],[332,8,233,10,"ch1"],[332,11,233,13],[332,14,233,13,"_splitColorsIntoChann2"],[332,36,233,13],[332,37,233,10,"ch1"],[332,40,233,13],[333,8,233,15,"ch2"],[333,11,233,18],[333,14,233,18,"_splitColorsIntoChann2"],[333,36,233,18],[333,37,233,15,"ch2"],[333,40,233,18],[334,8,233,20,"ch3"],[334,11,233,23],[334,14,233,23,"_splitColorsIntoChann2"],[334,36,233,23],[334,37,233,20,"ch3"],[334,40,233,23],[335,8,233,25,"alpha"],[335,13,233,30],[335,16,233,30,"_splitColorsIntoChann2"],[335,38,233,30],[335,39,233,25,"alpha"],[335,44,233,30],[336,6,242,2],[336,13,242,9],[337,8,243,4,"h"],[337,9,243,5],[337,11,243,7,"ch1"],[337,14,243,10],[338,8,244,4,"s"],[338,9,244,5],[338,11,244,7,"ch2"],[338,14,244,10],[339,8,245,4,"v"],[339,9,245,5],[339,11,245,7,"ch3"],[339,14,245,10],[340,8,246,4,"a"],[340,9,246,5],[340,11,246,7,"alpha"],[341,6,247,2],[341,7,247,3],[342,4,248,0],[342,5,248,1],[343,4,248,1,"reactNativeReanimated_interpolateColorTs8"],[343,45,248,1],[343,46,248,1,"__closure"],[343,55,248,1],[344,6,233,35,"_splitColorsIntoChannels"],[344,30,233,59],[345,6,234,21,"RGBtoHSV"],[346,4,234,29],[347,4,234,29,"reactNativeReanimated_interpolateColorTs8"],[347,45,234,29],[347,46,234,29,"__workletHash"],[347,59,234,29],[348,4,234,29,"reactNativeReanimated_interpolateColorTs8"],[348,45,234,29],[348,46,234,29,"__initData"],[348,56,234,29],[348,59,234,29,"_worklet_16817866662391_init_data"],[348,92,234,29],[349,4,234,29],[349,11,234,29,"reactNativeReanimated_interpolateColorTs8"],[349,52,234,29],[350,2,234,29],[350,3,229,26],[351,4,229,26,"_worklet_16817866662391_init_data"],[351,37,229,26],[352,4,233,35,"_splitColorsIntoChannels"],[352,28,233,59],[353,4,234,21,"RGBtoHSV"],[353,12,234,29],[353,14,234,21,"RGBtoHSV"],[353,21,234,29],[353,22,234,29,"RGBtoHSV"],[354,2,234,29],[354,4,248,1],[355,2,248,2],[355,6,248,2,"_worklet_4292020092329_init_data"],[355,38,248,2],[356,4,248,2,"code"],[356,8,248,2],[357,2,248,2],[358,2,257,0],[358,6,257,6,"getInterpolateLAB"],[358,23,257,23],[358,26,257,26],[358,35,257,26,"reactNativeReanimated_interpolateColorTs9Factory"],[358,84,257,26,"_ref9"],[358,89,257,26],[359,4,257,26],[359,8,257,26,"_worklet_4292020092329_init_data"],[359,40,257,26],[359,43,257,26,"_ref9"],[359,48,257,26],[359,49,257,26,"_worklet_4292020092329_init_data"],[359,81,257,26],[360,6,262,35,"_splitColorsIntoChannels"],[360,30,262,59],[360,33,262,59,"_ref9"],[360,38,262,59],[360,39,262,35,"_splitColorsIntoChannels"],[360,63,262,59],[361,6,263,21,"culori"],[361,12,263,27],[361,15,263,27,"_ref9"],[361,20,263,27],[361,21,263,21,"culori"],[361,27,263,27],[362,4,263,27],[362,8,263,27,"reactNativeReanimated_interpolateColorTs9"],[362,49,263,27],[362,61,263,27,"reactNativeReanimated_interpolateColorTs9"],[362,62,258,2,"colors"],[362,68,258,38],[362,70,259,21],[363,6,262,2],[363,10,262,2,"_splitColorsIntoChann3"],[363,32,262,2],[363,35,262,35,"_splitColorsIntoChannels"],[363,59,262,59],[363,60,262,60,"colors"],[363,66,262,66],[363,68,262,69,"color"],[363,73,262,74],[363,77,262,79],[364,10,263,4],[364,14,263,10,"labColor"],[364,22,263,18],[364,25,263,21,"culori"],[364,31,263,27],[364,32,263,28,"oklab"],[364,37,263,33],[364,38,263,34,"convert"],[364,45,263,41],[364,46,263,42,"fromRgb"],[364,53,263,49],[364,54,263,50,"color"],[364,59,263,55],[364,60,263,56],[365,10,264,4],[365,17,264,11],[366,12,265,6,"ch1"],[366,15,265,9],[366,17,265,11,"labColor"],[366,25,265,19],[366,26,265,20,"l"],[366,27,265,21],[367,12,266,6,"ch2"],[367,15,266,9],[367,17,266,11,"labColor"],[367,25,266,19],[367,26,266,20,"a"],[367,27,266,21],[368,12,267,6,"ch3"],[368,15,267,9],[368,17,267,11,"labColor"],[368,25,267,19],[368,26,267,20,"b"],[369,10,268,4],[369,11,268,5],[370,8,269,2],[370,9,269,3],[370,10,269,4],[371,8,262,10,"ch1"],[371,11,262,13],[371,14,262,13,"_splitColorsIntoChann3"],[371,36,262,13],[371,37,262,10,"ch1"],[371,40,262,13],[372,8,262,15,"ch2"],[372,11,262,18],[372,14,262,18,"_splitColorsIntoChann3"],[372,36,262,18],[372,37,262,15,"ch2"],[372,40,262,18],[373,8,262,20,"ch3"],[373,11,262,23],[373,14,262,23,"_splitColorsIntoChann3"],[373,36,262,23],[373,37,262,20,"ch3"],[373,40,262,23],[374,8,262,25,"alpha"],[374,13,262,30],[374,16,262,30,"_splitColorsIntoChann3"],[374,38,262,30],[374,39,262,25,"alpha"],[374,44,262,30],[375,6,271,2],[375,13,271,9],[376,8,272,4,"l"],[376,9,272,5],[376,11,272,7,"ch1"],[376,14,272,10],[377,8,273,4,"a"],[377,9,273,5],[377,11,273,7,"ch2"],[377,14,273,10],[378,8,274,4,"b"],[378,9,274,5],[378,11,274,7,"ch3"],[378,14,274,10],[379,8,275,4,"alpha"],[380,6,276,2],[380,7,276,3],[381,4,277,0],[381,5,277,1],[382,4,277,1,"reactNativeReanimated_interpolateColorTs9"],[382,45,277,1],[382,46,277,1,"__closure"],[382,55,277,1],[383,6,262,35,"_splitColorsIntoChannels"],[383,30,262,59],[384,6,263,21,"culori"],[385,4,263,27],[386,4,263,27,"reactNativeReanimated_interpolateColorTs9"],[386,45,263,27],[386,46,263,27,"__workletHash"],[386,59,263,27],[387,4,263,27,"reactNativeReanimated_interpolateColorTs9"],[387,45,263,27],[387,46,263,27,"__initData"],[387,56,263,27],[387,59,263,27,"_worklet_4292020092329_init_data"],[387,91,263,27],[388,4,263,27],[388,11,263,27,"reactNativeReanimated_interpolateColorTs9"],[388,52,263,27],[389,2,263,27],[389,3,257,26],[390,4,257,26,"_worklet_4292020092329_init_data"],[390,36,257,26],[391,4,262,35,"_splitColorsIntoChannels"],[391,28,262,59],[392,4,263,21,"culori"],[392,10,263,27],[392,12,263,21,"culori"],[392,18,263,27],[392,19,263,27,"default"],[393,2,263,27],[393,4,277,1],[395,2,279,0],[396,0,280,0],[397,0,281,0],[398,0,282,0],[399,0,283,0],[400,0,284,0],[401,0,285,0],[402,0,286,0],[403,0,287,0],[404,0,288,0],[405,0,289,0],[406,0,290,0],[407,0,291,0],[408,0,292,0],[409,0,293,0],[410,0,294,0],[411,0,295,0],[412,0,296,0],[413,2,279,0],[413,6,279,0,"_worklet_3916696473442_init_data"],[413,38,279,0],[414,4,279,0,"code"],[414,8,279,0],[415,2,279,0],[416,2,279,0],[416,6,279,0,"interpolateColor"],[416,22,279,0],[416,25,313,7],[416,34,313,7,"interpolateColor_reactNativeReanimated_interpolateColorTs10Factory"],[416,101,313,7,"_ref0"],[416,106,313,7],[417,4,313,7],[417,8,313,7,"_worklet_3916696473442_init_data"],[417,40,313,7],[417,43,313,7,"_ref0"],[417,48,313,7],[417,49,313,7,"_worklet_3916696473442_init_data"],[417,81,313,7],[418,6,322,11,"interpolateColorsHSV"],[418,26,322,31],[418,29,322,31,"_ref0"],[418,34,322,31],[418,35,322,11,"interpolateColorsHSV"],[418,55,322,31],[419,6,325,6,"getInterpolateHSV"],[419,23,325,23],[419,26,325,23,"_ref0"],[419,31,325,23],[419,32,325,6,"getInterpolateHSV"],[419,49,325,23],[420,6,329,11,"interpolateColorsRGB"],[420,26,329,31],[420,29,329,31,"_ref0"],[420,34,329,31],[420,35,329,11,"interpolateColorsRGB"],[420,55,329,31],[421,6,332,6,"getInterpolateRGB"],[421,23,332,23],[421,26,332,23,"_ref0"],[421,31,332,23],[421,32,332,6,"getInterpolateRGB"],[421,49,332,23],[422,6,336,11,"interpolateColorsLAB"],[422,26,336,31],[422,29,336,31,"_ref0"],[422,34,336,31],[422,35,336,11,"interpolateColorsLAB"],[422,55,336,31],[423,6,339,6,"getInterpolateLAB"],[423,23,339,23],[423,26,339,23,"_ref0"],[423,31,339,23],[423,32,339,6,"getInterpolateLAB"],[423,49,339,23],[424,4,339,23],[424,8,339,23,"interpolateColor"],[424,24,339,23],[424,36,339,23,"interpolateColor"],[424,37,314,2,"value"],[424,42,314,15],[424,44,315,2,"inputRange"],[424,54,315,31],[424,56,316,2,"outputRange"],[424,67,316,43],[424,69,319,19],[425,6,319,19],[425,10,317,2,"colorSpace"],[425,20,317,35],[425,23,317,35,"arguments"],[425,32,317,35],[425,33,317,35,"length"],[425,39,317,35],[425,47,317,35,"arguments"],[425,56,317,35],[425,64,317,35,"undefined"],[425,73,317,35],[425,76,317,35,"arguments"],[425,85,317,35],[425,91,317,38],[425,96,317,43],[426,6,317,43],[426,10,318,2,"options"],[426,17,318,31],[426,20,318,31,"arguments"],[426,29,318,31],[426,30,318,31,"length"],[426,36,318,31],[426,44,318,31,"arguments"],[426,53,318,31],[426,61,318,31,"undefined"],[426,70,318,31],[426,73,318,31,"arguments"],[426,82,318,31],[426,88,318,34],[426,89,318,35],[426,90,318,36],[427,6,321,2],[427,10,321,6,"colorSpace"],[427,20,321,16],[427,25,321,21],[427,30,321,26],[427,32,321,28],[428,8,322,4],[428,15,322,11,"interpolateColorsHSV"],[428,35,322,31],[428,36,323,6,"value"],[428,41,323,11],[428,43,324,6,"inputRange"],[428,53,324,16],[428,55,325,6,"getInterpolateHSV"],[428,72,325,23],[428,73,325,24,"outputRange"],[428,84,325,35],[428,85,325,36],[428,87,326,6,"options"],[428,94,327,4],[428,95,327,5],[429,6,328,2],[429,7,328,3],[429,13,328,9],[429,17,328,13,"colorSpace"],[429,27,328,23],[429,32,328,28],[429,37,328,33],[429,39,328,35],[430,8,329,4],[430,15,329,11,"interpolateColorsRGB"],[430,35,329,31],[430,36,330,6,"value"],[430,41,330,11],[430,43,331,6,"inputRange"],[430,53,331,16],[430,55,332,6,"getInterpolateRGB"],[430,72,332,23],[430,73,332,24,"outputRange"],[430,84,332,35],[430,85,332,36],[430,87,333,6,"options"],[430,94,334,4],[430,95,334,5],[431,6,335,2],[431,7,335,3],[431,13,335,9],[431,17,335,13,"colorSpace"],[431,27,335,23],[431,32,335,28],[431,37,335,33],[431,39,335,35],[432,8,336,4],[432,15,336,11,"interpolateColorsLAB"],[432,35,336,31],[432,36,337,6,"value"],[432,41,337,11],[432,43,338,6,"inputRange"],[432,53,338,16],[432,55,339,6,"getInterpolateLAB"],[432,72,339,23],[432,73,339,24,"outputRange"],[432,84,339,35],[432,85,339,36],[432,87,340,6,"options"],[432,94,341,4],[432,95,341,5],[433,6,342,2],[434,6,344,2],[434,12,344,8],[434,16,344,12,"ReanimatedError"],[434,23,344,27],[434,24,344,27,"ReanimatedError"],[434,39,344,27],[434,40,345,4],[434,73,346,6,"colorSpace"],[434,83,346,16],[434,131,348,2],[434,132,348,3],[435,4,349,0],[435,5,349,1],[436,4,349,1,"interpolateColor"],[436,20,349,1],[436,21,349,1,"__closure"],[436,30,349,1],[437,6,322,11,"interpolateColorsHSV"],[437,26,322,31],[438,6,325,6,"getInterpolateHSV"],[438,23,325,23],[439,6,329,11,"interpolateColorsRGB"],[439,26,329,31],[440,6,332,6,"getInterpolateRGB"],[440,23,332,23],[441,6,336,11,"interpolateColorsLAB"],[441,26,336,31],[442,6,339,6,"getInterpolateLAB"],[443,4,339,23],[444,4,339,23,"interpolateColor"],[444,20,339,23],[444,21,339,23,"__workletHash"],[444,34,339,23],[445,4,339,23,"interpolateColor"],[445,20,339,23],[445,21,339,23,"__initData"],[445,31,339,23],[445,34,339,23,"_worklet_3916696473442_init_data"],[445,66,339,23],[446,4,339,23],[446,11,339,23,"interpolateColor"],[446,27,339,23],[447,2,339,23],[447,3,313,7],[448,4,313,7,"_worklet_3916696473442_init_data"],[448,36,313,7],[449,4,322,11,"interpolateColorsHSV"],[449,24,322,31],[450,4,325,6,"getInterpolateHSV"],[450,21,325,23],[451,4,329,11,"interpolateColorsRGB"],[451,24,329,31],[452,4,332,6,"getInterpolateRGB"],[452,21,332,23],[453,4,336,11,"interpolateColorsLAB"],[453,24,336,31],[454,4,339,6,"getInterpolateLAB"],[455,2,339,23],[456,2,339,23],[456,6,351,12,"ColorSpace"],[456,16,351,22],[456,42,351,12,"ColorSpace"],[456,52,351,22],[457,4,351,12,"ColorSpace"],[457,14,351,22],[457,15,351,12,"ColorSpace"],[457,25,351,22],[458,4,351,12,"ColorSpace"],[458,14,351,22],[458,15,351,12,"ColorSpace"],[458,25,351,22],[459,4,351,12,"ColorSpace"],[459,14,351,22],[459,15,351,12,"ColorSpace"],[459,25,351,22],[460,4,351,22],[460,11,351,12,"ColorSpace"],[460,21,351,22],[461,2,351,22],[462,2,365,7],[462,11,365,16,"useInterpolateConfig"],[462,31,365,36,"useInterpolateConfig"],[462,32,366,2,"inputRange"],[462,42,366,31],[462,44,367,2,"outputRange"],[462,55,367,43],[462,57,370,34],[463,4,370,34],[463,8,368,2,"colorSpace"],[463,18,368,12],[463,21,368,12,"arguments"],[463,30,368,12],[463,31,368,12,"length"],[463,37,368,12],[463,45,368,12,"arguments"],[463,54,368,12],[463,62,368,12,"undefined"],[463,71,368,12],[463,74,368,12,"arguments"],[463,83,368,12],[463,89,368,15,"ColorSpace"],[463,99,368,25],[463,100,368,26,"RGB"],[463,103,368,29],[464,4,368,29],[464,8,369,2,"options"],[464,15,369,31],[464,18,369,31,"arguments"],[464,27,369,31],[464,28,369,31,"length"],[464,34,369,31],[464,42,369,31,"arguments"],[464,51,369,31],[464,59,369,31,"undefined"],[464,68,369,31],[464,71,369,31,"arguments"],[464,80,369,31],[464,86,369,34],[464,87,369,35],[464,88,369,36],[465,4,371,2],[465,11,371,9],[465,15,371,9,"useSharedValue"],[465,34,371,23],[465,35,371,23,"useSharedValue"],[465,49,371,23],[465,51,371,43],[466,6,372,4,"inputRange"],[466,16,372,14],[467,6,373,4,"outputRange"],[467,17,373,15],[468,6,374,4,"colorSpace"],[468,16,374,14],[469,6,375,4,"cache"],[469,11,375,9],[469,13,375,11],[469,17,375,11,"makeMutable"],[469,22,375,22],[469,23,375,22,"makeMutable"],[469,34,375,22],[469,36,375,63],[469,40,375,67],[469,41,375,68],[470,6,376,4,"options"],[471,4,377,2],[471,5,377,3],[471,6,377,4],[472,2,378,0],[473,0,378,1],[473,3]],"functionMap":{"names":["<global>","interpolateColorsHSV","toLinearSpace","x.map$argument_0","toGammaSpace","interpolateColorsRGB","interpolateColorsLAB","_splitColorsIntoChannels","getInterpolateRGB","_splitColorsIntoChannels$argument_1","getInterpolateHSV","getInterpolateLAB","interpolateColor","useInterpolateConfig"],"mappings":"AAA;6BCgC;CDmD;sBEE;eCE,+BD;CFC;qBIE;CJG;6BKE;CL2B;6BME;CNuB;iCOE;CP0C;0BQS;ICM;MDI;CRS;0BUS;oEDI;GCO;CVQ;0BWS;oEFK;GEO;CXQ;OYoC;CZoC;OagB;Cba"},"hasCjsExports":false},"type":"js/module"}]}