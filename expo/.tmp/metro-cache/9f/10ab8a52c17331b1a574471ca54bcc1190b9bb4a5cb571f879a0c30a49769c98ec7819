{"dependencies":[{"name":"@babel/runtime/helpers/classCallCheck","data":{"asyncType":null,"isESMImport":false,"locs":[],"key":"yg7e6laZwmpbIvId5jovq9ugXp8=","exportNames":["*"],"imports":1}},{"name":"@babel/runtime/helpers/createClass","data":{"asyncType":null,"isESMImport":false,"locs":[],"key":"Z6pzkVZ2fvxBLkFTgVVOy4UDj30=","exportNames":["*"],"imports":1}},{"name":"invariant","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":11,"column":0},"end":{"line":11,"column":34}}],"key":"4HPAaDQ25ZwZ2dzTLatXuUucZUM=","exportNames":["*"],"imports":1}}],"output":[{"data":{"code":"__d(function (global, require, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {\n  \"use strict\";\n\n  Object.defineProperty(exports, '__esModule', {\n    value: true\n  });\n  function _interopDefault(e) {\n    return e && e.__esModule ? e : {\n      default: e\n    };\n  }\n  Object.defineProperty(exports, \"default\", {\n    enumerable: true,\n    get: function () {\n      return ChildListCollection;\n    }\n  });\n  var _babelRuntimeHelpersClassCallCheck = require(_dependencyMap[0]);\n  var _classCallCheck = _interopDefault(_babelRuntimeHelpersClassCallCheck);\n  var _babelRuntimeHelpersCreateClass = require(_dependencyMap[1]);\n  var _createClass = _interopDefault(_babelRuntimeHelpersCreateClass);\n  var _invariant = require(_dependencyMap[2]);\n  var invariant = _interopDefault(_invariant);\n  var ChildListCollection = /*#__PURE__*/function () {\n    function ChildListCollection() {\n      (0, _classCallCheck.default)(this, ChildListCollection);\n      this._cellKeyToChildren = new Map();\n      this._childrenToCellKey = new Map();\n    }\n    return (0, _createClass.default)(ChildListCollection, [{\n      key: \"add\",\n      value: function add(list, cellKey) {\n        (0, invariant.default)(!this._childrenToCellKey.has(list), 'Trying to add already present child list');\n        var cellLists = this._cellKeyToChildren.get(cellKey) ?? new Set();\n        cellLists.add(list);\n        this._cellKeyToChildren.set(cellKey, cellLists);\n        this._childrenToCellKey.set(list, cellKey);\n      }\n    }, {\n      key: \"remove\",\n      value: function remove(list) {\n        var cellKey = this._childrenToCellKey.get(list);\n        (0, invariant.default)(cellKey != null, 'Trying to remove non-present child list');\n        this._childrenToCellKey.delete(list);\n        var cellLists = this._cellKeyToChildren.get(cellKey);\n        (0, invariant.default)(cellLists, '_cellKeyToChildren should contain cellKey');\n        cellLists.delete(list);\n        if (cellLists.size === 0) {\n          this._cellKeyToChildren.delete(cellKey);\n        }\n      }\n    }, {\n      key: \"forEach\",\n      value: function forEach(fn) {\n        for (var listSet of this._cellKeyToChildren.values()) {\n          for (var list of listSet) {\n            fn(list);\n          }\n        }\n      }\n    }, {\n      key: \"forEachInCell\",\n      value: function forEachInCell(cellKey, fn) {\n        var listSet = this._cellKeyToChildren.get(cellKey) ?? [];\n        for (var list of listSet) {\n          fn(list);\n        }\n      }\n    }, {\n      key: \"anyInCell\",\n      value: function anyInCell(cellKey, fn) {\n        var listSet = this._cellKeyToChildren.get(cellKey) ?? [];\n        for (var list of listSet) {\n          if (fn(list)) {\n            return true;\n          }\n        }\n        return false;\n      }\n    }, {\n      key: \"size\",\n      value: function size() {\n        return this._childrenToCellKey.size;\n      }\n    }]);\n  }();\n});","lineCount":87,"map":[[15,13,13,21,"ChildListCollection"],[15,32,13,40],[16,4,13,40],[17,2,13,40],[18,2,13,40],[18,6,13,40,"_babelRuntimeHelpersClassCallCheck"],[18,40,13,40],[18,43,13,40,"require"],[18,50,13,40],[18,51,13,40,"_dependencyMap"],[18,65,13,40],[19,2,13,40],[19,6,13,40,"_classCallCheck"],[19,21,13,40],[19,24,13,40,"_interopDefault"],[19,39,13,40],[19,40,13,40,"_babelRuntimeHelpersClassCallCheck"],[19,74,13,40],[20,2,13,40],[20,6,13,40,"_babelRuntimeHelpersCreateClass"],[20,37,13,40],[20,40,13,40,"require"],[20,47,13,40],[20,48,13,40,"_dependencyMap"],[20,62,13,40],[21,2,13,40],[21,6,13,40,"_createClass"],[21,18,13,40],[21,21,13,40,"_interopDefault"],[21,36,13,40],[21,37,13,40,"_babelRuntimeHelpersCreateClass"],[21,68,13,40],[22,2,11,0],[22,6,11,0,"_invariant"],[22,16,11,0],[22,19,11,0,"require"],[22,26,11,0],[22,27,11,0,"_dependencyMap"],[22,41,11,0],[23,2,11,0],[23,6,11,0,"invariant"],[23,15,11,0],[23,18,11,0,"_interopDefault"],[23,33,11,0],[23,34,11,0,"_invariant"],[23,44,11,0],[24,2,11,34],[24,6,13,21,"ChildListCollection"],[24,25,13,40],[25,4,13,40],[25,13,13,40,"ChildListCollection"],[25,33,13,40],[26,6,13,40],[26,10,13,40,"_classCallCheck"],[26,25,13,40],[26,26,13,40,"default"],[26,33,13,40],[26,41,13,40,"ChildListCollection"],[26,60,13,40],[27,6,13,40],[27,11,14,2,"_cellKeyToChildren"],[27,29,14,20],[27,32,14,48],[27,36,14,52,"Map"],[27,39,14,55],[27,40,14,56],[27,41,14,57],[28,6,14,57],[28,11,15,2,"_childrenToCellKey"],[28,29,15,20],[28,32,15,43],[28,36,15,47,"Map"],[28,39,15,50],[28,40,15,51],[28,41,15,52],[29,4,15,52],[30,4,15,52],[30,15,15,52,"_createClass"],[30,27,15,52],[30,28,15,52,"default"],[30,35,15,52],[30,37,15,52,"ChildListCollection"],[30,56,15,52],[31,6,15,52,"key"],[31,9,15,52],[32,6,15,52,"value"],[32,11,15,52],[32,13,17,2],[32,22,17,2,"add"],[32,25,17,5,"add"],[32,26,17,6,"list"],[32,30,17,17],[32,32,17,19,"cellKey"],[32,39,17,34],[32,41,17,42],[33,8,18,4],[33,12,18,4,"invariant"],[33,21,18,13],[33,22,18,13,"default"],[33,29,18,13],[33,31,19,6],[33,32,19,7],[33,36,19,11],[33,37,19,12,"_childrenToCellKey"],[33,55,19,30],[33,56,19,31,"has"],[33,59,19,34],[33,60,19,35,"list"],[33,64,19,39],[33,65,19,40],[33,67,20,6],[33,109,21,4],[33,110,21,5],[34,8,23,4],[34,12,23,10,"cellLists"],[34,21,23,19],[34,24,23,22],[34,28,23,26],[34,29,23,27,"_cellKeyToChildren"],[34,47,23,45],[34,48,23,46,"get"],[34,51,23,49],[34,52,23,50,"cellKey"],[34,59,23,57],[34,60,23,58],[34,64,23,62],[34,68,23,66,"Set"],[34,71,23,69],[34,72,23,70],[34,73,23,71],[35,8,24,4,"cellLists"],[35,17,24,13],[35,18,24,14,"add"],[35,21,24,17],[35,22,24,18,"list"],[35,26,24,22],[35,27,24,23],[36,8,25,4],[36,12,25,8],[36,13,25,9,"_cellKeyToChildren"],[36,31,25,27],[36,32,25,28,"set"],[36,35,25,31],[36,36,25,32,"cellKey"],[36,43,25,39],[36,45,25,41,"cellLists"],[36,54,25,50],[36,55,25,51],[37,8,27,4],[37,12,27,8],[37,13,27,9,"_childrenToCellKey"],[37,31,27,27],[37,32,27,28,"set"],[37,35,27,31],[37,36,27,32,"list"],[37,40,27,36],[37,42,27,38,"cellKey"],[37,49,27,45],[37,50,27,46],[38,6,28,2],[39,4,28,3],[40,6,28,3,"key"],[40,9,28,3],[41,6,28,3,"value"],[41,11,28,3],[41,13,30,2],[41,22,30,2,"remove"],[41,28,30,8,"remove"],[41,29,30,9,"list"],[41,33,30,20],[41,35,30,28],[42,8,31,4],[42,12,31,10,"cellKey"],[42,19,31,17],[42,22,31,20],[42,26,31,24],[42,27,31,25,"_childrenToCellKey"],[42,45,31,43],[42,46,31,44,"get"],[42,49,31,47],[42,50,31,48,"list"],[42,54,31,52],[42,55,31,53],[43,8,32,4],[43,12,32,4,"invariant"],[43,21,32,13],[43,22,32,13,"default"],[43,29,32,13],[43,31,32,14,"cellKey"],[43,38,32,21],[43,42,32,25],[43,46,32,29],[43,48,32,31],[43,89,32,72],[43,90,32,73],[44,8,33,4],[44,12,33,8],[44,13,33,9,"_childrenToCellKey"],[44,31,33,27],[44,32,33,28,"delete"],[44,38,33,34],[44,39,33,35,"list"],[44,43,33,39],[44,44,33,40],[45,8,35,4],[45,12,35,10,"cellLists"],[45,21,35,19],[45,24,35,22],[45,28,35,26],[45,29,35,27,"_cellKeyToChildren"],[45,47,35,45],[45,48,35,46,"get"],[45,51,35,49],[45,52,35,50,"cellKey"],[45,59,35,57],[45,60,35,58],[46,8,36,4],[46,12,36,4,"invariant"],[46,21,36,13],[46,22,36,13,"default"],[46,29,36,13],[46,31,36,14,"cellLists"],[46,40,36,23],[46,42,36,25],[46,85,36,68],[46,86,36,69],[47,8,37,4,"cellLists"],[47,17,37,13],[47,18,37,14,"delete"],[47,24,37,20],[47,25,37,21,"list"],[47,29,37,25],[47,30,37,26],[48,8,39,4],[48,12,39,8,"cellLists"],[48,21,39,17],[48,22,39,18,"size"],[48,26,39,22],[48,31,39,27],[48,32,39,28],[48,34,39,30],[49,10,40,6],[49,14,40,10],[49,15,40,11,"_cellKeyToChildren"],[49,33,40,29],[49,34,40,30,"delete"],[49,40,40,36],[49,41,40,37,"cellKey"],[49,48,40,44],[49,49,40,45],[50,8,41,4],[51,6,42,2],[52,4,42,3],[53,6,42,3,"key"],[53,9,42,3],[54,6,42,3,"value"],[54,11,42,3],[54,13,44,2],[54,22,44,2,"forEach"],[54,29,44,9,"forEach"],[54,30,44,10,"fn"],[54,32,44,27],[54,34,44,35],[55,8,45,4],[55,13,45,9],[55,17,45,15,"listSet"],[55,24,45,22],[55,28,45,26],[55,32,45,30],[55,33,45,31,"_cellKeyToChildren"],[55,51,45,49],[55,52,45,50,"values"],[55,58,45,56],[55,59,45,57],[55,60,45,58],[55,62,45,60],[56,10,46,6],[56,15,46,11],[56,19,46,17,"list"],[56,23,46,21],[56,27,46,25,"listSet"],[56,34,46,32],[56,36,46,34],[57,12,47,8,"fn"],[57,14,47,10],[57,15,47,11,"list"],[57,19,47,15],[57,20,47,16],[58,10,48,6],[59,8,49,4],[60,6,50,2],[61,4,50,3],[62,6,50,3,"key"],[62,9,50,3],[63,6,50,3,"value"],[63,11,50,3],[63,13,52,2],[63,22,52,2,"forEachInCell"],[63,35,52,15,"forEachInCell"],[63,36,52,16,"cellKey"],[63,43,52,31],[63,45,52,33,"fn"],[63,47,52,50],[63,49,52,58],[64,8,53,4],[64,12,53,10,"listSet"],[64,19,53,17],[64,22,53,20],[64,26,53,24],[64,27,53,25,"_cellKeyToChildren"],[64,45,53,43],[64,46,53,44,"get"],[64,49,53,47],[64,50,53,48,"cellKey"],[64,57,53,55],[64,58,53,56],[64,62,53,60],[64,64,53,62],[65,8,54,4],[65,13,54,9],[65,17,54,15,"list"],[65,21,54,19],[65,25,54,23,"listSet"],[65,32,54,30],[65,34,54,32],[66,10,55,6,"fn"],[66,12,55,8],[66,13,55,9,"list"],[66,17,55,13],[66,18,55,14],[67,8,56,4],[68,6,57,2],[69,4,57,3],[70,6,57,3,"key"],[70,9,57,3],[71,6,57,3,"value"],[71,11,57,3],[71,13,59,2],[71,22,59,2,"anyInCell"],[71,31,59,11,"anyInCell"],[71,32,59,12,"cellKey"],[71,39,59,27],[71,41,59,29,"fn"],[71,43,59,49],[71,45,59,60],[72,8,60,4],[72,12,60,10,"listSet"],[72,19,60,17],[72,22,60,20],[72,26,60,24],[72,27,60,25,"_cellKeyToChildren"],[72,45,60,43],[72,46,60,44,"get"],[72,49,60,47],[72,50,60,48,"cellKey"],[72,57,60,55],[72,58,60,56],[72,62,60,60],[72,64,60,62],[73,8,61,4],[73,13,61,9],[73,17,61,15,"list"],[73,21,61,19],[73,25,61,23,"listSet"],[73,32,61,30],[73,34,61,32],[74,10,62,6],[74,14,62,10,"fn"],[74,16,62,12],[74,17,62,13,"list"],[74,21,62,17],[74,22,62,18],[74,24,62,20],[75,12,63,8],[75,19,63,15],[75,23,63,19],[76,10,64,6],[77,8,65,4],[78,8,66,4],[78,15,66,11],[78,20,66,16],[79,6,67,2],[80,4,67,3],[81,6,67,3,"key"],[81,9,67,3],[82,6,67,3,"value"],[82,11,67,3],[82,13,69,2],[82,22,69,2,"size"],[82,26,69,6,"size"],[82,27,69,6],[82,29,69,17],[83,8,70,4],[83,15,70,11],[83,19,70,15],[83,20,70,16,"_childrenToCellKey"],[83,38,70,34],[83,39,70,35,"size"],[83,43,70,39],[84,6,71,2],[85,4,71,3],[86,2,71,3],[87,0,71,3],[87,3]],"functionMap":{"names":["<global>","ChildListCollection","add","remove","forEach","forEachInCell","anyInCell","size"],"mappings":"AAA;eCY;ECI;GDW;EEE;GFY;EGE;GHM;EIE;GJK;EKE;GLQ;EME;GNE"},"hasCjsExports":false},"type":"js/module"}]}