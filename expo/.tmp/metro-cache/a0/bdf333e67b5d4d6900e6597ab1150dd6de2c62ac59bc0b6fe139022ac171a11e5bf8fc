{"dependencies":[{"name":"../common/utils","data":{"asyncType":null,"isESMImport":false,"locs":[{"start":{"line":5,"column":14,"index":57},"end":{"line":5,"column":40,"index":83}}],"key":"s68H+Qrc8so5XeN472FI/1YNbEY=","exportNames":["*"],"imports":1}}],"output":[{"data":{"code":"__d(function (global, require, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {\n  // GFM table, non-standard\n\n  'use strict';\n\n  var isSpace = require(_dependencyMap[0]).isSpace;\n  function getLine(state, line) {\n    var pos = state.bMarks[line] + state.blkIndent,\n      max = state.eMarks[line];\n    return state.src.substr(pos, max - pos);\n  }\n  function escapedSplit(str) {\n    var result = [],\n      pos = 0,\n      max = str.length,\n      ch,\n      escapes = 0,\n      lastPos = 0,\n      backTicked = false,\n      lastBackTick = 0;\n    ch = str.charCodeAt(pos);\n    while (pos < max) {\n      if (ch === 0x60 /* ` */) {\n        if (backTicked) {\n          // make \\` close code sequence, but not open it;\n          // the reason is: `\\` is correct code block\n          backTicked = false;\n          lastBackTick = pos;\n        } else if (escapes % 2 === 0) {\n          backTicked = true;\n          lastBackTick = pos;\n        }\n      } else if (ch === 0x7c /* | */ && escapes % 2 === 0 && !backTicked) {\n        result.push(str.substring(lastPos, pos));\n        lastPos = pos + 1;\n      }\n      if (ch === 0x5c /* \\ */) {\n        escapes++;\n      } else {\n        escapes = 0;\n      }\n      pos++;\n\n      // If there was an un-closed backtick, go back to just after\n      // the last backtick, but as if it was a normal character\n      if (pos === max && backTicked) {\n        backTicked = false;\n        pos = lastBackTick + 1;\n      }\n      ch = str.charCodeAt(pos);\n    }\n    result.push(str.substring(lastPos));\n    return result;\n  }\n  module.exports = function table(state, startLine, endLine, silent) {\n    var ch, lineText, pos, i, nextLine, columns, columnCount, token, aligns, t, tableLines, tbodyLines;\n\n    // should have at least two lines\n    if (startLine + 2 > endLine) {\n      return false;\n    }\n    nextLine = startLine + 1;\n    if (state.sCount[nextLine] < state.blkIndent) {\n      return false;\n    }\n\n    // if it's indented more than 3 spaces, it should be a code block\n    if (state.sCount[nextLine] - state.blkIndent >= 4) {\n      return false;\n    }\n\n    // first character of the second line should be '|', '-', ':',\n    // and no other characters are allowed but spaces;\n    // basically, this is the equivalent of /^[-:|][-:|\\s]*$/ regexp\n\n    pos = state.bMarks[nextLine] + state.tShift[nextLine];\n    if (pos >= state.eMarks[nextLine]) {\n      return false;\n    }\n    ch = state.src.charCodeAt(pos++);\n    if (ch !== 0x7C /* | */ && ch !== 0x2D /* - */ && ch !== 0x3A /* : */) {\n      return false;\n    }\n    while (pos < state.eMarks[nextLine]) {\n      ch = state.src.charCodeAt(pos);\n      if (ch !== 0x7C /* | */ && ch !== 0x2D /* - */ && ch !== 0x3A /* : */ && !isSpace(ch)) {\n        return false;\n      }\n      pos++;\n    }\n    lineText = getLine(state, startLine + 1);\n    columns = lineText.split('|');\n    aligns = [];\n    for (i = 0; i < columns.length; i++) {\n      t = columns[i].trim();\n      if (!t) {\n        // allow empty columns before and after table, but not in between columns;\n        // e.g. allow ` |---| `, disallow ` ---||--- `\n        if (i === 0 || i === columns.length - 1) {\n          continue;\n        } else {\n          return false;\n        }\n      }\n      if (!/^:?-+:?$/.test(t)) {\n        return false;\n      }\n      if (t.charCodeAt(t.length - 1) === 0x3A /* : */) {\n        aligns.push(t.charCodeAt(0) === 0x3A /* : */ ? 'center' : 'right');\n      } else if (t.charCodeAt(0) === 0x3A /* : */) {\n        aligns.push('left');\n      } else {\n        aligns.push('');\n      }\n    }\n    lineText = getLine(state, startLine).trim();\n    if (lineText.indexOf('|') === -1) {\n      return false;\n    }\n    if (state.sCount[startLine] - state.blkIndent >= 4) {\n      return false;\n    }\n    columns = escapedSplit(lineText.replace(/^\\||\\|$/g, ''));\n\n    // header row will define an amount of columns in the entire table,\n    // and align row shouldn't be smaller than that (the rest of the rows can)\n    columnCount = columns.length;\n    if (columnCount > aligns.length) {\n      return false;\n    }\n    if (silent) {\n      return true;\n    }\n    token = state.push('table_open', 'table', 1);\n    token.map = tableLines = [startLine, 0];\n    token = state.push('thead_open', 'thead', 1);\n    token.map = [startLine, startLine + 1];\n    token = state.push('tr_open', 'tr', 1);\n    token.map = [startLine, startLine + 1];\n    for (i = 0; i < columns.length; i++) {\n      token = state.push('th_open', 'th', 1);\n      token.map = [startLine, startLine + 1];\n      if (aligns[i]) {\n        token.attrs = [['style', 'text-align:' + aligns[i]]];\n      }\n      token = state.push('inline', '', 0);\n      token.content = columns[i].trim();\n      token.map = [startLine, startLine + 1];\n      token.children = [];\n      token = state.push('th_close', 'th', -1);\n    }\n    token = state.push('tr_close', 'tr', -1);\n    token = state.push('thead_close', 'thead', -1);\n    token = state.push('tbody_open', 'tbody', 1);\n    token.map = tbodyLines = [startLine + 2, 0];\n    for (nextLine = startLine + 2; nextLine < endLine; nextLine++) {\n      if (state.sCount[nextLine] < state.blkIndent) {\n        break;\n      }\n      lineText = getLine(state, nextLine).trim();\n      if (lineText.indexOf('|') === -1) {\n        break;\n      }\n      if (state.sCount[nextLine] - state.blkIndent >= 4) {\n        break;\n      }\n      columns = escapedSplit(lineText.replace(/^\\||\\|$/g, ''));\n      token = state.push('tr_open', 'tr', 1);\n      for (i = 0; i < columnCount; i++) {\n        token = state.push('td_open', 'td', 1);\n        if (aligns[i]) {\n          token.attrs = [['style', 'text-align:' + aligns[i]]];\n        }\n        token = state.push('inline', '', 0);\n        token.content = columns[i] ? columns[i].trim() : '';\n        token.children = [];\n        token = state.push('td_close', 'td', -1);\n      }\n      token = state.push('tr_close', 'tr', -1);\n    }\n    token = state.push('tbody_close', 'tbody', -1);\n    token = state.push('table_close', 'table', -1);\n    tableLines[1] = tbodyLines[1] = nextLine;\n    state.line = nextLine;\n    return true;\n  };\n});","lineCount":187,"map":[[2,2,1,0],[4,2,3,0],[4,14,3,12],[6,2,5,0],[6,6,5,4,"isSpace"],[6,13,5,11],[6,16,5,14,"require"],[6,23,5,21],[6,24,5,21,"_dependencyMap"],[6,38,5,21],[6,41,5,39],[6,42,5,40],[6,43,5,41,"isSpace"],[6,50,5,48],[7,2,8,0],[7,11,8,9,"getLine"],[7,18,8,16,"getLine"],[7,19,8,17,"state"],[7,24,8,22],[7,26,8,24,"line"],[7,30,8,28],[7,32,8,30],[8,4,9,2],[8,8,9,6,"pos"],[8,11,9,9],[8,14,9,12,"state"],[8,19,9,17],[8,20,9,18,"bMarks"],[8,26,9,24],[8,27,9,25,"line"],[8,31,9,29],[8,32,9,30],[8,35,9,33,"state"],[8,40,9,38],[8,41,9,39,"blkIndent"],[8,50,9,48],[9,6,10,6,"max"],[9,9,10,9],[9,12,10,12,"state"],[9,17,10,17],[9,18,10,18,"eMarks"],[9,24,10,24],[9,25,10,25,"line"],[9,29,10,29],[9,30,10,30],[10,4,12,2],[10,11,12,9,"state"],[10,16,12,14],[10,17,12,15,"src"],[10,20,12,18],[10,21,12,19,"substr"],[10,27,12,25],[10,28,12,26,"pos"],[10,31,12,29],[10,33,12,31,"max"],[10,36,12,34],[10,39,12,37,"pos"],[10,42,12,40],[10,43,12,41],[11,2,13,0],[12,2,15,0],[12,11,15,9,"escapedSplit"],[12,23,15,21,"escapedSplit"],[12,24,15,22,"str"],[12,27,15,25],[12,29,15,27],[13,4,16,2],[13,8,16,6,"result"],[13,14,16,12],[13,17,16,15],[13,19,16,17],[14,6,17,6,"pos"],[14,9,17,9],[14,12,17,12],[14,13,17,13],[15,6,18,6,"max"],[15,9,18,9],[15,12,18,12,"str"],[15,15,18,15],[15,16,18,16,"length"],[15,22,18,22],[16,6,19,6,"ch"],[16,8,19,8],[17,6,20,6,"escapes"],[17,13,20,13],[17,16,20,16],[17,17,20,17],[18,6,21,6,"lastPos"],[18,13,21,13],[18,16,21,16],[18,17,21,17],[19,6,22,6,"backTicked"],[19,16,22,16],[19,19,22,19],[19,24,22,24],[20,6,23,6,"lastBackTick"],[20,18,23,18],[20,21,23,21],[20,22,23,22],[21,4,25,2,"ch"],[21,6,25,4],[21,9,25,8,"str"],[21,12,25,11],[21,13,25,12,"charCodeAt"],[21,23,25,22],[21,24,25,23,"pos"],[21,27,25,26],[21,28,25,27],[22,4,27,2],[22,11,27,9,"pos"],[22,14,27,12],[22,17,27,15,"max"],[22,20,27,18],[22,22,27,20],[23,6,28,4],[23,10,28,8,"ch"],[23,12,28,10],[23,17,28,15],[23,21,28,19],[23,31,28,28],[24,8,29,6],[24,12,29,10,"backTicked"],[24,22,29,20],[24,24,29,22],[25,10,30,8],[26,10,31,8],[27,10,32,8,"backTicked"],[27,20,32,18],[27,23,32,21],[27,28,32,26],[28,10,33,8,"lastBackTick"],[28,22,33,20],[28,25,33,23,"pos"],[28,28,33,26],[29,8,34,6],[29,9,34,7],[29,15,34,13],[29,19,34,17,"escapes"],[29,26,34,24],[29,29,34,27],[29,30,34,28],[29,35,34,33],[29,36,34,34],[29,38,34,36],[30,10,35,8,"backTicked"],[30,20,35,18],[30,23,35,21],[30,27,35,25],[31,10,36,8,"lastBackTick"],[31,22,36,20],[31,25,36,23,"pos"],[31,28,36,26],[32,8,37,6],[33,6,38,4],[33,7,38,5],[33,13,38,11],[33,17,38,15,"ch"],[33,19,38,17],[33,24,38,22],[33,28,38,26],[33,40,38,38,"escapes"],[33,47,38,45],[33,50,38,48],[33,51,38,49],[33,56,38,54],[33,57,38,56],[33,61,38,60],[33,62,38,61,"backTicked"],[33,72,38,71],[33,74,38,73],[34,8,39,6,"result"],[34,14,39,12],[34,15,39,13,"push"],[34,19,39,17],[34,20,39,18,"str"],[34,23,39,21],[34,24,39,22,"substring"],[34,33,39,31],[34,34,39,32,"lastPos"],[34,41,39,39],[34,43,39,41,"pos"],[34,46,39,44],[34,47,39,45],[34,48,39,46],[35,8,40,6,"lastPos"],[35,15,40,13],[35,18,40,16,"pos"],[35,21,40,19],[35,24,40,22],[35,25,40,23],[36,6,41,4],[37,6,43,4],[37,10,43,8,"ch"],[37,12,43,10],[37,17,43,15],[37,21,43,19],[37,31,43,28],[38,8,44,6,"escapes"],[38,15,44,13],[38,17,44,15],[39,6,45,4],[39,7,45,5],[39,13,45,11],[40,8,46,6,"escapes"],[40,15,46,13],[40,18,46,16],[40,19,46,17],[41,6,47,4],[42,6,49,4,"pos"],[42,9,49,7],[42,11,49,9],[44,6,51,4],[45,6,52,4],[46,6,53,4],[46,10,53,8,"pos"],[46,13,53,11],[46,18,53,16,"max"],[46,21,53,19],[46,25,53,23,"backTicked"],[46,35,53,33],[46,37,53,35],[47,8,54,6,"backTicked"],[47,18,54,16],[47,21,54,19],[47,26,54,24],[48,8,55,6,"pos"],[48,11,55,9],[48,14,55,12,"lastBackTick"],[48,26,55,24],[48,29,55,27],[48,30,55,28],[49,6,56,4],[50,6,58,4,"ch"],[50,8,58,6],[50,11,58,9,"str"],[50,14,58,12],[50,15,58,13,"charCodeAt"],[50,25,58,23],[50,26,58,24,"pos"],[50,29,58,27],[50,30,58,28],[51,4,59,2],[52,4,61,2,"result"],[52,10,61,8],[52,11,61,9,"push"],[52,15,61,13],[52,16,61,14,"str"],[52,19,61,17],[52,20,61,18,"substring"],[52,29,61,27],[52,30,61,28,"lastPos"],[52,37,61,35],[52,38,61,36],[52,39,61,37],[53,4,63,2],[53,11,63,9,"result"],[53,17,63,15],[54,2,64,0],[55,2,67,0,"module"],[55,8,67,6],[55,9,67,7,"exports"],[55,16,67,14],[55,19,67,17],[55,28,67,26,"table"],[55,33,67,31,"table"],[55,34,67,32,"state"],[55,39,67,37],[55,41,67,39,"startLine"],[55,50,67,48],[55,52,67,50,"endLine"],[55,59,67,57],[55,61,67,59,"silent"],[55,67,67,65],[55,69,67,67],[56,4,68,2],[56,8,68,6,"ch"],[56,10,68,8],[56,12,68,10,"lineText"],[56,20,68,18],[56,22,68,20,"pos"],[56,25,68,23],[56,27,68,25,"i"],[56,28,68,26],[56,30,68,28,"nextLine"],[56,38,68,36],[56,40,68,38,"columns"],[56,47,68,45],[56,49,68,47,"columnCount"],[56,60,68,58],[56,62,68,60,"token"],[56,67,68,65],[56,69,69,6,"aligns"],[56,75,69,12],[56,77,69,14,"t"],[56,78,69,15],[56,80,69,17,"tableLines"],[56,90,69,27],[56,92,69,29,"tbodyLines"],[56,102,69,39],[58,4,71,2],[59,4,72,2],[59,8,72,6,"startLine"],[59,17,72,15],[59,20,72,18],[59,21,72,19],[59,24,72,22,"endLine"],[59,31,72,29],[59,33,72,31],[60,6,72,33],[60,13,72,40],[60,18,72,45],[61,4,72,47],[62,4,74,2,"nextLine"],[62,12,74,10],[62,15,74,13,"startLine"],[62,24,74,22],[62,27,74,25],[62,28,74,26],[63,4,76,2],[63,8,76,6,"state"],[63,13,76,11],[63,14,76,12,"sCount"],[63,20,76,18],[63,21,76,19,"nextLine"],[63,29,76,27],[63,30,76,28],[63,33,76,31,"state"],[63,38,76,36],[63,39,76,37,"blkIndent"],[63,48,76,46],[63,50,76,48],[64,6,76,50],[64,13,76,57],[64,18,76,62],[65,4,76,64],[67,4,78,2],[68,4,79,2],[68,8,79,6,"state"],[68,13,79,11],[68,14,79,12,"sCount"],[68,20,79,18],[68,21,79,19,"nextLine"],[68,29,79,27],[68,30,79,28],[68,33,79,31,"state"],[68,38,79,36],[68,39,79,37,"blkIndent"],[68,48,79,46],[68,52,79,50],[68,53,79,51],[68,55,79,53],[69,6,79,55],[69,13,79,62],[69,18,79,67],[70,4,79,69],[72,4,81,2],[73,4,82,2],[74,4,83,2],[76,4,85,2,"pos"],[76,7,85,5],[76,10,85,8,"state"],[76,15,85,13],[76,16,85,14,"bMarks"],[76,22,85,20],[76,23,85,21,"nextLine"],[76,31,85,29],[76,32,85,30],[76,35,85,33,"state"],[76,40,85,38],[76,41,85,39,"tShift"],[76,47,85,45],[76,48,85,46,"nextLine"],[76,56,85,54],[76,57,85,55],[77,4,86,2],[77,8,86,6,"pos"],[77,11,86,9],[77,15,86,13,"state"],[77,20,86,18],[77,21,86,19,"eMarks"],[77,27,86,25],[77,28,86,26,"nextLine"],[77,36,86,34],[77,37,86,35],[77,39,86,37],[78,6,86,39],[78,13,86,46],[78,18,86,51],[79,4,86,53],[80,4,88,2,"ch"],[80,6,88,4],[80,9,88,7,"state"],[80,14,88,12],[80,15,88,13,"src"],[80,18,88,16],[80,19,88,17,"charCodeAt"],[80,29,88,27],[80,30,88,28,"pos"],[80,33,88,31],[80,35,88,33],[80,36,88,34],[81,4,89,2],[81,8,89,6,"ch"],[81,10,89,8],[81,15,89,13],[81,19,89,17],[81,31,89,28,"ch"],[81,33,89,30],[81,38,89,35],[81,42,89,39],[81,54,89,50,"ch"],[81,56,89,52],[81,61,89,57],[81,65,89,61],[81,75,89,70],[82,6,89,72],[82,13,89,79],[82,18,89,84],[83,4,89,86],[84,4,91,2],[84,11,91,9,"pos"],[84,14,91,12],[84,17,91,15,"state"],[84,22,91,20],[84,23,91,21,"eMarks"],[84,29,91,27],[84,30,91,28,"nextLine"],[84,38,91,36],[84,39,91,37],[84,41,91,39],[85,6,92,4,"ch"],[85,8,92,6],[85,11,92,9,"state"],[85,16,92,14],[85,17,92,15,"src"],[85,20,92,18],[85,21,92,19,"charCodeAt"],[85,31,92,29],[85,32,92,30,"pos"],[85,35,92,33],[85,36,92,34],[86,6,94,4],[86,10,94,8,"ch"],[86,12,94,10],[86,17,94,15],[86,21,94,19],[86,33,94,30,"ch"],[86,35,94,32],[86,40,94,37],[86,44,94,41],[86,56,94,52,"ch"],[86,58,94,54],[86,63,94,59],[86,67,94,63],[86,79,94,74],[86,80,94,75,"isSpace"],[86,87,94,82],[86,88,94,83,"ch"],[86,90,94,85],[86,91,94,86],[86,93,94,88],[87,8,94,90],[87,15,94,97],[87,20,94,102],[88,6,94,104],[89,6,96,4,"pos"],[89,9,96,7],[89,11,96,9],[90,4,97,2],[91,4,99,2,"lineText"],[91,12,99,10],[91,15,99,13,"getLine"],[91,22,99,20],[91,23,99,21,"state"],[91,28,99,26],[91,30,99,28,"startLine"],[91,39,99,37],[91,42,99,40],[91,43,99,41],[91,44,99,42],[92,4,101,2,"columns"],[92,11,101,9],[92,14,101,12,"lineText"],[92,22,101,20],[92,23,101,21,"split"],[92,28,101,26],[92,29,101,27],[92,32,101,30],[92,33,101,31],[93,4,102,2,"aligns"],[93,10,102,8],[93,13,102,11],[93,15,102,13],[94,4,103,2],[94,9,103,7,"i"],[94,10,103,8],[94,13,103,11],[94,14,103,12],[94,16,103,14,"i"],[94,17,103,15],[94,20,103,18,"columns"],[94,27,103,25],[94,28,103,26,"length"],[94,34,103,32],[94,36,103,34,"i"],[94,37,103,35],[94,39,103,37],[94,41,103,39],[95,6,104,4,"t"],[95,7,104,5],[95,10,104,8,"columns"],[95,17,104,15],[95,18,104,16,"i"],[95,19,104,17],[95,20,104,18],[95,21,104,19,"trim"],[95,25,104,23],[95,26,104,24],[95,27,104,25],[96,6,105,4],[96,10,105,8],[96,11,105,9,"t"],[96,12,105,10],[96,14,105,12],[97,8,106,6],[98,8,107,6],[99,8,108,6],[99,12,108,10,"i"],[99,13,108,11],[99,18,108,16],[99,19,108,17],[99,23,108,21,"i"],[99,24,108,22],[99,29,108,27,"columns"],[99,36,108,34],[99,37,108,35,"length"],[99,43,108,41],[99,46,108,44],[99,47,108,45],[99,49,108,47],[100,10,109,8],[101,8,110,6],[101,9,110,7],[101,15,110,13],[102,10,111,8],[102,17,111,15],[102,22,111,20],[103,8,112,6],[104,6,113,4],[105,6,115,4],[105,10,115,8],[105,11,115,9],[105,21,115,19],[105,22,115,20,"test"],[105,26,115,24],[105,27,115,25,"t"],[105,28,115,26],[105,29,115,27],[105,31,115,29],[106,8,115,31],[106,15,115,38],[106,20,115,43],[107,6,115,45],[108,6,116,4],[108,10,116,8,"t"],[108,11,116,9],[108,12,116,10,"charCodeAt"],[108,22,116,20],[108,23,116,21,"t"],[108,24,116,22],[108,25,116,23,"length"],[108,31,116,29],[108,34,116,32],[108,35,116,33],[108,36,116,34],[108,41,116,39],[108,45,116,43],[108,55,116,52],[109,8,117,6,"aligns"],[109,14,117,12],[109,15,117,13,"push"],[109,19,117,17],[109,20,117,18,"t"],[109,21,117,19],[109,22,117,20,"charCodeAt"],[109,32,117,30],[109,33,117,31],[109,34,117,32],[109,35,117,33],[109,40,117,38],[109,44,117,42],[109,55,117,52],[109,63,117,60],[109,66,117,63],[109,73,117,70],[109,74,117,71],[110,6,118,4],[110,7,118,5],[110,13,118,11],[110,17,118,15,"t"],[110,18,118,16],[110,19,118,17,"charCodeAt"],[110,29,118,27],[110,30,118,28],[110,31,118,29],[110,32,118,30],[110,37,118,35],[110,41,118,39],[110,51,118,48],[111,8,119,6,"aligns"],[111,14,119,12],[111,15,119,13,"push"],[111,19,119,17],[111,20,119,18],[111,26,119,24],[111,27,119,25],[112,6,120,4],[112,7,120,5],[112,13,120,11],[113,8,121,6,"aligns"],[113,14,121,12],[113,15,121,13,"push"],[113,19,121,17],[113,20,121,18],[113,22,121,20],[113,23,121,21],[114,6,122,4],[115,4,123,2],[116,4,125,2,"lineText"],[116,12,125,10],[116,15,125,13,"getLine"],[116,22,125,20],[116,23,125,21,"state"],[116,28,125,26],[116,30,125,28,"startLine"],[116,39,125,37],[116,40,125,38],[116,41,125,39,"trim"],[116,45,125,43],[116,46,125,44],[116,47,125,45],[117,4,126,2],[117,8,126,6,"lineText"],[117,16,126,14],[117,17,126,15,"indexOf"],[117,24,126,22],[117,25,126,23],[117,28,126,26],[117,29,126,27],[117,36,126,34],[117,38,126,36],[118,6,126,38],[118,13,126,45],[118,18,126,50],[119,4,126,52],[120,4,127,2],[120,8,127,6,"state"],[120,13,127,11],[120,14,127,12,"sCount"],[120,20,127,18],[120,21,127,19,"startLine"],[120,30,127,28],[120,31,127,29],[120,34,127,32,"state"],[120,39,127,37],[120,40,127,38,"blkIndent"],[120,49,127,47],[120,53,127,51],[120,54,127,52],[120,56,127,54],[121,6,127,56],[121,13,127,63],[121,18,127,68],[122,4,127,70],[123,4,128,2,"columns"],[123,11,128,9],[123,14,128,12,"escapedSplit"],[123,26,128,24],[123,27,128,25,"lineText"],[123,35,128,33],[123,36,128,34,"replace"],[123,43,128,41],[123,44,128,42],[123,54,128,52],[123,56,128,54],[123,58,128,56],[123,59,128,57],[123,60,128,58],[125,4,130,2],[126,4,131,2],[127,4,132,2,"columnCount"],[127,15,132,13],[127,18,132,16,"columns"],[127,25,132,23],[127,26,132,24,"length"],[127,32,132,30],[128,4,133,2],[128,8,133,6,"columnCount"],[128,19,133,17],[128,22,133,20,"aligns"],[128,28,133,26],[128,29,133,27,"length"],[128,35,133,33],[128,37,133,35],[129,6,133,37],[129,13,133,44],[129,18,133,49],[130,4,133,51],[131,4,135,2],[131,8,135,6,"silent"],[131,14,135,12],[131,16,135,14],[132,6,135,16],[132,13,135,23],[132,17,135,27],[133,4,135,29],[134,4,137,2,"token"],[134,9,137,7],[134,12,137,14,"state"],[134,17,137,19],[134,18,137,20,"push"],[134,22,137,24],[134,23,137,25],[134,35,137,37],[134,37,137,39],[134,44,137,46],[134,46,137,48],[134,47,137,49],[134,48,137,50],[135,4,138,2,"token"],[135,9,138,7],[135,10,138,8,"map"],[135,13,138,11],[135,16,138,14,"tableLines"],[135,26,138,24],[135,29,138,27],[135,30,138,29,"startLine"],[135,39,138,38],[135,41,138,40],[135,42,138,41],[135,43,138,43],[136,4,140,2,"token"],[136,9,140,7],[136,12,140,14,"state"],[136,17,140,19],[136,18,140,20,"push"],[136,22,140,24],[136,23,140,25],[136,35,140,37],[136,37,140,39],[136,44,140,46],[136,46,140,48],[136,47,140,49],[136,48,140,50],[137,4,141,2,"token"],[137,9,141,7],[137,10,141,8,"map"],[137,13,141,11],[137,16,141,14],[137,17,141,16,"startLine"],[137,26,141,25],[137,28,141,27,"startLine"],[137,37,141,36],[137,40,141,39],[137,41,141,40],[137,42,141,42],[138,4,143,2,"token"],[138,9,143,7],[138,12,143,14,"state"],[138,17,143,19],[138,18,143,20,"push"],[138,22,143,24],[138,23,143,25],[138,32,143,34],[138,34,143,36],[138,38,143,40],[138,40,143,42],[138,41,143,43],[138,42,143,44],[139,4,144,2,"token"],[139,9,144,7],[139,10,144,8,"map"],[139,13,144,11],[139,16,144,14],[139,17,144,16,"startLine"],[139,26,144,25],[139,28,144,27,"startLine"],[139,37,144,36],[139,40,144,39],[139,41,144,40],[139,42,144,42],[140,4,146,2],[140,9,146,7,"i"],[140,10,146,8],[140,13,146,11],[140,14,146,12],[140,16,146,14,"i"],[140,17,146,15],[140,20,146,18,"columns"],[140,27,146,25],[140,28,146,26,"length"],[140,34,146,32],[140,36,146,34,"i"],[140,37,146,35],[140,39,146,37],[140,41,146,39],[141,6,147,4,"token"],[141,11,147,9],[141,14,147,21,"state"],[141,19,147,26],[141,20,147,27,"push"],[141,24,147,31],[141,25,147,32],[141,34,147,41],[141,36,147,43],[141,40,147,47],[141,42,147,49],[141,43,147,50],[141,44,147,51],[142,6,148,4,"token"],[142,11,148,9],[142,12,148,10,"map"],[142,15,148,13],[142,18,148,21],[142,19,148,23,"startLine"],[142,28,148,32],[142,30,148,34,"startLine"],[142,39,148,43],[142,42,148,46],[142,43,148,47],[142,44,148,49],[143,6,149,4],[143,10,149,8,"aligns"],[143,16,149,14],[143,17,149,15,"i"],[143,18,149,16],[143,19,149,17],[143,21,149,19],[144,8,150,6,"token"],[144,13,150,11],[144,14,150,12,"attrs"],[144,19,150,17],[144,22,150,21],[144,23,150,23],[144,24,150,25],[144,31,150,32],[144,33,150,34],[144,46,150,47],[144,49,150,50,"aligns"],[144,55,150,56],[144,56,150,57,"i"],[144,57,150,58],[144,58,150,59],[144,59,150,61],[144,60,150,63],[145,6,151,4],[146,6,153,4,"token"],[146,11,153,9],[146,14,153,21,"state"],[146,19,153,26],[146,20,153,27,"push"],[146,24,153,31],[146,25,153,32],[146,33,153,40],[146,35,153,42],[146,37,153,44],[146,39,153,46],[146,40,153,47],[146,41,153,48],[147,6,154,4,"token"],[147,11,154,9],[147,12,154,10,"content"],[147,19,154,17],[147,22,154,21,"columns"],[147,29,154,28],[147,30,154,29,"i"],[147,31,154,30],[147,32,154,31],[147,33,154,32,"trim"],[147,37,154,36],[147,38,154,37],[147,39,154,38],[148,6,155,4,"token"],[148,11,155,9],[148,12,155,10,"map"],[148,15,155,13],[148,18,155,21],[148,19,155,23,"startLine"],[148,28,155,32],[148,30,155,34,"startLine"],[148,39,155,43],[148,42,155,46],[148,43,155,47],[148,44,155,49],[149,6,156,4,"token"],[149,11,156,9],[149,12,156,10,"children"],[149,20,156,18],[149,23,156,21],[149,25,156,23],[150,6,158,4,"token"],[150,11,158,9],[150,14,158,21,"state"],[150,19,158,26],[150,20,158,27,"push"],[150,24,158,31],[150,25,158,32],[150,35,158,42],[150,37,158,44],[150,41,158,48],[150,45,158,52],[150,46,158,53],[151,4,159,2],[152,4,161,2,"token"],[152,9,161,7],[152,12,161,14,"state"],[152,17,161,19],[152,18,161,20,"push"],[152,22,161,24],[152,23,161,25],[152,33,161,35],[152,35,161,37],[152,39,161,41],[152,43,161,45],[152,44,161,46],[153,4,162,2,"token"],[153,9,162,7],[153,12,162,14,"state"],[153,17,162,19],[153,18,162,20,"push"],[153,22,162,24],[153,23,162,25],[153,36,162,38],[153,38,162,40],[153,45,162,47],[153,49,162,51],[153,50,162,52],[154,4,164,2,"token"],[154,9,164,7],[154,12,164,14,"state"],[154,17,164,19],[154,18,164,20,"push"],[154,22,164,24],[154,23,164,25],[154,35,164,37],[154,37,164,39],[154,44,164,46],[154,46,164,48],[154,47,164,49],[154,48,164,50],[155,4,165,2,"token"],[155,9,165,7],[155,10,165,8,"map"],[155,13,165,11],[155,16,165,14,"tbodyLines"],[155,26,165,24],[155,29,165,27],[155,30,165,29,"startLine"],[155,39,165,38],[155,42,165,41],[155,43,165,42],[155,45,165,44],[155,46,165,45],[155,47,165,47],[156,4,167,2],[156,9,167,7,"nextLine"],[156,17,167,15],[156,20,167,18,"startLine"],[156,29,167,27],[156,32,167,30],[156,33,167,31],[156,35,167,33,"nextLine"],[156,43,167,41],[156,46,167,44,"endLine"],[156,53,167,51],[156,55,167,53,"nextLine"],[156,63,167,61],[156,65,167,63],[156,67,167,65],[157,6,168,4],[157,10,168,8,"state"],[157,15,168,13],[157,16,168,14,"sCount"],[157,22,168,20],[157,23,168,21,"nextLine"],[157,31,168,29],[157,32,168,30],[157,35,168,33,"state"],[157,40,168,38],[157,41,168,39,"blkIndent"],[157,50,168,48],[157,52,168,50],[158,8,168,52],[159,6,168,59],[160,6,170,4,"lineText"],[160,14,170,12],[160,17,170,15,"getLine"],[160,24,170,22],[160,25,170,23,"state"],[160,30,170,28],[160,32,170,30,"nextLine"],[160,40,170,38],[160,41,170,39],[160,42,170,40,"trim"],[160,46,170,44],[160,47,170,45],[160,48,170,46],[161,6,171,4],[161,10,171,8,"lineText"],[161,18,171,16],[161,19,171,17,"indexOf"],[161,26,171,24],[161,27,171,25],[161,30,171,28],[161,31,171,29],[161,38,171,36],[161,40,171,38],[162,8,171,40],[163,6,171,47],[164,6,172,4],[164,10,172,8,"state"],[164,15,172,13],[164,16,172,14,"sCount"],[164,22,172,20],[164,23,172,21,"nextLine"],[164,31,172,29],[164,32,172,30],[164,35,172,33,"state"],[164,40,172,38],[164,41,172,39,"blkIndent"],[164,50,172,48],[164,54,172,52],[164,55,172,53],[164,57,172,55],[165,8,172,57],[166,6,172,64],[167,6,173,4,"columns"],[167,13,173,11],[167,16,173,14,"escapedSplit"],[167,28,173,26],[167,29,173,27,"lineText"],[167,37,173,35],[167,38,173,36,"replace"],[167,45,173,43],[167,46,173,44],[167,56,173,54],[167,58,173,56],[167,60,173,58],[167,61,173,59],[167,62,173,60],[168,6,175,4,"token"],[168,11,175,9],[168,14,175,12,"state"],[168,19,175,17],[168,20,175,18,"push"],[168,24,175,22],[168,25,175,23],[168,34,175,32],[168,36,175,34],[168,40,175,38],[168,42,175,40],[168,43,175,41],[168,44,175,42],[169,6,176,4],[169,11,176,9,"i"],[169,12,176,10],[169,15,176,13],[169,16,176,14],[169,18,176,16,"i"],[169,19,176,17],[169,22,176,20,"columnCount"],[169,33,176,31],[169,35,176,33,"i"],[169,36,176,34],[169,38,176,36],[169,40,176,38],[170,8,177,6,"token"],[170,13,177,11],[170,16,177,23,"state"],[170,21,177,28],[170,22,177,29,"push"],[170,26,177,33],[170,27,177,34],[170,36,177,43],[170,38,177,45],[170,42,177,49],[170,44,177,51],[170,45,177,52],[170,46,177,53],[171,8,178,6],[171,12,178,10,"aligns"],[171,18,178,16],[171,19,178,17,"i"],[171,20,178,18],[171,21,178,19],[171,23,178,21],[172,10,179,8,"token"],[172,15,179,13],[172,16,179,14,"attrs"],[172,21,179,19],[172,24,179,23],[172,25,179,25],[172,26,179,27],[172,33,179,34],[172,35,179,36],[172,48,179,49],[172,51,179,52,"aligns"],[172,57,179,58],[172,58,179,59,"i"],[172,59,179,60],[172,60,179,61],[172,61,179,63],[172,62,179,65],[173,8,180,6],[174,8,182,6,"token"],[174,13,182,11],[174,16,182,23,"state"],[174,21,182,28],[174,22,182,29,"push"],[174,26,182,33],[174,27,182,34],[174,35,182,42],[174,37,182,44],[174,39,182,46],[174,41,182,48],[174,42,182,49],[174,43,182,50],[175,8,183,6,"token"],[175,13,183,11],[175,14,183,12,"content"],[175,21,183,19],[175,24,183,23,"columns"],[175,31,183,30],[175,32,183,31,"i"],[175,33,183,32],[175,34,183,33],[175,37,183,36,"columns"],[175,44,183,43],[175,45,183,44,"i"],[175,46,183,45],[175,47,183,46],[175,48,183,47,"trim"],[175,52,183,51],[175,53,183,52],[175,54,183,53],[175,57,183,56],[175,59,183,58],[176,8,184,6,"token"],[176,13,184,11],[176,14,184,12,"children"],[176,22,184,20],[176,25,184,23],[176,27,184,25],[177,8,186,6,"token"],[177,13,186,11],[177,16,186,23,"state"],[177,21,186,28],[177,22,186,29,"push"],[177,26,186,33],[177,27,186,34],[177,37,186,44],[177,39,186,46],[177,43,186,50],[177,47,186,54],[177,48,186,55],[178,6,187,4],[179,6,188,4,"token"],[179,11,188,9],[179,14,188,12,"state"],[179,19,188,17],[179,20,188,18,"push"],[179,24,188,22],[179,25,188,23],[179,35,188,33],[179,37,188,35],[179,41,188,39],[179,45,188,43],[179,46,188,44],[180,4,189,2],[181,4,190,2,"token"],[181,9,190,7],[181,12,190,10,"state"],[181,17,190,15],[181,18,190,16,"push"],[181,22,190,20],[181,23,190,21],[181,36,190,34],[181,38,190,36],[181,45,190,43],[181,49,190,47],[181,50,190,48],[182,4,191,2,"token"],[182,9,191,7],[182,12,191,10,"state"],[182,17,191,15],[182,18,191,16,"push"],[182,22,191,20],[182,23,191,21],[182,36,191,34],[182,38,191,36],[182,45,191,43],[182,49,191,47],[182,50,191,48],[183,4,193,2,"tableLines"],[183,14,193,12],[183,15,193,13],[183,16,193,14],[183,17,193,15],[183,20,193,18,"tbodyLines"],[183,30,193,28],[183,31,193,29],[183,32,193,30],[183,33,193,31],[183,36,193,34,"nextLine"],[183,44,193,42],[184,4,194,2,"state"],[184,9,194,7],[184,10,194,8,"line"],[184,14,194,12],[184,17,194,15,"nextLine"],[184,25,194,23],[185,4,195,2],[185,11,195,9],[185,15,195,13],[186,2,196,0],[186,3,196,1],[187,0,196,2],[187,3]],"functionMap":{"names":["<global>","getLine","escapedSplit","table"],"mappings":"AAA;ACO;CDK;AEE;CFiD;iBGG;CHiI"},"hasCjsExports":true},"type":"js/module"}]}