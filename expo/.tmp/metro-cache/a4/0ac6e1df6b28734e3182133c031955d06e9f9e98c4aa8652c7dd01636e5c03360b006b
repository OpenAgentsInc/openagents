{"dependencies":[{"name":"@babel/runtime/helpers/slicedToArray","data":{"asyncType":null,"isESMImport":false,"locs":[],"key":"5y7e5+zC7teYEEC6niD9f5zII1M=","exportNames":["*"],"imports":1}},{"name":"react","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":1,"column":0,"index":0},"end":{"line":1,"column":44,"index":44}}],"key":"RtGiGa+/H7VrI7GDQDLhO1UbpU8=","exportNames":["*"],"imports":1}},{"name":"./UpdatesEmitter","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":2,"column":0,"index":45},"end":{"line":2,"column":80,"index":125}}],"key":"/fHEDLJ3F6iAN2DeLsAHAg7O1AA=","exportNames":["*"],"imports":1}},{"name":"./UseUpdatesUtils","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":3,"column":0,"index":126},"end":{"line":3,"column":78,"index":204}}],"key":"JTRi8Q+i4Jils43kbA11mDJ+09Q=","exportNames":["*"],"imports":1}}],"output":[{"data":{"code":"__d(function (global, require, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {\n  \"use strict\";\n\n  Object.defineProperty(exports, '__esModule', {\n    value: true\n  });\n  function _interopDefault(e) {\n    return e && e.__esModule ? e : {\n      default: e\n    };\n  }\n  Object.defineProperty(exports, \"useUpdates\", {\n    enumerable: true,\n    get: function () {\n      return useUpdates;\n    }\n  });\n  var _babelRuntimeHelpersSlicedToArray = require(_dependencyMap[0]);\n  var _slicedToArray = _interopDefault(_babelRuntimeHelpersSlicedToArray);\n  var _react = require(_dependencyMap[1]);\n  var _UpdatesEmitter = require(_dependencyMap[2]);\n  var _UseUpdatesUtils = require(_dependencyMap[3]);\n  /**\n   * Hook that obtains information on available updates and on the currently running update.\n   *\n   * @return the structures with information on currently running and available updates.\n   *\n   * @example\n   * ```tsx UpdatesDemo.tsx\n   * import { StatusBar } from 'expo-status-bar';\n   * import * as Updates from 'expo-updates';\n   * import { useEffect } from 'react';\n   * import { Button, Text, View } from 'react-native';\n   *\n   * export default function UpdatesDemo() {\n   *   const {\n   *     currentlyRunning,\n   *     isUpdateAvailable,\n   *     isUpdatePending\n   *   } = Updates.useUpdates();\n   *\n   *   useEffect(() => {\n   *     if (isUpdatePending) {\n   *       // Update has successfully downloaded; apply it now\n   *       Updates.reloadAsync();\n   *     }\n   *   }, [isUpdatePending]);\n   *\n   *   // If true, we show the button to download and run the update\n   *   const showDownloadButton = isUpdateAvailable;\n   *\n   *   // Show whether or not we are running embedded code or an update\n   *   const runTypeMessage = currentlyRunning.isEmbeddedLaunch\n   *     ? 'This app is running from built-in code'\n   *     : 'This app is running an update';\n   *\n   *   return (\n   *     <View style={styles.container}>\n   *       <Text style={styles.headerText}>Updates Demo</Text>\n   *       <Text>{runTypeMessage}</Text>\n   *       <Button onPress={() => Updates.checkForUpdateAsync()} title=\"Check manually for updates\" />\n   *       {showDownloadButton ? (\n   *         <Button onPress={() => Updates.fetchUpdateAsync()} title=\"Download and run update\" />\n   *       ) : null}\n   *       <StatusBar style=\"auto\" />\n   *     </View>\n   *   );\n   * }\n   * ```\n   */\n  var useUpdates = () => {\n    var _useState = (0, _react.useState)((0, _UseUpdatesUtils.updatesStateFromContext)(_UpdatesEmitter.latestContext)),\n      _useState2 = (0, _slicedToArray.default)(_useState, 2),\n      updatesState = _useState2[0],\n      setUpdatesState = _useState2[1];\n    // Change the state based on native state machine context changes\n    (0, _react.useEffect)(() => {\n      var subscription = (0, _UpdatesEmitter.addUpdatesStateChangeListener)(event => {\n        setUpdatesState((0, _UseUpdatesUtils.updatesStateFromContext)(event.context));\n      });\n      return () => subscription.remove();\n    }, []);\n    // Return the updates info and the user facing functions\n    return {\n      currentlyRunning: _UseUpdatesUtils.currentlyRunning,\n      ...updatesState\n    };\n  };\n});","lineCount":89,"map":[[12,2,52,0,"Object"],[12,8,52,0],[12,9,52,0,"defineProperty"],[12,23,52,0],[12,24,52,0,"exports"],[12,31,52,0],[13,4,52,0,"enumerable"],[13,14,52,0],[14,4,52,0,"get"],[14,7,52,0],[14,18,52,0,"get"],[14,19,52,0],[15,6,52,0],[15,13,52,0,"useUpdates"],[15,23,52,0],[16,4,52,0],[17,2,52,0],[18,2,66,2],[18,6,66,2,"_babelRuntimeHelpersSlicedToArray"],[18,39,66,2],[18,42,66,2,"require"],[18,49,66,2],[18,50,66,2,"_dependencyMap"],[18,64,66,2],[19,2,66,2],[19,6,66,2,"_slicedToArray"],[19,20,66,2],[19,23,66,2,"_interopDefault"],[19,38,66,2],[19,39,66,2,"_babelRuntimeHelpersSlicedToArray"],[19,72,66,2],[20,2,1,0],[20,6,1,0,"_react"],[20,12,1,0],[20,15,1,0,"require"],[20,22,1,0],[20,23,1,0,"_dependencyMap"],[20,37,1,0],[21,2,2,0],[21,6,2,0,"_UpdatesEmitter"],[21,21,2,0],[21,24,2,0,"require"],[21,31,2,0],[21,32,2,0,"_dependencyMap"],[21,46,2,0],[22,2,3,0],[22,6,3,0,"_UseUpdatesUtils"],[22,22,3,0],[22,25,3,0,"require"],[22,32,3,0],[22,33,3,0,"_dependencyMap"],[22,47,3,0],[23,2,4,0],[24,0,5,0],[25,0,6,0],[26,0,7,0],[27,0,8,0],[28,0,9,0],[29,0,10,0],[30,0,11,0],[31,0,12,0],[32,0,13,0],[33,0,14,0],[34,0,15,0],[35,0,16,0],[36,0,17,0],[37,0,18,0],[38,0,19,0],[39,0,20,0],[40,0,21,0],[41,0,22,0],[42,0,23,0],[43,0,24,0],[44,0,25,0],[45,0,26,0],[46,0,27,0],[47,0,28,0],[48,0,29,0],[49,0,30,0],[50,0,31,0],[51,0,32,0],[52,0,33,0],[53,0,34,0],[54,0,35,0],[55,0,36,0],[56,0,37,0],[57,0,38,0],[58,0,39,0],[59,0,40,0],[60,0,41,0],[61,0,42,0],[62,0,43,0],[63,0,44,0],[64,0,45,0],[65,0,46,0],[66,0,47,0],[67,0,48,0],[68,0,49,0],[69,0,50,0],[70,0,51,0],[71,2,52,7],[71,6,52,13,"useUpdates"],[71,16,52,23],[71,19,52,26,"useUpdates"],[71,20,52,26],[71,25,52,32],[72,4,53,4],[72,8,53,4,"_useState"],[72,17,53,4],[72,20,53,44],[72,24,53,44,"useState"],[72,30,53,52],[72,31,53,52,"useState"],[72,39,53,52],[72,41,53,53],[72,45,53,53,"updatesStateFromContext"],[72,61,53,76],[72,62,53,76,"updatesStateFromContext"],[72,85,53,76],[72,87,53,77,"latestContext"],[72,102,53,90],[72,103,53,90,"latestContext"],[72,116,53,90],[72,117,53,91],[72,118,53,92],[73,6,53,92,"_useState2"],[73,16,53,92],[73,23,53,92,"_slicedToArray"],[73,37,53,92],[73,38,53,92,"default"],[73,45,53,92],[73,47,53,92,"_useState"],[73,56,53,92],[74,6,53,11,"updatesState"],[74,18,53,23],[74,21,53,23,"_useState2"],[74,31,53,23],[75,6,53,25,"setUpdatesState"],[75,21,53,40],[75,24,53,40,"_useState2"],[75,34,53,40],[76,4,54,4],[77,4,55,4],[77,8,55,4,"useEffect"],[77,14,55,13],[77,15,55,13,"useEffect"],[77,24,55,13],[77,26,55,14],[77,32,55,20],[78,6,56,8],[78,10,56,14,"subscription"],[78,22,56,26],[78,25,56,29],[78,29,56,29,"addUpdatesStateChangeListener"],[78,44,56,58],[78,45,56,58,"addUpdatesStateChangeListener"],[78,74,56,58],[78,76,56,60,"event"],[78,81,56,65],[78,85,56,70],[79,8,57,12,"setUpdatesState"],[79,23,57,27],[79,24,57,28],[79,28,57,28,"updatesStateFromContext"],[79,44,57,51],[79,45,57,51,"updatesStateFromContext"],[79,68,57,51],[79,70,57,52,"event"],[79,75,57,57],[79,76,57,58,"context"],[79,83,57,65],[79,84,57,66],[79,85,57,67],[80,6,58,8],[80,7,58,9],[80,8,58,10],[81,6,59,8],[81,13,59,15],[81,19,59,21,"subscription"],[81,31,59,33],[81,32,59,34,"remove"],[81,38,59,40],[81,39,59,41],[81,40,59,42],[82,4,60,4],[82,5,60,5],[82,7,60,7],[82,9,60,9],[82,10,60,10],[83,4,61,4],[84,4,62,4],[84,11,62,11],[85,6,63,8,"currentlyRunning"],[85,22,63,24],[85,24,63,8,"currentlyRunning"],[85,40,63,24],[85,41,63,24,"currentlyRunning"],[85,57,63,24],[86,6,64,8],[86,9,64,11,"updatesState"],[87,4,65,4],[87,5,65,5],[88,2,66,0],[88,3,66,1],[89,0,66,2],[89,3]],"functionMap":{"names":["<global>","useUpdates","useEffect$argument_0","addUpdatesStateChangeListener$argument_0","<anonymous>"],"mappings":"AAA;0BCmD;cCG;2DCC;SDE;eEC,2BF;KDC;CDM"},"hasCjsExports":false},"type":"js/module"}]}