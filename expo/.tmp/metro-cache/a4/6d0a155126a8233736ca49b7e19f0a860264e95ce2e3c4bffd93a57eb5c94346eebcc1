{"dependencies":[{"name":"../common/utils","data":{"asyncType":null,"isESMImport":false,"locs":[{"start":{"line":6,"column":21,"index":96},"end":{"line":6,"column":47,"index":122}},{"start":{"line":7,"column":21,"index":158},"end":{"line":7,"column":47,"index":184}},{"start":{"line":8,"column":21,"index":219},"end":{"line":8,"column":47,"index":245}}],"key":"s68H+Qrc8so5XeN472FI/1YNbEY=","exportNames":["*"],"imports":3}}],"output":[{"data":{"code":"__d(function (global, require, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {\n  // Convert straight quotation marks to typographic ones\n  //\n  'use strict';\n\n  var isWhiteSpace = require(_dependencyMap[0]).isWhiteSpace;\n  var isPunctChar = require(_dependencyMap[0]).isPunctChar;\n  var isMdAsciiPunct = require(_dependencyMap[0]).isMdAsciiPunct;\n  var QUOTE_TEST_RE = /['\"]/;\n  var QUOTE_RE = /['\"]/g;\n  var APOSTROPHE = '\\u2019'; /* â€™ */\n\n  function replaceAt(str, index, ch) {\n    return str.substr(0, index) + ch + str.substr(index + 1);\n  }\n  function process_inlines(tokens, state) {\n    var i, token, text, t, pos, max, thisLevel, item, lastChar, nextChar, isLastPunctChar, isNextPunctChar, isLastWhiteSpace, isNextWhiteSpace, canOpen, canClose, j, isSingle, stack, openQuote, closeQuote;\n    stack = [];\n    for (i = 0; i < tokens.length; i++) {\n      token = tokens[i];\n      thisLevel = tokens[i].level;\n      for (j = stack.length - 1; j >= 0; j--) {\n        if (stack[j].level <= thisLevel) {\n          break;\n        }\n      }\n      stack.length = j + 1;\n      if (token.type !== 'text') {\n        continue;\n      }\n      text = token.content;\n      pos = 0;\n      max = text.length;\n\n      /*eslint no-labels:0,block-scoped-var:0*/\n      OUTER: while (pos < max) {\n        QUOTE_RE.lastIndex = pos;\n        t = QUOTE_RE.exec(text);\n        if (!t) {\n          break;\n        }\n        canOpen = canClose = true;\n        pos = t.index + 1;\n        isSingle = t[0] === \"'\";\n\n        // Find previous character,\n        // default to space if it's the beginning of the line\n        //\n        lastChar = 0x20;\n        if (t.index - 1 >= 0) {\n          lastChar = text.charCodeAt(t.index - 1);\n        } else {\n          for (j = i - 1; j >= 0; j--) {\n            if (tokens[j].type === 'softbreak' || tokens[j].type === 'hardbreak') break; // lastChar defaults to 0x20\n            if (tokens[j].type !== 'text') continue;\n            lastChar = tokens[j].content.charCodeAt(tokens[j].content.length - 1);\n            break;\n          }\n        }\n\n        // Find next character,\n        // default to space if it's the end of the line\n        //\n        nextChar = 0x20;\n        if (pos < max) {\n          nextChar = text.charCodeAt(pos);\n        } else {\n          for (j = i + 1; j < tokens.length; j++) {\n            if (tokens[j].type === 'softbreak' || tokens[j].type === 'hardbreak') break; // nextChar defaults to 0x20\n            if (tokens[j].type !== 'text') continue;\n            nextChar = tokens[j].content.charCodeAt(0);\n            break;\n          }\n        }\n        isLastPunctChar = isMdAsciiPunct(lastChar) || isPunctChar(String.fromCharCode(lastChar));\n        isNextPunctChar = isMdAsciiPunct(nextChar) || isPunctChar(String.fromCharCode(nextChar));\n        isLastWhiteSpace = isWhiteSpace(lastChar);\n        isNextWhiteSpace = isWhiteSpace(nextChar);\n        if (isNextWhiteSpace) {\n          canOpen = false;\n        } else if (isNextPunctChar) {\n          if (!(isLastWhiteSpace || isLastPunctChar)) {\n            canOpen = false;\n          }\n        }\n        if (isLastWhiteSpace) {\n          canClose = false;\n        } else if (isLastPunctChar) {\n          if (!(isNextWhiteSpace || isNextPunctChar)) {\n            canClose = false;\n          }\n        }\n        if (nextChar === 0x22 /* \" */ && t[0] === '\"') {\n          if (lastChar >= 0x30 /* 0 */ && lastChar <= 0x39 /* 9 */) {\n            // special case: 1\"\" - count first quote as an inch\n            canClose = canOpen = false;\n          }\n        }\n        if (canOpen && canClose) {\n          // treat this as the middle of the word\n          canOpen = false;\n          canClose = isNextPunctChar;\n        }\n        if (!canOpen && !canClose) {\n          // middle of word\n          if (isSingle) {\n            token.content = replaceAt(token.content, t.index, APOSTROPHE);\n          }\n          continue;\n        }\n        if (canClose) {\n          // this could be a closing quote, rewind the stack to get a match\n          for (j = stack.length - 1; j >= 0; j--) {\n            item = stack[j];\n            if (stack[j].level < thisLevel) {\n              break;\n            }\n            if (item.single === isSingle && stack[j].level === thisLevel) {\n              item = stack[j];\n              if (isSingle) {\n                openQuote = state.md.options.quotes[2];\n                closeQuote = state.md.options.quotes[3];\n              } else {\n                openQuote = state.md.options.quotes[0];\n                closeQuote = state.md.options.quotes[1];\n              }\n\n              // replace token.content *before* tokens[item.token].content,\n              // because, if they are pointing at the same token, replaceAt\n              // could mess up indices when quote length != 1\n              token.content = replaceAt(token.content, t.index, closeQuote);\n              tokens[item.token].content = replaceAt(tokens[item.token].content, item.pos, openQuote);\n              pos += closeQuote.length - 1;\n              if (item.token === i) {\n                pos += openQuote.length - 1;\n              }\n              text = token.content;\n              max = text.length;\n              stack.length = j;\n              continue OUTER;\n            }\n          }\n        }\n        if (canOpen) {\n          stack.push({\n            token: i,\n            pos: t.index,\n            single: isSingle,\n            level: thisLevel\n          });\n        } else if (canClose && isSingle) {\n          token.content = replaceAt(token.content, t.index, APOSTROPHE);\n        }\n      }\n    }\n  }\n  module.exports = function smartquotes(state) {\n    /*eslint max-depth:0*/\n    var blkIdx;\n    if (!state.md.options.typographer) {\n      return;\n    }\n    for (blkIdx = state.tokens.length - 1; blkIdx >= 0; blkIdx--) {\n      if (state.tokens[blkIdx].type !== 'inline' || !QUOTE_TEST_RE.test(state.tokens[blkIdx].content)) {\n        continue;\n      }\n      process_inlines(state.tokens[blkIdx].children, state);\n    }\n  };\n});","lineCount":170,"map":[[2,2,1,0],[3,2,2,0],[4,2,3,0],[4,14,3,12],[6,2,6,0],[6,6,6,4,"isWhiteSpace"],[6,18,6,16],[6,21,6,21,"require"],[6,28,6,28],[6,29,6,28,"_dependencyMap"],[6,43,6,28],[6,46,6,46],[6,47,6,47],[6,48,6,48,"isWhiteSpace"],[6,60,6,60],[7,2,7,0],[7,6,7,4,"isPunctChar"],[7,17,7,15],[7,20,7,21,"require"],[7,27,7,28],[7,28,7,28,"_dependencyMap"],[7,42,7,28],[7,45,7,46],[7,46,7,47],[7,47,7,48,"isPunctChar"],[7,58,7,59],[8,2,8,0],[8,6,8,4,"isMdAsciiPunct"],[8,20,8,18],[8,23,8,21,"require"],[8,30,8,28],[8,31,8,28,"_dependencyMap"],[8,45,8,28],[8,48,8,46],[8,49,8,47],[8,50,8,48,"isMdAsciiPunct"],[8,64,8,62],[9,2,10,0],[9,6,10,4,"QUOTE_TEST_RE"],[9,19,10,17],[9,22,10,20],[9,28,10,26],[10,2,11,0],[10,6,11,4,"QUOTE_RE"],[10,14,11,12],[10,17,11,15],[10,24,11,22],[11,2,12,0],[11,6,12,4,"APOSTROPHE"],[11,16,12,14],[11,19,12,17],[11,27,12,25],[11,28,12,26],[11,29,12,27],[13,2,15,0],[13,11,15,9,"replaceAt"],[13,20,15,18,"replaceAt"],[13,21,15,19,"str"],[13,24,15,22],[13,26,15,24,"index"],[13,31,15,29],[13,33,15,31,"ch"],[13,35,15,33],[13,37,15,35],[14,4,16,2],[14,11,16,9,"str"],[14,14,16,12],[14,15,16,13,"substr"],[14,21,16,19],[14,22,16,20],[14,23,16,21],[14,25,16,23,"index"],[14,30,16,28],[14,31,16,29],[14,34,16,32,"ch"],[14,36,16,34],[14,39,16,37,"str"],[14,42,16,40],[14,43,16,41,"substr"],[14,49,16,47],[14,50,16,48,"index"],[14,55,16,53],[14,58,16,56],[14,59,16,57],[14,60,16,58],[15,2,17,0],[16,2,19,0],[16,11,19,9,"process_inlines"],[16,26,19,24,"process_inlines"],[16,27,19,25,"tokens"],[16,33,19,31],[16,35,19,33,"state"],[16,40,19,38],[16,42,19,40],[17,4,20,2],[17,8,20,6,"i"],[17,9,20,7],[17,11,20,9,"token"],[17,16,20,14],[17,18,20,16,"text"],[17,22,20,20],[17,24,20,22,"t"],[17,25,20,23],[17,27,20,25,"pos"],[17,30,20,28],[17,32,20,30,"max"],[17,35,20,33],[17,37,20,35,"thisLevel"],[17,46,20,44],[17,48,20,46,"item"],[17,52,20,50],[17,54,20,52,"lastChar"],[17,62,20,60],[17,64,20,62,"nextChar"],[17,72,20,70],[17,74,21,6,"isLastPunctChar"],[17,89,21,21],[17,91,21,23,"isNextPunctChar"],[17,106,21,38],[17,108,21,40,"isLastWhiteSpace"],[17,124,21,56],[17,126,21,58,"isNextWhiteSpace"],[17,142,21,74],[17,144,22,6,"canOpen"],[17,151,22,13],[17,153,22,15,"canClose"],[17,161,22,23],[17,163,22,25,"j"],[17,164,22,26],[17,166,22,28,"isSingle"],[17,174,22,36],[17,176,22,38,"stack"],[17,181,22,43],[17,183,22,45,"openQuote"],[17,192,22,54],[17,194,22,56,"closeQuote"],[17,204,22,66],[18,4,24,2,"stack"],[18,9,24,7],[18,12,24,10],[18,14,24,12],[19,4,26,2],[19,9,26,7,"i"],[19,10,26,8],[19,13,26,11],[19,14,26,12],[19,16,26,14,"i"],[19,17,26,15],[19,20,26,18,"tokens"],[19,26,26,24],[19,27,26,25,"length"],[19,33,26,31],[19,35,26,33,"i"],[19,36,26,34],[19,38,26,36],[19,40,26,38],[20,6,27,4,"token"],[20,11,27,9],[20,14,27,12,"tokens"],[20,20,27,18],[20,21,27,19,"i"],[20,22,27,20],[20,23,27,21],[21,6,29,4,"thisLevel"],[21,15,29,13],[21,18,29,16,"tokens"],[21,24,29,22],[21,25,29,23,"i"],[21,26,29,24],[21,27,29,25],[21,28,29,26,"level"],[21,33,29,31],[22,6,31,4],[22,11,31,9,"j"],[22,12,31,10],[22,15,31,13,"stack"],[22,20,31,18],[22,21,31,19,"length"],[22,27,31,25],[22,30,31,28],[22,31,31,29],[22,33,31,31,"j"],[22,34,31,32],[22,38,31,36],[22,39,31,37],[22,41,31,39,"j"],[22,42,31,40],[22,44,31,42],[22,46,31,44],[23,8,32,6],[23,12,32,10,"stack"],[23,17,32,15],[23,18,32,16,"j"],[23,19,32,17],[23,20,32,18],[23,21,32,19,"level"],[23,26,32,24],[23,30,32,28,"thisLevel"],[23,39,32,37],[23,41,32,39],[24,10,32,41],[25,8,32,48],[26,6,33,4],[27,6,34,4,"stack"],[27,11,34,9],[27,12,34,10,"length"],[27,18,34,16],[27,21,34,19,"j"],[27,22,34,20],[27,25,34,23],[27,26,34,24],[28,6,36,4],[28,10,36,8,"token"],[28,15,36,13],[28,16,36,14,"type"],[28,20,36,18],[28,25,36,23],[28,31,36,29],[28,33,36,31],[29,8,36,33],[30,6,36,43],[31,6,38,4,"text"],[31,10,38,8],[31,13,38,11,"token"],[31,18,38,16],[31,19,38,17,"content"],[31,26,38,24],[32,6,39,4,"pos"],[32,9,39,7],[32,12,39,10],[32,13,39,11],[33,6,40,4,"max"],[33,9,40,7],[33,12,40,10,"text"],[33,16,40,14],[33,17,40,15,"length"],[33,23,40,21],[35,6,42,4],[36,6,43,4,"OUTER"],[36,11,43,9],[36,13,44,4],[36,20,44,11,"pos"],[36,23,44,14],[36,26,44,17,"max"],[36,29,44,20],[36,31,44,22],[37,8,45,6,"QUOTE_RE"],[37,16,45,14],[37,17,45,15,"lastIndex"],[37,26,45,24],[37,29,45,27,"pos"],[37,32,45,30],[38,8,46,6,"t"],[38,9,46,7],[38,12,46,10,"QUOTE_RE"],[38,20,46,18],[38,21,46,19,"exec"],[38,25,46,23],[38,26,46,24,"text"],[38,30,46,28],[38,31,46,29],[39,8,47,6],[39,12,47,10],[39,13,47,11,"t"],[39,14,47,12],[39,16,47,14],[40,10,47,16],[41,8,47,23],[42,8,49,6,"canOpen"],[42,15,49,13],[42,18,49,16,"canClose"],[42,26,49,24],[42,29,49,27],[42,33,49,31],[43,8,50,6,"pos"],[43,11,50,9],[43,14,50,12,"t"],[43,15,50,13],[43,16,50,14,"index"],[43,21,50,19],[43,24,50,22],[43,25,50,23],[44,8,51,6,"isSingle"],[44,16,51,14],[44,19,51,18,"t"],[44,20,51,19],[44,21,51,20],[44,22,51,21],[44,23,51,22],[44,28,51,27],[44,31,51,31],[46,8,53,6],[47,8,54,6],[48,8,55,6],[49,8,56,6,"lastChar"],[49,16,56,14],[49,19,56,17],[49,23,56,21],[50,8,58,6],[50,12,58,10,"t"],[50,13,58,11],[50,14,58,12,"index"],[50,19,58,17],[50,22,58,20],[50,23,58,21],[50,27,58,25],[50,28,58,26],[50,30,58,28],[51,10,59,8,"lastChar"],[51,18,59,16],[51,21,59,19,"text"],[51,25,59,23],[51,26,59,24,"charCodeAt"],[51,36,59,34],[51,37,59,35,"t"],[51,38,59,36],[51,39,59,37,"index"],[51,44,59,42],[51,47,59,45],[51,48,59,46],[51,49,59,47],[52,8,60,6],[52,9,60,7],[52,15,60,13],[53,10,61,8],[53,15,61,13,"j"],[53,16,61,14],[53,19,61,17,"i"],[53,20,61,18],[53,23,61,21],[53,24,61,22],[53,26,61,24,"j"],[53,27,61,25],[53,31,61,29],[53,32,61,30],[53,34,61,32,"j"],[53,35,61,33],[53,37,61,35],[53,39,61,37],[54,12,62,10],[54,16,62,14,"tokens"],[54,22,62,20],[54,23,62,21,"j"],[54,24,62,22],[54,25,62,23],[54,26,62,24,"type"],[54,30,62,28],[54,35,62,33],[54,46,62,44],[54,50,62,48,"tokens"],[54,56,62,54],[54,57,62,55,"j"],[54,58,62,56],[54,59,62,57],[54,60,62,58,"type"],[54,64,62,62],[54,69,62,67],[54,80,62,78],[54,82,62,80],[54,88,62,86],[54,89,62,87],[55,12,63,10],[55,16,63,14,"tokens"],[55,22,63,20],[55,23,63,21,"j"],[55,24,63,22],[55,25,63,23],[55,26,63,24,"type"],[55,30,63,28],[55,35,63,33],[55,41,63,39],[55,43,63,41],[56,12,65,10,"lastChar"],[56,20,65,18],[56,23,65,21,"tokens"],[56,29,65,27],[56,30,65,28,"j"],[56,31,65,29],[56,32,65,30],[56,33,65,31,"content"],[56,40,65,38],[56,41,65,39,"charCodeAt"],[56,51,65,49],[56,52,65,50,"tokens"],[56,58,65,56],[56,59,65,57,"j"],[56,60,65,58],[56,61,65,59],[56,62,65,60,"content"],[56,69,65,67],[56,70,65,68,"length"],[56,76,65,74],[56,79,65,77],[56,80,65,78],[56,81,65,79],[57,12,66,10],[58,10,67,8],[59,8,68,6],[61,8,70,6],[62,8,71,6],[63,8,72,6],[64,8,73,6,"nextChar"],[64,16,73,14],[64,19,73,17],[64,23,73,21],[65,8,75,6],[65,12,75,10,"pos"],[65,15,75,13],[65,18,75,16,"max"],[65,21,75,19],[65,23,75,21],[66,10,76,8,"nextChar"],[66,18,76,16],[66,21,76,19,"text"],[66,25,76,23],[66,26,76,24,"charCodeAt"],[66,36,76,34],[66,37,76,35,"pos"],[66,40,76,38],[66,41,76,39],[67,8,77,6],[67,9,77,7],[67,15,77,13],[68,10,78,8],[68,15,78,13,"j"],[68,16,78,14],[68,19,78,17,"i"],[68,20,78,18],[68,23,78,21],[68,24,78,22],[68,26,78,24,"j"],[68,27,78,25],[68,30,78,28,"tokens"],[68,36,78,34],[68,37,78,35,"length"],[68,43,78,41],[68,45,78,43,"j"],[68,46,78,44],[68,48,78,46],[68,50,78,48],[69,12,79,10],[69,16,79,14,"tokens"],[69,22,79,20],[69,23,79,21,"j"],[69,24,79,22],[69,25,79,23],[69,26,79,24,"type"],[69,30,79,28],[69,35,79,33],[69,46,79,44],[69,50,79,48,"tokens"],[69,56,79,54],[69,57,79,55,"j"],[69,58,79,56],[69,59,79,57],[69,60,79,58,"type"],[69,64,79,62],[69,69,79,67],[69,80,79,78],[69,82,79,80],[69,88,79,86],[69,89,79,87],[70,12,80,10],[70,16,80,14,"tokens"],[70,22,80,20],[70,23,80,21,"j"],[70,24,80,22],[70,25,80,23],[70,26,80,24,"type"],[70,30,80,28],[70,35,80,33],[70,41,80,39],[70,43,80,41],[71,12,82,10,"nextChar"],[71,20,82,18],[71,23,82,21,"tokens"],[71,29,82,27],[71,30,82,28,"j"],[71,31,82,29],[71,32,82,30],[71,33,82,31,"content"],[71,40,82,38],[71,41,82,39,"charCodeAt"],[71,51,82,49],[71,52,82,50],[71,53,82,51],[71,54,82,52],[72,12,83,10],[73,10,84,8],[74,8,85,6],[75,8,87,6,"isLastPunctChar"],[75,23,87,21],[75,26,87,24,"isMdAsciiPunct"],[75,40,87,38],[75,41,87,39,"lastChar"],[75,49,87,47],[75,50,87,48],[75,54,87,52,"isPunctChar"],[75,65,87,63],[75,66,87,64,"String"],[75,72,87,70],[75,73,87,71,"fromCharCode"],[75,85,87,83],[75,86,87,84,"lastChar"],[75,94,87,92],[75,95,87,93],[75,96,87,94],[76,8,88,6,"isNextPunctChar"],[76,23,88,21],[76,26,88,24,"isMdAsciiPunct"],[76,40,88,38],[76,41,88,39,"nextChar"],[76,49,88,47],[76,50,88,48],[76,54,88,52,"isPunctChar"],[76,65,88,63],[76,66,88,64,"String"],[76,72,88,70],[76,73,88,71,"fromCharCode"],[76,85,88,83],[76,86,88,84,"nextChar"],[76,94,88,92],[76,95,88,93],[76,96,88,94],[77,8,90,6,"isLastWhiteSpace"],[77,24,90,22],[77,27,90,25,"isWhiteSpace"],[77,39,90,37],[77,40,90,38,"lastChar"],[77,48,90,46],[77,49,90,47],[78,8,91,6,"isNextWhiteSpace"],[78,24,91,22],[78,27,91,25,"isWhiteSpace"],[78,39,91,37],[78,40,91,38,"nextChar"],[78,48,91,46],[78,49,91,47],[79,8,93,6],[79,12,93,10,"isNextWhiteSpace"],[79,28,93,26],[79,30,93,28],[80,10,94,8,"canOpen"],[80,17,94,15],[80,20,94,18],[80,25,94,23],[81,8,95,6],[81,9,95,7],[81,15,95,13],[81,19,95,17,"isNextPunctChar"],[81,34,95,32],[81,36,95,34],[82,10,96,8],[82,14,96,12],[82,16,96,14,"isLastWhiteSpace"],[82,32,96,30],[82,36,96,34,"isLastPunctChar"],[82,51,96,49],[82,52,96,50],[82,54,96,52],[83,12,97,10,"canOpen"],[83,19,97,17],[83,22,97,20],[83,27,97,25],[84,10,98,8],[85,8,99,6],[86,8,101,6],[86,12,101,10,"isLastWhiteSpace"],[86,28,101,26],[86,30,101,28],[87,10,102,8,"canClose"],[87,18,102,16],[87,21,102,19],[87,26,102,24],[88,8,103,6],[88,9,103,7],[88,15,103,13],[88,19,103,17,"isLastPunctChar"],[88,34,103,32],[88,36,103,34],[89,10,104,8],[89,14,104,12],[89,16,104,14,"isNextWhiteSpace"],[89,32,104,30],[89,36,104,34,"isNextPunctChar"],[89,51,104,49],[89,52,104,50],[89,54,104,52],[90,12,105,10,"canClose"],[90,20,105,18],[90,23,105,21],[90,28,105,26],[91,10,106,8],[92,8,107,6],[93,8,109,6],[93,12,109,10,"nextChar"],[93,20,109,18],[93,25,109,23],[93,29,109,27],[93,30,109,28],[93,41,109,39,"t"],[93,42,109,40],[93,43,109,41],[93,44,109,42],[93,45,109,43],[93,50,109,48],[93,53,109,51],[93,55,109,53],[94,10,110,8],[94,14,110,12,"lastChar"],[94,22,110,20],[94,26,110,24],[94,30,110,28],[94,31,110,29],[94,42,110,40,"lastChar"],[94,50,110,48],[94,54,110,52],[94,58,110,56],[94,59,110,57],[94,68,110,66],[95,12,111,10],[96,12,112,10,"canClose"],[96,20,112,18],[96,23,112,21,"canOpen"],[96,30,112,28],[96,33,112,31],[96,38,112,36],[97,10,113,8],[98,8,114,6],[99,8,116,6],[99,12,116,10,"canOpen"],[99,19,116,17],[99,23,116,21,"canClose"],[99,31,116,29],[99,33,116,31],[100,10,117,8],[101,10,118,8,"canOpen"],[101,17,118,15],[101,20,118,18],[101,25,118,23],[102,10,119,8,"canClose"],[102,18,119,16],[102,21,119,19,"isNextPunctChar"],[102,36,119,34],[103,8,120,6],[104,8,122,6],[104,12,122,10],[104,13,122,11,"canOpen"],[104,20,122,18],[104,24,122,22],[104,25,122,23,"canClose"],[104,33,122,31],[104,35,122,33],[105,10,123,8],[106,10,124,8],[106,14,124,12,"isSingle"],[106,22,124,20],[106,24,124,22],[107,12,125,10,"token"],[107,17,125,15],[107,18,125,16,"content"],[107,25,125,23],[107,28,125,26,"replaceAt"],[107,37,125,35],[107,38,125,36,"token"],[107,43,125,41],[107,44,125,42,"content"],[107,51,125,49],[107,53,125,51,"t"],[107,54,125,52],[107,55,125,53,"index"],[107,60,125,58],[107,62,125,60,"APOSTROPHE"],[107,72,125,70],[107,73,125,71],[108,10,126,8],[109,10,127,8],[110,8,128,6],[111,8,130,6],[111,12,130,10,"canClose"],[111,20,130,18],[111,22,130,20],[112,10,131,8],[113,10,132,8],[113,15,132,13,"j"],[113,16,132,14],[113,19,132,17,"stack"],[113,24,132,22],[113,25,132,23,"length"],[113,31,132,29],[113,34,132,32],[113,35,132,33],[113,37,132,35,"j"],[113,38,132,36],[113,42,132,40],[113,43,132,41],[113,45,132,43,"j"],[113,46,132,44],[113,48,132,46],[113,50,132,48],[114,12,133,10,"item"],[114,16,133,14],[114,19,133,17,"stack"],[114,24,133,22],[114,25,133,23,"j"],[114,26,133,24],[114,27,133,25],[115,12,134,10],[115,16,134,14,"stack"],[115,21,134,19],[115,22,134,20,"j"],[115,23,134,21],[115,24,134,22],[115,25,134,23,"level"],[115,30,134,28],[115,33,134,31,"thisLevel"],[115,42,134,40],[115,44,134,42],[116,14,134,44],[117,12,134,51],[118,12,135,10],[118,16,135,14,"item"],[118,20,135,18],[118,21,135,19,"single"],[118,27,135,25],[118,32,135,30,"isSingle"],[118,40,135,38],[118,44,135,42,"stack"],[118,49,135,47],[118,50,135,48,"j"],[118,51,135,49],[118,52,135,50],[118,53,135,51,"level"],[118,58,135,56],[118,63,135,61,"thisLevel"],[118,72,135,70],[118,74,135,72],[119,14,136,12,"item"],[119,18,136,16],[119,21,136,19,"stack"],[119,26,136,24],[119,27,136,25,"j"],[119,28,136,26],[119,29,136,27],[120,14,138,12],[120,18,138,16,"isSingle"],[120,26,138,24],[120,28,138,26],[121,16,139,14,"openQuote"],[121,25,139,23],[121,28,139,26,"state"],[121,33,139,31],[121,34,139,32,"md"],[121,36,139,34],[121,37,139,35,"options"],[121,44,139,42],[121,45,139,43,"quotes"],[121,51,139,49],[121,52,139,50],[121,53,139,51],[121,54,139,52],[122,16,140,14,"closeQuote"],[122,26,140,24],[122,29,140,27,"state"],[122,34,140,32],[122,35,140,33,"md"],[122,37,140,35],[122,38,140,36,"options"],[122,45,140,43],[122,46,140,44,"quotes"],[122,52,140,50],[122,53,140,51],[122,54,140,52],[122,55,140,53],[123,14,141,12],[123,15,141,13],[123,21,141,19],[124,16,142,14,"openQuote"],[124,25,142,23],[124,28,142,26,"state"],[124,33,142,31],[124,34,142,32,"md"],[124,36,142,34],[124,37,142,35,"options"],[124,44,142,42],[124,45,142,43,"quotes"],[124,51,142,49],[124,52,142,50],[124,53,142,51],[124,54,142,52],[125,16,143,14,"closeQuote"],[125,26,143,24],[125,29,143,27,"state"],[125,34,143,32],[125,35,143,33,"md"],[125,37,143,35],[125,38,143,36,"options"],[125,45,143,43],[125,46,143,44,"quotes"],[125,52,143,50],[125,53,143,51],[125,54,143,52],[125,55,143,53],[126,14,144,12],[128,14,146,12],[129,14,147,12],[130,14,148,12],[131,14,149,12,"token"],[131,19,149,17],[131,20,149,18,"content"],[131,27,149,25],[131,30,149,28,"replaceAt"],[131,39,149,37],[131,40,149,38,"token"],[131,45,149,43],[131,46,149,44,"content"],[131,53,149,51],[131,55,149,53,"t"],[131,56,149,54],[131,57,149,55,"index"],[131,62,149,60],[131,64,149,62,"closeQuote"],[131,74,149,72],[131,75,149,73],[132,14,150,12,"tokens"],[132,20,150,18],[132,21,150,19,"item"],[132,25,150,23],[132,26,150,24,"token"],[132,31,150,29],[132,32,150,30],[132,33,150,31,"content"],[132,40,150,38],[132,43,150,41,"replaceAt"],[132,52,150,50],[132,53,151,14,"tokens"],[132,59,151,20],[132,60,151,21,"item"],[132,64,151,25],[132,65,151,26,"token"],[132,70,151,31],[132,71,151,32],[132,72,151,33,"content"],[132,79,151,40],[132,81,151,42,"item"],[132,85,151,46],[132,86,151,47,"pos"],[132,89,151,50],[132,91,151,52,"openQuote"],[132,100,151,61],[132,101,151,62],[133,14,153,12,"pos"],[133,17,153,15],[133,21,153,19,"closeQuote"],[133,31,153,29],[133,32,153,30,"length"],[133,38,153,36],[133,41,153,39],[133,42,153,40],[134,14,154,12],[134,18,154,16,"item"],[134,22,154,20],[134,23,154,21,"token"],[134,28,154,26],[134,33,154,31,"i"],[134,34,154,32],[134,36,154,34],[135,16,154,36,"pos"],[135,19,154,39],[135,23,154,43,"openQuote"],[135,32,154,52],[135,33,154,53,"length"],[135,39,154,59],[135,42,154,62],[135,43,154,63],[136,14,154,65],[137,14,156,12,"text"],[137,18,156,16],[137,21,156,19,"token"],[137,26,156,24],[137,27,156,25,"content"],[137,34,156,32],[138,14,157,12,"max"],[138,17,157,15],[138,20,157,18,"text"],[138,24,157,22],[138,25,157,23,"length"],[138,31,157,29],[139,14,159,12,"stack"],[139,19,159,17],[139,20,159,18,"length"],[139,26,159,24],[139,29,159,27,"j"],[139,30,159,28],[140,14,160,12],[140,23,160,21,"OUTER"],[140,28,160,26],[141,12,161,10],[142,10,162,8],[143,8,163,6],[144,8,165,6],[144,12,165,10,"canOpen"],[144,19,165,17],[144,21,165,19],[145,10,166,8,"stack"],[145,15,166,13],[145,16,166,14,"push"],[145,20,166,18],[145,21,166,19],[146,12,167,10,"token"],[146,17,167,15],[146,19,167,17,"i"],[146,20,167,18],[147,12,168,10,"pos"],[147,15,168,13],[147,17,168,15,"t"],[147,18,168,16],[147,19,168,17,"index"],[147,24,168,22],[148,12,169,10,"single"],[148,18,169,16],[148,20,169,18,"isSingle"],[148,28,169,26],[149,12,170,10,"level"],[149,17,170,15],[149,19,170,17,"thisLevel"],[150,10,171,8],[150,11,171,9],[150,12,171,10],[151,8,172,6],[151,9,172,7],[151,15,172,13],[151,19,172,17,"canClose"],[151,27,172,25],[151,31,172,29,"isSingle"],[151,39,172,37],[151,41,172,39],[152,10,173,8,"token"],[152,15,173,13],[152,16,173,14,"content"],[152,23,173,21],[152,26,173,24,"replaceAt"],[152,35,173,33],[152,36,173,34,"token"],[152,41,173,39],[152,42,173,40,"content"],[152,49,173,47],[152,51,173,49,"t"],[152,52,173,50],[152,53,173,51,"index"],[152,58,173,56],[152,60,173,58,"APOSTROPHE"],[152,70,173,68],[152,71,173,69],[153,8,174,6],[154,6,175,4],[155,4,176,2],[156,2,177,0],[157,2,180,0,"module"],[157,8,180,6],[157,9,180,7,"exports"],[157,16,180,14],[157,19,180,17],[157,28,180,26,"smartquotes"],[157,39,180,37,"smartquotes"],[157,40,180,38,"state"],[157,45,180,43],[157,47,180,45],[158,4,181,2],[159,4,182,2],[159,8,182,6,"blkIdx"],[159,14,182,12],[160,4,184,2],[160,8,184,6],[160,9,184,7,"state"],[160,14,184,12],[160,15,184,13,"md"],[160,17,184,15],[160,18,184,16,"options"],[160,25,184,23],[160,26,184,24,"typographer"],[160,37,184,35],[160,39,184,37],[161,6,184,39],[162,4,184,47],[163,4,186,2],[163,9,186,7,"blkIdx"],[163,15,186,13],[163,18,186,16,"state"],[163,23,186,21],[163,24,186,22,"tokens"],[163,30,186,28],[163,31,186,29,"length"],[163,37,186,35],[163,40,186,38],[163,41,186,39],[163,43,186,41,"blkIdx"],[163,49,186,47],[163,53,186,51],[163,54,186,52],[163,56,186,54,"blkIdx"],[163,62,186,60],[163,64,186,62],[163,66,186,64],[164,6,188,4],[164,10,188,8,"state"],[164,15,188,13],[164,16,188,14,"tokens"],[164,22,188,20],[164,23,188,21,"blkIdx"],[164,29,188,27],[164,30,188,28],[164,31,188,29,"type"],[164,35,188,33],[164,40,188,38],[164,48,188,46],[164,52,189,8],[164,53,189,9,"QUOTE_TEST_RE"],[164,66,189,22],[164,67,189,23,"test"],[164,71,189,27],[164,72,189,28,"state"],[164,77,189,33],[164,78,189,34,"tokens"],[164,84,189,40],[164,85,189,41,"blkIdx"],[164,91,189,47],[164,92,189,48],[164,93,189,49,"content"],[164,100,189,56],[164,101,189,57],[164,103,189,59],[165,8,190,6],[166,6,191,4],[167,6,193,4,"process_inlines"],[167,21,193,19],[167,22,193,20,"state"],[167,27,193,25],[167,28,193,26,"tokens"],[167,34,193,32],[167,35,193,33,"blkIdx"],[167,41,193,39],[167,42,193,40],[167,43,193,41,"children"],[167,51,193,49],[167,53,193,51,"state"],[167,58,193,56],[167,59,193,57],[168,4,194,2],[169,2,195,0],[169,3,195,1],[170,0,195,2],[170,3]],"functionMap":{"names":["<global>","replaceAt","process_inlines","smartquotes"],"mappings":"AAA;ACc;CDE;AEE;CF8J;iBGG;CHe"},"hasCjsExports":true},"type":"js/module"}]}