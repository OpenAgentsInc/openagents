{"dependencies":[],"output":[{"data":{"code":"__d(function (global, require, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {\n  // Paragraph\n\n  'use strict';\n\n  module.exports = function paragraph(state, startLine /*, endLine*/) {\n    var content,\n      terminate,\n      i,\n      l,\n      token,\n      oldParentType,\n      nextLine = startLine + 1,\n      terminatorRules = state.md.block.ruler.getRules('paragraph'),\n      endLine = state.lineMax;\n    oldParentType = state.parentType;\n    state.parentType = 'paragraph';\n\n    // jump line-by-line until empty one or EOF\n    for (; nextLine < endLine && !state.isEmpty(nextLine); nextLine++) {\n      // this would be a code block normally, but after paragraph\n      // it's considered a lazy continuation regardless of what's there\n      if (state.sCount[nextLine] - state.blkIndent > 3) {\n        continue;\n      }\n\n      // quirk for blockquotes, this line should already be checked by that rule\n      if (state.sCount[nextLine] < 0) {\n        continue;\n      }\n\n      // Some tags can terminate paragraph without empty line.\n      terminate = false;\n      for (i = 0, l = terminatorRules.length; i < l; i++) {\n        if (terminatorRules[i](state, nextLine, endLine, true)) {\n          terminate = true;\n          break;\n        }\n      }\n      if (terminate) {\n        break;\n      }\n    }\n    content = state.getLines(startLine, nextLine, state.blkIndent, false).trim();\n    state.line = nextLine;\n    token = state.push('paragraph_open', 'p', 1);\n    token.map = [startLine, state.line];\n    token = state.push('inline', '', 0);\n    token.content = content;\n    token.map = [startLine, state.line];\n    token.children = [];\n    token = state.push('paragraph_close', 'p', -1);\n    state.parentType = oldParentType;\n    return true;\n  };\n});","lineCount":56,"map":[[2,2,1,0],[4,2,3,0],[4,14,3,12],[6,2,6,0,"module"],[6,8,6,6],[6,9,6,7,"exports"],[6,16,6,14],[6,19,6,17],[6,28,6,26,"paragraph"],[6,37,6,35,"paragraph"],[6,38,6,36,"state"],[6,43,6,41],[6,45,6,43,"startLine"],[6,54,6,52],[6,70,6,67],[7,4,7,2],[7,8,7,6,"content"],[7,15,7,13],[8,6,7,15,"terminate"],[8,15,7,24],[9,6,7,26,"i"],[9,7,7,27],[10,6,7,29,"l"],[10,7,7,30],[11,6,7,32,"token"],[11,11,7,37],[12,6,7,39,"oldParentType"],[12,19,7,52],[13,6,8,6,"nextLine"],[13,14,8,14],[13,17,8,17,"startLine"],[13,26,8,26],[13,29,8,29],[13,30,8,30],[14,6,9,6,"terminatorRules"],[14,21,9,21],[14,24,9,24,"state"],[14,29,9,29],[14,30,9,30,"md"],[14,32,9,32],[14,33,9,33,"block"],[14,38,9,38],[14,39,9,39,"ruler"],[14,44,9,44],[14,45,9,45,"getRules"],[14,53,9,53],[14,54,9,54],[14,65,9,65],[14,66,9,66],[15,6,10,6,"endLine"],[15,13,10,13],[15,16,10,16,"state"],[15,21,10,21],[15,22,10,22,"lineMax"],[15,29,10,29],[16,4,12,2,"oldParentType"],[16,17,12,15],[16,20,12,18,"state"],[16,25,12,23],[16,26,12,24,"parentType"],[16,36,12,34],[17,4,13,2,"state"],[17,9,13,7],[17,10,13,8,"parentType"],[17,20,13,18],[17,23,13,21],[17,34,13,32],[19,4,15,2],[20,4,16,2],[20,11,16,9,"nextLine"],[20,19,16,17],[20,22,16,20,"endLine"],[20,29,16,27],[20,33,16,31],[20,34,16,32,"state"],[20,39,16,37],[20,40,16,38,"isEmpty"],[20,47,16,45],[20,48,16,46,"nextLine"],[20,56,16,54],[20,57,16,55],[20,59,16,57,"nextLine"],[20,67,16,65],[20,69,16,67],[20,71,16,69],[21,6,17,4],[22,6,18,4],[23,6,19,4],[23,10,19,8,"state"],[23,15,19,13],[23,16,19,14,"sCount"],[23,22,19,20],[23,23,19,21,"nextLine"],[23,31,19,29],[23,32,19,30],[23,35,19,33,"state"],[23,40,19,38],[23,41,19,39,"blkIndent"],[23,50,19,48],[23,53,19,51],[23,54,19,52],[23,56,19,54],[24,8,19,56],[25,6,19,66],[27,6,21,4],[28,6,22,4],[28,10,22,8,"state"],[28,15,22,13],[28,16,22,14,"sCount"],[28,22,22,20],[28,23,22,21,"nextLine"],[28,31,22,29],[28,32,22,30],[28,35,22,33],[28,36,22,34],[28,38,22,36],[29,8,22,38],[30,6,22,48],[32,6,24,4],[33,6,25,4,"terminate"],[33,15,25,13],[33,18,25,16],[33,23,25,21],[34,6,26,4],[34,11,26,9,"i"],[34,12,26,10],[34,15,26,13],[34,16,26,14],[34,18,26,16,"l"],[34,19,26,17],[34,22,26,20,"terminatorRules"],[34,37,26,35],[34,38,26,36,"length"],[34,44,26,42],[34,46,26,44,"i"],[34,47,26,45],[34,50,26,48,"l"],[34,51,26,49],[34,53,26,51,"i"],[34,54,26,52],[34,56,26,54],[34,58,26,56],[35,8,27,6],[35,12,27,10,"terminatorRules"],[35,27,27,25],[35,28,27,26,"i"],[35,29,27,27],[35,30,27,28],[35,31,27,29,"state"],[35,36,27,34],[35,38,27,36,"nextLine"],[35,46,27,44],[35,48,27,46,"endLine"],[35,55,27,53],[35,57,27,55],[35,61,27,59],[35,62,27,60],[35,64,27,62],[36,10,28,8,"terminate"],[36,19,28,17],[36,22,28,20],[36,26,28,24],[37,10,29,8],[38,8,30,6],[39,6,31,4],[40,6,32,4],[40,10,32,8,"terminate"],[40,19,32,17],[40,21,32,19],[41,8,32,21],[42,6,32,28],[43,4,33,2],[44,4,35,2,"content"],[44,11,35,9],[44,14,35,12,"state"],[44,19,35,17],[44,20,35,18,"getLines"],[44,28,35,26],[44,29,35,27,"startLine"],[44,38,35,36],[44,40,35,38,"nextLine"],[44,48,35,46],[44,50,35,48,"state"],[44,55,35,53],[44,56,35,54,"blkIndent"],[44,65,35,63],[44,67,35,65],[44,72,35,70],[44,73,35,71],[44,74,35,72,"trim"],[44,78,35,76],[44,79,35,77],[44,80,35,78],[45,4,37,2,"state"],[45,9,37,7],[45,10,37,8,"line"],[45,14,37,12],[45,17,37,15,"nextLine"],[45,25,37,23],[46,4,39,2,"token"],[46,9,39,7],[46,12,39,19,"state"],[46,17,39,24],[46,18,39,25,"push"],[46,22,39,29],[46,23,39,30],[46,39,39,46],[46,41,39,48],[46,44,39,51],[46,46,39,53],[46,47,39,54],[46,48,39,55],[47,4,40,2,"token"],[47,9,40,7],[47,10,40,8,"map"],[47,13,40,11],[47,16,40,19],[47,17,40,21,"startLine"],[47,26,40,30],[47,28,40,32,"state"],[47,33,40,37],[47,34,40,38,"line"],[47,38,40,42],[47,39,40,44],[48,4,42,2,"token"],[48,9,42,7],[48,12,42,19,"state"],[48,17,42,24],[48,18,42,25,"push"],[48,22,42,29],[48,23,42,30],[48,31,42,38],[48,33,42,40],[48,35,42,42],[48,37,42,44],[48,38,42,45],[48,39,42,46],[49,4,43,2,"token"],[49,9,43,7],[49,10,43,8,"content"],[49,17,43,15],[49,20,43,19,"content"],[49,27,43,26],[50,4,44,2,"token"],[50,9,44,7],[50,10,44,8,"map"],[50,13,44,11],[50,16,44,19],[50,17,44,21,"startLine"],[50,26,44,30],[50,28,44,32,"state"],[50,33,44,37],[50,34,44,38,"line"],[50,38,44,42],[50,39,44,44],[51,4,45,2,"token"],[51,9,45,7],[51,10,45,8,"children"],[51,18,45,16],[51,21,45,19],[51,23,45,21],[52,4,47,2,"token"],[52,9,47,7],[52,12,47,19,"state"],[52,17,47,24],[52,18,47,25,"push"],[52,22,47,29],[52,23,47,30],[52,40,47,47],[52,42,47,49],[52,45,47,52],[52,49,47,56],[52,50,47,57],[53,4,49,2,"state"],[53,9,49,7],[53,10,49,8,"parentType"],[53,20,49,18],[53,23,49,21,"oldParentType"],[53,36,49,34],[54,4,51,2],[54,11,51,9],[54,15,51,13],[55,2,52,0],[55,3,52,1],[56,0,52,2],[56,3]],"functionMap":{"names":["<global>","paragraph"],"mappings":"AAA;iBCK;CD8C"},"hasCjsExports":true},"type":"js/module"}]}