{"dependencies":[{"name":"react-native-worklets","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":2,"column":0,"index":14},"end":{"line":2,"column":52,"index":66}}],"key":"upgdvla269Vpw38V/0PgHoMDZsA=","exportNames":["*"],"imports":1}},{"name":"../common","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":4,"column":0,"index":68},"end":{"line":4,"column":63,"index":131}}],"key":"tbtg/nEigFLu9LmBKxGuAsZ2sgI=","exportNames":["*"],"imports":1}}],"output":[{"data":{"code":"__d(function (global, require, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {\n  'use strict';\n\n  Object.defineProperty(exports, '__esModule', {\n    value: true\n  });\n  Object.defineProperty(exports, \"dispatchCommand\", {\n    enumerable: true,\n    get: function () {\n      return dispatchCommand;\n    }\n  });\n  var _reactNativeWorklets = require(_dependencyMap[0]);\n  var _common = require(_dependencyMap[1]);\n  /**\n   * Lets you synchronously call a command of a native component.\n   *\n   * @param animatedRef - An [animated\n   *   ref](https://docs.swmansion.com/react-native-reanimated/docs/core/useAnimatedRef#returns)\n   *   connected to the component you'd want to call the command on.\n   * @param commandName - The name of the command to dispatch (e.g. `\"focus\"` or\n   *   `\"scrollToEnd\"`).\n   * @param args - An optional array of arguments for the command.\n   * @see https://docs.swmansion.com/react-native-reanimated/docs/advanced/dispatchCommand\n   */\n  var dispatchCommand;\n  var _worklet_15298845432944_init_data = {\n    code: \"function dispatchCommandNative_reactNativeReanimated_dispatchCommandTs1(animatedRef,commandName){const{RuntimeKind,logger}=this.__closure;let args=arguments.length>2&&arguments[2]!==undefined?arguments[2]:[];if(globalThis.__RUNTIME_KIND===RuntimeKind.ReactNative){return;}const shadowNodeWrapper=animatedRef();if(!shadowNodeWrapper){logger.warn(\\\"Tried to dispatch command \\\\\\\"\\\"+commandName+\\\"\\\\\\\" with an uninitialized ref. Make sure to pass the animated ref to the component before using it.\\\");return;}global._dispatchCommand(shadowNodeWrapper,commandName,args);}\"\n  };\n  var dispatchCommandNative = function dispatchCommandNative_reactNativeReanimated_dispatchCommandTs1Factory(_ref) {\n    var _worklet_15298845432944_init_data = _ref._worklet_15298845432944_init_data,\n      RuntimeKind = _ref.RuntimeKind,\n      logger = _ref.logger;\n    var dispatchCommandNative = function (animatedRef, commandName) {\n      var args = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : [];\n      if (globalThis.__RUNTIME_KIND === RuntimeKind.ReactNative) {\n        return;\n      }\n      var shadowNodeWrapper = animatedRef();\n\n      // This prevents crashes if ref has not been set yet\n      if (!shadowNodeWrapper) {\n        logger.warn(`Tried to dispatch command \"${commandName}\" with an uninitialized ref. Make sure to pass the animated ref to the component before using it.`);\n        return;\n      }\n      global._dispatchCommand(shadowNodeWrapper, commandName, args);\n    };\n    dispatchCommandNative.__closure = {\n      RuntimeKind,\n      logger\n    };\n    dispatchCommandNative.__workletHash = 15298845432944;\n    dispatchCommandNative.__initData = _worklet_15298845432944_init_data;\n    return dispatchCommandNative;\n  }({\n    _worklet_15298845432944_init_data,\n    RuntimeKind: _reactNativeWorklets.RuntimeKind,\n    logger: _common.logger\n  });\n  function dispatchCommandJest() {\n    _common.logger.warn('dispatchCommand() is not supported with Jest.');\n  }\n  function dispatchCommandDefault() {\n    _common.logger.warn('dispatchCommand() is not supported on this configuration.');\n  }\n  if (!_common.SHOULD_BE_USE_WEB) {\n    // Those assertions are actually correct since on Native platforms `AnimatedRef` is\n    // mapped as a different function in `serializableMappingCache` and\n    // TypeScript is not able to infer that.\n    dispatchCommand = dispatchCommandNative;\n  } else if (_common.IS_JEST) {\n    dispatchCommand = dispatchCommandJest;\n  } else {\n    dispatchCommand = dispatchCommandDefault;\n  }\n});","lineCount":76,"map":[[2,2,1,0],[2,14,1,12],[4,2,1,13,"Object"],[4,8,1,13],[4,9,1,13,"defineProperty"],[4,23,1,13],[4,24,1,13,"exports"],[4,31,1,13],[5,4,1,13,"value"],[5,9,1,13],[6,2,1,13],[7,2,29,0,"Object"],[7,8,29,0],[7,9,29,0,"defineProperty"],[7,23,29,0],[7,24,29,0,"exports"],[7,31,29,0],[8,4,29,0,"enumerable"],[8,14,29,0],[9,4,29,0,"get"],[9,7,29,0],[9,18,29,0,"get"],[9,19,29,0],[10,6,29,0],[10,13,29,0,"dispatchCommand"],[10,28,29,0],[11,4,29,0],[12,2,29,0],[13,2,2,0],[13,6,2,0,"_reactNativeWorklets"],[13,26,2,0],[13,29,2,0,"require"],[13,36,2,0],[13,37,2,0,"_dependencyMap"],[13,51,2,0],[14,2,4,0],[14,6,4,0,"_common"],[14,13,4,0],[14,16,4,0,"require"],[14,23,4,0],[14,24,4,0,"_dependencyMap"],[14,38,4,0],[15,2,18,0],[16,0,19,0],[17,0,20,0],[18,0,21,0],[19,0,22,0],[20,0,23,0],[21,0,24,0],[22,0,25,0],[23,0,26,0],[24,0,27,0],[25,0,28,0],[26,2,29,7],[26,6,29,11,"dispatchCommand"],[26,21,29,43],[27,2,29,44],[27,6,29,44,"_worklet_15298845432944_init_data"],[27,39,29,44],[28,4,29,44,"code"],[28,8,29,44],[29,2,29,44],[30,2,29,44],[30,6,29,44,"dispatchCommandNative"],[30,27,29,44],[30,30,31,0],[30,39,31,0,"dispatchCommandNative_reactNativeReanimated_dispatchCommandTs1Factory"],[30,109,31,0,"_ref"],[30,113,31,0],[31,4,31,0],[31,8,31,0,"_worklet_15298845432944_init_data"],[31,41,31,0],[31,44,31,0,"_ref"],[31,48,31,0],[31,49,31,0,"_worklet_15298845432944_init_data"],[31,82,31,0],[32,6,37,36,"RuntimeKind"],[32,17,37,47],[32,20,37,47,"_ref"],[32,24,37,47],[32,25,37,36,"RuntimeKind"],[32,36,37,47],[33,6,45,4,"logger"],[33,12,45,10],[33,15,45,10,"_ref"],[33,19,45,10],[33,20,45,4,"logger"],[33,26,45,10],[34,4,45,10],[34,8,45,10,"dispatchCommandNative"],[34,29,45,10],[34,41,45,10,"dispatchCommandNative"],[34,42,32,2,"animatedRef"],[34,53,32,48],[34,55,33,2,"commandName"],[34,66,33,21],[34,68,35,2],[35,6,35,2],[35,10,34,2,"args"],[35,14,34,22],[35,17,34,22,"arguments"],[35,26,34,22],[35,27,34,22,"length"],[35,33,34,22],[35,41,34,22,"arguments"],[35,50,34,22],[35,58,34,22,"undefined"],[35,67,34,22],[35,70,34,22,"arguments"],[35,79,34,22],[35,85,34,25],[35,87,34,27],[36,6,37,2],[36,10,37,6,"globalThis"],[36,20,37,16],[36,21,37,17,"__RUNTIME_KIND"],[36,35,37,31],[36,40,37,36,"RuntimeKind"],[36,51,37,47],[36,52,37,48,"ReactNative"],[36,63,37,59],[36,65,37,61],[37,8,38,4],[38,6,39,2],[39,6,41,2],[39,10,41,8,"shadowNodeWrapper"],[39,27,41,25],[39,30,41,28,"animatedRef"],[39,41,41,39],[39,42,41,40],[39,43,41,41],[41,6,43,2],[42,6,44,2],[42,10,44,6],[42,11,44,7,"shadowNodeWrapper"],[42,28,44,24],[42,30,44,26],[43,8,45,4,"logger"],[43,14,45,10],[43,15,45,11,"warn"],[43,19,45,15],[43,20,46,6],[43,50,46,36,"commandName"],[43,61,46,47],[43,160,47,4],[43,161,47,5],[44,8,48,4],[45,6,49,2],[46,6,51,2,"global"],[46,12,51,8],[46,13,51,9,"_dispatchCommand"],[46,29,51,25],[46,30,52,4,"shadowNodeWrapper"],[46,47,52,21],[46,49,53,4,"commandName"],[46,60,53,15],[46,62,54,4,"args"],[46,66,55,2],[46,67,55,3],[47,4,56,0],[47,5,56,1],[48,4,56,1,"dispatchCommandNative"],[48,25,56,1],[48,26,56,1,"__closure"],[48,35,56,1],[49,6,37,36,"RuntimeKind"],[49,17,37,47],[50,6,45,4,"logger"],[51,4,45,10],[52,4,45,10,"dispatchCommandNative"],[52,25,45,10],[52,26,45,10,"__workletHash"],[52,39,45,10],[53,4,45,10,"dispatchCommandNative"],[53,25,45,10],[53,26,45,10,"__initData"],[53,36,45,10],[53,39,45,10,"_worklet_15298845432944_init_data"],[53,72,45,10],[54,4,45,10],[54,11,45,10,"dispatchCommandNative"],[54,32,45,10],[55,2,45,10],[55,3,31,0],[56,4,31,0,"_worklet_15298845432944_init_data"],[56,37,31,0],[57,4,37,36,"RuntimeKind"],[57,15,37,47],[57,17,37,36,"RuntimeKind"],[57,37,37,47],[57,38,37,47,"RuntimeKind"],[57,49,37,47],[58,4,45,4,"logger"],[58,10,45,10],[58,12,45,4,"logger"],[58,19,45,10],[58,20,45,10,"logger"],[59,2,45,10],[60,2,58,0],[60,11,58,9,"dispatchCommandJest"],[60,30,58,28,"dispatchCommandJest"],[60,31,58,28],[60,33,58,31],[61,4,59,2,"logger"],[61,11,59,8],[61,12,59,8,"logger"],[61,18,59,8],[61,19,59,9,"warn"],[61,23,59,13],[61,24,59,14],[61,71,59,61],[61,72,59,62],[62,2,60,0],[63,2,62,0],[63,11,62,9,"dispatchCommandDefault"],[63,33,62,31,"dispatchCommandDefault"],[63,34,62,31],[63,36,62,34],[64,4,63,2,"logger"],[64,11,63,8],[64,12,63,8,"logger"],[64,18,63,8],[64,19,63,9,"warn"],[64,23,63,13],[64,24,63,14],[64,83,63,73],[64,84,63,74],[65,2,64,0],[66,2,66,0],[66,6,66,4],[66,7,66,5,"SHOULD_BE_USE_WEB"],[66,14,66,22],[66,15,66,22,"SHOULD_BE_USE_WEB"],[66,32,66,22],[66,34,66,24],[67,4,67,2],[68,4,68,2],[69,4,69,2],[70,4,70,2,"dispatchCommand"],[70,19,70,17],[70,22,70,20,"dispatchCommandNative"],[70,43,70,71],[71,2,71,0],[71,3,71,1],[71,9,71,7],[71,13,71,11,"IS_JEST"],[71,20,71,18],[71,21,71,18,"IS_JEST"],[71,28,71,18],[71,30,71,20],[72,4,72,2,"dispatchCommand"],[72,19,72,17],[72,22,72,20,"dispatchCommandJest"],[72,41,72,39],[73,2,73,0],[73,3,73,1],[73,9,73,7],[74,4,74,2,"dispatchCommand"],[74,19,74,17],[74,22,74,20,"dispatchCommandDefault"],[74,44,74,42],[75,2,75,0],[76,0,75,1],[76,3]],"functionMap":{"names":["<global>","dispatchCommandNative","dispatchCommandJest","dispatchCommandDefault"],"mappings":"AAA;AC8B;CDyB;AEE;CFE;AGE;CHE"},"hasCjsExports":false},"type":"js/module"}]}