{"dependencies":[{"name":"@babel/runtime/helpers/slicedToArray","data":{"asyncType":null,"isESMImport":false,"locs":[],"key":"5y7e5+zC7teYEEC6niD9f5zII1M=","exportNames":["*"],"imports":1}},{"name":"./getUniqueID","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":1,"column":0,"index":0},"end":{"line":1,"column":40,"index":40}}],"key":"4JwrWQSZtc50KQpaRjRbnVmjxeA=","exportNames":["*"],"imports":1}},{"name":"./getTokenTypeByToken","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":2,"column":0,"index":41},"end":{"line":2,"column":56,"index":97}}],"key":"PMc6A+qkYtCKG7S1QyRx2DvJYu0=","exportNames":["*"],"imports":1}}],"output":[{"data":{"code":"__d(function (global, require, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {\n  \"use strict\";\n\n  Object.defineProperty(exports, '__esModule', {\n    value: true\n  });\n  function _interopDefault(e) {\n    return e && e.__esModule ? e : {\n      default: e\n    };\n  }\n  Object.defineProperty(exports, \"default\", {\n    enumerable: true,\n    get: function () {\n      return tokensToAST;\n    }\n  });\n  var _babelRuntimeHelpersSlicedToArray = require(_dependencyMap[0]);\n  var _slicedToArray = _interopDefault(_babelRuntimeHelpersSlicedToArray);\n  var _getUniqueID = require(_dependencyMap[1]);\n  var getUniqueID = _interopDefault(_getUniqueID);\n  var _getTokenTypeByToken = require(_dependencyMap[2]);\n  var getTokenTypeByToken = _interopDefault(_getTokenTypeByToken);\n  /**\n   *\n   * @param {{type: string, tag:string, content: string, children: *, attrs: Array, meta, info, block: boolean}} token\n   * @param {number} tokenIndex\n   * @return {{type: string, content, tokenIndex: *, index: number, attributes: {}, children: *}}\n   */\n  function createNode(token, tokenIndex) {\n    var type = (0, getTokenTypeByToken.default)(token);\n    var content = token.content;\n    var attributes = {};\n    if (token.attrs) {\n      attributes = token.attrs.reduce((prev, curr) => {\n        var _curr = (0, _slicedToArray.default)(curr, 2),\n          name = _curr[0],\n          value = _curr[1];\n        return {\n          ...prev,\n          [name]: value\n        };\n      }, {});\n    }\n    return {\n      type,\n      sourceType: token.type,\n      sourceInfo: token.info,\n      sourceMeta: token.meta,\n      block: token.block,\n      markup: token.markup,\n      key: (0, getUniqueID.default)() + '_' + type,\n      content,\n      tokenIndex,\n      index: 0,\n      attributes,\n      children: tokensToAST(token.children)\n    };\n  }\n\n  /**\n   *\n   * @param {Array<{type: string, tag:string, content: string, children: *, attrs: Array}>}tokens\n   * @return {Array}\n   */\n  function tokensToAST(tokens) {\n    var stack = [];\n    var children = [];\n    if (!tokens || tokens.length === 0) {\n      return [];\n    }\n    for (var i = 0; i < tokens.length; i++) {\n      var token = tokens[i];\n      var astNode = createNode(token, i);\n      if (!(astNode.type === 'text' && astNode.children.length === 0 && astNode.content === '')) {\n        astNode.index = children.length;\n        if (token.nesting === 1) {\n          children.push(astNode);\n          stack.push(children);\n          children = astNode.children;\n        } else if (token.nesting === -1) {\n          children = stack.pop();\n        } else if (token.nesting === 0) {\n          children.push(astNode);\n        }\n      }\n    }\n    return children;\n  }\n});","lineCount":90,"map":[[12,2,44,15,"Object"],[12,8,44,15],[12,9,44,15,"defineProperty"],[12,23,44,15],[12,24,44,15,"exports"],[12,31,44,15],[13,4,44,15,"enumerable"],[13,14,44,15],[14,4,44,15,"get"],[14,7,44,15],[14,18,44,15,"get"],[14,19,44,15],[15,6,44,15],[15,13,44,15,"tokensToAST"],[15,24,44,15],[16,4,44,15],[17,2,44,15],[18,2,78,1],[18,6,78,1,"_babelRuntimeHelpersSlicedToArray"],[18,39,78,1],[18,42,78,1,"require"],[18,49,78,1],[18,50,78,1,"_dependencyMap"],[18,64,78,1],[19,2,78,1],[19,6,78,1,"_slicedToArray"],[19,20,78,1],[19,23,78,1,"_interopDefault"],[19,38,78,1],[19,39,78,1,"_babelRuntimeHelpersSlicedToArray"],[19,72,78,1],[20,2,1,0],[20,6,1,0,"_getUniqueID"],[20,18,1,0],[20,21,1,0,"require"],[20,28,1,0],[20,29,1,0,"_dependencyMap"],[20,43,1,0],[21,2,1,0],[21,6,1,0,"getUniqueID"],[21,17,1,0],[21,20,1,0,"_interopDefault"],[21,35,1,0],[21,36,1,0,"_getUniqueID"],[21,48,1,0],[22,2,2,0],[22,6,2,0,"_getTokenTypeByToken"],[22,26,2,0],[22,29,2,0,"require"],[22,36,2,0],[22,37,2,0,"_dependencyMap"],[22,51,2,0],[23,2,2,0],[23,6,2,0,"getTokenTypeByToken"],[23,25,2,0],[23,28,2,0,"_interopDefault"],[23,43,2,0],[23,44,2,0,"_getTokenTypeByToken"],[23,64,2,0],[24,2,4,0],[25,0,5,0],[26,0,6,0],[27,0,7,0],[28,0,8,0],[29,0,9,0],[30,2,10,0],[30,11,10,9,"createNode"],[30,21,10,19,"createNode"],[30,22,10,20,"token"],[30,27,10,25],[30,29,10,27,"tokenIndex"],[30,39,10,37],[30,41,10,39],[31,4,11,2],[31,8,11,8,"type"],[31,12,11,12],[31,15,11,15],[31,19,11,15,"getTokenTypeByToken"],[31,38,11,34],[31,39,11,34,"default"],[31,46,11,34],[31,48,11,35,"token"],[31,53,11,40],[31,54,11,41],[32,4,12,2],[32,8,12,8,"content"],[32,15,12,15],[32,18,12,18,"token"],[32,23,12,23],[32,24,12,24,"content"],[32,31,12,31],[33,4,14,2],[33,8,14,6,"attributes"],[33,18,14,16],[33,21,14,19],[33,22,14,20],[33,23,14,21],[34,4,16,2],[34,8,16,6,"token"],[34,13,16,11],[34,14,16,12,"attrs"],[34,19,16,17],[34,21,16,19],[35,6,17,4,"attributes"],[35,16,17,14],[35,19,17,17,"token"],[35,24,17,22],[35,25,17,23,"attrs"],[35,30,17,28],[35,31,17,29,"reduce"],[35,37,17,35],[35,38,17,36],[35,39,17,37,"prev"],[35,43,17,41],[35,45,17,43,"curr"],[35,49,17,47],[35,54,17,52],[36,8,18,6],[36,12,18,6,"_curr"],[36,17,18,6],[36,24,18,6,"_slicedToArray"],[36,38,18,6],[36,39,18,6,"default"],[36,46,18,6],[36,48,18,28,"curr"],[36,52,18,32],[37,10,18,13,"name"],[37,14,18,17],[37,17,18,17,"_curr"],[37,22,18,17],[38,10,18,19,"value"],[38,15,18,24],[38,18,18,24,"_curr"],[38,23,18,24],[39,8,19,6],[39,15,19,13],[40,10,19,14],[40,13,19,17,"prev"],[40,17,19,21],[41,10,19,23],[41,11,19,24,"name"],[41,15,19,28],[41,18,19,31,"value"],[42,8,19,36],[42,9,19,37],[43,6,20,4],[43,7,20,5],[43,9,20,7],[43,10,20,8],[43,11,20,9],[43,12,20,10],[44,4,21,2],[45,4,23,2],[45,11,23,9],[46,6,24,4,"type"],[46,10,24,8],[47,6,25,4,"sourceType"],[47,16,25,14],[47,18,25,16,"token"],[47,23,25,21],[47,24,25,22,"type"],[47,28,25,26],[48,6,26,4,"sourceInfo"],[48,16,26,14],[48,18,26,16,"token"],[48,23,26,21],[48,24,26,22,"info"],[48,28,26,26],[49,6,27,4,"sourceMeta"],[49,16,27,14],[49,18,27,16,"token"],[49,23,27,21],[49,24,27,22,"meta"],[49,28,27,26],[50,6,28,4,"block"],[50,11,28,9],[50,13,28,11,"token"],[50,18,28,16],[50,19,28,17,"block"],[50,24,28,22],[51,6,29,4,"markup"],[51,12,29,10],[51,14,29,12,"token"],[51,19,29,17],[51,20,29,18,"markup"],[51,26,29,24],[52,6,30,4,"key"],[52,9,30,7],[52,11,30,9],[52,15,30,9,"getUniqueID"],[52,26,30,20],[52,27,30,20,"default"],[52,34,30,20],[52,36,30,21],[52,37,30,22],[52,40,30,25],[52,43,30,28],[52,46,30,31,"type"],[52,50,30,35],[53,6,31,4,"content"],[53,13,31,11],[54,6,32,4,"tokenIndex"],[54,16,32,14],[55,6,33,4,"index"],[55,11,33,9],[55,13,33,11],[55,14,33,12],[56,6,34,4,"attributes"],[56,16,34,14],[57,6,35,4,"children"],[57,14,35,12],[57,16,35,14,"tokensToAST"],[57,27,35,25],[57,28,35,26,"token"],[57,33,35,31],[57,34,35,32,"children"],[57,42,35,40],[58,4,36,2],[58,5,36,3],[59,2,37,0],[61,2,39,0],[62,0,40,0],[63,0,41,0],[64,0,42,0],[65,0,43,0],[66,2,44,15],[66,11,44,24,"tokensToAST"],[66,22,44,35,"tokensToAST"],[66,23,44,36,"tokens"],[66,29,44,42],[66,31,44,44],[67,4,45,2],[67,8,45,6,"stack"],[67,13,45,11],[67,16,45,14],[67,18,45,16],[68,4,46,2],[68,8,46,6,"children"],[68,16,46,14],[68,19,46,17],[68,21,46,19],[69,4,48,2],[69,8,48,6],[69,9,48,7,"tokens"],[69,15,48,13],[69,19,48,17,"tokens"],[69,25,48,23],[69,26,48,24,"length"],[69,32,48,30],[69,37,48,35],[69,38,48,36],[69,40,48,38],[70,6,49,4],[70,13,49,11],[70,15,49,13],[71,4,50,2],[72,4,52,2],[72,9,52,7],[72,13,52,11,"i"],[72,14,52,12],[72,17,52,15],[72,18,52,16],[72,20,52,18,"i"],[72,21,52,19],[72,24,52,22,"tokens"],[72,30,52,28],[72,31,52,29,"length"],[72,37,52,35],[72,39,52,37,"i"],[72,40,52,38],[72,42,52,40],[72,44,52,42],[73,6,53,4],[73,10,53,10,"token"],[73,15,53,15],[73,18,53,18,"tokens"],[73,24,53,24],[73,25,53,25,"i"],[73,26,53,26],[73,27,53,27],[74,6,54,4],[74,10,54,10,"astNode"],[74,17,54,17],[74,20,54,20,"createNode"],[74,30,54,30],[74,31,54,31,"token"],[74,36,54,36],[74,38,54,38,"i"],[74,39,54,39],[74,40,54,40],[75,6,56,4],[75,10,57,6],[75,12,58,8,"astNode"],[75,19,58,15],[75,20,58,16,"type"],[75,24,58,20],[75,29,58,25],[75,35,58,31],[75,39,59,8,"astNode"],[75,46,59,15],[75,47,59,16,"children"],[75,55,59,24],[75,56,59,25,"length"],[75,62,59,31],[75,67,59,36],[75,68,59,37],[75,72,60,8,"astNode"],[75,79,60,15],[75,80,60,16,"content"],[75,87,60,23],[75,92,60,28],[75,94,60,30],[75,95,61,7],[75,97,62,6],[76,8,63,6,"astNode"],[76,15,63,13],[76,16,63,14,"index"],[76,21,63,19],[76,24,63,22,"children"],[76,32,63,30],[76,33,63,31,"length"],[76,39,63,37],[77,8,65,6],[77,12,65,10,"token"],[77,17,65,15],[77,18,65,16,"nesting"],[77,25,65,23],[77,30,65,28],[77,31,65,29],[77,33,65,31],[78,10,66,8,"children"],[78,18,66,16],[78,19,66,17,"push"],[78,23,66,21],[78,24,66,22,"astNode"],[78,31,66,29],[78,32,66,30],[79,10,67,8,"stack"],[79,15,67,13],[79,16,67,14,"push"],[79,20,67,18],[79,21,67,19,"children"],[79,29,67,27],[79,30,67,28],[80,10,68,8,"children"],[80,18,68,16],[80,21,68,19,"astNode"],[80,28,68,26],[80,29,68,27,"children"],[80,37,68,35],[81,8,69,6],[81,9,69,7],[81,15,69,13],[81,19,69,17,"token"],[81,24,69,22],[81,25,69,23,"nesting"],[81,32,69,30],[81,39,69,37],[81,41,69,39],[82,10,70,8,"children"],[82,18,70,16],[82,21,70,19,"stack"],[82,26,70,24],[82,27,70,25,"pop"],[82,30,70,28],[82,31,70,29],[82,32,70,30],[83,8,71,6],[83,9,71,7],[83,15,71,13],[83,19,71,17,"token"],[83,24,71,22],[83,25,71,23,"nesting"],[83,32,71,30],[83,37,71,35],[83,38,71,36],[83,40,71,38],[84,10,72,8,"children"],[84,18,72,16],[84,19,72,17,"push"],[84,23,72,21],[84,24,72,22,"astNode"],[84,31,72,29],[84,32,72,30],[85,8,73,6],[86,6,74,4],[87,4,75,2],[88,4,77,2],[88,11,77,9,"children"],[88,19,77,17],[89,2,78,0],[90,0,78,1],[90,3]],"functionMap":{"names":["<global>","createNode","token.attrs.reduce$argument_0","tokensToAST"],"mappings":"AAA;ACS;oCCO;KDG;CDiB;eGO;CHkC"},"hasCjsExports":false},"type":"js/module"}]}