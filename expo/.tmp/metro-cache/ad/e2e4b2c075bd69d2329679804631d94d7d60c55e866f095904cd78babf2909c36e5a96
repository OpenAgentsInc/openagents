{"dependencies":[{"name":"@babel/runtime/helpers/slicedToArray","data":{"asyncType":null,"isESMImport":false,"locs":[],"key":"5y7e5+zC7teYEEC6niD9f5zII1M=","exportNames":["*"],"imports":1}},{"name":"../../common","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":3,"column":0,"index":15},"end":{"line":3,"column":47,"index":62}}],"key":"IDJz4HWb8BkS18xB4AVSbpQcs+Y=","exportNames":["*"],"imports":1}}],"output":[{"data":{"code":"__d(function (global, require, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {\n  'use strict';\n\n  Object.defineProperty(exports, '__esModule', {\n    value: true\n  });\n  function _interopDefault(e) {\n    return e && e.__esModule ? e : {\n      default: e\n    };\n  }\n  Object.defineProperty(exports, \"isAffineMatrixFlat\", {\n    enumerable: true,\n    get: function () {\n      return isAffineMatrixFlat;\n    }\n  });\n  Object.defineProperty(exports, \"isAffineMatrix\", {\n    enumerable: true,\n    get: function () {\n      return isAffineMatrix;\n    }\n  });\n  Object.defineProperty(exports, \"flatten\", {\n    enumerable: true,\n    get: function () {\n      return flatten;\n    }\n  });\n  Object.defineProperty(exports, \"unflatten\", {\n    enumerable: true,\n    get: function () {\n      return unflatten;\n    }\n  });\n  Object.defineProperty(exports, \"multiplyMatrices\", {\n    enumerable: true,\n    get: function () {\n      return multiplyMatrices;\n    }\n  });\n  Object.defineProperty(exports, \"subtractMatrices\", {\n    enumerable: true,\n    get: function () {\n      return subtractMatrices;\n    }\n  });\n  Object.defineProperty(exports, \"addMatrices\", {\n    enumerable: true,\n    get: function () {\n      return addMatrices;\n    }\n  });\n  Object.defineProperty(exports, \"scaleMatrix\", {\n    enumerable: true,\n    get: function () {\n      return scaleMatrix;\n    }\n  });\n  Object.defineProperty(exports, \"getRotationMatrix\", {\n    enumerable: true,\n    get: function () {\n      return getRotationMatrix;\n    }\n  });\n  Object.defineProperty(exports, \"decomposeMatrix\", {\n    enumerable: true,\n    get: function () {\n      return decomposeMatrix;\n    }\n  });\n  Object.defineProperty(exports, \"decomposeMatrixIntoMatricesAndAngles\", {\n    enumerable: true,\n    get: function () {\n      return decomposeMatrixIntoMatricesAndAngles;\n    }\n  });\n  var _babelRuntimeHelpersSlicedToArray = require(_dependencyMap[0]);\n  var _slicedToArray = _interopDefault(_babelRuntimeHelpersSlicedToArray);\n  var _common = require(_dependencyMap[1]);\n  var _worklet_15554583600949_init_data = {\n    code: \"function isAffineMatrixFlat_reactNativeReanimated_matrixUtilsTsx1(x){return Array.isArray(x)&&x.length===16&&x.every(function(element){return typeof element==='number'&&!isNaN(element);});}\"\n  };\n  var isAffineMatrixFlat = function isAffineMatrixFlat_reactNativeReanimated_matrixUtilsTsx1Factory(_ref) {\n    var _worklet_15554583600949_init_data = _ref._worklet_15554583600949_init_data;\n    var isAffineMatrixFlat = function (x) {\n      return Array.isArray(x) && x.length === 16 && x.every(element => typeof element === 'number' && !isNaN(element));\n    };\n    isAffineMatrixFlat.__closure = {};\n    isAffineMatrixFlat.__workletHash = 15554583600949;\n    isAffineMatrixFlat.__initData = _worklet_15554583600949_init_data;\n    return isAffineMatrixFlat;\n  }({\n    _worklet_15554583600949_init_data\n  });\n  var _worklet_3255481902002_init_data = {\n    code: \"function isAffineMatrix_reactNativeReanimated_matrixUtilsTsx2(x){return Array.isArray(x)&&x.length===4&&x.every(function(row){return Array.isArray(row)&&row.length===4&&row.every(function(element){return typeof element==='number'&&!isNaN(element);});});}\"\n  };\n  var isAffineMatrix = function isAffineMatrix_reactNativeReanimated_matrixUtilsTsx2Factory(_ref2) {\n    var _worklet_3255481902002_init_data = _ref2._worklet_3255481902002_init_data;\n    var isAffineMatrix = function (x) {\n      return Array.isArray(x) && x.length === 4 && x.every(row => Array.isArray(row) && row.length === 4 && row.every(element => typeof element === 'number' && !isNaN(element)));\n    };\n    isAffineMatrix.__closure = {};\n    isAffineMatrix.__workletHash = 3255481902002;\n    isAffineMatrix.__initData = _worklet_3255481902002_init_data;\n    return isAffineMatrix;\n  }({\n    _worklet_3255481902002_init_data\n  });\n  var _worklet_9419609223755_init_data = {\n    code: \"function flatten_reactNativeReanimated_matrixUtilsTsx3(matrix){return matrix.flat();}\"\n  };\n  var flatten = function flatten_reactNativeReanimated_matrixUtilsTsx3Factory(_ref3) {\n    var _worklet_9419609223755_init_data = _ref3._worklet_9419609223755_init_data;\n    var flatten = function (matrix) {\n      return matrix.flat();\n    };\n    flatten.__closure = {};\n    flatten.__workletHash = 9419609223755;\n    flatten.__initData = _worklet_9419609223755_init_data;\n    return flatten;\n  }({\n    _worklet_9419609223755_init_data\n  });\n  var _worklet_14156284422336_init_data = {\n    code: \"function unflatten_reactNativeReanimated_matrixUtilsTsx4(m){return[[m[0],m[1],m[2],m[3]],[m[4],m[5],m[6],m[7]],[m[8],m[9],m[10],m[11]],[m[12],m[13],m[14],m[15]]];}\"\n  };\n  var unflatten = function unflatten_reactNativeReanimated_matrixUtilsTsx4Factory(_ref4) {\n    var _worklet_14156284422336_init_data = _ref4._worklet_14156284422336_init_data;\n    var unflatten = function (m) {\n      return [[m[0], m[1], m[2], m[3]], [m[4], m[5], m[6], m[7]], [m[8], m[9], m[10], m[11]], [m[12], m[13], m[14], m[15]]];\n    };\n    unflatten.__closure = {};\n    unflatten.__workletHash = 14156284422336;\n    unflatten.__initData = _worklet_14156284422336_init_data;\n    return unflatten;\n  }({\n    _worklet_14156284422336_init_data\n  });\n  var _worklet_31377339073_init_data = {\n    code: \"function maybeFlattenMatrix_reactNativeReanimated_matrixUtilsTsx5(matrix){const{isAffineMatrix,flatten}=this.__closure;return isAffineMatrix(matrix)?flatten(matrix):matrix;}\"\n  };\n  var maybeFlattenMatrix = function maybeFlattenMatrix_reactNativeReanimated_matrixUtilsTsx5Factory(_ref5) {\n    var _worklet_31377339073_init_data = _ref5._worklet_31377339073_init_data,\n      isAffineMatrix = _ref5.isAffineMatrix,\n      flatten = _ref5.flatten;\n    var maybeFlattenMatrix = function (matrix) {\n      return isAffineMatrix(matrix) ? flatten(matrix) : matrix;\n    };\n    maybeFlattenMatrix.__closure = {\n      isAffineMatrix,\n      flatten\n    };\n    maybeFlattenMatrix.__workletHash = 31377339073;\n    maybeFlattenMatrix.__initData = _worklet_31377339073_init_data;\n    return maybeFlattenMatrix;\n  }({\n    _worklet_31377339073_init_data,\n    isAffineMatrix,\n    flatten\n  });\n  var _worklet_15992296871009_init_data = {\n    code: \"function multiplyMatrices_reactNativeReanimated_matrixUtilsTsx6(a,b){return[[a[0][0]*b[0][0]+a[0][1]*b[1][0]+a[0][2]*b[2][0]+a[0][3]*b[3][0],a[0][0]*b[0][1]+a[0][1]*b[1][1]+a[0][2]*b[2][1]+a[0][3]*b[3][1],a[0][0]*b[0][2]+a[0][1]*b[1][2]+a[0][2]*b[2][2]+a[0][3]*b[3][2],a[0][0]*b[0][3]+a[0][1]*b[1][3]+a[0][2]*b[2][3]+a[0][3]*b[3][3]],[a[1][0]*b[0][0]+a[1][1]*b[1][0]+a[1][2]*b[2][0]+a[1][3]*b[3][0],a[1][0]*b[0][1]+a[1][1]*b[1][1]+a[1][2]*b[2][1]+a[1][3]*b[3][1],a[1][0]*b[0][2]+a[1][1]*b[1][2]+a[1][2]*b[2][2]+a[1][3]*b[3][2],a[1][0]*b[0][3]+a[1][1]*b[1][3]+a[1][2]*b[2][3]+a[1][3]*b[3][3]],[a[2][0]*b[0][0]+a[2][1]*b[1][0]+a[2][2]*b[2][0]+a[2][3]*b[3][0],a[2][0]*b[0][1]+a[2][1]*b[1][1]+a[2][2]*b[2][1]+a[2][3]*b[3][1],a[2][0]*b[0][2]+a[2][1]*b[1][2]+a[2][2]*b[2][2]+a[2][3]*b[3][2],a[2][0]*b[0][3]+a[2][1]*b[1][3]+a[2][2]*b[2][3]+a[2][3]*b[3][3]],[a[3][0]*b[0][0]+a[3][1]*b[1][0]+a[3][2]*b[2][0]+a[3][3]*b[3][0],a[3][0]*b[0][1]+a[3][1]*b[1][1]+a[3][2]*b[2][1]+a[3][3]*b[3][1],a[3][0]*b[0][2]+a[3][1]*b[1][2]+a[3][2]*b[2][2]+a[3][3]*b[3][2],a[3][0]*b[0][3]+a[3][1]*b[1][3]+a[3][2]*b[2][3]+a[3][3]*b[3][3]]];}\"\n  };\n  var multiplyMatrices = function multiplyMatrices_reactNativeReanimated_matrixUtilsTsx6Factory(_ref6) {\n    var _worklet_15992296871009_init_data = _ref6._worklet_15992296871009_init_data;\n    var multiplyMatrices = function (a, b) {\n      return [[a[0][0] * b[0][0] + a[0][1] * b[1][0] + a[0][2] * b[2][0] + a[0][3] * b[3][0], a[0][0] * b[0][1] + a[0][1] * b[1][1] + a[0][2] * b[2][1] + a[0][3] * b[3][1], a[0][0] * b[0][2] + a[0][1] * b[1][2] + a[0][2] * b[2][2] + a[0][3] * b[3][2], a[0][0] * b[0][3] + a[0][1] * b[1][3] + a[0][2] * b[2][3] + a[0][3] * b[3][3]], [a[1][0] * b[0][0] + a[1][1] * b[1][0] + a[1][2] * b[2][0] + a[1][3] * b[3][0], a[1][0] * b[0][1] + a[1][1] * b[1][1] + a[1][2] * b[2][1] + a[1][3] * b[3][1], a[1][0] * b[0][2] + a[1][1] * b[1][2] + a[1][2] * b[2][2] + a[1][3] * b[3][2], a[1][0] * b[0][3] + a[1][1] * b[1][3] + a[1][2] * b[2][3] + a[1][3] * b[3][3]], [a[2][0] * b[0][0] + a[2][1] * b[1][0] + a[2][2] * b[2][0] + a[2][3] * b[3][0], a[2][0] * b[0][1] + a[2][1] * b[1][1] + a[2][2] * b[2][1] + a[2][3] * b[3][1], a[2][0] * b[0][2] + a[2][1] * b[1][2] + a[2][2] * b[2][2] + a[2][3] * b[3][2], a[2][0] * b[0][3] + a[2][1] * b[1][3] + a[2][2] * b[2][3] + a[2][3] * b[3][3]], [a[3][0] * b[0][0] + a[3][1] * b[1][0] + a[3][2] * b[2][0] + a[3][3] * b[3][0], a[3][0] * b[0][1] + a[3][1] * b[1][1] + a[3][2] * b[2][1] + a[3][3] * b[3][1], a[3][0] * b[0][2] + a[3][1] * b[1][2] + a[3][2] * b[2][2] + a[3][3] * b[3][2], a[3][0] * b[0][3] + a[3][1] * b[1][3] + a[3][2] * b[2][3] + a[3][3] * b[3][3]]];\n    };\n    multiplyMatrices.__closure = {};\n    multiplyMatrices.__workletHash = 15992296871009;\n    multiplyMatrices.__initData = _worklet_15992296871009_init_data;\n    return multiplyMatrices;\n  }({\n    _worklet_15992296871009_init_data\n  });\n  var _worklet_6627182100671_init_data = {\n    code: \"function subtractMatrices_reactNativeReanimated_matrixUtilsTsx7(maybeFlatA,maybeFlatB){const{isAffineMatrixFlat,maybeFlattenMatrix,unflatten}=this.__closure;const isFlatOnStart=isAffineMatrixFlat(maybeFlatA);const a=maybeFlattenMatrix(maybeFlatA);const b=maybeFlattenMatrix(maybeFlatB);const c=a.map(function(_,i){return a[i]-b[i];});return isFlatOnStart?c:unflatten(c);}\"\n  };\n  var subtractMatrices = function subtractMatrices_reactNativeReanimated_matrixUtilsTsx7Factory(_ref7) {\n    var _worklet_6627182100671_init_data = _ref7._worklet_6627182100671_init_data,\n      isAffineMatrixFlat = _ref7.isAffineMatrixFlat,\n      maybeFlattenMatrix = _ref7.maybeFlattenMatrix,\n      unflatten = _ref7.unflatten;\n    var subtractMatrices = function (maybeFlatA, maybeFlatB) {\n      var isFlatOnStart = isAffineMatrixFlat(maybeFlatA);\n      var a = maybeFlattenMatrix(maybeFlatA);\n      var b = maybeFlattenMatrix(maybeFlatB);\n      var c = a.map((_, i) => a[i] - b[i]);\n      return isFlatOnStart ? c : unflatten(c);\n    };\n    subtractMatrices.__closure = {\n      isAffineMatrixFlat,\n      maybeFlattenMatrix,\n      unflatten\n    };\n    subtractMatrices.__workletHash = 6627182100671;\n    subtractMatrices.__initData = _worklet_6627182100671_init_data;\n    return subtractMatrices;\n  }({\n    _worklet_6627182100671_init_data,\n    isAffineMatrixFlat,\n    maybeFlattenMatrix,\n    unflatten\n  });\n  var _worklet_14155680970531_init_data = {\n    code: \"function addMatrices_reactNativeReanimated_matrixUtilsTsx8(maybeFlatA,maybeFlatB){const{isAffineMatrixFlat,maybeFlattenMatrix,unflatten}=this.__closure;const isFlatOnStart=isAffineMatrixFlat(maybeFlatA);const a=maybeFlattenMatrix(maybeFlatA);const b=maybeFlattenMatrix(maybeFlatB);const c=a.map(function(_,i){return a[i]+b[i];});return isFlatOnStart?c:unflatten(c);}\"\n  };\n  var addMatrices = function addMatrices_reactNativeReanimated_matrixUtilsTsx8Factory(_ref8) {\n    var _worklet_14155680970531_init_data = _ref8._worklet_14155680970531_init_data,\n      isAffineMatrixFlat = _ref8.isAffineMatrixFlat,\n      maybeFlattenMatrix = _ref8.maybeFlattenMatrix,\n      unflatten = _ref8.unflatten;\n    var addMatrices = function (maybeFlatA, maybeFlatB) {\n      var isFlatOnStart = isAffineMatrixFlat(maybeFlatA);\n      var a = maybeFlattenMatrix(maybeFlatA);\n      var b = maybeFlattenMatrix(maybeFlatB);\n      var c = a.map((_, i) => a[i] + b[i]);\n      return isFlatOnStart ? c : unflatten(c);\n    };\n    addMatrices.__closure = {\n      isAffineMatrixFlat,\n      maybeFlattenMatrix,\n      unflatten\n    };\n    addMatrices.__workletHash = 14155680970531;\n    addMatrices.__initData = _worklet_14155680970531_init_data;\n    return addMatrices;\n  }({\n    _worklet_14155680970531_init_data,\n    isAffineMatrixFlat,\n    maybeFlattenMatrix,\n    unflatten\n  });\n  var _worklet_2686901073094_init_data = {\n    code: \"function scaleMatrix_reactNativeReanimated_matrixUtilsTsx9(maybeFlatA,scalar){const{isAffineMatrixFlat,maybeFlattenMatrix,unflatten}=this.__closure;const isFlatOnStart=isAffineMatrixFlat(maybeFlatA);const a=maybeFlattenMatrix(maybeFlatA);const b=a.map(function(x){return x*scalar;});return isFlatOnStart?b:unflatten(b);}\"\n  };\n  var scaleMatrix = function scaleMatrix_reactNativeReanimated_matrixUtilsTsx9Factory(_ref9) {\n    var _worklet_2686901073094_init_data = _ref9._worklet_2686901073094_init_data,\n      isAffineMatrixFlat = _ref9.isAffineMatrixFlat,\n      maybeFlattenMatrix = _ref9.maybeFlattenMatrix,\n      unflatten = _ref9.unflatten;\n    var scaleMatrix = function (maybeFlatA, scalar) {\n      var isFlatOnStart = isAffineMatrixFlat(maybeFlatA);\n      var a = maybeFlattenMatrix(maybeFlatA);\n      var b = a.map(x => x * scalar);\n      return isFlatOnStart ? b : unflatten(b);\n    };\n    scaleMatrix.__closure = {\n      isAffineMatrixFlat,\n      maybeFlattenMatrix,\n      unflatten\n    };\n    scaleMatrix.__workletHash = 2686901073094;\n    scaleMatrix.__initData = _worklet_2686901073094_init_data;\n    return scaleMatrix;\n  }({\n    _worklet_2686901073094_init_data,\n    isAffineMatrixFlat,\n    maybeFlattenMatrix,\n    unflatten\n  });\n  var _worklet_17338567520276_init_data = {\n    code: \"function getRotationMatrix_reactNativeReanimated_matrixUtilsTsx10(angle){let axis=arguments.length>1&&arguments[1]!==undefined?arguments[1]:'z';const cos=Math.cos(angle);const sin=Math.sin(angle);switch(axis){case'z':return[[cos,sin,0,0],[-sin,cos,0,0],[0,0,1,0],[0,0,0,1]];case'y':return[[cos,0,-sin,0],[0,1,0,0],[sin,0,cos,0],[0,0,0,1]];case'x':return[[1,0,0,0],[0,cos,sin,0],[0,-sin,cos,0],[0,0,0,1]];}}\"\n  };\n  var getRotationMatrix = function getRotationMatrix_reactNativeReanimated_matrixUtilsTsx10Factory(_ref0) {\n    var _worklet_17338567520276_init_data = _ref0._worklet_17338567520276_init_data;\n    var getRotationMatrix = function (angle) {\n      var axis = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 'z';\n      var cos = Math.cos(angle);\n      var sin = Math.sin(angle);\n      switch (axis) {\n        case 'z':\n          return [[cos, sin, 0, 0], [-sin, cos, 0, 0], [0, 0, 1, 0], [0, 0, 0, 1]];\n        case 'y':\n          return [[cos, 0, -sin, 0], [0, 1, 0, 0], [sin, 0, cos, 0], [0, 0, 0, 1]];\n        case 'x':\n          return [[1, 0, 0, 0], [0, cos, sin, 0], [0, -sin, cos, 0], [0, 0, 0, 1]];\n      }\n    };\n    getRotationMatrix.__closure = {};\n    getRotationMatrix.__workletHash = 17338567520276;\n    getRotationMatrix.__initData = _worklet_17338567520276_init_data;\n    return getRotationMatrix;\n  }({\n    _worklet_17338567520276_init_data\n  });\n  var _worklet_1030244477291_init_data = {\n    code: \"function norm3d_reactNativeReanimated_matrixUtilsTsx11(x,y,z){return Math.sqrt(x*x+y*y+z*z);}\"\n  };\n  var norm3d = function norm3d_reactNativeReanimated_matrixUtilsTsx11Factory(_ref1) {\n    var _worklet_1030244477291_init_data = _ref1._worklet_1030244477291_init_data;\n    var norm3d = function (x, y, z) {\n      return Math.sqrt(x * x + y * y + z * z);\n    };\n    norm3d.__closure = {};\n    norm3d.__workletHash = 1030244477291;\n    norm3d.__initData = _worklet_1030244477291_init_data;\n    return norm3d;\n  }({\n    _worklet_1030244477291_init_data\n  });\n  var _worklet_7878923469978_init_data = {\n    code: \"function transposeMatrix_reactNativeReanimated_matrixUtilsTsx12(matrix){const{flatten}=this.__closure;const m=flatten(matrix);return[[m[0],m[4],m[8],m[12]],[m[1],m[5],m[9],m[13]],[m[2],m[6],m[10],m[14]],[m[3],m[7],m[11],m[15]]];}\"\n  };\n  var transposeMatrix = function transposeMatrix_reactNativeReanimated_matrixUtilsTsx12Factory(_ref10) {\n    var _worklet_7878923469978_init_data = _ref10._worklet_7878923469978_init_data,\n      flatten = _ref10.flatten;\n    var transposeMatrix = function (matrix) {\n      var m = flatten(matrix);\n      return [[m[0], m[4], m[8], m[12]], [m[1], m[5], m[9], m[13]], [m[2], m[6], m[10], m[14]], [m[3], m[7], m[11], m[15]]];\n    };\n    transposeMatrix.__closure = {\n      flatten\n    };\n    transposeMatrix.__workletHash = 7878923469978;\n    transposeMatrix.__initData = _worklet_7878923469978_init_data;\n    return transposeMatrix;\n  }({\n    _worklet_7878923469978_init_data,\n    flatten\n  });\n  var _worklet_3891131781244_init_data = {\n    code: \"function assertVectorsHaveEqualLengths_reactNativeReanimated_matrixUtilsTsx13(a,b){const{__DEV__}=this.__closure;if(__DEV__&&a.length!==b.length){throw new ReanimatedError(\\\"Cannot calculate inner product of two vectors of different lengths. Length of \\\"+a.toString()+\\\" is \\\"+a.length+\\\" and length of \\\"+b.toString()+\\\" is \\\"+b.length+\\\".\\\");}}\"\n  };\n  var assertVectorsHaveEqualLengths = function assertVectorsHaveEqualLengths_reactNativeReanimated_matrixUtilsTsx13Factory(_ref11) {\n    var _worklet_3891131781244_init_data = _ref11._worklet_3891131781244_init_data,\n      __DEV__ = _ref11.__DEV__;\n    var assertVectorsHaveEqualLengths = function (a, b) {\n      if (__DEV__ && a.length !== b.length) {\n        throw new _common.ReanimatedError(`Cannot calculate inner product of two vectors of different lengths. Length of ${a.toString()} is ${a.length} and length of ${b.toString()} is ${b.length}.`);\n      }\n    };\n    assertVectorsHaveEqualLengths.__closure = {\n      __DEV__\n    };\n    assertVectorsHaveEqualLengths.__workletHash = 3891131781244;\n    assertVectorsHaveEqualLengths.__initData = _worklet_3891131781244_init_data;\n    return assertVectorsHaveEqualLengths;\n  }({\n    _worklet_3891131781244_init_data,\n    __DEV__: false\n  });\n  var _worklet_2500695369804_init_data = {\n    code: \"function innerProduct_reactNativeReanimated_matrixUtilsTsx14(a,b){const{assertVectorsHaveEqualLengths}=this.__closure;assertVectorsHaveEqualLengths(a,b);return a.reduce(function(acc,_,i){return acc+a[i]*b[i];},0);}\"\n  };\n  var innerProduct = function innerProduct_reactNativeReanimated_matrixUtilsTsx14Factory(_ref12) {\n    var _worklet_2500695369804_init_data = _ref12._worklet_2500695369804_init_data,\n      assertVectorsHaveEqualLengths = _ref12.assertVectorsHaveEqualLengths;\n    var innerProduct = function (a, b) {\n      assertVectorsHaveEqualLengths(a, b);\n      return a.reduce((acc, _, i) => acc + a[i] * b[i], 0);\n    };\n    innerProduct.__closure = {\n      assertVectorsHaveEqualLengths\n    };\n    innerProduct.__workletHash = 2500695369804;\n    innerProduct.__initData = _worklet_2500695369804_init_data;\n    return innerProduct;\n  }({\n    _worklet_2500695369804_init_data,\n    assertVectorsHaveEqualLengths\n  });\n  var _worklet_16002079233038_init_data = {\n    code: \"function projection_reactNativeReanimated_matrixUtilsTsx15(u,a){const{assertVectorsHaveEqualLengths,innerProduct}=this.__closure;assertVectorsHaveEqualLengths(u,a);const s=innerProduct(u,a)/innerProduct(u,u);return u.map(function(e){return e*s;});}\"\n  };\n  var projection = function projection_reactNativeReanimated_matrixUtilsTsx15Factory(_ref13) {\n    var _worklet_16002079233038_init_data = _ref13._worklet_16002079233038_init_data,\n      assertVectorsHaveEqualLengths = _ref13.assertVectorsHaveEqualLengths,\n      innerProduct = _ref13.innerProduct;\n    var projection = function (u, a) {\n      assertVectorsHaveEqualLengths(u, a);\n      var s = innerProduct(u, a) / innerProduct(u, u);\n      return u.map(e => e * s);\n    };\n    projection.__closure = {\n      assertVectorsHaveEqualLengths,\n      innerProduct\n    };\n    projection.__workletHash = 16002079233038;\n    projection.__initData = _worklet_16002079233038_init_data;\n    return projection;\n  }({\n    _worklet_16002079233038_init_data,\n    assertVectorsHaveEqualLengths,\n    innerProduct\n  });\n  var _worklet_5264626187493_init_data = {\n    code: \"function subtractVectors_reactNativeReanimated_matrixUtilsTsx16(a,b){const{assertVectorsHaveEqualLengths}=this.__closure;assertVectorsHaveEqualLengths(a,b);return a.map(function(_,i){return a[i]-b[i];});}\"\n  };\n  var subtractVectors = function subtractVectors_reactNativeReanimated_matrixUtilsTsx16Factory(_ref14) {\n    var _worklet_5264626187493_init_data = _ref14._worklet_5264626187493_init_data,\n      assertVectorsHaveEqualLengths = _ref14.assertVectorsHaveEqualLengths;\n    var subtractVectors = function (a, b) {\n      assertVectorsHaveEqualLengths(a, b);\n      return a.map((_, i) => a[i] - b[i]);\n    };\n    subtractVectors.__closure = {\n      assertVectorsHaveEqualLengths\n    };\n    subtractVectors.__workletHash = 5264626187493;\n    subtractVectors.__initData = _worklet_5264626187493_init_data;\n    return subtractVectors;\n  }({\n    _worklet_5264626187493_init_data,\n    assertVectorsHaveEqualLengths\n  });\n  var _worklet_2059959224558_init_data = {\n    code: \"function scaleVector_reactNativeReanimated_matrixUtilsTsx17(u,a){return u.map(function(e){return e*a;});}\"\n  };\n  var scaleVector = function scaleVector_reactNativeReanimated_matrixUtilsTsx17Factory(_ref15) {\n    var _worklet_2059959224558_init_data = _ref15._worklet_2059959224558_init_data;\n    var scaleVector = function (u, a) {\n      return u.map(e => e * a);\n    };\n    scaleVector.__closure = {};\n    scaleVector.__workletHash = 2059959224558;\n    scaleVector.__initData = _worklet_2059959224558_init_data;\n    return scaleVector;\n  }({\n    _worklet_2059959224558_init_data\n  });\n  var _worklet_827372645680_init_data = {\n    code: \"function gramSchmidtAlgorithm_reactNativeReanimated_matrixUtilsTsx18(matrix){const{subtractVectors,projection,scaleVector,innerProduct,transposeMatrix}=this.__closure;const[a0,a1,a2,a3]=matrix;const u0=a0;const u1=subtractVectors(a1,projection(u0,a1));const u2=subtractVectors(subtractVectors(a2,projection(u0,a2)),projection(u1,a2));const u3=subtractVectors(subtractVectors(subtractVectors(a3,projection(u0,a3)),projection(u1,a3)),projection(u2,a3));const[e0,e1,e2,e3]=[u0,u1,u2,u3].map(function(u){return scaleVector(u,1/Math.sqrt(innerProduct(u,u)));});const rotationMatrix=[[e0[0],e1[0],e2[0],e3[0]],[e0[1],e1[1],e2[1],e3[1]],[e0[2],e1[2],e2[2],e3[2]],[e0[3],e1[3],e2[3],e3[3]]];const skewMatrix=[[innerProduct(e0,a0),innerProduct(e0,a1),innerProduct(e0,a2),innerProduct(e0,a3)],[0,innerProduct(e1,a1),innerProduct(e1,a2),innerProduct(e1,a3)],[0,0,innerProduct(e2,a2),innerProduct(e2,a3)],[0,0,0,innerProduct(e3,a3)]];return{rotationMatrix:transposeMatrix(rotationMatrix),skewMatrix:transposeMatrix(skewMatrix)};}\"\n  };\n  var gramSchmidtAlgorithm = function gramSchmidtAlgorithm_reactNativeReanimated_matrixUtilsTsx18Factory(_ref16) {\n    var _worklet_827372645680_init_data = _ref16._worklet_827372645680_init_data,\n      subtractVectors = _ref16.subtractVectors,\n      projection = _ref16.projection,\n      scaleVector = _ref16.scaleVector,\n      innerProduct = _ref16.innerProduct,\n      transposeMatrix = _ref16.transposeMatrix;\n    var gramSchmidtAlgorithm = function (matrix) {\n      var _matrix = (0, _slicedToArray.default)(matrix, 4),\n        a0 = _matrix[0],\n        a1 = _matrix[1],\n        a2 = _matrix[2],\n        a3 = _matrix[3];\n      var u0 = a0;\n      var u1 = subtractVectors(a1, projection(u0, a1));\n      var u2 = subtractVectors(subtractVectors(a2, projection(u0, a2)), projection(u1, a2));\n      var u3 = subtractVectors(subtractVectors(subtractVectors(a3, projection(u0, a3)), projection(u1, a3)), projection(u2, a3));\n      var _map = [u0, u1, u2, u3].map(u => scaleVector(u, 1 / Math.sqrt(innerProduct(u, u)))),\n        _map2 = (0, _slicedToArray.default)(_map, 4),\n        e0 = _map2[0],\n        e1 = _map2[1],\n        e2 = _map2[2],\n        e3 = _map2[3];\n      var rotationMatrix = [[e0[0], e1[0], e2[0], e3[0]], [e0[1], e1[1], e2[1], e3[1]], [e0[2], e1[2], e2[2], e3[2]], [e0[3], e1[3], e2[3], e3[3]]];\n      var skewMatrix = [[innerProduct(e0, a0), innerProduct(e0, a1), innerProduct(e0, a2), innerProduct(e0, a3)], [0, innerProduct(e1, a1), innerProduct(e1, a2), innerProduct(e1, a3)], [0, 0, innerProduct(e2, a2), innerProduct(e2, a3)], [0, 0, 0, innerProduct(e3, a3)]];\n      return {\n        rotationMatrix: transposeMatrix(rotationMatrix),\n        skewMatrix: transposeMatrix(skewMatrix)\n      };\n    };\n    gramSchmidtAlgorithm.__closure = {\n      subtractVectors,\n      projection,\n      scaleVector,\n      innerProduct,\n      transposeMatrix\n    };\n    gramSchmidtAlgorithm.__workletHash = 827372645680;\n    gramSchmidtAlgorithm.__initData = _worklet_827372645680_init_data;\n    return gramSchmidtAlgorithm;\n  }({\n    _worklet_827372645680_init_data,\n    subtractVectors,\n    projection,\n    scaleVector,\n    innerProduct,\n    transposeMatrix\n  });\n  var _worklet_2076609522926_init_data = {\n    code: \"function decomposeMatrix_reactNativeReanimated_matrixUtilsTsx19(unknownTypeMatrix){const{maybeFlattenMatrix,norm3d,gramSchmidtAlgorithm}=this.__closure;const matrix=maybeFlattenMatrix(unknownTypeMatrix);if(matrix[15]===0){throw new ReanimatedError('Invalid transform matrix.');}matrix.forEach(function(_,i){return matrix[i]/=matrix[15];});const translationMatrix=[[1,0,0,0],[0,1,0,0],[0,0,1,0],[matrix[12],matrix[13],matrix[14],1]];const sx=matrix[15]*norm3d(matrix[0],matrix[4],matrix[8]);const sy=matrix[15]*norm3d(matrix[1],matrix[5],matrix[9]);const sz=matrix[15]*norm3d(matrix[2],matrix[6],matrix[10]);const scaleMatrix=[[sx,0,0,0],[0,sy,0,0],[0,0,sz,0],[0,0,0,1]];const rotationAndSkewMatrix=[[matrix[0]/sx,matrix[1]/sx,matrix[2]/sx,0],[matrix[4]/sy,matrix[5]/sy,matrix[6]/sy,0],[matrix[8]/sz,matrix[9]/sz,matrix[10]/sz,0],[0,0,0,1]];const{rotationMatrix:rotationMatrix,skewMatrix:skewMatrix}=gramSchmidtAlgorithm(rotationAndSkewMatrix);return{translationMatrix:translationMatrix,scaleMatrix:scaleMatrix,rotationMatrix:rotationMatrix,skewMatrix:skewMatrix};}\"\n  };\n  var decomposeMatrix = function decomposeMatrix_reactNativeReanimated_matrixUtilsTsx19Factory(_ref17) {\n    var _worklet_2076609522926_init_data = _ref17._worklet_2076609522926_init_data,\n      maybeFlattenMatrix = _ref17.maybeFlattenMatrix,\n      norm3d = _ref17.norm3d,\n      gramSchmidtAlgorithm = _ref17.gramSchmidtAlgorithm;\n    var decomposeMatrix = function (unknownTypeMatrix) {\n      var matrix = maybeFlattenMatrix(unknownTypeMatrix);\n\n      // normalize matrix\n      if (matrix[15] === 0) {\n        throw new _common.ReanimatedError('Invalid transform matrix.');\n      }\n      matrix.forEach((_, i) => matrix[i] /= matrix[15]);\n      var translationMatrix = [[1, 0, 0, 0], [0, 1, 0, 0], [0, 0, 1, 0], [matrix[12], matrix[13], matrix[14], 1]];\n      var sx = matrix[15] * norm3d(matrix[0], matrix[4], matrix[8]);\n      var sy = matrix[15] * norm3d(matrix[1], matrix[5], matrix[9]);\n      var sz = matrix[15] * norm3d(matrix[2], matrix[6], matrix[10]);\n\n      // eslint-disable-next-line @typescript-eslint/no-shadow\n      var scaleMatrix = [[sx, 0, 0, 0], [0, sy, 0, 0], [0, 0, sz, 0], [0, 0, 0, 1]];\n      var rotationAndSkewMatrix = [[matrix[0] / sx, matrix[1] / sx, matrix[2] / sx, 0], [matrix[4] / sy, matrix[5] / sy, matrix[6] / sy, 0], [matrix[8] / sz, matrix[9] / sz, matrix[10] / sz, 0], [0, 0, 0, 1]];\n      var _gramSchmidtAlgorithm = gramSchmidtAlgorithm(rotationAndSkewMatrix),\n        rotationMatrix = _gramSchmidtAlgorithm.rotationMatrix,\n        skewMatrix = _gramSchmidtAlgorithm.skewMatrix;\n      return {\n        translationMatrix,\n        scaleMatrix,\n        rotationMatrix,\n        skewMatrix\n      };\n    };\n    decomposeMatrix.__closure = {\n      maybeFlattenMatrix,\n      norm3d,\n      gramSchmidtAlgorithm\n    };\n    decomposeMatrix.__workletHash = 2076609522926;\n    decomposeMatrix.__initData = _worklet_2076609522926_init_data;\n    return decomposeMatrix;\n  }({\n    _worklet_2076609522926_init_data,\n    maybeFlattenMatrix,\n    norm3d,\n    gramSchmidtAlgorithm\n  });\n  var _worklet_14654446791686_init_data = {\n    code: \"function decomposeMatrixIntoMatricesAndAngles_reactNativeReanimated_matrixUtilsTsx20(matrix){const{decomposeMatrix}=this.__closure;const{scaleMatrix:scaleMatrix,rotationMatrix:rotationMatrix,translationMatrix:translationMatrix,skewMatrix:skewMatrix}=decomposeMatrix(matrix);const sinRy=-rotationMatrix[0][2];const ry=Math.asin(sinRy);let rx;let rz;if(sinRy===1||sinRy===-1){rz=0;rx=Math.atan2(sinRy*rotationMatrix[0][1],sinRy*rotationMatrix[0][2]);}else{rz=Math.atan2(rotationMatrix[0][1],rotationMatrix[0][0]);rx=Math.atan2(rotationMatrix[1][2],rotationMatrix[2][2]);}return{scaleMatrix:scaleMatrix,rotationMatrix:rotationMatrix,translationMatrix:translationMatrix,skewMatrix:skewMatrix,rx:rx||0,ry:ry||0,rz:rz||0};}\"\n  };\n  var decomposeMatrixIntoMatricesAndAngles = function decomposeMatrixIntoMatricesAndAngles_reactNativeReanimated_matrixUtilsTsx20Factory(_ref18) {\n    var _worklet_14654446791686_init_data = _ref18._worklet_14654446791686_init_data,\n      decomposeMatrix = _ref18.decomposeMatrix;\n    var decomposeMatrixIntoMatricesAndAngles = function (matrix) {\n      // eslint-disable-next-line @typescript-eslint/no-shadow\n      var _decomposeMatrix = decomposeMatrix(matrix),\n        scaleMatrix = _decomposeMatrix.scaleMatrix,\n        rotationMatrix = _decomposeMatrix.rotationMatrix,\n        translationMatrix = _decomposeMatrix.translationMatrix,\n        skewMatrix = _decomposeMatrix.skewMatrix;\n      var sinRy = -rotationMatrix[0][2];\n      var ry = Math.asin(sinRy);\n      var rx;\n      var rz;\n      if (sinRy === 1 || sinRy === -1) {\n        rz = 0;\n        rx = Math.atan2(sinRy * rotationMatrix[0][1], sinRy * rotationMatrix[0][2]);\n      } else {\n        rz = Math.atan2(rotationMatrix[0][1], rotationMatrix[0][0]);\n        rx = Math.atan2(rotationMatrix[1][2], rotationMatrix[2][2]);\n      }\n      return {\n        scaleMatrix,\n        rotationMatrix,\n        translationMatrix,\n        skewMatrix,\n        rx: rx || 0,\n        ry: ry || 0,\n        rz: rz || 0\n      };\n    };\n    decomposeMatrixIntoMatricesAndAngles.__closure = {\n      decomposeMatrix\n    };\n    decomposeMatrixIntoMatricesAndAngles.__workletHash = 14654446791686;\n    decomposeMatrixIntoMatricesAndAngles.__initData = _worklet_14654446791686_init_data;\n    return decomposeMatrixIntoMatricesAndAngles;\n  }({\n    _worklet_14654446791686_init_data,\n    decomposeMatrix\n  });\n});","lineCount":567,"map":[[2,2,1,0],[2,14,1,12],[4,2,1,13,"Object"],[4,8,1,13],[4,9,1,13,"defineProperty"],[4,23,1,13],[4,24,1,13,"exports"],[4,31,1,13],[5,4,1,13,"value"],[5,9,1,13],[6,2,1,13],[7,2,1,13],[7,11,1,13,"_interopDefault"],[7,27,1,13,"e"],[7,28,1,13],[8,4,1,13],[8,11,1,13,"e"],[8,12,1,13],[8,16,1,13,"e"],[8,17,1,13],[8,18,1,13,"__esModule"],[8,28,1,13],[8,31,1,13,"e"],[8,32,1,13],[9,6,1,13,"default"],[9,13,1,13],[9,15,1,13,"e"],[10,4,1,13],[11,2,1,13],[12,2,32,0,"Object"],[12,8,32,0],[12,9,32,0,"defineProperty"],[12,23,32,0],[12,24,32,0,"exports"],[12,31,32,0],[13,4,32,0,"enumerable"],[13,14,32,0],[14,4,32,0,"get"],[14,7,32,0],[14,18,32,0,"get"],[14,19,32,0],[15,6,32,0],[15,13,32,0,"isAffineMatrixFlat"],[15,31,32,0],[16,4,32,0],[17,2,32,0],[18,2,41,0,"Object"],[18,8,41,0],[18,9,41,0,"defineProperty"],[18,23,41,0],[18,24,41,0,"exports"],[18,31,41,0],[19,4,41,0,"enumerable"],[19,14,41,0],[20,4,41,0,"get"],[20,7,41,0],[20,18,41,0,"get"],[20,19,41,0],[21,6,41,0],[21,13,41,0,"isAffineMatrix"],[21,27,41,0],[22,4,41,0],[23,2,41,0],[24,2,55,0,"Object"],[24,8,55,0],[24,9,55,0,"defineProperty"],[24,23,55,0],[24,24,55,0,"exports"],[24,31,55,0],[25,4,55,0,"enumerable"],[25,14,55,0],[26,4,55,0,"get"],[26,7,55,0],[26,18,55,0,"get"],[26,19,55,0],[27,6,55,0],[27,13,55,0,"flatten"],[27,20,55,0],[28,4,55,0],[29,2,55,0],[30,2,60,0,"Object"],[30,8,60,0],[30,9,60,0,"defineProperty"],[30,23,60,0],[30,24,60,0,"exports"],[30,31,60,0],[31,4,60,0,"enumerable"],[31,14,60,0],[32,4,60,0,"get"],[32,7,60,0],[32,18,60,0,"get"],[32,19,60,0],[33,6,60,0],[33,13,60,0,"unflatten"],[33,22,60,0],[34,4,60,0],[35,2,60,0],[36,2,77,0,"Object"],[36,8,77,0],[36,9,77,0,"defineProperty"],[36,23,77,0],[36,24,77,0,"exports"],[36,31,77,0],[37,4,77,0,"enumerable"],[37,14,77,0],[38,4,77,0,"get"],[38,7,77,0],[38,18,77,0,"get"],[38,19,77,0],[39,6,77,0],[39,13,77,0,"multiplyMatrices"],[39,29,77,0],[40,4,77,0],[41,2,77,0],[42,2,170,0,"Object"],[42,8,170,0],[42,9,170,0,"defineProperty"],[42,23,170,0],[42,24,170,0,"exports"],[42,31,170,0],[43,4,170,0,"enumerable"],[43,14,170,0],[44,4,170,0,"get"],[44,7,170,0],[44,18,170,0,"get"],[44,19,170,0],[45,6,170,0],[45,13,170,0,"subtractMatrices"],[45,29,170,0],[46,4,170,0],[47,2,170,0],[48,2,183,0,"Object"],[48,8,183,0],[48,9,183,0,"defineProperty"],[48,23,183,0],[48,24,183,0,"exports"],[48,31,183,0],[49,4,183,0,"enumerable"],[49,14,183,0],[50,4,183,0,"get"],[50,7,183,0],[50,18,183,0,"get"],[50,19,183,0],[51,6,183,0],[51,13,183,0,"addMatrices"],[51,24,183,0],[52,4,183,0],[53,2,183,0],[54,2,196,0,"Object"],[54,8,196,0],[54,9,196,0,"defineProperty"],[54,23,196,0],[54,24,196,0,"exports"],[54,31,196,0],[55,4,196,0,"enumerable"],[55,14,196,0],[56,4,196,0,"get"],[56,7,196,0],[56,18,196,0,"get"],[56,19,196,0],[57,6,196,0],[57,13,196,0,"scaleMatrix"],[57,24,196,0],[58,4,196,0],[59,2,196,0],[60,2,208,0,"Object"],[60,8,208,0],[60,9,208,0,"defineProperty"],[60,23,208,0],[60,24,208,0,"exports"],[60,31,208,0],[61,4,208,0,"enumerable"],[61,14,208,0],[62,4,208,0,"get"],[62,7,208,0],[62,18,208,0,"get"],[62,19,208,0],[63,6,208,0],[63,13,208,0,"getRotationMatrix"],[63,30,208,0],[64,4,208,0],[65,2,208,0],[66,2,343,0,"Object"],[66,8,343,0],[66,9,343,0,"defineProperty"],[66,23,343,0],[66,24,343,0,"exports"],[66,31,343,0],[67,4,343,0,"enumerable"],[67,14,343,0],[68,4,343,0,"get"],[68,7,343,0],[68,18,343,0,"get"],[68,19,343,0],[69,6,343,0],[69,13,343,0,"decomposeMatrix"],[69,28,343,0],[70,4,343,0],[71,2,343,0],[72,2,392,0,"Object"],[72,8,392,0],[72,9,392,0,"defineProperty"],[72,23,392,0],[72,24,392,0,"exports"],[72,31,392,0],[73,4,392,0,"enumerable"],[73,14,392,0],[74,4,392,0,"get"],[74,7,392,0],[74,18,392,0,"get"],[74,19,392,0],[75,6,392,0],[75,13,392,0,"decomposeMatrixIntoMatricesAndAngles"],[75,49,392,0],[76,4,392,0],[77,2,392,0],[78,2,422,1],[78,6,422,1,"_babelRuntimeHelpersSlicedToArray"],[78,39,422,1],[78,42,422,1,"require"],[78,49,422,1],[78,50,422,1,"_dependencyMap"],[78,64,422,1],[79,2,422,1],[79,6,422,1,"_slicedToArray"],[79,20,422,1],[79,23,422,1,"_interopDefault"],[79,38,422,1],[79,39,422,1,"_babelRuntimeHelpersSlicedToArray"],[79,72,422,1],[80,2,3,0],[80,6,3,0,"_common"],[80,13,3,0],[80,16,3,0,"require"],[80,23,3,0],[80,24,3,0,"_dependencyMap"],[80,38,3,0],[81,2,3,47],[81,6,3,47,"_worklet_15554583600949_init_data"],[81,39,3,47],[82,4,3,47,"code"],[82,8,3,47],[83,2,3,47],[84,2,3,47],[84,6,3,47,"isAffineMatrixFlat"],[84,24,3,47],[84,27,32,7],[84,36,32,7,"isAffineMatrixFlat_reactNativeReanimated_matrixUtilsTsx1Factory"],[84,100,32,7,"_ref"],[84,104,32,7],[85,4,32,7],[85,8,32,7,"_worklet_15554583600949_init_data"],[85,41,32,7],[85,44,32,7,"_ref"],[85,48,32,7],[85,49,32,7,"_worklet_15554583600949_init_data"],[85,82,32,7],[86,4,32,7],[86,8,32,7,"isAffineMatrixFlat"],[86,26,32,7],[86,38,32,7,"isAffineMatrixFlat"],[86,39,32,35,"x"],[86,40,32,45],[86,42,32,70],[87,6,34,2],[87,13,35,4,"Array"],[87,18,35,9],[87,19,35,10,"isArray"],[87,26,35,17],[87,27,35,18,"x"],[87,28,35,19],[87,29,35,20],[87,33,36,4,"x"],[87,34,36,5],[87,35,36,6,"length"],[87,41,36,12],[87,46,36,17],[87,48,36,19],[87,52,37,4,"x"],[87,53,37,5],[87,54,37,6,"every"],[87,59,37,11],[87,60,37,13,"element"],[87,67,37,20],[87,71,37,25],[87,78,37,32,"element"],[87,85,37,39],[87,90,37,44],[87,98,37,52],[87,102,37,56],[87,103,37,57,"isNaN"],[87,108,37,62],[87,109,37,63,"element"],[87,116,37,70],[87,117,37,71],[87,118,37,72],[88,4,39,0],[88,5,39,1],[89,4,39,1,"isAffineMatrixFlat"],[89,22,39,1],[89,23,39,1,"__closure"],[89,32,39,1],[90,4,39,1,"isAffineMatrixFlat"],[90,22,39,1],[90,23,39,1,"__workletHash"],[90,36,39,1],[91,4,39,1,"isAffineMatrixFlat"],[91,22,39,1],[91,23,39,1,"__initData"],[91,33,39,1],[91,36,39,1,"_worklet_15554583600949_init_data"],[91,69,39,1],[92,4,39,1],[92,11,39,1,"isAffineMatrixFlat"],[92,29,39,1],[93,2,39,1],[93,3,32,7],[94,4,32,7,"_worklet_15554583600949_init_data"],[95,2,32,7],[96,2,32,7],[96,6,32,7,"_worklet_3255481902002_init_data"],[96,38,32,7],[97,4,32,7,"code"],[97,8,32,7],[98,2,32,7],[99,2,32,7],[99,6,32,7,"isAffineMatrix"],[99,20,32,7],[99,23,41,7],[99,32,41,7,"isAffineMatrix_reactNativeReanimated_matrixUtilsTsx2Factory"],[99,92,41,7,"_ref2"],[99,97,41,7],[100,4,41,7],[100,8,41,7,"_worklet_3255481902002_init_data"],[100,40,41,7],[100,43,41,7,"_ref2"],[100,48,41,7],[100,49,41,7,"_worklet_3255481902002_init_data"],[100,81,41,7],[101,4,41,7],[101,8,41,7,"isAffineMatrix"],[101,22,41,7],[101,34,41,7,"isAffineMatrix"],[101,35,41,31,"x"],[101,36,41,41],[101,38,41,62],[102,6,43,2],[102,13,44,4,"Array"],[102,18,44,9],[102,19,44,10,"isArray"],[102,26,44,17],[102,27,44,18,"x"],[102,28,44,19],[102,29,44,20],[102,33,45,4,"x"],[102,34,45,5],[102,35,45,6,"length"],[102,41,45,12],[102,46,45,17],[102,47,45,18],[102,51,46,4,"x"],[102,52,46,5],[102,53,46,6,"every"],[102,58,46,11],[102,59,47,7,"row"],[102,62,47,10],[102,66,48,8,"Array"],[102,71,48,13],[102,72,48,14,"isArray"],[102,79,48,21],[102,80,48,22,"row"],[102,83,48,25],[102,84,48,26],[102,88,49,8,"row"],[102,91,49,11],[102,92,49,12,"length"],[102,98,49,18],[102,103,49,23],[102,104,49,24],[102,108,50,8,"row"],[102,111,50,11],[102,112,50,12,"every"],[102,117,50,17],[102,118,50,19,"element"],[102,125,50,26],[102,129,50,31],[102,136,50,38,"element"],[102,143,50,45],[102,148,50,50],[102,156,50,58],[102,160,50,62],[102,161,50,63,"isNaN"],[102,166,50,68],[102,167,50,69,"element"],[102,174,50,76],[102,175,50,77],[102,176,51,4],[102,177,51,5],[103,4,53,0],[103,5,53,1],[104,4,53,1,"isAffineMatrix"],[104,18,53,1],[104,19,53,1,"__closure"],[104,28,53,1],[105,4,53,1,"isAffineMatrix"],[105,18,53,1],[105,19,53,1,"__workletHash"],[105,32,53,1],[106,4,53,1,"isAffineMatrix"],[106,18,53,1],[106,19,53,1,"__initData"],[106,29,53,1],[106,32,53,1,"_worklet_3255481902002_init_data"],[106,64,53,1],[107,4,53,1],[107,11,53,1,"isAffineMatrix"],[107,25,53,1],[108,2,53,1],[108,3,41,7],[109,4,41,7,"_worklet_3255481902002_init_data"],[110,2,41,7],[111,2,41,7],[111,6,41,7,"_worklet_9419609223755_init_data"],[111,38,41,7],[112,4,41,7,"code"],[112,8,41,7],[113,2,41,7],[114,2,41,7],[114,6,41,7,"flatten"],[114,13,41,7],[114,16,55,7],[114,25,55,7,"flatten_reactNativeReanimated_matrixUtilsTsx3Factory"],[114,78,55,7,"_ref3"],[114,83,55,7],[115,4,55,7],[115,8,55,7,"_worklet_9419609223755_init_data"],[115,40,55,7],[115,43,55,7,"_ref3"],[115,48,55,7],[115,49,55,7,"_worklet_9419609223755_init_data"],[115,81,55,7],[116,4,55,7],[116,8,55,7,"flatten"],[116,15,55,7],[116,27,55,7,"flatten"],[116,28,55,24,"matrix"],[116,34,55,44],[116,36,55,64],[117,6,57,2],[117,13,57,9,"matrix"],[117,19,57,15],[117,20,57,16,"flat"],[117,24,57,20],[117,25,57,21],[117,26,57,22],[118,4,58,0],[118,5,58,1],[119,4,58,1,"flatten"],[119,11,58,1],[119,12,58,1,"__closure"],[119,21,58,1],[120,4,58,1,"flatten"],[120,11,58,1],[120,12,58,1,"__workletHash"],[120,25,58,1],[121,4,58,1,"flatten"],[121,11,58,1],[121,12,58,1,"__initData"],[121,22,58,1],[121,25,58,1,"_worklet_9419609223755_init_data"],[121,57,58,1],[122,4,58,1],[122,11,58,1,"flatten"],[122,18,58,1],[123,2,58,1],[123,3,55,7],[124,4,55,7,"_worklet_9419609223755_init_data"],[125,2,55,7],[126,2,55,7],[126,6,55,7,"_worklet_14156284422336_init_data"],[126,39,55,7],[127,4,55,7,"code"],[127,8,55,7],[128,2,55,7],[129,2,55,7],[129,6,55,7,"unflatten"],[129,15,55,7],[129,18,60,7],[129,27,60,7,"unflatten_reactNativeReanimated_matrixUtilsTsx4Factory"],[129,82,60,7,"_ref4"],[129,87,60,7],[130,4,60,7],[130,8,60,7,"_worklet_14156284422336_init_data"],[130,41,60,7],[130,44,60,7,"_ref4"],[130,49,60,7],[130,50,60,7,"_worklet_14156284422336_init_data"],[130,83,60,7],[131,4,60,7],[131,8,60,7,"unflatten"],[131,17,60,7],[131,29,60,7,"unflatten"],[131,30,60,26,"m"],[131,31,60,45],[131,33,60,61],[132,6,62,2],[132,13,62,9],[132,14,63,4],[132,15,63,5,"m"],[132,16,63,6],[132,17,63,7],[132,18,63,8],[132,19,63,9],[132,21,63,11,"m"],[132,22,63,12],[132,23,63,13],[132,24,63,14],[132,25,63,15],[132,27,63,17,"m"],[132,28,63,18],[132,29,63,19],[132,30,63,20],[132,31,63,21],[132,33,63,23,"m"],[132,34,63,24],[132,35,63,25],[132,36,63,26],[132,37,63,27],[132,38,63,28],[132,40,64,4],[132,41,64,5,"m"],[132,42,64,6],[132,43,64,7],[132,44,64,8],[132,45,64,9],[132,47,64,11,"m"],[132,48,64,12],[132,49,64,13],[132,50,64,14],[132,51,64,15],[132,53,64,17,"m"],[132,54,64,18],[132,55,64,19],[132,56,64,20],[132,57,64,21],[132,59,64,23,"m"],[132,60,64,24],[132,61,64,25],[132,62,64,26],[132,63,64,27],[132,64,64,28],[132,66,65,4],[132,67,65,5,"m"],[132,68,65,6],[132,69,65,7],[132,70,65,8],[132,71,65,9],[132,73,65,11,"m"],[132,74,65,12],[132,75,65,13],[132,76,65,14],[132,77,65,15],[132,79,65,17,"m"],[132,80,65,18],[132,81,65,19],[132,83,65,21],[132,84,65,22],[132,86,65,24,"m"],[132,87,65,25],[132,88,65,26],[132,90,65,28],[132,91,65,29],[132,92,65,30],[132,94,66,4],[132,95,66,5,"m"],[132,96,66,6],[132,97,66,7],[132,99,66,9],[132,100,66,10],[132,102,66,12,"m"],[132,103,66,13],[132,104,66,14],[132,106,66,16],[132,107,66,17],[132,109,66,19,"m"],[132,110,66,20],[132,111,66,21],[132,113,66,23],[132,114,66,24],[132,116,66,26,"m"],[132,117,66,27],[132,118,66,28],[132,120,66,30],[132,121,66,31],[132,122,66,32],[132,123,67,3],[133,4,68,0],[133,5,68,1],[134,4,68,1,"unflatten"],[134,13,68,1],[134,14,68,1,"__closure"],[134,23,68,1],[135,4,68,1,"unflatten"],[135,13,68,1],[135,14,68,1,"__workletHash"],[135,27,68,1],[136,4,68,1,"unflatten"],[136,13,68,1],[136,14,68,1,"__initData"],[136,24,68,1],[136,27,68,1,"_worklet_14156284422336_init_data"],[136,60,68,1],[137,4,68,1],[137,11,68,1,"unflatten"],[137,20,68,1],[138,2,68,1],[138,3,60,7],[139,4,60,7,"_worklet_14156284422336_init_data"],[140,2,60,7],[141,2,60,7],[141,6,60,7,"_worklet_31377339073_init_data"],[141,36,60,7],[142,4,60,7,"code"],[142,8,60,7],[143,2,60,7],[144,2,60,7],[144,6,60,7,"maybeFlattenMatrix"],[144,24,60,7],[144,27,70,0],[144,36,70,0,"maybeFlattenMatrix_reactNativeReanimated_matrixUtilsTsx5Factory"],[144,100,70,0,"_ref5"],[144,105,70,0],[145,4,70,0],[145,8,70,0,"_worklet_31377339073_init_data"],[145,38,70,0],[145,41,70,0,"_ref5"],[145,46,70,0],[145,47,70,0,"_worklet_31377339073_init_data"],[145,77,70,0],[146,6,74,9,"isAffineMatrix"],[146,20,74,23],[146,23,74,23,"_ref5"],[146,28,74,23],[146,29,74,9,"isAffineMatrix"],[146,43,74,23],[147,6,74,34,"flatten"],[147,13,74,41],[147,16,74,41,"_ref5"],[147,21,74,41],[147,22,74,34,"flatten"],[147,29,74,41],[148,4,74,41],[148,8,74,41,"maybeFlattenMatrix"],[148,26,74,41],[148,38,74,41,"maybeFlattenMatrix"],[148,39,71,2,"matrix"],[148,45,71,41],[148,47,72,20],[149,6,74,2],[149,13,74,9,"isAffineMatrix"],[149,27,74,23],[149,28,74,24,"matrix"],[149,34,74,30],[149,35,74,31],[149,38,74,34,"flatten"],[149,45,74,41],[149,46,74,42,"matrix"],[149,52,74,48],[149,53,74,49],[149,56,74,52,"matrix"],[149,62,74,58],[150,4,75,0],[150,5,75,1],[151,4,75,1,"maybeFlattenMatrix"],[151,22,75,1],[151,23,75,1,"__closure"],[151,32,75,1],[152,6,74,9,"isAffineMatrix"],[152,20,74,23],[153,6,74,34,"flatten"],[154,4,74,41],[155,4,74,41,"maybeFlattenMatrix"],[155,22,74,41],[155,23,74,41,"__workletHash"],[155,36,74,41],[156,4,74,41,"maybeFlattenMatrix"],[156,22,74,41],[156,23,74,41,"__initData"],[156,33,74,41],[156,36,74,41,"_worklet_31377339073_init_data"],[156,66,74,41],[157,4,74,41],[157,11,74,41,"maybeFlattenMatrix"],[157,29,74,41],[158,2,74,41],[158,3,70,0],[159,4,70,0,"_worklet_31377339073_init_data"],[159,34,70,0],[160,4,74,9,"isAffineMatrix"],[160,18,74,23],[161,4,74,34,"flatten"],[162,2,74,41],[163,2,74,41],[163,6,74,41,"_worklet_15992296871009_init_data"],[163,39,74,41],[164,4,74,41,"code"],[164,8,74,41],[165,2,74,41],[166,2,74,41],[166,6,74,41,"multiplyMatrices"],[166,22,74,41],[166,25,77,7],[166,34,77,7,"multiplyMatrices_reactNativeReanimated_matrixUtilsTsx6Factory"],[166,96,77,7,"_ref6"],[166,101,77,7],[167,4,77,7],[167,8,77,7,"_worklet_15992296871009_init_data"],[167,41,77,7],[167,44,77,7,"_ref6"],[167,49,77,7],[167,50,77,7,"_worklet_15992296871009_init_data"],[167,83,77,7],[168,4,77,7],[168,8,77,7,"multiplyMatrices"],[168,24,77,7],[168,36,77,7,"multiplyMatrices"],[168,37,78,2,"a"],[168,38,78,17],[168,40,79,2,"b"],[168,41,79,17],[168,43,80,16],[169,6,82,2],[169,13,82,9],[169,14,83,4],[169,15,84,6,"a"],[169,16,84,7],[169,17,84,8],[169,18,84,9],[169,19,84,10],[169,20,84,11],[169,21,84,12],[169,22,84,13],[169,25,84,16,"b"],[169,26,84,17],[169,27,84,18],[169,28,84,19],[169,29,84,20],[169,30,84,21],[169,31,84,22],[169,32,84,23],[169,35,85,8,"a"],[169,36,85,9],[169,37,85,10],[169,38,85,11],[169,39,85,12],[169,40,85,13],[169,41,85,14],[169,42,85,15],[169,45,85,18,"b"],[169,46,85,19],[169,47,85,20],[169,48,85,21],[169,49,85,22],[169,50,85,23],[169,51,85,24],[169,52,85,25],[169,55,86,8,"a"],[169,56,86,9],[169,57,86,10],[169,58,86,11],[169,59,86,12],[169,60,86,13],[169,61,86,14],[169,62,86,15],[169,65,86,18,"b"],[169,66,86,19],[169,67,86,20],[169,68,86,21],[169,69,86,22],[169,70,86,23],[169,71,86,24],[169,72,86,25],[169,75,87,8,"a"],[169,76,87,9],[169,77,87,10],[169,78,87,11],[169,79,87,12],[169,80,87,13],[169,81,87,14],[169,82,87,15],[169,85,87,18,"b"],[169,86,87,19],[169,87,87,20],[169,88,87,21],[169,89,87,22],[169,90,87,23],[169,91,87,24],[169,92,87,25],[169,94,89,6,"a"],[169,95,89,7],[169,96,89,8],[169,97,89,9],[169,98,89,10],[169,99,89,11],[169,100,89,12],[169,101,89,13],[169,104,89,16,"b"],[169,105,89,17],[169,106,89,18],[169,107,89,19],[169,108,89,20],[169,109,89,21],[169,110,89,22],[169,111,89,23],[169,114,90,8,"a"],[169,115,90,9],[169,116,90,10],[169,117,90,11],[169,118,90,12],[169,119,90,13],[169,120,90,14],[169,121,90,15],[169,124,90,18,"b"],[169,125,90,19],[169,126,90,20],[169,127,90,21],[169,128,90,22],[169,129,90,23],[169,130,90,24],[169,131,90,25],[169,134,91,8,"a"],[169,135,91,9],[169,136,91,10],[169,137,91,11],[169,138,91,12],[169,139,91,13],[169,140,91,14],[169,141,91,15],[169,144,91,18,"b"],[169,145,91,19],[169,146,91,20],[169,147,91,21],[169,148,91,22],[169,149,91,23],[169,150,91,24],[169,151,91,25],[169,154,92,8,"a"],[169,155,92,9],[169,156,92,10],[169,157,92,11],[169,158,92,12],[169,159,92,13],[169,160,92,14],[169,161,92,15],[169,164,92,18,"b"],[169,165,92,19],[169,166,92,20],[169,167,92,21],[169,168,92,22],[169,169,92,23],[169,170,92,24],[169,171,92,25],[169,173,94,6,"a"],[169,174,94,7],[169,175,94,8],[169,176,94,9],[169,177,94,10],[169,178,94,11],[169,179,94,12],[169,180,94,13],[169,183,94,16,"b"],[169,184,94,17],[169,185,94,18],[169,186,94,19],[169,187,94,20],[169,188,94,21],[169,189,94,22],[169,190,94,23],[169,193,95,8,"a"],[169,194,95,9],[169,195,95,10],[169,196,95,11],[169,197,95,12],[169,198,95,13],[169,199,95,14],[169,200,95,15],[169,203,95,18,"b"],[169,204,95,19],[169,205,95,20],[169,206,95,21],[169,207,95,22],[169,208,95,23],[169,209,95,24],[169,210,95,25],[169,213,96,8,"a"],[169,214,96,9],[169,215,96,10],[169,216,96,11],[169,217,96,12],[169,218,96,13],[169,219,96,14],[169,220,96,15],[169,223,96,18,"b"],[169,224,96,19],[169,225,96,20],[169,226,96,21],[169,227,96,22],[169,228,96,23],[169,229,96,24],[169,230,96,25],[169,233,97,8,"a"],[169,234,97,9],[169,235,97,10],[169,236,97,11],[169,237,97,12],[169,238,97,13],[169,239,97,14],[169,240,97,15],[169,243,97,18,"b"],[169,244,97,19],[169,245,97,20],[169,246,97,21],[169,247,97,22],[169,248,97,23],[169,249,97,24],[169,250,97,25],[169,252,99,6,"a"],[169,253,99,7],[169,254,99,8],[169,255,99,9],[169,256,99,10],[169,257,99,11],[169,258,99,12],[169,259,99,13],[169,262,99,16,"b"],[169,263,99,17],[169,264,99,18],[169,265,99,19],[169,266,99,20],[169,267,99,21],[169,268,99,22],[169,269,99,23],[169,272,100,8,"a"],[169,273,100,9],[169,274,100,10],[169,275,100,11],[169,276,100,12],[169,277,100,13],[169,278,100,14],[169,279,100,15],[169,282,100,18,"b"],[169,283,100,19],[169,284,100,20],[169,285,100,21],[169,286,100,22],[169,287,100,23],[169,288,100,24],[169,289,100,25],[169,292,101,8,"a"],[169,293,101,9],[169,294,101,10],[169,295,101,11],[169,296,101,12],[169,297,101,13],[169,298,101,14],[169,299,101,15],[169,302,101,18,"b"],[169,303,101,19],[169,304,101,20],[169,305,101,21],[169,306,101,22],[169,307,101,23],[169,308,101,24],[169,309,101,25],[169,312,102,8,"a"],[169,313,102,9],[169,314,102,10],[169,315,102,11],[169,316,102,12],[169,317,102,13],[169,318,102,14],[169,319,102,15],[169,322,102,18,"b"],[169,323,102,19],[169,324,102,20],[169,325,102,21],[169,326,102,22],[169,327,102,23],[169,328,102,24],[169,329,102,25],[169,330,103,5],[169,332,104,4],[169,333,105,6,"a"],[169,334,105,7],[169,335,105,8],[169,336,105,9],[169,337,105,10],[169,338,105,11],[169,339,105,12],[169,340,105,13],[169,343,105,16,"b"],[169,344,105,17],[169,345,105,18],[169,346,105,19],[169,347,105,20],[169,348,105,21],[169,349,105,22],[169,350,105,23],[169,353,106,8,"a"],[169,354,106,9],[169,355,106,10],[169,356,106,11],[169,357,106,12],[169,358,106,13],[169,359,106,14],[169,360,106,15],[169,363,106,18,"b"],[169,364,106,19],[169,365,106,20],[169,366,106,21],[169,367,106,22],[169,368,106,23],[169,369,106,24],[169,370,106,25],[169,373,107,8,"a"],[169,374,107,9],[169,375,107,10],[169,376,107,11],[169,377,107,12],[169,378,107,13],[169,379,107,14],[169,380,107,15],[169,383,107,18,"b"],[169,384,107,19],[169,385,107,20],[169,386,107,21],[169,387,107,22],[169,388,107,23],[169,389,107,24],[169,390,107,25],[169,393,108,8,"a"],[169,394,108,9],[169,395,108,10],[169,396,108,11],[169,397,108,12],[169,398,108,13],[169,399,108,14],[169,400,108,15],[169,403,108,18,"b"],[169,404,108,19],[169,405,108,20],[169,406,108,21],[169,407,108,22],[169,408,108,23],[169,409,108,24],[169,410,108,25],[169,412,110,6,"a"],[169,413,110,7],[169,414,110,8],[169,415,110,9],[169,416,110,10],[169,417,110,11],[169,418,110,12],[169,419,110,13],[169,422,110,16,"b"],[169,423,110,17],[169,424,110,18],[169,425,110,19],[169,426,110,20],[169,427,110,21],[169,428,110,22],[169,429,110,23],[169,432,111,8,"a"],[169,433,111,9],[169,434,111,10],[169,435,111,11],[169,436,111,12],[169,437,111,13],[169,438,111,14],[169,439,111,15],[169,442,111,18,"b"],[169,443,111,19],[169,444,111,20],[169,445,111,21],[169,446,111,22],[169,447,111,23],[169,448,111,24],[169,449,111,25],[169,452,112,8,"a"],[169,453,112,9],[169,454,112,10],[169,455,112,11],[169,456,112,12],[169,457,112,13],[169,458,112,14],[169,459,112,15],[169,462,112,18,"b"],[169,463,112,19],[169,464,112,20],[169,465,112,21],[169,466,112,22],[169,467,112,23],[169,468,112,24],[169,469,112,25],[169,472,113,8,"a"],[169,473,113,9],[169,474,113,10],[169,475,113,11],[169,476,113,12],[169,477,113,13],[169,478,113,14],[169,479,113,15],[169,482,113,18,"b"],[169,483,113,19],[169,484,113,20],[169,485,113,21],[169,486,113,22],[169,487,113,23],[169,488,113,24],[169,489,113,25],[169,491,115,6,"a"],[169,492,115,7],[169,493,115,8],[169,494,115,9],[169,495,115,10],[169,496,115,11],[169,497,115,12],[169,498,115,13],[169,501,115,16,"b"],[169,502,115,17],[169,503,115,18],[169,504,115,19],[169,505,115,20],[169,506,115,21],[169,507,115,22],[169,508,115,23],[169,511,116,8,"a"],[169,512,116,9],[169,513,116,10],[169,514,116,11],[169,515,116,12],[169,516,116,13],[169,517,116,14],[169,518,116,15],[169,521,116,18,"b"],[169,522,116,19],[169,523,116,20],[169,524,116,21],[169,525,116,22],[169,526,116,23],[169,527,116,24],[169,528,116,25],[169,531,117,8,"a"],[169,532,117,9],[169,533,117,10],[169,534,117,11],[169,535,117,12],[169,536,117,13],[169,537,117,14],[169,538,117,15],[169,541,117,18,"b"],[169,542,117,19],[169,543,117,20],[169,544,117,21],[169,545,117,22],[169,546,117,23],[169,547,117,24],[169,548,117,25],[169,551,118,8,"a"],[169,552,118,9],[169,553,118,10],[169,554,118,11],[169,555,118,12],[169,556,118,13],[169,557,118,14],[169,558,118,15],[169,561,118,18,"b"],[169,562,118,19],[169,563,118,20],[169,564,118,21],[169,565,118,22],[169,566,118,23],[169,567,118,24],[169,568,118,25],[169,570,120,6,"a"],[169,571,120,7],[169,572,120,8],[169,573,120,9],[169,574,120,10],[169,575,120,11],[169,576,120,12],[169,577,120,13],[169,580,120,16,"b"],[169,581,120,17],[169,582,120,18],[169,583,120,19],[169,584,120,20],[169,585,120,21],[169,586,120,22],[169,587,120,23],[169,590,121,8,"a"],[169,591,121,9],[169,592,121,10],[169,593,121,11],[169,594,121,12],[169,595,121,13],[169,596,121,14],[169,597,121,15],[169,600,121,18,"b"],[169,601,121,19],[169,602,121,20],[169,603,121,21],[169,604,121,22],[169,605,121,23],[169,606,121,24],[169,607,121,25],[169,610,122,8,"a"],[169,611,122,9],[169,612,122,10],[169,613,122,11],[169,614,122,12],[169,615,122,13],[169,616,122,14],[169,617,122,15],[169,620,122,18,"b"],[169,621,122,19],[169,622,122,20],[169,623,122,21],[169,624,122,22],[169,625,122,23],[169,626,122,24],[169,627,122,25],[169,630,123,8,"a"],[169,631,123,9],[169,632,123,10],[169,633,123,11],[169,634,123,12],[169,635,123,13],[169,636,123,14],[169,637,123,15],[169,640,123,18,"b"],[169,641,123,19],[169,642,123,20],[169,643,123,21],[169,644,123,22],[169,645,123,23],[169,646,123,24],[169,647,123,25],[169,648,124,5],[169,650,125,4],[169,651,126,6,"a"],[169,652,126,7],[169,653,126,8],[169,654,126,9],[169,655,126,10],[169,656,126,11],[169,657,126,12],[169,658,126,13],[169,661,126,16,"b"],[169,662,126,17],[169,663,126,18],[169,664,126,19],[169,665,126,20],[169,666,126,21],[169,667,126,22],[169,668,126,23],[169,671,127,8,"a"],[169,672,127,9],[169,673,127,10],[169,674,127,11],[169,675,127,12],[169,676,127,13],[169,677,127,14],[169,678,127,15],[169,681,127,18,"b"],[169,682,127,19],[169,683,127,20],[169,684,127,21],[169,685,127,22],[169,686,127,23],[169,687,127,24],[169,688,127,25],[169,691,128,8,"a"],[169,692,128,9],[169,693,128,10],[169,694,128,11],[169,695,128,12],[169,696,128,13],[169,697,128,14],[169,698,128,15],[169,701,128,18,"b"],[169,702,128,19],[169,703,128,20],[169,704,128,21],[169,705,128,22],[169,706,128,23],[169,707,128,24],[169,708,128,25],[169,711,129,8,"a"],[169,712,129,9],[169,713,129,10],[169,714,129,11],[169,715,129,12],[169,716,129,13],[169,717,129,14],[169,718,129,15],[169,721,129,18,"b"],[169,722,129,19],[169,723,129,20],[169,724,129,21],[169,725,129,22],[169,726,129,23],[169,727,129,24],[169,728,129,25],[169,730,131,6,"a"],[169,731,131,7],[169,732,131,8],[169,733,131,9],[169,734,131,10],[169,735,131,11],[169,736,131,12],[169,737,131,13],[169,740,131,16,"b"],[169,741,131,17],[169,742,131,18],[169,743,131,19],[169,744,131,20],[169,745,131,21],[169,746,131,22],[169,747,131,23],[169,750,132,8,"a"],[169,751,132,9],[169,752,132,10],[169,753,132,11],[169,754,132,12],[169,755,132,13],[169,756,132,14],[169,757,132,15],[169,760,132,18,"b"],[169,761,132,19],[169,762,132,20],[169,763,132,21],[169,764,132,22],[169,765,132,23],[169,766,132,24],[169,767,132,25],[169,770,133,8,"a"],[169,771,133,9],[169,772,133,10],[169,773,133,11],[169,774,133,12],[169,775,133,13],[169,776,133,14],[169,777,133,15],[169,780,133,18,"b"],[169,781,133,19],[169,782,133,20],[169,783,133,21],[169,784,133,22],[169,785,133,23],[169,786,133,24],[169,787,133,25],[169,790,134,8,"a"],[169,791,134,9],[169,792,134,10],[169,793,134,11],[169,794,134,12],[169,795,134,13],[169,796,134,14],[169,797,134,15],[169,800,134,18,"b"],[169,801,134,19],[169,802,134,20],[169,803,134,21],[169,804,134,22],[169,805,134,23],[169,806,134,24],[169,807,134,25],[169,809,136,6,"a"],[169,810,136,7],[169,811,136,8],[169,812,136,9],[169,813,136,10],[169,814,136,11],[169,815,136,12],[169,816,136,13],[169,819,136,16,"b"],[169,820,136,17],[169,821,136,18],[169,822,136,19],[169,823,136,20],[169,824,136,21],[169,825,136,22],[169,826,136,23],[169,829,137,8,"a"],[169,830,137,9],[169,831,137,10],[169,832,137,11],[169,833,137,12],[169,834,137,13],[169,835,137,14],[169,836,137,15],[169,839,137,18,"b"],[169,840,137,19],[169,841,137,20],[169,842,137,21],[169,843,137,22],[169,844,137,23],[169,845,137,24],[169,846,137,25],[169,849,138,8,"a"],[169,850,138,9],[169,851,138,10],[169,852,138,11],[169,853,138,12],[169,854,138,13],[169,855,138,14],[169,856,138,15],[169,859,138,18,"b"],[169,860,138,19],[169,861,138,20],[169,862,138,21],[169,863,138,22],[169,864,138,23],[169,865,138,24],[169,866,138,25],[169,869,139,8,"a"],[169,870,139,9],[169,871,139,10],[169,872,139,11],[169,873,139,12],[169,874,139,13],[169,875,139,14],[169,876,139,15],[169,879,139,18,"b"],[169,880,139,19],[169,881,139,20],[169,882,139,21],[169,883,139,22],[169,884,139,23],[169,885,139,24],[169,886,139,25],[169,888,141,6,"a"],[169,889,141,7],[169,890,141,8],[169,891,141,9],[169,892,141,10],[169,893,141,11],[169,894,141,12],[169,895,141,13],[169,898,141,16,"b"],[169,899,141,17],[169,900,141,18],[169,901,141,19],[169,902,141,20],[169,903,141,21],[169,904,141,22],[169,905,141,23],[169,908,142,8,"a"],[169,909,142,9],[169,910,142,10],[169,911,142,11],[169,912,142,12],[169,913,142,13],[169,914,142,14],[169,915,142,15],[169,918,142,18,"b"],[169,919,142,19],[169,920,142,20],[169,921,142,21],[169,922,142,22],[169,923,142,23],[169,924,142,24],[169,925,142,25],[169,928,143,8,"a"],[169,929,143,9],[169,930,143,10],[169,931,143,11],[169,932,143,12],[169,933,143,13],[169,934,143,14],[169,935,143,15],[169,938,143,18,"b"],[169,939,143,19],[169,940,143,20],[169,941,143,21],[169,942,143,22],[169,943,143,23],[169,944,143,24],[169,945,143,25],[169,948,144,8,"a"],[169,949,144,9],[169,950,144,10],[169,951,144,11],[169,952,144,12],[169,953,144,13],[169,954,144,14],[169,955,144,15],[169,958,144,18,"b"],[169,959,144,19],[169,960,144,20],[169,961,144,21],[169,962,144,22],[169,963,144,23],[169,964,144,24],[169,965,144,25],[169,966,145,5],[169,968,146,4],[169,969,147,6,"a"],[169,970,147,7],[169,971,147,8],[169,972,147,9],[169,973,147,10],[169,974,147,11],[169,975,147,12],[169,976,147,13],[169,979,147,16,"b"],[169,980,147,17],[169,981,147,18],[169,982,147,19],[169,983,147,20],[169,984,147,21],[169,985,147,22],[169,986,147,23],[169,989,148,8,"a"],[169,990,148,9],[169,991,148,10],[169,992,148,11],[169,993,148,12],[169,994,148,13],[169,995,148,14],[169,996,148,15],[169,999,148,18,"b"],[169,1000,148,19],[169,1001,148,20],[169,1002,148,21],[169,1003,148,22],[169,1004,148,23],[169,1005,148,24],[169,1006,148,25],[169,1009,149,8,"a"],[169,1010,149,9],[169,1011,149,10],[169,1012,149,11],[169,1013,149,12],[169,1014,149,13],[169,1015,149,14],[169,1016,149,15],[169,1019,149,18,"b"],[169,1020,149,19],[169,1021,149,20],[169,1022,149,21],[169,1023,149,22],[169,1024,149,23],[169,1025,149,24],[169,1026,149,25],[169,1029,150,8,"a"],[169,1030,150,9],[169,1031,150,10],[169,1032,150,11],[169,1033,150,12],[169,1034,150,13],[169,1035,150,14],[169,1036,150,15],[169,1039,150,18,"b"],[169,1040,150,19],[169,1041,150,20],[169,1042,150,21],[169,1043,150,22],[169,1044,150,23],[169,1045,150,24],[169,1046,150,25],[169,1048,152,6,"a"],[169,1049,152,7],[169,1050,152,8],[169,1051,152,9],[169,1052,152,10],[169,1053,152,11],[169,1054,152,12],[169,1055,152,13],[169,1058,152,16,"b"],[169,1059,152,17],[169,1060,152,18],[169,1061,152,19],[169,1062,152,20],[169,1063,152,21],[169,1064,152,22],[169,1065,152,23],[169,1068,153,8,"a"],[169,1069,153,9],[169,1070,153,10],[169,1071,153,11],[169,1072,153,12],[169,1073,153,13],[169,1074,153,14],[169,1075,153,15],[169,1078,153,18,"b"],[169,1079,153,19],[169,1080,153,20],[169,1081,153,21],[169,1082,153,22],[169,1083,153,23],[169,1084,153,24],[169,1085,153,25],[169,1088,154,8,"a"],[169,1089,154,9],[169,1090,154,10],[169,1091,154,11],[169,1092,154,12],[169,1093,154,13],[169,1094,154,14],[169,1095,154,15],[169,1098,154,18,"b"],[169,1099,154,19],[169,1100,154,20],[169,1101,154,21],[169,1102,154,22],[169,1103,154,23],[169,1104,154,24],[169,1105,154,25],[169,1108,155,8,"a"],[169,1109,155,9],[169,1110,155,10],[169,1111,155,11],[169,1112,155,12],[169,1113,155,13],[169,1114,155,14],[169,1115,155,15],[169,1118,155,18,"b"],[169,1119,155,19],[169,1120,155,20],[169,1121,155,21],[169,1122,155,22],[169,1123,155,23],[169,1124,155,24],[169,1125,155,25],[169,1127,157,6,"a"],[169,1128,157,7],[169,1129,157,8],[169,1130,157,9],[169,1131,157,10],[169,1132,157,11],[169,1133,157,12],[169,1134,157,13],[169,1137,157,16,"b"],[169,1138,157,17],[169,1139,157,18],[169,1140,157,19],[169,1141,157,20],[169,1142,157,21],[169,1143,157,22],[169,1144,157,23],[169,1147,158,8,"a"],[169,1148,158,9],[169,1149,158,10],[169,1150,158,11],[169,1151,158,12],[169,1152,158,13],[169,1153,158,14],[169,1154,158,15],[169,1157,158,18,"b"],[169,1158,158,19],[169,1159,158,20],[169,1160,158,21],[169,1161,158,22],[169,1162,158,23],[169,1163,158,24],[169,1164,158,25],[169,1167,159,8,"a"],[169,1168,159,9],[169,1169,159,10],[169,1170,159,11],[169,1171,159,12],[169,1172,159,13],[169,1173,159,14],[169,1174,159,15],[169,1177,159,18,"b"],[169,1178,159,19],[169,1179,159,20],[169,1180,159,21],[169,1181,159,22],[169,1182,159,23],[169,1183,159,24],[169,1184,159,25],[169,1187,160,8,"a"],[169,1188,160,9],[169,1189,160,10],[169,1190,160,11],[169,1191,160,12],[169,1192,160,13],[169,1193,160,14],[169,1194,160,15],[169,1197,160,18,"b"],[169,1198,160,19],[169,1199,160,20],[169,1200,160,21],[169,1201,160,22],[169,1202,160,23],[169,1203,160,24],[169,1204,160,25],[169,1206,162,6,"a"],[169,1207,162,7],[169,1208,162,8],[169,1209,162,9],[169,1210,162,10],[169,1211,162,11],[169,1212,162,12],[169,1213,162,13],[169,1216,162,16,"b"],[169,1217,162,17],[169,1218,162,18],[169,1219,162,19],[169,1220,162,20],[169,1221,162,21],[169,1222,162,22],[169,1223,162,23],[169,1226,163,8,"a"],[169,1227,163,9],[169,1228,163,10],[169,1229,163,11],[169,1230,163,12],[169,1231,163,13],[169,1232,163,14],[169,1233,163,15],[169,1236,163,18,"b"],[169,1237,163,19],[169,1238,163,20],[169,1239,163,21],[169,1240,163,22],[169,1241,163,23],[169,1242,163,24],[169,1243,163,25],[169,1246,164,8,"a"],[169,1247,164,9],[169,1248,164,10],[169,1249,164,11],[169,1250,164,12],[169,1251,164,13],[169,1252,164,14],[169,1253,164,15],[169,1256,164,18,"b"],[169,1257,164,19],[169,1258,164,20],[169,1259,164,21],[169,1260,164,22],[169,1261,164,23],[169,1262,164,24],[169,1263,164,25],[169,1266,165,8,"a"],[169,1267,165,9],[169,1268,165,10],[169,1269,165,11],[169,1270,165,12],[169,1271,165,13],[169,1272,165,14],[169,1273,165,15],[169,1276,165,18,"b"],[169,1277,165,19],[169,1278,165,20],[169,1279,165,21],[169,1280,165,22],[169,1281,165,23],[169,1282,165,24],[169,1283,165,25],[169,1284,166,5],[169,1285,167,3],[170,4,168,0],[170,5,168,1],[171,4,168,1,"multiplyMatrices"],[171,20,168,1],[171,21,168,1,"__closure"],[171,30,168,1],[172,4,168,1,"multiplyMatrices"],[172,20,168,1],[172,21,168,1,"__workletHash"],[172,34,168,1],[173,4,168,1,"multiplyMatrices"],[173,20,168,1],[173,21,168,1,"__initData"],[173,31,168,1],[173,34,168,1,"_worklet_15992296871009_init_data"],[173,67,168,1],[174,4,168,1],[174,11,168,1,"multiplyMatrices"],[174,27,168,1],[175,2,168,1],[175,3,77,7],[176,4,77,7,"_worklet_15992296871009_init_data"],[177,2,77,7],[178,2,77,7],[178,6,77,7,"_worklet_6627182100671_init_data"],[178,38,77,7],[179,4,77,7,"code"],[179,8,77,7],[180,2,77,7],[181,2,77,7],[181,6,77,7,"subtractMatrices"],[181,22,77,7],[181,25,170,7],[181,34,170,7,"subtractMatrices_reactNativeReanimated_matrixUtilsTsx7Factory"],[181,96,170,7,"_ref7"],[181,101,170,7],[182,4,170,7],[182,8,170,7,"_worklet_6627182100671_init_data"],[182,40,170,7],[182,43,170,7,"_ref7"],[182,48,170,7],[182,49,170,7,"_worklet_6627182100671_init_data"],[182,81,170,7],[183,6,175,24,"isAffineMatrixFlat"],[183,24,175,42],[183,27,175,42,"_ref7"],[183,32,175,42],[183,33,175,24,"isAffineMatrixFlat"],[183,51,175,42],[184,6,176,30,"maybeFlattenMatrix"],[184,24,176,48],[184,27,176,48,"_ref7"],[184,32,176,48],[184,33,176,30,"maybeFlattenMatrix"],[184,51,176,48],[185,6,180,37,"unflatten"],[185,15,180,46],[185,18,180,46,"_ref7"],[185,23,180,46],[185,24,180,37,"unflatten"],[185,33,180,46],[186,4,180,46],[186,8,180,46,"subtractMatrices"],[186,24,180,46],[186,36,180,46,"subtractMatrices"],[186,37,171,2,"maybeFlatA"],[186,47,171,15],[186,49,172,2,"maybeFlatB"],[186,59,172,15],[186,61,173,5],[187,6,175,2],[187,10,175,8,"isFlatOnStart"],[187,23,175,21],[187,26,175,24,"isAffineMatrixFlat"],[187,44,175,42],[187,45,175,43,"maybeFlatA"],[187,55,175,53],[187,56,175,54],[188,6,176,2],[188,10,176,8,"a"],[188,11,176,27],[188,14,176,30,"maybeFlattenMatrix"],[188,32,176,48],[188,33,176,49,"maybeFlatA"],[188,43,176,59],[188,44,176,60],[189,6,177,2],[189,10,177,8,"b"],[189,11,177,27],[189,14,177,30,"maybeFlattenMatrix"],[189,32,177,48],[189,33,177,49,"maybeFlatB"],[189,43,177,59],[189,44,177,60],[190,6,179,2],[190,10,179,8,"c"],[190,11,179,9],[190,14,179,12,"a"],[190,15,179,13],[190,16,179,14,"map"],[190,19,179,17],[190,20,179,18],[190,21,179,19,"_"],[190,22,179,20],[190,24,179,22,"i"],[190,25,179,23],[190,30,179,28,"a"],[190,31,179,29],[190,32,179,30,"i"],[190,33,179,31],[190,34,179,32],[190,37,179,35,"b"],[190,38,179,36],[190,39,179,37,"i"],[190,40,179,38],[190,41,179,39],[190,42,179,60],[191,6,180,2],[191,13,180,9,"isFlatOnStart"],[191,26,180,22],[191,29,180,26,"c"],[191,30,180,27],[191,33,180,37,"unflatten"],[191,42,180,46],[191,43,180,47,"c"],[191,44,180,48],[191,45,180,55],[192,4,181,0],[192,5,181,1],[193,4,181,1,"subtractMatrices"],[193,20,181,1],[193,21,181,1,"__closure"],[193,30,181,1],[194,6,175,24,"isAffineMatrixFlat"],[194,24,175,42],[195,6,176,30,"maybeFlattenMatrix"],[195,24,176,48],[196,6,180,37,"unflatten"],[197,4,180,46],[198,4,180,46,"subtractMatrices"],[198,20,180,46],[198,21,180,46,"__workletHash"],[198,34,180,46],[199,4,180,46,"subtractMatrices"],[199,20,180,46],[199,21,180,46,"__initData"],[199,31,180,46],[199,34,180,46,"_worklet_6627182100671_init_data"],[199,66,180,46],[200,4,180,46],[200,11,180,46,"subtractMatrices"],[200,27,180,46],[201,2,180,46],[201,3,170,7],[202,4,170,7,"_worklet_6627182100671_init_data"],[202,36,170,7],[203,4,175,24,"isAffineMatrixFlat"],[203,22,175,42],[204,4,176,30,"maybeFlattenMatrix"],[204,22,176,48],[205,4,180,37,"unflatten"],[206,2,180,46],[207,2,180,46],[207,6,180,46,"_worklet_14155680970531_init_data"],[207,39,180,46],[208,4,180,46,"code"],[208,8,180,46],[209,2,180,46],[210,2,180,46],[210,6,180,46,"addMatrices"],[210,17,180,46],[210,20,183,7],[210,29,183,7,"addMatrices_reactNativeReanimated_matrixUtilsTsx8Factory"],[210,86,183,7,"_ref8"],[210,91,183,7],[211,4,183,7],[211,8,183,7,"_worklet_14155680970531_init_data"],[211,41,183,7],[211,44,183,7,"_ref8"],[211,49,183,7],[211,50,183,7,"_worklet_14155680970531_init_data"],[211,83,183,7],[212,6,188,24,"isAffineMatrixFlat"],[212,24,188,42],[212,27,188,42,"_ref8"],[212,32,188,42],[212,33,188,24,"isAffineMatrixFlat"],[212,51,188,42],[213,6,189,12,"maybeFlattenMatrix"],[213,24,189,30],[213,27,189,30,"_ref8"],[213,32,189,30],[213,33,189,12,"maybeFlattenMatrix"],[213,51,189,30],[214,6,193,37,"unflatten"],[214,15,193,46],[214,18,193,46,"_ref8"],[214,23,193,46],[214,24,193,37,"unflatten"],[214,33,193,46],[215,4,193,46],[215,8,193,46,"addMatrices"],[215,19,193,46],[215,31,193,46,"addMatrices"],[215,32,184,2,"maybeFlatA"],[215,42,184,15],[215,44,185,2,"maybeFlatB"],[215,54,185,15],[215,56,186,5],[216,6,188,2],[216,10,188,8,"isFlatOnStart"],[216,23,188,21],[216,26,188,24,"isAffineMatrixFlat"],[216,44,188,42],[216,45,188,43,"maybeFlatA"],[216,55,188,53],[216,56,188,54],[217,6,189,2],[217,10,189,8,"a"],[217,11,189,9],[217,14,189,12,"maybeFlattenMatrix"],[217,32,189,30],[217,33,189,31,"maybeFlatA"],[217,43,189,41],[217,44,189,42],[218,6,190,2],[218,10,190,8,"b"],[218,11,190,9],[218,14,190,12,"maybeFlattenMatrix"],[218,32,190,30],[218,33,190,31,"maybeFlatB"],[218,43,190,41],[218,44,190,42],[219,6,192,2],[219,10,192,8,"c"],[219,11,192,9],[219,14,192,12,"a"],[219,15,192,13],[219,16,192,14,"map"],[219,19,192,17],[219,20,192,18],[219,21,192,19,"_"],[219,22,192,20],[219,24,192,22,"i"],[219,25,192,23],[219,30,192,28,"a"],[219,31,192,29],[219,32,192,30,"i"],[219,33,192,31],[219,34,192,32],[219,37,192,35,"b"],[219,38,192,36],[219,39,192,37,"i"],[219,40,192,38],[219,41,192,39],[219,42,192,60],[220,6,193,2],[220,13,193,9,"isFlatOnStart"],[220,26,193,22],[220,29,193,26,"c"],[220,30,193,27],[220,33,193,37,"unflatten"],[220,42,193,46],[220,43,193,47,"c"],[220,44,193,48],[220,45,193,55],[221,4,194,0],[221,5,194,1],[222,4,194,1,"addMatrices"],[222,15,194,1],[222,16,194,1,"__closure"],[222,25,194,1],[223,6,188,24,"isAffineMatrixFlat"],[223,24,188,42],[224,6,189,12,"maybeFlattenMatrix"],[224,24,189,30],[225,6,193,37,"unflatten"],[226,4,193,46],[227,4,193,46,"addMatrices"],[227,15,193,46],[227,16,193,46,"__workletHash"],[227,29,193,46],[228,4,193,46,"addMatrices"],[228,15,193,46],[228,16,193,46,"__initData"],[228,26,193,46],[228,29,193,46,"_worklet_14155680970531_init_data"],[228,62,193,46],[229,4,193,46],[229,11,193,46,"addMatrices"],[229,22,193,46],[230,2,193,46],[230,3,183,7],[231,4,183,7,"_worklet_14155680970531_init_data"],[231,37,183,7],[232,4,188,24,"isAffineMatrixFlat"],[232,22,188,42],[233,4,189,12,"maybeFlattenMatrix"],[233,22,189,30],[234,4,193,37,"unflatten"],[235,2,193,46],[236,2,193,46],[236,6,193,46,"_worklet_2686901073094_init_data"],[236,38,193,46],[237,4,193,46,"code"],[237,8,193,46],[238,2,193,46],[239,2,193,46],[239,6,193,46,"scaleMatrix"],[239,17,193,46],[239,20,196,7],[239,29,196,7,"scaleMatrix_reactNativeReanimated_matrixUtilsTsx9Factory"],[239,86,196,7,"_ref9"],[239,91,196,7],[240,4,196,7],[240,8,196,7,"_worklet_2686901073094_init_data"],[240,40,196,7],[240,43,196,7,"_ref9"],[240,48,196,7],[240,49,196,7,"_worklet_2686901073094_init_data"],[240,81,196,7],[241,6,201,24,"isAffineMatrixFlat"],[241,24,201,42],[241,27,201,42,"_ref9"],[241,32,201,42],[241,33,201,24,"isAffineMatrixFlat"],[241,51,201,42],[242,6,202,12,"maybeFlattenMatrix"],[242,24,202,30],[242,27,202,30,"_ref9"],[242,32,202,30],[242,33,202,12,"maybeFlattenMatrix"],[242,51,202,30],[243,6,205,37,"unflatten"],[243,15,205,46],[243,18,205,46,"_ref9"],[243,23,205,46],[243,24,205,37,"unflatten"],[243,33,205,46],[244,4,205,46],[244,8,205,46,"scaleMatrix"],[244,19,205,46],[244,31,205,46,"scaleMatrix"],[244,32,197,2,"maybeFlatA"],[244,42,197,15],[244,44,198,2,"scalar"],[244,50,198,16],[244,52,199,5],[245,6,201,2],[245,10,201,8,"isFlatOnStart"],[245,23,201,21],[245,26,201,24,"isAffineMatrixFlat"],[245,44,201,42],[245,45,201,43,"maybeFlatA"],[245,55,201,53],[245,56,201,54],[246,6,202,2],[246,10,202,8,"a"],[246,11,202,9],[246,14,202,12,"maybeFlattenMatrix"],[246,32,202,30],[246,33,202,31,"maybeFlatA"],[246,43,202,41],[246,44,202,42],[247,6,204,2],[247,10,204,8,"b"],[247,11,204,9],[247,14,204,12,"a"],[247,15,204,13],[247,16,204,14,"map"],[247,19,204,17],[247,20,204,19,"x"],[247,21,204,20],[247,25,204,25,"x"],[247,26,204,26],[247,29,204,29,"scalar"],[247,35,204,35],[247,36,204,56],[248,6,205,2],[248,13,205,9,"isFlatOnStart"],[248,26,205,22],[248,29,205,26,"b"],[248,30,205,27],[248,33,205,37,"unflatten"],[248,42,205,46],[248,43,205,47,"b"],[248,44,205,48],[248,45,205,55],[249,4,206,0],[249,5,206,1],[250,4,206,1,"scaleMatrix"],[250,15,206,1],[250,16,206,1,"__closure"],[250,25,206,1],[251,6,201,24,"isAffineMatrixFlat"],[251,24,201,42],[252,6,202,12,"maybeFlattenMatrix"],[252,24,202,30],[253,6,205,37,"unflatten"],[254,4,205,46],[255,4,205,46,"scaleMatrix"],[255,15,205,46],[255,16,205,46,"__workletHash"],[255,29,205,46],[256,4,205,46,"scaleMatrix"],[256,15,205,46],[256,16,205,46,"__initData"],[256,26,205,46],[256,29,205,46,"_worklet_2686901073094_init_data"],[256,61,205,46],[257,4,205,46],[257,11,205,46,"scaleMatrix"],[257,22,205,46],[258,2,205,46],[258,3,196,7],[259,4,196,7,"_worklet_2686901073094_init_data"],[259,36,196,7],[260,4,201,24,"isAffineMatrixFlat"],[260,22,201,42],[261,4,202,12,"maybeFlattenMatrix"],[261,22,202,30],[262,4,205,37,"unflatten"],[263,2,205,46],[264,2,205,46],[264,6,205,46,"_worklet_17338567520276_init_data"],[264,39,205,46],[265,4,205,46,"code"],[265,8,205,46],[266,2,205,46],[267,2,205,46],[267,6,205,46,"getRotationMatrix"],[267,23,205,46],[267,26,208,7],[267,35,208,7,"getRotationMatrix_reactNativeReanimated_matrixUtilsTsx10Factory"],[267,99,208,7,"_ref0"],[267,104,208,7],[268,4,208,7],[268,8,208,7,"_worklet_17338567520276_init_data"],[268,41,208,7],[268,44,208,7,"_ref0"],[268,49,208,7],[268,50,208,7,"_worklet_17338567520276_init_data"],[268,83,208,7],[269,4,208,7],[269,8,208,7,"getRotationMatrix"],[269,25,208,7],[269,37,208,7,"getRotationMatrix"],[269,38,209,2,"angle"],[269,43,209,15],[269,45,211,16],[270,6,211,16],[270,10,210,2,"axis"],[270,14,210,12],[270,17,210,12,"arguments"],[270,26,210,12],[270,27,210,12,"length"],[270,33,210,12],[270,41,210,12,"arguments"],[270,50,210,12],[270,58,210,12,"undefined"],[270,67,210,12],[270,70,210,12,"arguments"],[270,79,210,12],[270,85,210,15],[270,88,210,18],[271,6,213,2],[271,10,213,8,"cos"],[271,13,213,11],[271,16,213,14,"Math"],[271,20,213,18],[271,21,213,19,"cos"],[271,24,213,22],[271,25,213,23,"angle"],[271,30,213,28],[271,31,213,29],[272,6,214,2],[272,10,214,8,"sin"],[272,13,214,11],[272,16,214,14,"Math"],[272,20,214,18],[272,21,214,19,"sin"],[272,24,214,22],[272,25,214,23,"angle"],[272,30,214,28],[272,31,214,29],[273,6,215,2],[273,14,215,10,"axis"],[273,18,215,14],[274,8,216,4],[274,13,216,9],[274,16,216,12],[275,10,217,6],[275,17,217,13],[275,18,218,8],[275,19,218,9,"cos"],[275,22,218,12],[275,24,218,14,"sin"],[275,27,218,17],[275,29,218,19],[275,30,218,20],[275,32,218,22],[275,33,218,23],[275,34,218,24],[275,36,219,8],[275,37,219,9],[275,38,219,10,"sin"],[275,41,219,13],[275,43,219,15,"cos"],[275,46,219,18],[275,48,219,20],[275,49,219,21],[275,51,219,23],[275,52,219,24],[275,53,219,25],[275,55,220,8],[275,56,220,9],[275,57,220,10],[275,59,220,12],[275,60,220,13],[275,62,220,15],[275,63,220,16],[275,65,220,18],[275,66,220,19],[275,67,220,20],[275,69,221,8],[275,70,221,9],[275,71,221,10],[275,73,221,12],[275,74,221,13],[275,76,221,15],[275,77,221,16],[275,79,221,18],[275,80,221,19],[275,81,221,20],[275,82,222,7],[276,8,223,4],[276,13,223,9],[276,16,223,12],[277,10,224,6],[277,17,224,13],[277,18,225,8],[277,19,225,9,"cos"],[277,22,225,12],[277,24,225,14],[277,25,225,15],[277,27,225,17],[277,28,225,18,"sin"],[277,31,225,21],[277,33,225,23],[277,34,225,24],[277,35,225,25],[277,37,226,8],[277,38,226,9],[277,39,226,10],[277,41,226,12],[277,42,226,13],[277,44,226,15],[277,45,226,16],[277,47,226,18],[277,48,226,19],[277,49,226,20],[277,51,227,8],[277,52,227,9,"sin"],[277,55,227,12],[277,57,227,14],[277,58,227,15],[277,60,227,17,"cos"],[277,63,227,20],[277,65,227,22],[277,66,227,23],[277,67,227,24],[277,69,228,8],[277,70,228,9],[277,71,228,10],[277,73,228,12],[277,74,228,13],[277,76,228,15],[277,77,228,16],[277,79,228,18],[277,80,228,19],[277,81,228,20],[277,82,229,7],[278,8,230,4],[278,13,230,9],[278,16,230,12],[279,10,231,6],[279,17,231,13],[279,18,232,8],[279,19,232,9],[279,20,232,10],[279,22,232,12],[279,23,232,13],[279,25,232,15],[279,26,232,16],[279,28,232,18],[279,29,232,19],[279,30,232,20],[279,32,233,8],[279,33,233,9],[279,34,233,10],[279,36,233,12,"cos"],[279,39,233,15],[279,41,233,17,"sin"],[279,44,233,20],[279,46,233,22],[279,47,233,23],[279,48,233,24],[279,50,234,8],[279,51,234,9],[279,52,234,10],[279,54,234,12],[279,55,234,13,"sin"],[279,58,234,16],[279,60,234,18,"cos"],[279,63,234,21],[279,65,234,23],[279,66,234,24],[279,67,234,25],[279,69,235,8],[279,70,235,9],[279,71,235,10],[279,73,235,12],[279,74,235,13],[279,76,235,15],[279,77,235,16],[279,79,235,18],[279,80,235,19],[279,81,235,20],[279,82,236,7],[280,6,237,2],[281,4,238,0],[281,5,238,1],[282,4,238,1,"getRotationMatrix"],[282,21,238,1],[282,22,238,1,"__closure"],[282,31,238,1],[283,4,238,1,"getRotationMatrix"],[283,21,238,1],[283,22,238,1,"__workletHash"],[283,35,238,1],[284,4,238,1,"getRotationMatrix"],[284,21,238,1],[284,22,238,1,"__initData"],[284,32,238,1],[284,35,238,1,"_worklet_17338567520276_init_data"],[284,68,238,1],[285,4,238,1],[285,11,238,1,"getRotationMatrix"],[285,28,238,1],[286,2,238,1],[286,3,208,7],[287,4,208,7,"_worklet_17338567520276_init_data"],[288,2,208,7],[289,2,208,7],[289,6,208,7,"_worklet_1030244477291_init_data"],[289,38,208,7],[290,4,208,7,"code"],[290,8,208,7],[291,2,208,7],[292,2,208,7],[292,6,208,7,"norm3d"],[292,12,208,7],[292,15,240,0],[292,24,240,0,"norm3d_reactNativeReanimated_matrixUtilsTsx11Factory"],[292,77,240,0,"_ref1"],[292,82,240,0],[293,4,240,0],[293,8,240,0,"_worklet_1030244477291_init_data"],[293,40,240,0],[293,43,240,0,"_ref1"],[293,48,240,0],[293,49,240,0,"_worklet_1030244477291_init_data"],[293,81,240,0],[294,4,240,0],[294,8,240,0,"norm3d"],[294,14,240,0],[294,26,240,0,"norm3d"],[294,27,240,16,"x"],[294,28,240,25],[294,30,240,27,"y"],[294,31,240,36],[294,33,240,38,"z"],[294,34,240,47],[294,36,240,49],[295,6,242,2],[295,13,242,9,"Math"],[295,17,242,13],[295,18,242,14,"sqrt"],[295,22,242,18],[295,23,242,19,"x"],[295,24,242,20],[295,27,242,23,"x"],[295,28,242,24],[295,31,242,27,"y"],[295,32,242,28],[295,35,242,31,"y"],[295,36,242,32],[295,39,242,35,"z"],[295,40,242,36],[295,43,242,39,"z"],[295,44,242,40],[295,45,242,41],[296,4,243,0],[296,5,243,1],[297,4,243,1,"norm3d"],[297,10,243,1],[297,11,243,1,"__closure"],[297,20,243,1],[298,4,243,1,"norm3d"],[298,10,243,1],[298,11,243,1,"__workletHash"],[298,24,243,1],[299,4,243,1,"norm3d"],[299,10,243,1],[299,11,243,1,"__initData"],[299,21,243,1],[299,24,243,1,"_worklet_1030244477291_init_data"],[299,56,243,1],[300,4,243,1],[300,11,243,1,"norm3d"],[300,17,243,1],[301,2,243,1],[301,3,240,0],[302,4,240,0,"_worklet_1030244477291_init_data"],[303,2,240,0],[304,2,240,0],[304,6,240,0,"_worklet_7878923469978_init_data"],[304,38,240,0],[305,4,240,0,"code"],[305,8,240,0],[306,2,240,0],[307,2,240,0],[307,6,240,0,"transposeMatrix"],[307,21,240,0],[307,24,245,0],[307,33,245,0,"transposeMatrix_reactNativeReanimated_matrixUtilsTsx12Factory"],[307,95,245,0,"_ref10"],[307,101,245,0],[308,4,245,0],[308,8,245,0,"_worklet_7878923469978_init_data"],[308,40,245,0],[308,43,245,0,"_ref10"],[308,49,245,0],[308,50,245,0,"_worklet_7878923469978_init_data"],[308,82,245,0],[309,6,247,12,"flatten"],[309,13,247,19],[309,16,247,19,"_ref10"],[309,22,247,19],[309,23,247,12,"flatten"],[309,30,247,19],[310,4,247,19],[310,8,247,19,"transposeMatrix"],[310,23,247,19],[310,35,247,19,"transposeMatrix"],[310,36,245,25,"matrix"],[310,42,245,45],[310,44,245,61],[311,6,247,2],[311,10,247,8,"m"],[311,11,247,9],[311,14,247,12,"flatten"],[311,21,247,19],[311,22,247,20,"matrix"],[311,28,247,26],[311,29,247,27],[312,6,248,2],[312,13,248,9],[312,14,249,4],[312,15,249,5,"m"],[312,16,249,6],[312,17,249,7],[312,18,249,8],[312,19,249,9],[312,21,249,11,"m"],[312,22,249,12],[312,23,249,13],[312,24,249,14],[312,25,249,15],[312,27,249,17,"m"],[312,28,249,18],[312,29,249,19],[312,30,249,20],[312,31,249,21],[312,33,249,23,"m"],[312,34,249,24],[312,35,249,25],[312,37,249,27],[312,38,249,28],[312,39,249,29],[312,41,250,4],[312,42,250,5,"m"],[312,43,250,6],[312,44,250,7],[312,45,250,8],[312,46,250,9],[312,48,250,11,"m"],[312,49,250,12],[312,50,250,13],[312,51,250,14],[312,52,250,15],[312,54,250,17,"m"],[312,55,250,18],[312,56,250,19],[312,57,250,20],[312,58,250,21],[312,60,250,23,"m"],[312,61,250,24],[312,62,250,25],[312,64,250,27],[312,65,250,28],[312,66,250,29],[312,68,251,4],[312,69,251,5,"m"],[312,70,251,6],[312,71,251,7],[312,72,251,8],[312,73,251,9],[312,75,251,11,"m"],[312,76,251,12],[312,77,251,13],[312,78,251,14],[312,79,251,15],[312,81,251,17,"m"],[312,82,251,18],[312,83,251,19],[312,85,251,21],[312,86,251,22],[312,88,251,24,"m"],[312,89,251,25],[312,90,251,26],[312,92,251,28],[312,93,251,29],[312,94,251,30],[312,96,252,4],[312,97,252,5,"m"],[312,98,252,6],[312,99,252,7],[312,100,252,8],[312,101,252,9],[312,103,252,11,"m"],[312,104,252,12],[312,105,252,13],[312,106,252,14],[312,107,252,15],[312,109,252,17,"m"],[312,110,252,18],[312,111,252,19],[312,113,252,21],[312,114,252,22],[312,116,252,24,"m"],[312,117,252,25],[312,118,252,26],[312,120,252,28],[312,121,252,29],[312,122,252,30],[312,123,253,3],[313,4,254,0],[313,5,254,1],[314,4,254,1,"transposeMatrix"],[314,19,254,1],[314,20,254,1,"__closure"],[314,29,254,1],[315,6,247,12,"flatten"],[316,4,247,19],[317,4,247,19,"transposeMatrix"],[317,19,247,19],[317,20,247,19,"__workletHash"],[317,33,247,19],[318,4,247,19,"transposeMatrix"],[318,19,247,19],[318,20,247,19,"__initData"],[318,30,247,19],[318,33,247,19,"_worklet_7878923469978_init_data"],[318,65,247,19],[319,4,247,19],[319,11,247,19,"transposeMatrix"],[319,26,247,19],[320,2,247,19],[320,3,245,0],[321,4,245,0,"_worklet_7878923469978_init_data"],[321,36,245,0],[322,4,247,12,"flatten"],[323,2,247,19],[324,2,247,19],[324,6,247,19,"_worklet_3891131781244_init_data"],[324,38,247,19],[325,4,247,19,"code"],[325,8,247,19],[326,2,247,19],[327,2,247,19],[327,6,247,19,"assertVectorsHaveEqualLengths"],[327,35,247,19],[327,38,256,0],[327,47,256,0,"assertVectorsHaveEqualLengths_reactNativeReanimated_matrixUtilsTsx13Factory"],[327,123,256,0,"_ref11"],[327,129,256,0],[328,4,256,0],[328,8,256,0,"_worklet_3891131781244_init_data"],[328,40,256,0],[328,43,256,0,"_ref11"],[328,49,256,0],[328,50,256,0,"_worklet_3891131781244_init_data"],[328,82,256,0],[329,6,258,6,"__DEV__"],[329,13,258,13],[329,16,258,13,"_ref11"],[329,22,258,13],[329,23,258,6,"__DEV__"],[329,30,258,13],[330,4,258,13],[330,8,258,13,"assertVectorsHaveEqualLengths"],[330,37,258,13],[330,49,258,13,"assertVectorsHaveEqualLengths"],[330,50,256,39,"a"],[330,51,256,50],[330,53,256,52,"b"],[330,54,256,63],[330,56,256,65],[331,6,258,2],[331,10,258,6,"__DEV__"],[331,17,258,13],[331,21,258,17,"a"],[331,22,258,18],[331,23,258,19,"length"],[331,29,258,25],[331,34,258,30,"b"],[331,35,258,31],[331,36,258,32,"length"],[331,42,258,38],[331,44,258,40],[332,8,259,4],[332,14,259,10],[332,18,259,14,"ReanimatedError"],[332,25,259,29],[332,26,259,29,"ReanimatedError"],[332,41,259,29],[332,42,260,6],[332,123,260,87,"a"],[332,124,260,88],[332,125,260,89,"toString"],[332,133,260,97],[332,134,260,98],[332,135,260,99],[332,142,261,8,"a"],[332,143,261,9],[332,144,261,10,"length"],[332,150,261,16],[332,168,262,24,"b"],[332,169,262,25],[332,170,262,26,"toString"],[332,178,262,34],[332,179,262,35],[332,180,262,36],[332,187,262,43,"b"],[332,188,262,44],[332,189,262,45,"length"],[332,195,262,51],[332,198,263,4],[332,199,263,5],[333,6,264,2],[334,4,265,0],[334,5,265,1],[335,4,265,1,"assertVectorsHaveEqualLengths"],[335,33,265,1],[335,34,265,1,"__closure"],[335,43,265,1],[336,6,258,6,"__DEV__"],[337,4,258,13],[338,4,258,13,"assertVectorsHaveEqualLengths"],[338,33,258,13],[338,34,258,13,"__workletHash"],[338,47,258,13],[339,4,258,13,"assertVectorsHaveEqualLengths"],[339,33,258,13],[339,34,258,13,"__initData"],[339,44,258,13],[339,47,258,13,"_worklet_3891131781244_init_data"],[339,79,258,13],[340,4,258,13],[340,11,258,13,"assertVectorsHaveEqualLengths"],[340,40,258,13],[341,2,258,13],[341,3,256,0],[342,4,256,0,"_worklet_3891131781244_init_data"],[342,36,256,0],[343,4,258,6,"__DEV__"],[343,11,258,13],[344,2,258,13],[345,2,258,13],[345,6,258,13,"_worklet_2500695369804_init_data"],[345,38,258,13],[346,4,258,13,"code"],[346,8,258,13],[347,2,258,13],[348,2,258,13],[348,6,258,13,"innerProduct"],[348,18,258,13],[348,21,267,0],[348,30,267,0,"innerProduct_reactNativeReanimated_matrixUtilsTsx14Factory"],[348,89,267,0,"_ref12"],[348,95,267,0],[349,4,267,0],[349,8,267,0,"_worklet_2500695369804_init_data"],[349,40,267,0],[349,43,267,0,"_ref12"],[349,49,267,0],[349,50,267,0,"_worklet_2500695369804_init_data"],[349,82,267,0],[350,6,269,2,"assertVectorsHaveEqualLengths"],[350,35,269,31],[350,38,269,31,"_ref12"],[350,44,269,31],[350,45,269,2,"assertVectorsHaveEqualLengths"],[350,74,269,31],[351,4,269,31],[351,8,269,31,"innerProduct"],[351,20,269,31],[351,32,269,31,"innerProduct"],[351,33,267,22,"a"],[351,34,267,33],[351,36,267,35,"b"],[351,37,267,46],[351,39,267,48],[352,6,269,2,"assertVectorsHaveEqualLengths"],[352,35,269,31],[352,36,269,32,"a"],[352,37,269,33],[352,39,269,35,"b"],[352,40,269,36],[352,41,269,37],[353,6,270,2],[353,13,270,9,"a"],[353,14,270,10],[353,15,270,11,"reduce"],[353,21,270,17],[353,22,270,18],[353,23,270,19,"acc"],[353,26,270,22],[353,28,270,24,"_"],[353,29,270,25],[353,31,270,27,"i"],[353,32,270,28],[353,37,270,33,"acc"],[353,40,270,36],[353,43,270,39,"a"],[353,44,270,40],[353,45,270,41,"i"],[353,46,270,42],[353,47,270,43],[353,50,270,46,"b"],[353,51,270,47],[353,52,270,48,"i"],[353,53,270,49],[353,54,270,50],[353,56,270,52],[353,57,270,53],[353,58,270,54],[354,4,271,0],[354,5,271,1],[355,4,271,1,"innerProduct"],[355,16,271,1],[355,17,271,1,"__closure"],[355,26,271,1],[356,6,269,2,"assertVectorsHaveEqualLengths"],[357,4,269,31],[358,4,269,31,"innerProduct"],[358,16,269,31],[358,17,269,31,"__workletHash"],[358,30,269,31],[359,4,269,31,"innerProduct"],[359,16,269,31],[359,17,269,31,"__initData"],[359,27,269,31],[359,30,269,31,"_worklet_2500695369804_init_data"],[359,62,269,31],[360,4,269,31],[360,11,269,31,"innerProduct"],[360,23,269,31],[361,2,269,31],[361,3,267,0],[362,4,267,0,"_worklet_2500695369804_init_data"],[362,36,267,0],[363,4,269,2,"assertVectorsHaveEqualLengths"],[364,2,269,31],[365,2,269,31],[365,6,269,31,"_worklet_16002079233038_init_data"],[365,39,269,31],[366,4,269,31,"code"],[366,8,269,31],[367,2,269,31],[368,2,269,31],[368,6,269,31,"projection"],[368,16,269,31],[368,19,273,0],[368,28,273,0,"projection_reactNativeReanimated_matrixUtilsTsx15Factory"],[368,85,273,0,"_ref13"],[368,91,273,0],[369,4,273,0],[369,8,273,0,"_worklet_16002079233038_init_data"],[369,41,273,0],[369,44,273,0,"_ref13"],[369,50,273,0],[369,51,273,0,"_worklet_16002079233038_init_data"],[369,84,273,0],[370,6,275,2,"assertVectorsHaveEqualLengths"],[370,35,275,31],[370,38,275,31,"_ref13"],[370,44,275,31],[370,45,275,2,"assertVectorsHaveEqualLengths"],[370,74,275,31],[371,6,276,12,"innerProduct"],[371,18,276,24],[371,21,276,24,"_ref13"],[371,27,276,24],[371,28,276,12,"innerProduct"],[371,40,276,24],[372,4,276,24],[372,8,276,24,"projection"],[372,18,276,24],[372,30,276,24,"projection"],[372,31,273,20,"u"],[372,32,273,31],[372,34,273,33,"a"],[372,35,273,44],[372,37,273,46],[373,6,275,2,"assertVectorsHaveEqualLengths"],[373,35,275,31],[373,36,275,32,"u"],[373,37,275,33],[373,39,275,35,"a"],[373,40,275,36],[373,41,275,37],[374,6,276,2],[374,10,276,8,"s"],[374,11,276,9],[374,14,276,12,"innerProduct"],[374,26,276,24],[374,27,276,25,"u"],[374,28,276,26],[374,30,276,28,"a"],[374,31,276,29],[374,32,276,30],[374,35,276,33,"innerProduct"],[374,47,276,45],[374,48,276,46,"u"],[374,49,276,47],[374,51,276,49,"u"],[374,52,276,50],[374,53,276,51],[375,6,277,2],[375,13,277,9,"u"],[375,14,277,10],[375,15,277,11,"map"],[375,18,277,14],[375,19,277,16,"e"],[375,20,277,17],[375,24,277,22,"e"],[375,25,277,23],[375,28,277,26,"s"],[375,29,277,27],[375,30,277,28],[376,4,278,0],[376,5,278,1],[377,4,278,1,"projection"],[377,14,278,1],[377,15,278,1,"__closure"],[377,24,278,1],[378,6,275,2,"assertVectorsHaveEqualLengths"],[378,35,275,31],[379,6,276,12,"innerProduct"],[380,4,276,24],[381,4,276,24,"projection"],[381,14,276,24],[381,15,276,24,"__workletHash"],[381,28,276,24],[382,4,276,24,"projection"],[382,14,276,24],[382,15,276,24,"__initData"],[382,25,276,24],[382,28,276,24,"_worklet_16002079233038_init_data"],[382,61,276,24],[383,4,276,24],[383,11,276,24,"projection"],[383,21,276,24],[384,2,276,24],[384,3,273,0],[385,4,273,0,"_worklet_16002079233038_init_data"],[385,37,273,0],[386,4,275,2,"assertVectorsHaveEqualLengths"],[386,33,275,31],[387,4,276,12,"innerProduct"],[388,2,276,24],[389,2,276,24],[389,6,276,24,"_worklet_5264626187493_init_data"],[389,38,276,24],[390,4,276,24,"code"],[390,8,276,24],[391,2,276,24],[392,2,276,24],[392,6,276,24,"subtractVectors"],[392,21,276,24],[392,24,280,0],[392,33,280,0,"subtractVectors_reactNativeReanimated_matrixUtilsTsx16Factory"],[392,95,280,0,"_ref14"],[392,101,280,0],[393,4,280,0],[393,8,280,0,"_worklet_5264626187493_init_data"],[393,40,280,0],[393,43,280,0,"_ref14"],[393,49,280,0],[393,50,280,0,"_worklet_5264626187493_init_data"],[393,82,280,0],[394,6,282,2,"assertVectorsHaveEqualLengths"],[394,35,282,31],[394,38,282,31,"_ref14"],[394,44,282,31],[394,45,282,2,"assertVectorsHaveEqualLengths"],[394,74,282,31],[395,4,282,31],[395,8,282,31,"subtractVectors"],[395,23,282,31],[395,35,282,31,"subtractVectors"],[395,36,280,25,"a"],[395,37,280,36],[395,39,280,38,"b"],[395,40,280,49],[395,42,280,51],[396,6,282,2,"assertVectorsHaveEqualLengths"],[396,35,282,31],[396,36,282,32,"a"],[396,37,282,33],[396,39,282,35,"b"],[396,40,282,36],[396,41,282,37],[397,6,283,2],[397,13,283,9,"a"],[397,14,283,10],[397,15,283,11,"map"],[397,18,283,14],[397,19,283,15],[397,20,283,16,"_"],[397,21,283,17],[397,23,283,19,"i"],[397,24,283,20],[397,29,283,25,"a"],[397,30,283,26],[397,31,283,27,"i"],[397,32,283,28],[397,33,283,29],[397,36,283,32,"b"],[397,37,283,33],[397,38,283,34,"i"],[397,39,283,35],[397,40,283,36],[397,41,283,37],[398,4,284,0],[398,5,284,1],[399,4,284,1,"subtractVectors"],[399,19,284,1],[399,20,284,1,"__closure"],[399,29,284,1],[400,6,282,2,"assertVectorsHaveEqualLengths"],[401,4,282,31],[402,4,282,31,"subtractVectors"],[402,19,282,31],[402,20,282,31,"__workletHash"],[402,33,282,31],[403,4,282,31,"subtractVectors"],[403,19,282,31],[403,20,282,31,"__initData"],[403,30,282,31],[403,33,282,31,"_worklet_5264626187493_init_data"],[403,65,282,31],[404,4,282,31],[404,11,282,31,"subtractVectors"],[404,26,282,31],[405,2,282,31],[405,3,280,0],[406,4,280,0,"_worklet_5264626187493_init_data"],[406,36,280,0],[407,4,282,2,"assertVectorsHaveEqualLengths"],[408,2,282,31],[409,2,282,31],[409,6,282,31,"_worklet_2059959224558_init_data"],[409,38,282,31],[410,4,282,31,"code"],[410,8,282,31],[411,2,282,31],[412,2,282,31],[412,6,282,31,"scaleVector"],[412,17,282,31],[412,20,286,0],[412,29,286,0,"scaleVector_reactNativeReanimated_matrixUtilsTsx17Factory"],[412,87,286,0,"_ref15"],[412,93,286,0],[413,4,286,0],[413,8,286,0,"_worklet_2059959224558_init_data"],[413,40,286,0],[413,43,286,0,"_ref15"],[413,49,286,0],[413,50,286,0,"_worklet_2059959224558_init_data"],[413,82,286,0],[414,4,286,0],[414,8,286,0,"scaleVector"],[414,19,286,0],[414,31,286,0,"scaleVector"],[414,32,286,21,"u"],[414,33,286,32],[414,35,286,34,"a"],[414,36,286,43],[414,38,286,45],[415,6,288,2],[415,13,288,9,"u"],[415,14,288,10],[415,15,288,11,"map"],[415,18,288,14],[415,19,288,16,"e"],[415,20,288,17],[415,24,288,22,"e"],[415,25,288,23],[415,28,288,26,"a"],[415,29,288,27],[415,30,288,28],[416,4,289,0],[416,5,289,1],[417,4,289,1,"scaleVector"],[417,15,289,1],[417,16,289,1,"__closure"],[417,25,289,1],[418,4,289,1,"scaleVector"],[418,15,289,1],[418,16,289,1,"__workletHash"],[418,29,289,1],[419,4,289,1,"scaleVector"],[419,15,289,1],[419,16,289,1,"__initData"],[419,26,289,1],[419,29,289,1,"_worklet_2059959224558_init_data"],[419,61,289,1],[420,4,289,1],[420,11,289,1,"scaleVector"],[420,22,289,1],[421,2,289,1],[421,3,286,0],[422,4,286,0,"_worklet_2059959224558_init_data"],[423,2,286,0],[424,2,286,0],[424,6,286,0,"_worklet_827372645680_init_data"],[424,37,286,0],[425,4,286,0,"code"],[425,8,286,0],[426,2,286,0],[427,2,286,0],[427,6,286,0,"gramSchmidtAlgorithm"],[427,26,286,0],[427,29,291,0],[427,38,291,0,"gramSchmidtAlgorithm_reactNativeReanimated_matrixUtilsTsx18Factory"],[427,105,291,0,"_ref16"],[427,111,291,0],[428,4,291,0],[428,8,291,0,"_worklet_827372645680_init_data"],[428,39,291,0],[428,42,291,0,"_ref16"],[428,48,291,0],[428,49,291,0,"_worklet_827372645680_init_data"],[428,80,291,0],[429,6,302,13,"subtractVectors"],[429,21,302,28],[429,24,302,28,"_ref16"],[429,30,302,28],[429,31,302,13,"subtractVectors"],[429,46,302,28],[430,6,302,33,"projection"],[430,16,302,43],[430,19,302,43,"_ref16"],[430,25,302,43],[430,26,302,33,"projection"],[430,36,302,43],[431,6,316,4,"scaleVector"],[431,17,316,15],[431,20,316,15,"_ref16"],[431,26,316,15],[431,27,316,4,"scaleVector"],[431,38,316,15],[432,6,316,33,"innerProduct"],[432,18,316,45],[432,21,316,45,"_ref16"],[432,27,316,45],[432,28,316,33,"innerProduct"],[432,40,316,45],[433,6,338,20,"transposeMatrix"],[433,21,338,35],[433,24,338,35,"_ref16"],[433,30,338,35],[433,31,338,20,"transposeMatrix"],[433,46,338,35],[434,4,338,35],[434,8,338,35,"gramSchmidtAlgorithm"],[434,28,338,35],[434,40,338,35,"gramSchmidtAlgorithm"],[434,41,291,30,"matrix"],[434,47,291,50],[434,49,294,2],[435,6,299,2],[435,10,299,2,"_matrix"],[435,17,299,2],[435,24,299,2,"_slicedToArray"],[435,38,299,2],[435,39,299,2,"default"],[435,46,299,2],[435,48,299,27,"matrix"],[435,54,299,33],[436,8,299,9,"a0"],[436,10,299,11],[436,13,299,11,"_matrix"],[436,20,299,11],[437,8,299,13,"a1"],[437,10,299,15],[437,13,299,15,"_matrix"],[437,20,299,15],[438,8,299,17,"a2"],[438,10,299,19],[438,13,299,19,"_matrix"],[438,20,299,19],[439,8,299,21,"a3"],[439,10,299,23],[439,13,299,23,"_matrix"],[439,20,299,23],[440,6,301,2],[440,10,301,8,"u0"],[440,12,301,10],[440,15,301,13,"a0"],[440,17,301,15],[441,6,302,2],[441,10,302,8,"u1"],[441,12,302,10],[441,15,302,13,"subtractVectors"],[441,30,302,28],[441,31,302,29,"a1"],[441,33,302,31],[441,35,302,33,"projection"],[441,45,302,43],[441,46,302,44,"u0"],[441,48,302,46],[441,50,302,48,"a1"],[441,52,302,50],[441,53,302,51],[441,54,302,52],[442,6,303,2],[442,10,303,8,"u2"],[442,12,303,10],[442,15,303,13,"subtractVectors"],[442,30,303,28],[442,31,304,4,"subtractVectors"],[442,46,304,19],[442,47,304,20,"a2"],[442,49,304,22],[442,51,304,24,"projection"],[442,61,304,34],[442,62,304,35,"u0"],[442,64,304,37],[442,66,304,39,"a2"],[442,68,304,41],[442,69,304,42],[442,70,304,43],[442,72,305,4,"projection"],[442,82,305,14],[442,83,305,15,"u1"],[442,85,305,17],[442,87,305,19,"a2"],[442,89,305,21],[442,90,306,2],[442,91,306,3],[443,6,307,2],[443,10,307,8,"u3"],[443,12,307,10],[443,15,307,13,"subtractVectors"],[443,30,307,28],[443,31,308,4,"subtractVectors"],[443,46,308,19],[443,47,309,6,"subtractVectors"],[443,62,309,21],[443,63,309,22,"a3"],[443,65,309,24],[443,67,309,26,"projection"],[443,77,309,36],[443,78,309,37,"u0"],[443,80,309,39],[443,82,309,41,"a3"],[443,84,309,43],[443,85,309,44],[443,86,309,45],[443,88,310,6,"projection"],[443,98,310,16],[443,99,310,17,"u1"],[443,101,310,19],[443,103,310,21,"a3"],[443,105,310,23],[443,106,311,4],[443,107,311,5],[443,109,312,4,"projection"],[443,119,312,14],[443,120,312,15,"u2"],[443,122,312,17],[443,124,312,19,"a3"],[443,126,312,21],[443,127,313,2],[443,128,313,3],[444,6,315,2],[444,10,315,2,"_map"],[444,14,315,2],[444,17,315,27],[444,18,315,28,"u0"],[444,20,315,30],[444,22,315,32,"u1"],[444,24,315,34],[444,26,315,36,"u2"],[444,28,315,38],[444,30,315,40,"u3"],[444,32,315,42],[444,33,315,43],[444,34,315,44,"map"],[444,37,315,47],[444,38,315,49,"u"],[444,39,315,50],[444,43,316,4,"scaleVector"],[444,54,316,15],[444,55,316,16,"u"],[444,56,316,17],[444,58,316,19],[444,59,316,20],[444,62,316,23,"Math"],[444,66,316,27],[444,67,316,28,"sqrt"],[444,71,316,32],[444,72,316,33,"innerProduct"],[444,84,316,45],[444,85,316,46,"u"],[444,86,316,47],[444,88,316,49,"u"],[444,89,316,50],[444,90,316,51],[444,91,316,52],[444,92,317,2],[444,93,317,3],[445,8,317,3,"_map2"],[445,13,317,3],[445,20,317,3,"_slicedToArray"],[445,34,317,3],[445,35,317,3,"default"],[445,42,317,3],[445,44,317,3,"_map"],[445,48,317,3],[446,8,315,9,"e0"],[446,10,315,11],[446,13,315,11,"_map2"],[446,18,315,11],[447,8,315,13,"e1"],[447,10,315,15],[447,13,315,15,"_map2"],[447,18,315,15],[448,8,315,17,"e2"],[448,10,315,19],[448,13,315,19,"_map2"],[448,18,315,19],[449,8,315,21,"e3"],[449,10,315,23],[449,13,315,23,"_map2"],[449,18,315,23],[450,6,319,2],[450,10,319,8,"rotationMatrix"],[450,24,319,36],[450,27,319,39],[450,28,320,4],[450,29,320,5,"e0"],[450,31,320,7],[450,32,320,8],[450,33,320,9],[450,34,320,10],[450,36,320,12,"e1"],[450,38,320,14],[450,39,320,15],[450,40,320,16],[450,41,320,17],[450,43,320,19,"e2"],[450,45,320,21],[450,46,320,22],[450,47,320,23],[450,48,320,24],[450,50,320,26,"e3"],[450,52,320,28],[450,53,320,29],[450,54,320,30],[450,55,320,31],[450,56,320,32],[450,58,321,4],[450,59,321,5,"e0"],[450,61,321,7],[450,62,321,8],[450,63,321,9],[450,64,321,10],[450,66,321,12,"e1"],[450,68,321,14],[450,69,321,15],[450,70,321,16],[450,71,321,17],[450,73,321,19,"e2"],[450,75,321,21],[450,76,321,22],[450,77,321,23],[450,78,321,24],[450,80,321,26,"e3"],[450,82,321,28],[450,83,321,29],[450,84,321,30],[450,85,321,31],[450,86,321,32],[450,88,322,4],[450,89,322,5,"e0"],[450,91,322,7],[450,92,322,8],[450,93,322,9],[450,94,322,10],[450,96,322,12,"e1"],[450,98,322,14],[450,99,322,15],[450,100,322,16],[450,101,322,17],[450,103,322,19,"e2"],[450,105,322,21],[450,106,322,22],[450,107,322,23],[450,108,322,24],[450,110,322,26,"e3"],[450,112,322,28],[450,113,322,29],[450,114,322,30],[450,115,322,31],[450,116,322,32],[450,118,323,4],[450,119,323,5,"e0"],[450,121,323,7],[450,122,323,8],[450,123,323,9],[450,124,323,10],[450,126,323,12,"e1"],[450,128,323,14],[450,129,323,15],[450,130,323,16],[450,131,323,17],[450,133,323,19,"e2"],[450,135,323,21],[450,136,323,22],[450,137,323,23],[450,138,323,24],[450,140,323,26,"e3"],[450,142,323,28],[450,143,323,29],[450,144,323,30],[450,145,323,31],[450,146,323,32],[450,147,324,3],[451,6,326,2],[451,10,326,8,"skewMatrix"],[451,20,326,32],[451,23,326,35],[451,24,327,4],[451,25,328,6,"innerProduct"],[451,37,328,18],[451,38,328,19,"e0"],[451,40,328,21],[451,42,328,23,"a0"],[451,44,328,25],[451,45,328,26],[451,47,329,6,"innerProduct"],[451,59,329,18],[451,60,329,19,"e0"],[451,62,329,21],[451,64,329,23,"a1"],[451,66,329,25],[451,67,329,26],[451,69,330,6,"innerProduct"],[451,81,330,18],[451,82,330,19,"e0"],[451,84,330,21],[451,86,330,23,"a2"],[451,88,330,25],[451,89,330,26],[451,91,331,6,"innerProduct"],[451,103,331,18],[451,104,331,19,"e0"],[451,106,331,21],[451,108,331,23,"a3"],[451,110,331,25],[451,111,331,26],[451,112,332,5],[451,114,333,4],[451,115,333,5],[451,116,333,6],[451,118,333,8,"innerProduct"],[451,130,333,20],[451,131,333,21,"e1"],[451,133,333,23],[451,135,333,25,"a1"],[451,137,333,27],[451,138,333,28],[451,140,333,30,"innerProduct"],[451,152,333,42],[451,153,333,43,"e1"],[451,155,333,45],[451,157,333,47,"a2"],[451,159,333,49],[451,160,333,50],[451,162,333,52,"innerProduct"],[451,174,333,64],[451,175,333,65,"e1"],[451,177,333,67],[451,179,333,69,"a3"],[451,181,333,71],[451,182,333,72],[451,183,333,73],[451,185,334,4],[451,186,334,5],[451,187,334,6],[451,189,334,8],[451,190,334,9],[451,192,334,11,"innerProduct"],[451,204,334,23],[451,205,334,24,"e2"],[451,207,334,26],[451,209,334,28,"a2"],[451,211,334,30],[451,212,334,31],[451,214,334,33,"innerProduct"],[451,226,334,45],[451,227,334,46,"e2"],[451,229,334,48],[451,231,334,50,"a3"],[451,233,334,52],[451,234,334,53],[451,235,334,54],[451,237,335,4],[451,238,335,5],[451,239,335,6],[451,241,335,8],[451,242,335,9],[451,244,335,11],[451,245,335,12],[451,247,335,14,"innerProduct"],[451,259,335,26],[451,260,335,27,"e3"],[451,262,335,29],[451,264,335,31,"a3"],[451,266,335,33],[451,267,335,34],[451,268,335,35],[451,269,336,3],[452,6,337,2],[452,13,337,9],[453,8,338,4,"rotationMatrix"],[453,22,338,18],[453,24,338,20,"transposeMatrix"],[453,39,338,35],[453,40,338,36,"rotationMatrix"],[453,54,338,50],[453,55,338,51],[454,8,339,4,"skewMatrix"],[454,18,339,14],[454,20,339,16,"transposeMatrix"],[454,35,339,31],[454,36,339,32,"skewMatrix"],[454,46,339,42],[455,6,340,2],[455,7,340,3],[456,4,341,0],[456,5,341,1],[457,4,341,1,"gramSchmidtAlgorithm"],[457,24,341,1],[457,25,341,1,"__closure"],[457,34,341,1],[458,6,302,13,"subtractVectors"],[458,21,302,28],[459,6,302,33,"projection"],[459,16,302,43],[460,6,316,4,"scaleVector"],[460,17,316,15],[461,6,316,33,"innerProduct"],[461,18,316,45],[462,6,338,20,"transposeMatrix"],[463,4,338,35],[464,4,338,35,"gramSchmidtAlgorithm"],[464,24,338,35],[464,25,338,35,"__workletHash"],[464,38,338,35],[465,4,338,35,"gramSchmidtAlgorithm"],[465,24,338,35],[465,25,338,35,"__initData"],[465,35,338,35],[465,38,338,35,"_worklet_827372645680_init_data"],[465,69,338,35],[466,4,338,35],[466,11,338,35,"gramSchmidtAlgorithm"],[466,31,338,35],[467,2,338,35],[467,3,291,0],[468,4,291,0,"_worklet_827372645680_init_data"],[468,35,291,0],[469,4,302,13,"subtractVectors"],[469,19,302,28],[470,4,302,33,"projection"],[470,14,302,43],[471,4,316,4,"scaleVector"],[471,15,316,15],[472,4,316,33,"innerProduct"],[472,16,316,45],[473,4,338,20,"transposeMatrix"],[474,2,338,35],[475,2,338,35],[475,6,338,35,"_worklet_2076609522926_init_data"],[475,38,338,35],[476,4,338,35,"code"],[476,8,338,35],[477,2,338,35],[478,2,338,35],[478,6,338,35,"decomposeMatrix"],[478,21,338,35],[478,24,343,7],[478,33,343,7,"decomposeMatrix_reactNativeReanimated_matrixUtilsTsx19Factory"],[478,95,343,7,"_ref17"],[478,101,343,7],[479,4,343,7],[479,8,343,7,"_worklet_2076609522926_init_data"],[479,40,343,7],[479,43,343,7,"_ref17"],[479,49,343,7],[479,50,343,7,"_worklet_2076609522926_init_data"],[479,82,343,7],[480,6,347,17,"maybeFlattenMatrix"],[480,24,347,35],[480,27,347,35,"_ref17"],[480,33,347,35],[480,34,347,17,"maybeFlattenMatrix"],[480,52,347,35],[481,6,361,26,"norm3d"],[481,12,361,32],[481,15,361,32,"_ref17"],[481,21,361,32],[481,22,361,26,"norm3d"],[481,28,361,32],[482,6,380,41,"gramSchmidtAlgorithm"],[482,26,380,61],[482,29,380,61,"_ref17"],[482,35,380,61],[482,36,380,41,"gramSchmidtAlgorithm"],[482,56,380,61],[483,4,380,61],[483,8,380,61,"decomposeMatrix"],[483,23,380,61],[483,35,380,61,"decomposeMatrix"],[483,36,344,2,"unknownTypeMatrix"],[483,53,344,52],[483,55,345,32],[484,6,347,2],[484,10,347,8,"matrix"],[484,16,347,14],[484,19,347,17,"maybeFlattenMatrix"],[484,37,347,35],[484,38,347,36,"unknownTypeMatrix"],[484,55,347,53],[484,56,347,54],[486,6,349,2],[487,6,350,2],[487,10,350,6,"matrix"],[487,16,350,12],[487,17,350,13],[487,19,350,15],[487,20,350,16],[487,25,350,21],[487,26,350,22],[487,28,350,24],[488,8,351,4],[488,14,351,10],[488,18,351,14,"ReanimatedError"],[488,25,351,29],[488,26,351,29,"ReanimatedError"],[488,41,351,29],[488,42,351,30],[488,69,351,57],[488,70,351,58],[489,6,352,2],[490,6,353,2,"matrix"],[490,12,353,8],[490,13,353,9,"forEach"],[490,20,353,16],[490,21,353,17],[490,22,353,18,"_"],[490,23,353,19],[490,25,353,21,"i"],[490,26,353,22],[490,31,353,28,"matrix"],[490,37,353,34],[490,38,353,35,"i"],[490,39,353,36],[490,40,353,37],[490,44,353,41,"matrix"],[490,50,353,47],[490,51,353,48],[490,53,353,50],[490,54,353,52],[490,55,353,53],[491,6,355,2],[491,10,355,8,"translationMatrix"],[491,27,355,39],[491,30,355,42],[491,31,356,4],[491,32,356,5],[491,33,356,6],[491,35,356,8],[491,36,356,9],[491,38,356,11],[491,39,356,12],[491,41,356,14],[491,42,356,15],[491,43,356,16],[491,45,357,4],[491,46,357,5],[491,47,357,6],[491,49,357,8],[491,50,357,9],[491,52,357,11],[491,53,357,12],[491,55,357,14],[491,56,357,15],[491,57,357,16],[491,59,358,4],[491,60,358,5],[491,61,358,6],[491,63,358,8],[491,64,358,9],[491,66,358,11],[491,67,358,12],[491,69,358,14],[491,70,358,15],[491,71,358,16],[491,73,359,4],[491,74,359,5,"matrix"],[491,80,359,11],[491,81,359,12],[491,83,359,14],[491,84,359,15],[491,86,359,17,"matrix"],[491,92,359,23],[491,93,359,24],[491,95,359,26],[491,96,359,27],[491,98,359,29,"matrix"],[491,104,359,35],[491,105,359,36],[491,107,359,38],[491,108,359,39],[491,110,359,41],[491,111,359,42],[491,112,359,43],[491,113,360,3],[492,6,361,2],[492,10,361,8,"sx"],[492,12,361,10],[492,15,361,13,"matrix"],[492,21,361,19],[492,22,361,20],[492,24,361,22],[492,25,361,23],[492,28,361,26,"norm3d"],[492,34,361,32],[492,35,361,33,"matrix"],[492,41,361,39],[492,42,361,40],[492,43,361,41],[492,44,361,42],[492,46,361,44,"matrix"],[492,52,361,50],[492,53,361,51],[492,54,361,52],[492,55,361,53],[492,57,361,55,"matrix"],[492,63,361,61],[492,64,361,62],[492,65,361,63],[492,66,361,64],[492,67,361,65],[493,6,362,2],[493,10,362,8,"sy"],[493,12,362,10],[493,15,362,13,"matrix"],[493,21,362,19],[493,22,362,20],[493,24,362,22],[493,25,362,23],[493,28,362,26,"norm3d"],[493,34,362,32],[493,35,362,33,"matrix"],[493,41,362,39],[493,42,362,40],[493,43,362,41],[493,44,362,42],[493,46,362,44,"matrix"],[493,52,362,50],[493,53,362,51],[493,54,362,52],[493,55,362,53],[493,57,362,55,"matrix"],[493,63,362,61],[493,64,362,62],[493,65,362,63],[493,66,362,64],[493,67,362,65],[494,6,363,2],[494,10,363,8,"sz"],[494,12,363,10],[494,15,363,13,"matrix"],[494,21,363,19],[494,22,363,20],[494,24,363,22],[494,25,363,23],[494,28,363,26,"norm3d"],[494,34,363,32],[494,35,363,33,"matrix"],[494,41,363,39],[494,42,363,40],[494,43,363,41],[494,44,363,42],[494,46,363,44,"matrix"],[494,52,363,50],[494,53,363,51],[494,54,363,52],[494,55,363,53],[494,57,363,55,"matrix"],[494,63,363,61],[494,64,363,62],[494,66,363,64],[494,67,363,65],[494,68,363,66],[496,6,365,2],[497,6,366,2],[497,10,366,8,"scaleMatrix"],[497,21,366,33],[497,24,366,36],[497,25,367,4],[497,26,367,5,"sx"],[497,28,367,7],[497,30,367,9],[497,31,367,10],[497,33,367,12],[497,34,367,13],[497,36,367,15],[497,37,367,16],[497,38,367,17],[497,40,368,4],[497,41,368,5],[497,42,368,6],[497,44,368,8,"sy"],[497,46,368,10],[497,48,368,12],[497,49,368,13],[497,51,368,15],[497,52,368,16],[497,53,368,17],[497,55,369,4],[497,56,369,5],[497,57,369,6],[497,59,369,8],[497,60,369,9],[497,62,369,11,"sz"],[497,64,369,13],[497,66,369,15],[497,67,369,16],[497,68,369,17],[497,70,370,4],[497,71,370,5],[497,72,370,6],[497,74,370,8],[497,75,370,9],[497,77,370,11],[497,78,370,12],[497,80,370,14],[497,81,370,15],[497,82,370,16],[497,83,371,3],[498,6,373,2],[498,10,373,8,"rotationAndSkewMatrix"],[498,31,373,43],[498,34,373,46],[498,35,374,4],[498,36,374,5,"matrix"],[498,42,374,11],[498,43,374,12],[498,44,374,13],[498,45,374,14],[498,48,374,17,"sx"],[498,50,374,19],[498,52,374,21,"matrix"],[498,58,374,27],[498,59,374,28],[498,60,374,29],[498,61,374,30],[498,64,374,33,"sx"],[498,66,374,35],[498,68,374,37,"matrix"],[498,74,374,43],[498,75,374,44],[498,76,374,45],[498,77,374,46],[498,80,374,49,"sx"],[498,82,374,51],[498,84,374,53],[498,85,374,54],[498,86,374,55],[498,88,375,4],[498,89,375,5,"matrix"],[498,95,375,11],[498,96,375,12],[498,97,375,13],[498,98,375,14],[498,101,375,17,"sy"],[498,103,375,19],[498,105,375,21,"matrix"],[498,111,375,27],[498,112,375,28],[498,113,375,29],[498,114,375,30],[498,117,375,33,"sy"],[498,119,375,35],[498,121,375,37,"matrix"],[498,127,375,43],[498,128,375,44],[498,129,375,45],[498,130,375,46],[498,133,375,49,"sy"],[498,135,375,51],[498,137,375,53],[498,138,375,54],[498,139,375,55],[498,141,376,4],[498,142,376,5,"matrix"],[498,148,376,11],[498,149,376,12],[498,150,376,13],[498,151,376,14],[498,154,376,17,"sz"],[498,156,376,19],[498,158,376,21,"matrix"],[498,164,376,27],[498,165,376,28],[498,166,376,29],[498,167,376,30],[498,170,376,33,"sz"],[498,172,376,35],[498,174,376,37,"matrix"],[498,180,376,43],[498,181,376,44],[498,183,376,46],[498,184,376,47],[498,187,376,50,"sz"],[498,189,376,52],[498,191,376,54],[498,192,376,55],[498,193,376,56],[498,195,377,4],[498,196,377,5],[498,197,377,6],[498,199,377,8],[498,200,377,9],[498,202,377,11],[498,203,377,12],[498,205,377,14],[498,206,377,15],[498,207,377,16],[498,208,378,3],[499,6,380,2],[499,10,380,2,"_gramSchmidtAlgorithm"],[499,31,380,2],[499,34,380,41,"gramSchmidtAlgorithm"],[499,54,380,61],[499,55,381,4,"rotationAndSkewMatrix"],[499,76,382,2],[499,77,382,3],[500,8,380,10,"rotationMatrix"],[500,22,380,24],[500,25,380,24,"_gramSchmidtAlgorithm"],[500,46,380,24],[500,47,380,10,"rotationMatrix"],[500,61,380,24],[501,8,380,26,"skewMatrix"],[501,18,380,36],[501,21,380,36,"_gramSchmidtAlgorithm"],[501,42,380,36],[501,43,380,26,"skewMatrix"],[501,53,380,36],[502,6,384,2],[502,13,384,9],[503,8,385,4,"translationMatrix"],[503,25,385,21],[504,8,386,4,"scaleMatrix"],[504,19,386,15],[505,8,387,4,"rotationMatrix"],[505,22,387,18],[506,8,388,4,"skewMatrix"],[507,6,389,2],[507,7,389,3],[508,4,390,0],[508,5,390,1],[509,4,390,1,"decomposeMatrix"],[509,19,390,1],[509,20,390,1,"__closure"],[509,29,390,1],[510,6,347,17,"maybeFlattenMatrix"],[510,24,347,35],[511,6,361,26,"norm3d"],[511,12,361,32],[512,6,380,41,"gramSchmidtAlgorithm"],[513,4,380,61],[514,4,380,61,"decomposeMatrix"],[514,19,380,61],[514,20,380,61,"__workletHash"],[514,33,380,61],[515,4,380,61,"decomposeMatrix"],[515,19,380,61],[515,20,380,61,"__initData"],[515,30,380,61],[515,33,380,61,"_worklet_2076609522926_init_data"],[515,65,380,61],[516,4,380,61],[516,11,380,61,"decomposeMatrix"],[516,26,380,61],[517,2,380,61],[517,3,343,7],[518,4,343,7,"_worklet_2076609522926_init_data"],[518,36,343,7],[519,4,347,17,"maybeFlattenMatrix"],[519,22,347,35],[520,4,361,26,"norm3d"],[520,10,361,32],[521,4,380,41,"gramSchmidtAlgorithm"],[522,2,380,61],[523,2,380,61],[523,6,380,61,"_worklet_14654446791686_init_data"],[523,39,380,61],[524,4,380,61,"code"],[524,8,380,61],[525,2,380,61],[526,2,380,61],[526,6,380,61,"decomposeMatrixIntoMatricesAndAngles"],[526,42,380,61],[526,45,392,7],[526,54,392,7,"decomposeMatrixIntoMatricesAndAngles_reactNativeReanimated_matrixUtilsTsx20Factory"],[526,137,392,7,"_ref18"],[526,143,392,7],[527,4,392,7],[527,8,392,7,"_worklet_14654446791686_init_data"],[527,41,392,7],[527,44,392,7,"_ref18"],[527,50,392,7],[527,51,392,7,"_worklet_14654446791686_init_data"],[527,84,392,7],[528,6,398,4,"decomposeMatrix"],[528,21,398,19],[528,24,398,19,"_ref18"],[528,30,398,19],[528,31,398,4,"decomposeMatrix"],[528,46,398,19],[529,4,398,19],[529,8,398,19,"decomposeMatrixIntoMatricesAndAngles"],[529,44,398,19],[529,56,398,19,"decomposeMatrixIntoMatricesAndAngles"],[529,57,393,2,"matrix"],[529,63,393,41],[529,65,394,41],[530,6,396,2],[531,6,397,2],[531,10,397,2,"_decomposeMatrix"],[531,26,397,2],[531,29,398,4,"decomposeMatrix"],[531,44,398,19],[531,45,398,20,"matrix"],[531,51,398,26],[531,52,398,27],[532,8,397,10,"scaleMatrix"],[532,19,397,21],[532,22,397,21,"_decomposeMatrix"],[532,38,397,21],[532,39,397,10,"scaleMatrix"],[532,50,397,21],[533,8,397,23,"rotationMatrix"],[533,22,397,37],[533,25,397,37,"_decomposeMatrix"],[533,41,397,37],[533,42,397,23,"rotationMatrix"],[533,56,397,37],[534,8,397,39,"translationMatrix"],[534,25,397,56],[534,28,397,56,"_decomposeMatrix"],[534,44,397,56],[534,45,397,39,"translationMatrix"],[534,62,397,56],[535,8,397,58,"skewMatrix"],[535,18,397,68],[535,21,397,68,"_decomposeMatrix"],[535,37,397,68],[535,38,397,58,"skewMatrix"],[535,48,397,68],[536,6,400,2],[536,10,400,8,"sinRy"],[536,15,400,13],[536,18,400,16],[536,19,400,17,"rotationMatrix"],[536,33,400,31],[536,34,400,32],[536,35,400,33],[536,36,400,34],[536,37,400,35],[536,38,400,36],[536,39,400,37],[537,6,402,2],[537,10,402,8,"ry"],[537,12,402,10],[537,15,402,13,"Math"],[537,19,402,17],[537,20,402,18,"asin"],[537,24,402,22],[537,25,402,23,"sinRy"],[537,30,402,28],[537,31,402,29],[538,6,403,2],[538,10,403,6,"rx"],[538,12,403,8],[539,6,404,2],[539,10,404,6,"rz"],[539,12,404,8],[540,6,405,2],[540,10,405,6,"sinRy"],[540,15,405,11],[540,20,405,16],[540,21,405,17],[540,25,405,21,"sinRy"],[540,30,405,26],[540,37,405,33],[540,39,405,35],[541,8,406,4,"rz"],[541,10,406,6],[541,13,406,9],[541,14,406,10],[542,8,407,4,"rx"],[542,10,407,6],[542,13,407,9,"Math"],[542,17,407,13],[542,18,407,14,"atan2"],[542,23,407,19],[542,24,407,20,"sinRy"],[542,29,407,25],[542,32,407,28,"rotationMatrix"],[542,46,407,42],[542,47,407,43],[542,48,407,44],[542,49,407,45],[542,50,407,46],[542,51,407,47],[542,52,407,48],[542,54,407,50,"sinRy"],[542,59,407,55],[542,62,407,58,"rotationMatrix"],[542,76,407,72],[542,77,407,73],[542,78,407,74],[542,79,407,75],[542,80,407,76],[542,81,407,77],[542,82,407,78],[542,83,407,79],[543,6,408,2],[543,7,408,3],[543,13,408,9],[544,8,409,4,"rz"],[544,10,409,6],[544,13,409,9,"Math"],[544,17,409,13],[544,18,409,14,"atan2"],[544,23,409,19],[544,24,409,20,"rotationMatrix"],[544,38,409,34],[544,39,409,35],[544,40,409,36],[544,41,409,37],[544,42,409,38],[544,43,409,39],[544,44,409,40],[544,46,409,42,"rotationMatrix"],[544,60,409,56],[544,61,409,57],[544,62,409,58],[544,63,409,59],[544,64,409,60],[544,65,409,61],[544,66,409,62],[544,67,409,63],[545,8,410,4,"rx"],[545,10,410,6],[545,13,410,9,"Math"],[545,17,410,13],[545,18,410,14,"atan2"],[545,23,410,19],[545,24,410,20,"rotationMatrix"],[545,38,410,34],[545,39,410,35],[545,40,410,36],[545,41,410,37],[545,42,410,38],[545,43,410,39],[545,44,410,40],[545,46,410,42,"rotationMatrix"],[545,60,410,56],[545,61,410,57],[545,62,410,58],[545,63,410,59],[545,64,410,60],[545,65,410,61],[545,66,410,62],[545,67,410,63],[546,6,411,2],[547,6,413,2],[547,13,413,9],[548,8,414,4,"scaleMatrix"],[548,19,414,15],[549,8,415,4,"rotationMatrix"],[549,22,415,18],[550,8,416,4,"translationMatrix"],[550,25,416,21],[551,8,417,4,"skewMatrix"],[551,18,417,14],[552,8,418,4,"rx"],[552,10,418,6],[552,12,418,8,"rx"],[552,14,418,10],[552,18,418,14],[552,19,418,15],[553,8,419,4,"ry"],[553,10,419,6],[553,12,419,8,"ry"],[553,14,419,10],[553,18,419,14],[553,19,419,15],[554,8,420,4,"rz"],[554,10,420,6],[554,12,420,8,"rz"],[554,14,420,10],[554,18,420,14],[555,6,421,2],[555,7,421,3],[556,4,422,0],[556,5,422,1],[557,4,422,1,"decomposeMatrixIntoMatricesAndAngles"],[557,40,422,1],[557,41,422,1,"__closure"],[557,50,422,1],[558,6,398,4,"decomposeMatrix"],[559,4,398,19],[560,4,398,19,"decomposeMatrixIntoMatricesAndAngles"],[560,40,398,19],[560,41,398,19,"__workletHash"],[560,54,398,19],[561,4,398,19,"decomposeMatrixIntoMatricesAndAngles"],[561,40,398,19],[561,41,398,19,"__initData"],[561,51,398,19],[561,54,398,19,"_worklet_14654446791686_init_data"],[561,87,398,19],[562,4,398,19],[562,11,398,19,"decomposeMatrixIntoMatricesAndAngles"],[562,47,398,19],[563,2,398,19],[563,3,392,7],[564,4,392,7,"_worklet_14654446791686_init_data"],[564,37,392,7],[565,4,398,4,"decomposeMatrix"],[566,2,398,19],[567,0,398,19],[567,3]],"functionMap":{"names":["<global>","isAffineMatrixFlat","x.every$argument_0","isAffineMatrix","row.every$argument_0","flatten","unflatten","maybeFlattenMatrix","multiplyMatrices","subtractMatrices","a.map$argument_0","addMatrices","scaleMatrix","getRotationMatrix","norm3d","transposeMatrix","assertVectorsHaveEqualLengths","innerProduct","a.reduce$argument_0","projection","u.map$argument_0","subtractVectors","scaleVector","gramSchmidtAlgorithm","map$argument_0","decomposeMatrix","matrix.forEach$argument_0","decomposeMatrixIntoMatricesAndAngles"],"mappings":"AAA;OC+B;YCK,2DD;CDE;OGE;MDM;kBEG,2DF,CC;CHG;OKE;CLG;OME;CNQ;AOE;CPK;OQE;CR2F;OSE;kBCS,qBD;CTE;OWE;kBDS,qBC;CXE;OYE;kBFQ,iBE;CZE;OaE;Cb8B;AcE;CdG;AeE;CfS;AgBE;ChBS;AiBE;kBCG,gCD;CjBC;AmBE;eCI,YD;CnBC;AqBE;eXG,qBW;CrBC;AsBE;eFE,YE;CtBC;AuBE;gDCwB;qDDC;CvByB;OyBE;iBCU,mCD;CzBqC;O2BE;C3B8B"},"hasCjsExports":false},"type":"js/module"}]}