{"dependencies":[{"name":"invariant","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":11,"column":0},"end":{"line":11,"column":34}}],"key":"4HPAaDQ25ZwZ2dzTLatXuUucZUM=","exportNames":["*"],"imports":1}}],"output":[{"data":{"code":"__d(function (global, require, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {\n  \"use strict\";\n\n  Object.defineProperty(exports, '__esModule', {\n    value: true\n  });\n  function _interopDefault(e) {\n    return e && e.__esModule ? e : {\n      default: e\n    };\n  }\n  Object.defineProperty(exports, \"default\", {\n    enumerable: true,\n    get: function () {\n      return _default;\n    }\n  });\n  exports.createStringifySafeWithLimits = createStringifySafeWithLimits;\n  var _invariant = require(_dependencyMap[0]);\n  var invariant = _interopDefault(_invariant);\n  function createStringifySafeWithLimits(limits) {\n    var _limits$maxDepth = limits.maxDepth,\n      maxDepth = _limits$maxDepth === undefined ? Number.POSITIVE_INFINITY : _limits$maxDepth,\n      _limits$maxStringLimi = limits.maxStringLimit,\n      maxStringLimit = _limits$maxStringLimi === undefined ? Number.POSITIVE_INFINITY : _limits$maxStringLimi,\n      _limits$maxArrayLimit = limits.maxArrayLimit,\n      maxArrayLimit = _limits$maxArrayLimit === undefined ? Number.POSITIVE_INFINITY : _limits$maxArrayLimit,\n      _limits$maxObjectKeys = limits.maxObjectKeysLimit,\n      maxObjectKeysLimit = _limits$maxObjectKeys === undefined ? Number.POSITIVE_INFINITY : _limits$maxObjectKeys;\n    var stack = [];\n    function replacer(key, value) {\n      while (stack.length && this !== stack[0]) {\n        stack.shift();\n      }\n      if (typeof value === 'string') {\n        var truncatedString = '...(truncated)...';\n        if (value.length > maxStringLimit + truncatedString.length) {\n          return value.substring(0, maxStringLimit) + truncatedString;\n        }\n        return value;\n      }\n      if (typeof value !== 'object' || value === null) {\n        return value;\n      }\n      var retval = value;\n      if (Array.isArray(value)) {\n        if (stack.length >= maxDepth) {\n          retval = `[ ... array with ${value.length} values ... ]`;\n        } else if (value.length > maxArrayLimit) {\n          retval = value.slice(0, maxArrayLimit).concat([`... extra ${value.length - maxArrayLimit} values truncated ...`]);\n        }\n      } else {\n        (0, invariant.default)(typeof value === 'object', 'This was already found earlier');\n        var keys = Object.keys(value);\n        if (stack.length >= maxDepth) {\n          retval = `{ ... object with ${keys.length} keys ... }`;\n        } else if (keys.length > maxObjectKeysLimit) {\n          retval = {};\n          for (var k of keys.slice(0, maxObjectKeysLimit)) {\n            retval[k] = value[k];\n          }\n          var truncatedKey = '...(truncated keys)...';\n          retval[truncatedKey] = keys.length - maxObjectKeysLimit;\n        }\n      }\n      stack.unshift(retval);\n      return retval;\n    }\n    return function stringifySafe(arg) {\n      if (arg === undefined) {\n        return 'undefined';\n      } else if (arg === null) {\n        return 'null';\n      } else if (typeof arg === 'function') {\n        try {\n          return arg.toString();\n        } catch (e) {\n          return '[function unknown]';\n        }\n      } else if (arg instanceof Error) {\n        return arg.name + ': ' + arg.message;\n      } else {\n        try {\n          var ret = JSON.stringify(arg, replacer);\n          if (ret === undefined) {\n            return '[\"' + typeof arg + '\" failed to stringify]';\n          }\n          return ret;\n        } catch (e) {\n          if (typeof arg.toString === 'function') {\n            try {\n              return arg.toString();\n            } catch (E) {}\n          }\n        }\n      }\n      return '[\"' + typeof arg + '\" failed to stringify]';\n    };\n  }\n  var stringifySafe = createStringifySafeWithLimits({\n    maxDepth: 10,\n    maxStringLimit: 100,\n    maxArrayLimit: 50,\n    maxObjectKeysLimit: 50\n  });\n  var _default = stringifySafe;\n});","lineCount":107,"map":[[12,2,121,0,"Object"],[12,8,121,0],[12,9,121,0,"defineProperty"],[12,23,121,0],[12,24,121,0,"exports"],[12,31,121,0],[13,4,121,0,"enumerable"],[13,14,121,0],[14,4,121,0,"get"],[14,7,121,0],[14,18,121,0,"get"],[14,19,121,0],[15,6,121,0],[15,13,121,0,"_default"],[15,21,121,0],[16,4,121,0],[17,2,121,0],[18,2,17,0,"exports"],[18,9,17,0],[18,10,17,0,"createStringifySafeWithLimits"],[18,39,17,0],[18,42,17,0,"createStringifySafeWithLimits"],[18,71,17,0],[19,2,11,0],[19,6,11,0,"_invariant"],[19,16,11,0],[19,19,11,0,"require"],[19,26,11,0],[19,27,11,0,"_dependencyMap"],[19,41,11,0],[20,2,11,0],[20,6,11,0,"invariant"],[20,15,11,0],[20,18,11,0,"_interopDefault"],[20,33,11,0],[20,34,11,0,"_invariant"],[20,44,11,0],[21,2,17,7],[21,11,17,16,"createStringifySafeWithLimits"],[21,40,17,45,"createStringifySafeWithLimits"],[21,41,17,46,"limits"],[21,47,22,1],[21,49,22,20],[22,4,23,2],[22,8,23,2,"_limits$maxDepth"],[22,24,23,2],[22,27,28,6,"limits"],[22,33,28,12],[22,34,24,4,"maxDepth"],[22,42,24,12],[23,6,24,4,"maxDepth"],[23,14,24,12],[23,17,24,12,"_limits$maxDepth"],[23,33,24,12],[23,38,24,12,"undefined"],[23,47,24,12],[23,50,24,15,"Number"],[23,56,24,21],[23,57,24,22,"POSITIVE_INFINITY"],[23,74,24,39],[23,77,24,39,"_limits$maxDepth"],[23,93,24,39],[24,6,24,39,"_limits$maxStringLimi"],[24,27,24,39],[24,30,28,6,"limits"],[24,36,28,12],[24,37,25,4,"maxStringLimit"],[24,51,25,18],[25,6,25,4,"maxStringLimit"],[25,20,25,18],[25,23,25,18,"_limits$maxStringLimi"],[25,44,25,18],[25,49,25,18,"undefined"],[25,58,25,18],[25,61,25,21,"Number"],[25,67,25,27],[25,68,25,28,"POSITIVE_INFINITY"],[25,85,25,45],[25,88,25,45,"_limits$maxStringLimi"],[25,109,25,45],[26,6,25,45,"_limits$maxArrayLimit"],[26,27,25,45],[26,30,28,6,"limits"],[26,36,28,12],[26,37,26,4,"maxArrayLimit"],[26,50,26,17],[27,6,26,4,"maxArrayLimit"],[27,19,26,17],[27,22,26,17,"_limits$maxArrayLimit"],[27,43,26,17],[27,48,26,17,"undefined"],[27,57,26,17],[27,60,26,20,"Number"],[27,66,26,26],[27,67,26,27,"POSITIVE_INFINITY"],[27,84,26,44],[27,87,26,44,"_limits$maxArrayLimit"],[27,108,26,44],[28,6,26,44,"_limits$maxObjectKeys"],[28,27,26,44],[28,30,28,6,"limits"],[28,36,28,12],[28,37,27,4,"maxObjectKeysLimit"],[28,55,27,22],[29,6,27,4,"maxObjectKeysLimit"],[29,24,27,22],[29,27,27,22,"_limits$maxObjectKeys"],[29,48,27,22],[29,53,27,22,"undefined"],[29,62,27,22],[29,65,27,25,"Number"],[29,71,27,31],[29,72,27,32,"POSITIVE_INFINITY"],[29,89,27,49],[29,92,27,49,"_limits$maxObjectKeys"],[29,113,27,49],[30,4,29,2],[30,8,29,8,"stack"],[30,13,29,27],[30,16,29,30],[30,18,29,32],[31,4,32,2],[31,13,32,11,"replacer"],[31,21,32,19,"replacer"],[31,22,32,20,"key"],[31,25,32,31],[31,27,32,33,"value"],[31,32,32,45],[31,34,32,54],[32,6,33,4],[32,13,33,11,"stack"],[32,18,33,16],[32,19,33,17,"length"],[32,25,33,23],[32,29,33,27],[32,33,33,31],[32,38,33,36,"stack"],[32,43,33,41],[32,44,33,42],[32,45,33,43],[32,46,33,44],[32,48,33,46],[33,8,34,6,"stack"],[33,13,34,11],[33,14,34,12,"shift"],[33,19,34,17],[33,20,34,18],[33,21,34,19],[34,6,35,4],[35,6,37,4],[35,10,37,8],[35,17,37,15,"value"],[35,22,37,20],[35,27,37,25],[35,35,37,33],[35,37,37,35],[36,8,38,6],[36,12,38,12,"truncatedString"],[36,27,38,27],[36,30,38,30],[36,49,38,49],[37,8,39,6],[37,12,39,10,"value"],[37,17,39,15],[37,18,39,16,"length"],[37,24,39,22],[37,27,39,25,"maxStringLimit"],[37,41,39,39],[37,44,39,42,"truncatedString"],[37,59,39,57],[37,60,39,58,"length"],[37,66,39,64],[37,68,39,66],[38,10,40,8],[38,17,40,15,"value"],[38,22,40,20],[38,23,40,21,"substring"],[38,32,40,30],[38,33,40,31],[38,34,40,32],[38,36,40,34,"maxStringLimit"],[38,50,40,48],[38,51,40,49],[38,54,40,52,"truncatedString"],[38,69,40,67],[39,8,41,6],[40,8,42,6],[40,15,42,13,"value"],[40,20,42,18],[41,6,43,4],[42,6,44,4],[42,10,44,8],[42,17,44,15,"value"],[42,22,44,20],[42,27,44,25],[42,35,44,33],[42,39,44,37,"value"],[42,44,44,42],[42,49,44,47],[42,53,44,51],[42,55,44,53],[43,8,45,6],[43,15,45,13,"value"],[43,20,45,18],[44,6,46,4],[45,6,48,4],[45,10,48,8,"retval"],[45,16,48,21],[45,19,48,24,"value"],[45,24,48,29],[46,6,49,4],[46,10,49,8,"Array"],[46,15,49,13],[46,16,49,14,"isArray"],[46,23,49,21],[46,24,49,22,"value"],[46,29,49,27],[46,30,49,28],[46,32,49,30],[47,8,50,6],[47,12,50,10,"stack"],[47,17,50,15],[47,18,50,16,"length"],[47,24,50,22],[47,28,50,26,"maxDepth"],[47,36,50,34],[47,38,50,36],[48,10,51,8,"retval"],[48,16,51,14],[48,19,51,17],[48,39,51,37,"value"],[48,44,51,42],[48,45,51,43,"length"],[48,51,51,49],[48,66,51,64],[49,8,52,6],[49,9,52,7],[49,15,52,13],[49,19,52,17,"value"],[49,24,52,22],[49,25,52,23,"length"],[49,31,52,29],[49,34,52,32,"maxArrayLimit"],[49,47,52,45],[49,49,52,47],[50,10,53,8,"retval"],[50,16,53,14],[50,19,53,17,"value"],[50,24,53,22],[50,25,54,11,"slice"],[50,30,54,16],[50,31,54,17],[50,32,54,18],[50,34,54,20,"maxArrayLimit"],[50,47,54,33],[50,48,54,34],[50,49,55,11,"concat"],[50,55,55,17],[50,56,55,18],[50,57,56,12],[50,70,56,25,"value"],[50,75,56,30],[50,76,56,31,"length"],[50,82,56,37],[50,85,56,40,"maxArrayLimit"],[50,98,56,53],[50,121,56,76],[50,122,57,11],[50,123,57,12],[51,8,58,6],[52,6,59,4],[52,7,59,5],[52,13,59,11],[53,8,61,6],[53,12,61,6,"invariant"],[53,21,61,15],[53,22,61,15,"default"],[53,29,61,15],[53,31,61,16],[53,38,61,23,"value"],[53,43,61,28],[53,48,61,33],[53,56,61,41],[53,58,61,43],[53,90,61,75],[53,91,61,76],[54,8,62,6],[54,12,62,10,"keys"],[54,16,62,14],[54,19,62,17,"Object"],[54,25,62,23],[54,26,62,24,"keys"],[54,30,62,28],[54,31,62,29,"value"],[54,36,62,34],[54,37,62,35],[55,8,63,6],[55,12,63,10,"stack"],[55,17,63,15],[55,18,63,16,"length"],[55,24,63,22],[55,28,63,26,"maxDepth"],[55,36,63,34],[55,38,63,36],[56,10,64,8,"retval"],[56,16,64,14],[56,19,64,17],[56,40,64,38,"keys"],[56,44,64,42],[56,45,64,43,"length"],[56,51,64,49],[56,64,64,62],[57,8,65,6],[57,9,65,7],[57,15,65,13],[57,19,65,17,"keys"],[57,23,65,21],[57,24,65,22,"length"],[57,30,65,28],[57,33,65,31,"maxObjectKeysLimit"],[57,51,65,49],[57,53,65,51],[58,10,67,8,"retval"],[58,16,67,14],[58,19,67,18],[58,20,67,19],[58,21,67,40],[59,10,68,8],[59,15,68,13],[59,19,68,17,"k"],[59,20,68,18],[59,24,68,22,"keys"],[59,28,68,26],[59,29,68,27,"slice"],[59,34,68,32],[59,35,68,33],[59,36,68,34],[59,38,68,36,"maxObjectKeysLimit"],[59,56,68,54],[59,57,68,55],[59,59,68,57],[60,12,69,10,"retval"],[60,18,69,16],[60,19,69,17,"k"],[60,20,69,18],[60,21,69,19],[60,24,69,22,"value"],[60,29,69,27],[60,30,69,28,"k"],[60,31,69,29],[60,32,69,30],[61,10,70,8],[62,10,71,8],[62,14,71,14,"truncatedKey"],[62,26,71,26],[62,29,71,29],[62,53,71,53],[63,10,72,8,"retval"],[63,16,72,14],[63,17,72,15,"truncatedKey"],[63,29,72,27],[63,30,72,28],[63,33,72,31,"keys"],[63,37,72,35],[63,38,72,36,"length"],[63,44,72,42],[63,47,72,45,"maxObjectKeysLimit"],[63,65,72,63],[64,8,73,6],[65,6,74,4],[66,6,75,4,"stack"],[66,11,75,9],[66,12,75,10,"unshift"],[66,19,75,17],[66,20,75,18,"retval"],[66,26,75,24],[66,27,75,25],[67,6,76,4],[67,13,76,11,"retval"],[67,19,76,17],[68,4,77,2],[69,4,79,2],[69,11,79,9],[69,20,79,18,"stringifySafe"],[69,33,79,31,"stringifySafe"],[69,34,79,32,"arg"],[69,37,79,42],[69,39,79,52],[70,6,80,4],[70,10,80,8,"arg"],[70,13,80,11],[70,18,80,16,"undefined"],[70,27,80,25],[70,29,80,27],[71,8,81,6],[71,15,81,13],[71,26,81,24],[72,6,82,4],[72,7,82,5],[72,13,82,11],[72,17,82,15,"arg"],[72,20,82,18],[72,25,82,23],[72,29,82,27],[72,31,82,29],[73,8,83,6],[73,15,83,13],[73,21,83,19],[74,6,84,4],[74,7,84,5],[74,13,84,11],[74,17,84,15],[74,24,84,22,"arg"],[74,27,84,25],[74,32,84,30],[74,42,84,40],[74,44,84,42],[75,8,85,6],[75,12,85,10],[76,10,86,8],[76,17,86,15,"arg"],[76,20,86,18],[76,21,86,19,"toString"],[76,29,86,27],[76,30,86,28],[76,31,86,29],[77,8,87,6],[77,9,87,7],[77,10,87,8],[77,17,87,15,"e"],[77,18,87,16],[77,20,87,18],[78,10,88,8],[78,17,88,15],[78,37,88,35],[79,8,89,6],[80,6,90,4],[80,7,90,5],[80,13,90,11],[80,17,90,15,"arg"],[80,20,90,18],[80,32,90,30,"Error"],[80,37,90,35],[80,39,90,37],[81,8,91,6],[81,15,91,13,"arg"],[81,18,91,16],[81,19,91,17,"name"],[81,23,91,21],[81,26,91,24],[81,30,91,28],[81,33,91,31,"arg"],[81,36,91,34],[81,37,91,35,"message"],[81,44,91,42],[82,6,92,4],[82,7,92,5],[82,13,92,11],[83,8,95,6],[83,12,95,10],[84,10,96,8],[84,14,96,14,"ret"],[84,17,96,17],[84,20,96,20,"JSON"],[84,24,96,24],[84,25,96,25,"stringify"],[84,34,96,34],[84,35,96,35,"arg"],[84,38,96,38],[84,40,96,40,"replacer"],[84,48,96,48],[84,49,96,49],[85,10,97,8],[85,14,97,12,"ret"],[85,17,97,15],[85,22,97,20,"undefined"],[85,31,97,29],[85,33,97,31],[86,12,98,10],[86,19,98,17],[86,23,98,21],[86,26,98,24],[86,33,98,31,"arg"],[86,36,98,34],[86,39,98,37],[86,63,98,61],[87,10,99,8],[88,10,100,8],[88,17,100,15,"ret"],[88,20,100,18],[89,8,101,6],[89,9,101,7],[89,10,101,8],[89,17,101,15,"e"],[89,18,101,16],[89,20,101,18],[90,10,102,8],[90,14,102,12],[90,21,102,19,"arg"],[90,24,102,22],[90,25,102,23,"toString"],[90,33,102,31],[90,38,102,36],[90,48,102,46],[90,50,102,48],[91,12,103,10],[91,16,103,14],[92,14,105,12],[92,21,105,19,"arg"],[92,24,105,22],[92,25,105,23,"toString"],[92,33,105,31],[92,34,105,32],[92,35,105,33],[93,12,106,10],[93,13,106,11],[93,14,106,12],[93,21,106,19,"E"],[93,22,106,20],[93,24,106,22],[93,25,106,23],[94,10,107,8],[95,8,108,6],[96,6,109,4],[97,6,110,4],[97,13,110,11],[97,17,110,15],[97,20,110,18],[97,27,110,25,"arg"],[97,30,110,28],[97,33,110,31],[97,57,110,55],[98,4,111,2],[98,5,111,3],[99,2,112,0],[100,2,114,0],[100,6,114,6,"stringifySafe"],[100,19,114,36],[100,22,114,39,"createStringifySafeWithLimits"],[100,51,114,68],[100,52,114,69],[101,4,115,2,"maxDepth"],[101,12,115,10],[101,14,115,12],[101,16,115,14],[102,4,116,2,"maxStringLimit"],[102,18,116,16],[102,20,116,18],[102,23,116,21],[103,4,117,2,"maxArrayLimit"],[103,17,117,15],[103,19,117,17],[103,21,117,19],[104,4,118,2,"maxObjectKeysLimit"],[104,22,118,20],[104,24,118,22],[105,2,119,0],[105,3,119,1],[105,4,119,2],[106,2,121,0],[106,6,121,0,"_default"],[106,14,121,0],[106,17,121,15,"stringifySafe"],[106,30,121,28],[107,0,121,29],[107,3]],"functionMap":{"names":["<global>","createStringifySafeWithLimits","replacer","stringifySafe"],"mappings":"AAA;OCgB;ECe;GD6C;SEE;GFgC;CDC"},"hasCjsExports":false},"type":"js/module"}]}