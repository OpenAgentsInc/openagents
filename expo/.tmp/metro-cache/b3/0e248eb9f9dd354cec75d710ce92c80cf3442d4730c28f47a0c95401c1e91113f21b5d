{"dependencies":[],"output":[{"data":{"code":"__d(function (global, require, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {\n  'use strict';\n\n  module.exports = function (obj) {\n    if (typeof obj === 'string') {\n      return camelCase(obj);\n    }\n    return walk(obj);\n  };\n  function walk(obj) {\n    if (!obj || typeof obj !== 'object') {\n      return obj;\n    }\n    if (isDate(obj) || isRegex(obj)) {\n      return obj;\n    }\n    if (isArray(obj)) {\n      return map(obj, walk);\n    }\n    return reduce(objectKeys(obj), function (acc, key) {\n      var camel = camelCase(key);\n      acc[camel] = walk(obj[key]);\n      return acc;\n    }, {});\n  }\n  function camelCase(str) {\n    return str.replace(/[_.-](\\w|$)/g, function (_, x) {\n      return x.toUpperCase();\n    });\n  }\n  var isArray = Array.isArray || function (obj) {\n    return Object.prototype.toString.call(obj) === '[object Array]';\n  };\n  var isDate = function (obj) {\n    return Object.prototype.toString.call(obj) === '[object Date]';\n  };\n  var isRegex = function (obj) {\n    return Object.prototype.toString.call(obj) === '[object RegExp]';\n  };\n  var has = Object.prototype.hasOwnProperty;\n  var objectKeys = Object.keys || function (obj) {\n    var keys = [];\n    for (var key in obj) {\n      if (has.call(obj, key)) {\n        keys.push(key);\n      }\n    }\n    return keys;\n  };\n  function map(xs, f) {\n    if (xs.map) {\n      return xs.map(f);\n    }\n    var res = [];\n    for (var i = 0; i < xs.length; i++) {\n      res.push(f(xs[i], i));\n    }\n    return res;\n  }\n  function reduce(xs, f, acc) {\n    if (xs.reduce) {\n      return xs.reduce(f, acc);\n    }\n    for (var i = 0; i < xs.length; i++) {\n      acc = f(acc, xs[i], i);\n    }\n    return acc;\n  }\n});","lineCount":69,"map":[[2,2,1,0],[2,14,1,12],[4,2,3,0,"module"],[4,8,3,6],[4,9,3,7,"exports"],[4,16,3,14],[4,19,3,17],[4,29,3,27,"obj"],[4,32,3,30],[4,34,3,32],[5,4,4,1],[5,8,4,5],[5,15,4,12,"obj"],[5,18,4,15],[5,23,4,20],[5,31,4,28],[5,33,4,30],[6,6,4,32],[6,13,4,39,"camelCase"],[6,22,4,48],[6,23,4,49,"obj"],[6,26,4,52],[6,27,4,53],[7,4,4,55],[8,4,5,1],[8,11,5,8,"walk"],[8,15,5,12],[8,16,5,13,"obj"],[8,19,5,16],[8,20,5,17],[9,2,6,0],[9,3,6,1],[10,2,8,0],[10,11,8,9,"walk"],[10,15,8,13,"walk"],[10,16,8,14,"obj"],[10,19,8,17],[10,21,8,19],[11,4,9,1],[11,8,9,5],[11,9,9,6,"obj"],[11,12,9,9],[11,16,9,13],[11,23,9,20,"obj"],[11,26,9,23],[11,31,9,28],[11,39,9,36],[11,41,9,38],[12,6,9,40],[12,13,9,47,"obj"],[12,16,9,50],[13,4,9,52],[14,4,10,1],[14,8,10,5,"isDate"],[14,14,10,11],[14,15,10,12,"obj"],[14,18,10,15],[14,19,10,16],[14,23,10,20,"isRegex"],[14,30,10,27],[14,31,10,28,"obj"],[14,34,10,31],[14,35,10,32],[14,37,10,34],[15,6,10,36],[15,13,10,43,"obj"],[15,16,10,46],[16,4,10,48],[17,4,11,1],[17,8,11,5,"isArray"],[17,15,11,12],[17,16,11,13,"obj"],[17,19,11,16],[17,20,11,17],[17,22,11,19],[18,6,11,21],[18,13,11,28,"map"],[18,16,11,31],[18,17,11,32,"obj"],[18,20,11,35],[18,22,11,37,"walk"],[18,26,11,41],[18,27,11,42],[19,4,11,44],[20,4,12,1],[20,11,12,8,"reduce"],[20,17,12,14],[20,18,12,15,"objectKeys"],[20,28,12,25],[20,29,12,26,"obj"],[20,32,12,29],[20,33,12,30],[20,35,12,32],[20,45,12,42,"acc"],[20,48,12,45],[20,50,12,47,"key"],[20,53,12,50],[20,55,12,52],[21,6,13,2],[21,10,13,6,"camel"],[21,15,13,11],[21,18,13,14,"camelCase"],[21,27,13,23],[21,28,13,24,"key"],[21,31,13,27],[21,32,13,28],[22,6,14,2,"acc"],[22,9,14,5],[22,10,14,6,"camel"],[22,15,14,11],[22,16,14,12],[22,19,14,15,"walk"],[22,23,14,19],[22,24,14,20,"obj"],[22,27,14,23],[22,28,14,24,"key"],[22,31,14,27],[22,32,14,28],[22,33,14,29],[23,6,15,2],[23,13,15,9,"acc"],[23,16,15,12],[24,4,16,1],[24,5,16,2],[24,7,16,4],[24,8,16,5],[24,9,16,6],[24,10,16,7],[25,2,17,0],[26,2,19,0],[26,11,19,9,"camelCase"],[26,20,19,18,"camelCase"],[26,21,19,19,"str"],[26,24,19,22],[26,26,19,24],[27,4,20,1],[27,11,20,8,"str"],[27,14,20,11],[27,15,20,12,"replace"],[27,22,20,19],[27,23,20,20],[27,37,20,34],[27,39,20,36],[27,49,20,46,"_"],[27,50,20,47],[27,52,20,49,"x"],[27,53,20,50],[27,55,20,52],[28,6,21,2],[28,13,21,9,"x"],[28,14,21,10],[28,15,21,11,"toUpperCase"],[28,26,21,22],[28,27,21,23],[28,28,21,24],[29,4,22,1],[29,5,22,2],[29,6,22,3],[30,2,23,0],[31,2,25,0],[31,6,25,4,"isArray"],[31,13,25,11],[31,16,25,14,"Array"],[31,21,25,19],[31,22,25,20,"isArray"],[31,29,25,27],[31,33,25,31],[31,43,25,41,"obj"],[31,46,25,44],[31,48,25,46],[32,4,26,1],[32,11,26,8,"Object"],[32,17,26,14],[32,18,26,15,"prototype"],[32,27,26,24],[32,28,26,25,"toString"],[32,36,26,33],[32,37,26,34,"call"],[32,41,26,38],[32,42,26,39,"obj"],[32,45,26,42],[32,46,26,43],[32,51,26,48],[32,67,26,64],[33,2,27,0],[33,3,27,1],[34,2,29,0],[34,6,29,4,"isDate"],[34,12,29,10],[34,15,29,13],[34,24,29,13,"isDate"],[34,25,29,23,"obj"],[34,28,29,26],[34,30,29,28],[35,4,30,1],[35,11,30,8,"Object"],[35,17,30,14],[35,18,30,15,"prototype"],[35,27,30,24],[35,28,30,25,"toString"],[35,36,30,33],[35,37,30,34,"call"],[35,41,30,38],[35,42,30,39,"obj"],[35,45,30,42],[35,46,30,43],[35,51,30,48],[35,66,30,63],[36,2,31,0],[36,3,31,1],[37,2,33,0],[37,6,33,4,"isRegex"],[37,13,33,11],[37,16,33,14],[37,25,33,14,"isRegex"],[37,26,33,24,"obj"],[37,29,33,27],[37,31,33,29],[38,4,34,1],[38,11,34,8,"Object"],[38,17,34,14],[38,18,34,15,"prototype"],[38,27,34,24],[38,28,34,25,"toString"],[38,36,34,33],[38,37,34,34,"call"],[38,41,34,38],[38,42,34,39,"obj"],[38,45,34,42],[38,46,34,43],[38,51,34,48],[38,68,34,65],[39,2,35,0],[39,3,35,1],[40,2,37,0],[40,6,37,4,"has"],[40,9,37,7],[40,12,37,10,"Object"],[40,18,37,16],[40,19,37,17,"prototype"],[40,28,37,26],[40,29,37,27,"hasOwnProperty"],[40,43,37,41],[41,2,38,0],[41,6,38,4,"objectKeys"],[41,16,38,14],[41,19,38,17,"Object"],[41,25,38,23],[41,26,38,24,"keys"],[41,30,38,28],[41,34,38,32],[41,44,38,42,"obj"],[41,47,38,45],[41,49,38,47],[42,4,39,1],[42,8,39,5,"keys"],[42,12,39,9],[42,15,39,12],[42,17,39,14],[43,4,40,1],[43,9,40,6],[43,13,40,10,"key"],[43,16,40,13],[43,20,40,17,"obj"],[43,23,40,20],[43,25,40,22],[44,6,41,2],[44,10,41,6,"has"],[44,13,41,9],[44,14,41,10,"call"],[44,18,41,14],[44,19,41,15,"obj"],[44,22,41,18],[44,24,41,20,"key"],[44,27,41,23],[44,28,41,24],[44,30,41,26],[45,8,41,28,"keys"],[45,12,41,32],[45,13,41,33,"push"],[45,17,41,37],[45,18,41,38,"key"],[45,21,41,41],[45,22,41,42],[46,6,41,44],[47,4,42,1],[48,4,43,1],[48,11,43,8,"keys"],[48,15,43,12],[49,2,44,0],[49,3,44,1],[50,2,46,0],[50,11,46,9,"map"],[50,14,46,12,"map"],[50,15,46,13,"xs"],[50,17,46,15],[50,19,46,17,"f"],[50,20,46,18],[50,22,46,20],[51,4,47,1],[51,8,47,5,"xs"],[51,10,47,7],[51,11,47,8,"map"],[51,14,47,11],[51,16,47,13],[52,6,47,15],[52,13,47,22,"xs"],[52,15,47,24],[52,16,47,25,"map"],[52,19,47,28],[52,20,47,29,"f"],[52,21,47,30],[52,22,47,31],[53,4,47,33],[54,4,48,1],[54,8,48,5,"res"],[54,11,48,8],[54,14,48,11],[54,16,48,13],[55,4,49,1],[55,9,49,6],[55,13,49,10,"i"],[55,14,49,11],[55,17,49,14],[55,18,49,15],[55,20,49,17,"i"],[55,21,49,18],[55,24,49,21,"xs"],[55,26,49,23],[55,27,49,24,"length"],[55,33,49,30],[55,35,49,32,"i"],[55,36,49,33],[55,38,49,35],[55,40,49,37],[56,6,50,2,"res"],[56,9,50,5],[56,10,50,6,"push"],[56,14,50,10],[56,15,50,11,"f"],[56,16,50,12],[56,17,50,13,"xs"],[56,19,50,15],[56,20,50,16,"i"],[56,21,50,17],[56,22,50,18],[56,24,50,20,"i"],[56,25,50,21],[56,26,50,22],[56,27,50,23],[57,4,51,1],[58,4,52,1],[58,11,52,8,"res"],[58,14,52,11],[59,2,53,0],[60,2,55,0],[60,11,55,9,"reduce"],[60,17,55,15,"reduce"],[60,18,55,16,"xs"],[60,20,55,18],[60,22,55,20,"f"],[60,23,55,21],[60,25,55,23,"acc"],[60,28,55,26],[60,30,55,28],[61,4,56,1],[61,8,56,5,"xs"],[61,10,56,7],[61,11,56,8,"reduce"],[61,17,56,14],[61,19,56,16],[62,6,56,18],[62,13,56,25,"xs"],[62,15,56,27],[62,16,56,28,"reduce"],[62,22,56,34],[62,23,56,35,"f"],[62,24,56,36],[62,26,56,38,"acc"],[62,29,56,41],[62,30,56,42],[63,4,56,44],[64,4,57,1],[64,9,57,6],[64,13,57,10,"i"],[64,14,57,11],[64,17,57,14],[64,18,57,15],[64,20,57,17,"i"],[64,21,57,18],[64,24,57,21,"xs"],[64,26,57,23],[64,27,57,24,"length"],[64,33,57,30],[64,35,57,32,"i"],[64,36,57,33],[64,38,57,35],[64,40,57,37],[65,6,58,2,"acc"],[65,9,58,5],[65,12,58,8,"f"],[65,13,58,9],[65,14,58,10,"acc"],[65,17,58,13],[65,19,58,15,"xs"],[65,21,58,17],[65,22,58,18,"i"],[65,23,58,19],[65,24,58,20],[65,26,58,22,"i"],[65,27,58,23],[65,28,58,24],[66,4,59,1],[67,4,60,1],[67,11,60,8,"acc"],[67,14,60,11],[68,2,61,0],[69,0,61,1],[69,3]],"functionMap":{"names":["<global>","module.exports","walk","reduce$argument_1","camelCase","str.replace$argument_1","<anonymous>","isDate","isRegex","map","reduce"],"mappings":"AAA;iBCE;CDG;AEE;gCCI;EDI;CFC;AIE;oCCC;EDE;CJC;+BME;CNE;aOE;CPE;cQE;CRE;gCMG;CNM;ASE;CTO;AUE;CVM"},"hasCjsExports":true},"type":"js/module"}]}