{"dependencies":[{"name":"@babel/runtime/helpers/classCallCheck","data":{"asyncType":null,"isESMImport":false,"locs":[],"key":"yg7e6laZwmpbIvId5jovq9ugXp8=","exportNames":["*"],"imports":1}},{"name":"@babel/runtime/helpers/createClass","data":{"asyncType":null,"isESMImport":false,"locs":[],"key":"Z6pzkVZ2fvxBLkFTgVVOy4UDj30=","exportNames":["*"],"imports":1}},{"name":"./VirtualizeUtils","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":14,"column":0},"end":{"line":14,"column":70}}],"key":"WkNMKgqK4aOdBxtaLg+KYSUiZ0s=","exportNames":["*"],"imports":1}},{"name":"invariant","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":15,"column":0},"end":{"line":15,"column":34}}],"key":"4HPAaDQ25ZwZ2dzTLatXuUucZUM=","exportNames":["*"],"imports":1}}],"output":[{"data":{"code":"__d(function (global, require, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {\n  \"use strict\";\n\n  Object.defineProperty(exports, '__esModule', {\n    value: true\n  });\n  function _interopDefault(e) {\n    return e && e.__esModule ? e : {\n      default: e\n    };\n  }\n  Object.defineProperty(exports, \"default\", {\n    enumerable: true,\n    get: function () {\n      return ListMetricsAggregator;\n    }\n  });\n  var _babelRuntimeHelpersClassCallCheck = require(_dependencyMap[0]);\n  var _classCallCheck = _interopDefault(_babelRuntimeHelpersClassCallCheck);\n  var _babelRuntimeHelpersCreateClass = require(_dependencyMap[1]);\n  var _createClass = _interopDefault(_babelRuntimeHelpersCreateClass);\n  var _VirtualizeUtils = require(_dependencyMap[2]);\n  var _invariant = require(_dependencyMap[3]);\n  var invariant = _interopDefault(_invariant);\n  var ListMetricsAggregator = /*#__PURE__*/function () {\n    function ListMetricsAggregator() {\n      (0, _classCallCheck.default)(this, ListMetricsAggregator);\n      this._averageCellLength = 0;\n      this._cellMetrics = new Map();\n      this._highestMeasuredCellIndex = 0;\n      this._measuredCellsLength = 0;\n      this._measuredCellsCount = 0;\n      this._orientation = {\n        horizontal: false,\n        rtl: false\n      };\n    }\n    return (0, _createClass.default)(ListMetricsAggregator, [{\n      key: \"notifyCellLayout\",\n      value: function notifyCellLayout(_ref) {\n        var cellIndex = _ref.cellIndex,\n          cellKey = _ref.cellKey,\n          orientation = _ref.orientation,\n          layout = _ref.layout;\n        this._invalidateIfOrientationChanged(orientation);\n        var next = {\n          index: cellIndex,\n          length: this._selectLength(layout),\n          isMounted: true,\n          offset: this.flowRelativeOffset(layout)\n        };\n        var curr = this._cellMetrics.get(cellKey);\n        if (!curr || next.offset !== curr.offset || next.length !== curr.length) {\n          if (curr) {\n            var dLength = next.length - curr.length;\n            this._measuredCellsLength += dLength;\n          } else {\n            this._measuredCellsLength += next.length;\n            this._measuredCellsCount += 1;\n          }\n          this._averageCellLength = this._measuredCellsLength / this._measuredCellsCount;\n          this._cellMetrics.set(cellKey, next);\n          this._highestMeasuredCellIndex = Math.max(this._highestMeasuredCellIndex, cellIndex);\n          return true;\n        } else {\n          curr.isMounted = true;\n          return false;\n        }\n      }\n    }, {\n      key: \"notifyCellUnmounted\",\n      value: function notifyCellUnmounted(cellKey) {\n        var curr = this._cellMetrics.get(cellKey);\n        if (curr) {\n          curr.isMounted = false;\n        }\n      }\n    }, {\n      key: \"notifyListContentLayout\",\n      value: function notifyListContentLayout(_ref2) {\n        var orientation = _ref2.orientation,\n          layout = _ref2.layout;\n        this._invalidateIfOrientationChanged(orientation);\n        this._contentLength = this._selectLength(layout);\n      }\n    }, {\n      key: \"getAverageCellLength\",\n      value: function getAverageCellLength() {\n        return this._averageCellLength;\n      }\n    }, {\n      key: \"getHighestMeasuredCellIndex\",\n      value: function getHighestMeasuredCellIndex() {\n        return this._highestMeasuredCellIndex;\n      }\n    }, {\n      key: \"getCellMetricsApprox\",\n      value: function getCellMetricsApprox(index, props) {\n        var frame = this.getCellMetrics(index, props);\n        if (frame && frame.index === index) {\n          return frame;\n        } else {\n          var offset;\n          var highestMeasuredCellIndex = this.getHighestMeasuredCellIndex();\n          if (highestMeasuredCellIndex < index) {\n            var highestMeasuredCellFrame = this.getCellMetrics(highestMeasuredCellIndex, props);\n            if (highestMeasuredCellFrame) {\n              offset = highestMeasuredCellFrame.offset + highestMeasuredCellFrame.length + this._averageCellLength * (index - highestMeasuredCellIndex - 1);\n            }\n          }\n          if (offset == null) {\n            offset = this._averageCellLength * index;\n          }\n          var data = props.data,\n            getItemCount = props.getItemCount;\n          (0, invariant.default)(index >= 0 && index < getItemCount(data), 'Tried to get frame for out of range index ' + index);\n          return {\n            length: this._averageCellLength,\n            offset,\n            index,\n            isMounted: false\n          };\n        }\n      }\n    }, {\n      key: \"getCellMetrics\",\n      value: function getCellMetrics(index, props) {\n        var data = props.data,\n          getItem = props.getItem,\n          getItemCount = props.getItemCount,\n          getItemLayout = props.getItemLayout;\n        (0, invariant.default)(index >= 0 && index < getItemCount(data), 'Tried to get metrics for out of range cell index ' + index);\n        var keyExtractor = props.keyExtractor ?? _VirtualizeUtils.keyExtractor;\n        var frame = this._cellMetrics.get(keyExtractor(getItem(data, index), index));\n        if (frame && frame.index === index) {\n          return frame;\n        }\n        if (getItemLayout) {\n          var _getItemLayout = getItemLayout(data, index),\n            length = _getItemLayout.length,\n            offset = _getItemLayout.offset;\n          return {\n            index,\n            length,\n            offset,\n            isMounted: true\n          };\n        }\n        return null;\n      }\n    }, {\n      key: \"getCellOffsetApprox\",\n      value: function getCellOffsetApprox(index, props) {\n        if (Number.isInteger(index)) {\n          return this.getCellMetricsApprox(index, props).offset;\n        } else {\n          var frameMetrics = this.getCellMetricsApprox(Math.floor(index), props);\n          var remainder = index - Math.floor(index);\n          return frameMetrics.offset + remainder * frameMetrics.length;\n        }\n      }\n    }, {\n      key: \"getContentLength\",\n      value: function getContentLength() {\n        return this._contentLength ?? 0;\n      }\n    }, {\n      key: \"hasContentLength\",\n      value: function hasContentLength() {\n        return this._contentLength != null;\n      }\n    }, {\n      key: \"flowRelativeOffset\",\n      value: function flowRelativeOffset(layout, referenceContentLength) {\n        var _this$_orientation = this._orientation,\n          horizontal = _this$_orientation.horizontal,\n          rtl = _this$_orientation.rtl;\n        if (horizontal && rtl) {\n          var contentLength = referenceContentLength ?? this._contentLength;\n          (0, invariant.default)(contentLength != null, 'ListMetricsAggregator must be notified of list content layout before resolving offsets');\n          return contentLength - (this._selectOffset(layout) + this._selectLength(layout));\n        } else {\n          return this._selectOffset(layout);\n        }\n      }\n    }, {\n      key: \"cartesianOffset\",\n      value: function cartesianOffset(flowRelativeOffset) {\n        var _this$_orientation2 = this._orientation,\n          horizontal = _this$_orientation2.horizontal,\n          rtl = _this$_orientation2.rtl;\n        if (horizontal && rtl) {\n          (0, invariant.default)(this._contentLength != null, 'ListMetricsAggregator must be notified of list content layout before resolving offsets');\n          return this._contentLength - flowRelativeOffset;\n        } else {\n          return flowRelativeOffset;\n        }\n      }\n    }, {\n      key: \"_invalidateIfOrientationChanged\",\n      value: function _invalidateIfOrientationChanged(orientation) {\n        if (orientation.rtl !== this._orientation.rtl) {\n          this._cellMetrics.clear();\n        }\n        if (orientation.horizontal !== this._orientation.horizontal) {\n          this._averageCellLength = 0;\n          this._highestMeasuredCellIndex = 0;\n          this._measuredCellsLength = 0;\n          this._measuredCellsCount = 0;\n        }\n        this._orientation = orientation;\n      }\n    }, {\n      key: \"_selectLength\",\n      value: function _selectLength(_ref3) {\n        var width = _ref3.width,\n          height = _ref3.height;\n        return this._orientation.horizontal ? width : height;\n      }\n    }, {\n      key: \"_selectOffset\",\n      value: function _selectOffset(_ref4) {\n        var x = _ref4.x,\n          y = _ref4.y;\n        return this._orientation.horizontal ? x : y;\n      }\n    }]);\n  }();\n});","lineCount":229,"map":[[15,13,59,21,"ListMetricsAggregator"],[15,34,59,42],[16,4,59,42],[17,2,59,42],[18,2,59,42],[18,6,59,42,"_babelRuntimeHelpersClassCallCheck"],[18,40,59,42],[18,43,59,42,"require"],[18,50,59,42],[18,51,59,42,"_dependencyMap"],[18,65,59,42],[19,2,59,42],[19,6,59,42,"_classCallCheck"],[19,21,59,42],[19,24,59,42,"_interopDefault"],[19,39,59,42],[19,40,59,42,"_babelRuntimeHelpersClassCallCheck"],[19,74,59,42],[20,2,59,42],[20,6,59,42,"_babelRuntimeHelpersCreateClass"],[20,37,59,42],[20,40,59,42,"require"],[20,47,59,42],[20,48,59,42,"_dependencyMap"],[20,62,59,42],[21,2,59,42],[21,6,59,42,"_createClass"],[21,18,59,42],[21,21,59,42,"_interopDefault"],[21,36,59,42],[21,37,59,42,"_babelRuntimeHelpersCreateClass"],[21,68,59,42],[22,2,14,0],[22,6,14,0,"_VirtualizeUtils"],[22,22,14,0],[22,25,14,0,"require"],[22,32,14,0],[22,33,14,0,"_dependencyMap"],[22,47,14,0],[23,2,15,0],[23,6,15,0,"_invariant"],[23,16,15,0],[23,19,15,0,"require"],[23,26,15,0],[23,27,15,0,"_dependencyMap"],[23,41,15,0],[24,2,15,0],[24,6,15,0,"invariant"],[24,15,15,0],[24,18,15,0,"_interopDefault"],[24,33,15,0],[24,34,15,0,"_invariant"],[24,44,15,0],[25,2,15,34],[25,6,59,21,"ListMetricsAggregator"],[25,27,59,42],[26,4,59,42],[26,13,59,42,"ListMetricsAggregator"],[26,35,59,42],[27,6,59,42],[27,10,59,42,"_classCallCheck"],[27,25,59,42],[27,26,59,42,"default"],[27,33,59,42],[27,41,59,42,"ListMetricsAggregator"],[27,62,59,42],[28,6,59,42],[28,11,60,2,"_averageCellLength"],[28,29,60,20],[28,32,60,23],[28,33,60,24],[29,6,60,24],[29,11,61,2,"_cellMetrics"],[29,23,61,14],[29,26,61,43],[29,30,61,47,"Map"],[29,33,61,50],[29,34,61,51],[29,35,61,52],[30,6,61,52],[30,11,63,2,"_highestMeasuredCellIndex"],[30,36,63,27],[30,39,63,30],[30,40,63,31],[31,6,63,31],[31,11,64,2,"_measuredCellsLength"],[31,31,64,22],[31,34,64,25],[31,35,64,26],[32,6,64,26],[32,11,65,2,"_measuredCellsCount"],[32,30,65,21],[32,33,65,24],[32,34,65,25],[33,6,65,25],[33,11,66,2,"_orientation"],[33,23,66,14],[33,26,66,34],[34,8,67,4,"horizontal"],[34,18,67,14],[34,20,67,16],[34,25,67,21],[35,8,68,4,"rtl"],[35,11,68,7],[35,13,68,9],[36,6,69,2],[36,7,69,3],[37,4,69,3],[38,4,69,3],[38,15,69,3,"_createClass"],[38,27,69,3],[38,28,69,3,"default"],[38,35,69,3],[38,37,69,3,"ListMetricsAggregator"],[38,58,69,3],[39,6,69,3,"key"],[39,9,69,3],[40,6,69,3,"value"],[40,11,69,3],[40,13,76,2],[40,22,76,2,"notifyCellLayout"],[40,38,76,18,"notifyCellLayout"],[40,39,76,18,"_ref"],[40,43,76,18],[40,45,86,14],[41,8,86,14],[41,12,77,4,"cellIndex"],[41,21,77,13],[41,24,77,13,"_ref"],[41,28,77,13],[41,29,77,4,"cellIndex"],[41,38,77,13],[42,10,78,4,"cellKey"],[42,17,78,11],[42,20,78,11,"_ref"],[42,24,78,11],[42,25,78,4,"cellKey"],[42,32,78,11],[43,10,79,4,"orientation"],[43,21,79,15],[43,24,79,15,"_ref"],[43,28,79,15],[43,29,79,4,"orientation"],[43,40,79,15],[44,10,80,4,"layout"],[44,16,80,10],[44,19,80,10,"_ref"],[44,23,80,10],[44,24,80,4,"layout"],[44,30,80,10],[45,8,87,4],[45,12,87,8],[45,13,87,9,"_invalidateIfOrientationChanged"],[45,44,87,40],[45,45,87,41,"orientation"],[45,56,87,52],[45,57,87,53],[46,8,89,4],[46,12,89,10,"next"],[46,16,89,27],[46,19,89,30],[47,10,90,6,"index"],[47,15,90,11],[47,17,90,13,"cellIndex"],[47,26,90,22],[48,10,91,6,"length"],[48,16,91,12],[48,18,91,14],[48,22,91,18],[48,23,91,19,"_selectLength"],[48,36,91,32],[48,37,91,33,"layout"],[48,43,91,39],[48,44,91,40],[49,10,92,6,"isMounted"],[49,19,92,15],[49,21,92,17],[49,25,92,21],[50,10,93,6,"offset"],[50,16,93,12],[50,18,93,14],[50,22,93,18],[50,23,93,19,"flowRelativeOffset"],[50,41,93,37],[50,42,93,38,"layout"],[50,48,93,44],[51,8,94,4],[51,9,94,5],[52,8,95,4],[52,12,95,10,"curr"],[52,16,95,14],[52,19,95,17],[52,23,95,21],[52,24,95,22,"_cellMetrics"],[52,36,95,34],[52,37,95,35,"get"],[52,40,95,38],[52,41,95,39,"cellKey"],[52,48,95,46],[52,49,95,47],[53,8,97,4],[53,12,97,8],[53,13,97,9,"curr"],[53,17,97,13],[53,21,97,17,"next"],[53,25,97,21],[53,26,97,22,"offset"],[53,32,97,28],[53,37,97,33,"curr"],[53,41,97,37],[53,42,97,38,"offset"],[53,48,97,44],[53,52,97,48,"next"],[53,56,97,52],[53,57,97,53,"length"],[53,63,97,59],[53,68,97,64,"curr"],[53,72,97,68],[53,73,97,69,"length"],[53,79,97,75],[53,81,97,77],[54,10,98,6],[54,14,98,10,"curr"],[54,18,98,14],[54,20,98,16],[55,12,99,8],[55,16,99,14,"dLength"],[55,23,99,21],[55,26,99,24,"next"],[55,30,99,28],[55,31,99,29,"length"],[55,37,99,35],[55,40,99,38,"curr"],[55,44,99,42],[55,45,99,43,"length"],[55,51,99,49],[56,12,100,8],[56,16,100,12],[56,17,100,13,"_measuredCellsLength"],[56,37,100,33],[56,41,100,37,"dLength"],[56,48,100,44],[57,10,101,6],[57,11,101,7],[57,17,101,13],[58,12,102,8],[58,16,102,12],[58,17,102,13,"_measuredCellsLength"],[58,37,102,33],[58,41,102,37,"next"],[58,45,102,41],[58,46,102,42,"length"],[58,52,102,48],[59,12,103,8],[59,16,103,12],[59,17,103,13,"_measuredCellsCount"],[59,36,103,32],[59,40,103,36],[59,41,103,37],[60,10,104,6],[61,10,106,6],[61,14,106,10],[61,15,106,11,"_averageCellLength"],[61,33,106,29],[61,36,107,8],[61,40,107,12],[61,41,107,13,"_measuredCellsLength"],[61,61,107,33],[61,64,107,36],[61,68,107,40],[61,69,107,41,"_measuredCellsCount"],[61,88,107,60],[62,10,108,6],[62,14,108,10],[62,15,108,11,"_cellMetrics"],[62,27,108,23],[62,28,108,24,"set"],[62,31,108,27],[62,32,108,28,"cellKey"],[62,39,108,35],[62,41,108,37,"next"],[62,45,108,41],[62,46,108,42],[63,10,109,6],[63,14,109,10],[63,15,109,11,"_highestMeasuredCellIndex"],[63,40,109,36],[63,43,109,39,"Math"],[63,47,109,43],[63,48,109,44,"max"],[63,51,109,47],[63,52,110,8],[63,56,110,12],[63,57,110,13,"_highestMeasuredCellIndex"],[63,82,110,38],[63,84,111,8,"cellIndex"],[63,93,112,6],[63,94,112,7],[64,10,113,6],[64,17,113,13],[64,21,113,17],[65,8,114,4],[65,9,114,5],[65,15,114,11],[66,10,115,6,"curr"],[66,14,115,10],[66,15,115,11,"isMounted"],[66,24,115,20],[66,27,115,23],[66,31,115,27],[67,10,116,6],[67,17,116,13],[67,22,116,18],[68,8,117,4],[69,6,118,2],[70,4,118,3],[71,6,118,3,"key"],[71,9,118,3],[72,6,118,3,"value"],[72,11,118,3],[72,13,123,2],[72,22,123,2,"notifyCellUnmounted"],[72,41,123,21,"notifyCellUnmounted"],[72,42,123,22,"cellKey"],[72,49,123,37],[72,51,123,45],[73,8,124,4],[73,12,124,10,"curr"],[73,16,124,14],[73,19,124,17],[73,23,124,21],[73,24,124,22,"_cellMetrics"],[73,36,124,34],[73,37,124,35,"get"],[73,40,124,38],[73,41,124,39,"cellKey"],[73,48,124,46],[73,49,124,47],[74,8,125,4],[74,12,125,8,"curr"],[74,16,125,12],[74,18,125,14],[75,10,126,6,"curr"],[75,14,126,10],[75,15,126,11,"isMounted"],[75,24,126,20],[75,27,126,23],[75,32,126,28],[76,8,127,4],[77,6,128,2],[78,4,128,3],[79,6,128,3,"key"],[79,9,128,3],[80,6,128,3,"value"],[80,11,128,3],[80,13,133,2],[80,22,133,2,"notifyListContentLayout"],[80,45,133,25,"notifyListContentLayout"],[80,46,133,25,"_ref2"],[80,51,133,25],[80,53,139,11],[81,8,139,11],[81,12,134,4,"orientation"],[81,23,134,15],[81,26,134,15,"_ref2"],[81,31,134,15],[81,32,134,4,"orientation"],[81,43,134,15],[82,10,135,4,"layout"],[82,16,135,10],[82,19,135,10,"_ref2"],[82,24,135,10],[82,25,135,4,"layout"],[82,31,135,10],[83,8,140,4],[83,12,140,8],[83,13,140,9,"_invalidateIfOrientationChanged"],[83,44,140,40],[83,45,140,41,"orientation"],[83,56,140,52],[83,57,140,53],[84,8,141,4],[84,12,141,8],[84,13,141,9,"_contentLength"],[84,27,141,23],[84,30,141,26],[84,34,141,30],[84,35,141,31,"_selectLength"],[84,48,141,44],[84,49,141,45,"layout"],[84,55,141,51],[84,56,141,52],[85,6,142,2],[86,4,142,3],[87,6,142,3,"key"],[87,9,142,3],[88,6,142,3,"value"],[88,11,142,3],[88,13,147,2],[88,22,147,2,"getAverageCellLength"],[88,42,147,22,"getAverageCellLength"],[88,43,147,22],[88,45,147,33],[89,8,148,4],[89,15,148,11],[89,19,148,15],[89,20,148,16,"_averageCellLength"],[89,38,148,34],[90,6,149,2],[91,4,149,3],[92,6,149,3,"key"],[92,9,149,3],[93,6,149,3,"value"],[93,11,149,3],[93,13,155,2],[93,22,155,2,"getHighestMeasuredCellIndex"],[93,49,155,29,"getHighestMeasuredCellIndex"],[93,50,155,29],[93,52,155,40],[94,8,156,4],[94,15,156,11],[94,19,156,15],[94,20,156,16,"_highestMeasuredCellIndex"],[94,45,156,41],[95,6,157,2],[96,4,157,3],[97,6,157,3,"key"],[97,9,157,3],[98,6,157,3,"value"],[98,11,157,3],[98,13,164,2],[98,22,164,2,"getCellMetricsApprox"],[98,42,164,22,"getCellMetricsApprox"],[98,43,164,23,"index"],[98,48,164,36],[98,50,164,38,"props"],[98,55,164,60],[98,57,164,75],[99,8,165,4],[99,12,165,10,"frame"],[99,17,165,15],[99,20,165,18],[99,24,165,22],[99,25,165,23,"getCellMetrics"],[99,39,165,37],[99,40,165,38,"index"],[99,45,165,43],[99,47,165,45,"props"],[99,52,165,50],[99,53,165,51],[100,8,166,4],[100,12,166,8,"frame"],[100,17,166,13],[100,21,166,17,"frame"],[100,26,166,22],[100,27,166,23,"index"],[100,32,166,28],[100,37,166,33,"index"],[100,42,166,38],[100,44,166,40],[101,10,168,6],[101,17,168,13,"frame"],[101,22,168,18],[102,8,169,4],[102,9,169,5],[102,15,169,11],[103,10,170,6],[103,14,170,10,"offset"],[103,20,170,16],[104,10,172,6],[104,14,172,12,"highestMeasuredCellIndex"],[104,38,172,36],[104,41,172,39],[104,45,172,43],[104,46,172,44,"getHighestMeasuredCellIndex"],[104,73,172,71],[104,74,172,72],[104,75,172,73],[105,10,173,6],[105,14,173,10,"highestMeasuredCellIndex"],[105,38,173,34],[105,41,173,37,"index"],[105,46,173,42],[105,48,173,44],[106,12,178,8],[106,16,178,14,"highestMeasuredCellFrame"],[106,40,178,38],[106,43,178,41],[106,47,178,45],[106,48,178,46,"getCellMetrics"],[106,62,178,60],[106,63,179,10,"highestMeasuredCellIndex"],[106,87,179,34],[106,89,180,10,"props"],[106,94,181,8],[106,95,181,9],[107,12,182,8],[107,16,182,12,"highestMeasuredCellFrame"],[107,40,182,36],[107,42,182,38],[108,14,183,10,"offset"],[108,20,183,16],[108,23,184,12,"highestMeasuredCellFrame"],[108,47,184,36],[108,48,184,37,"offset"],[108,54,184,43],[108,57,185,12,"highestMeasuredCellFrame"],[108,81,185,36],[108,82,185,37,"length"],[108,88,185,43],[108,91,186,12],[108,95,186,16],[108,96,186,17,"_averageCellLength"],[108,114,186,35],[108,118,186,39,"index"],[108,123,186,44],[108,126,186,47,"highestMeasuredCellIndex"],[108,150,186,71],[108,153,186,74],[108,154,186,75],[108,155,186,76],[109,12,187,8],[110,10,188,6],[111,10,190,6],[111,14,190,10,"offset"],[111,20,190,16],[111,24,190,20],[111,28,190,24],[111,30,190,26],[112,12,191,8,"offset"],[112,18,191,14],[112,21,191,17],[112,25,191,21],[112,26,191,22,"_averageCellLength"],[112,44,191,40],[112,47,191,43,"index"],[112,52,191,48],[113,10,192,6],[114,10,194,6],[114,14,194,13,"data"],[114,18,194,17],[114,21,194,35,"props"],[114,26,194,40],[114,27,194,13,"data"],[114,31,194,17],[115,12,194,19,"getItemCount"],[115,24,194,31],[115,27,194,35,"props"],[115,32,194,40],[115,33,194,19,"getItemCount"],[115,45,194,31],[116,10,195,6],[116,14,195,6,"invariant"],[116,23,195,15],[116,24,195,15,"default"],[116,31,195,15],[116,33,196,8,"index"],[116,38,196,13],[116,42,196,17],[116,43,196,18],[116,47,196,22,"index"],[116,52,196,27],[116,55,196,30,"getItemCount"],[116,67,196,42],[116,68,196,43,"data"],[116,72,196,47],[116,73,196,48],[116,75,197,8],[116,119,197,52],[116,122,197,55,"index"],[116,127,198,6],[116,128,198,7],[117,10,199,6],[117,17,199,13],[118,12,200,8,"length"],[118,18,200,14],[118,20,200,16],[118,24,200,20],[118,25,200,21,"_averageCellLength"],[118,43,200,39],[119,12,201,8,"offset"],[119,18,201,14],[120,12,202,8,"index"],[120,17,202,13],[121,12,203,8,"isMounted"],[121,21,203,17],[121,23,203,19],[122,10,204,6],[122,11,204,7],[123,8,205,4],[124,6,206,2],[125,4,206,3],[126,6,206,3,"key"],[126,9,206,3],[127,6,206,3,"value"],[127,11,206,3],[127,13,211,2],[127,22,211,2,"getCellMetrics"],[127,36,211,16,"getCellMetrics"],[127,37,211,17,"index"],[127,42,211,30],[127,44,211,32,"props"],[127,49,211,54],[127,51,211,70],[128,8,212,4],[128,12,212,11,"data"],[128,16,212,15],[128,19,212,57,"props"],[128,24,212,62],[128,25,212,11,"data"],[128,29,212,15],[129,10,212,17,"getItem"],[129,17,212,24],[129,20,212,57,"props"],[129,25,212,62],[129,26,212,17,"getItem"],[129,33,212,24],[130,10,212,26,"getItemCount"],[130,22,212,38],[130,25,212,57,"props"],[130,30,212,62],[130,31,212,26,"getItemCount"],[130,43,212,38],[131,10,212,40,"getItemLayout"],[131,23,212,53],[131,26,212,57,"props"],[131,31,212,62],[131,32,212,40,"getItemLayout"],[131,45,212,53],[132,8,213,4],[132,12,213,4,"invariant"],[132,21,213,13],[132,22,213,13,"default"],[132,29,213,13],[132,31,214,6,"index"],[132,36,214,11],[132,40,214,15],[132,41,214,16],[132,45,214,20,"index"],[132,50,214,25],[132,53,214,28,"getItemCount"],[132,65,214,40],[132,66,214,41,"data"],[132,70,214,45],[132,71,214,46],[132,73,215,6],[132,124,215,57],[132,127,215,60,"index"],[132,132,216,4],[132,133,216,5],[133,8,217,4],[133,12,217,10,"keyExtractor"],[133,24,217,22],[133,27,217,25,"props"],[133,32,217,30],[133,33,217,31,"keyExtractor"],[133,45,217,43],[133,49,217,47,"defaultKeyExtractor"],[133,65,217,66],[133,66,217,66,"keyExtractor"],[133,78,217,66],[134,8,218,4],[134,12,218,10,"frame"],[134,17,218,15],[134,20,218,18],[134,24,218,22],[134,25,218,23,"_cellMetrics"],[134,37,218,35],[134,38,218,36,"get"],[134,41,218,39],[134,42,219,6,"keyExtractor"],[134,54,219,18],[134,55,219,19,"getItem"],[134,62,219,26],[134,63,219,27,"data"],[134,67,219,31],[134,69,219,33,"index"],[134,74,219,38],[134,75,219,39],[134,77,219,41,"index"],[134,82,219,46],[134,83,220,4],[134,84,220,5],[135,8,221,4],[135,12,221,8,"frame"],[135,17,221,13],[135,21,221,17,"frame"],[135,26,221,22],[135,27,221,23,"index"],[135,32,221,28],[135,37,221,33,"index"],[135,42,221,38],[135,44,221,40],[136,10,222,6],[136,17,222,13,"frame"],[136,22,222,18],[137,8,223,4],[138,8,225,4],[138,12,225,8,"getItemLayout"],[138,25,225,21],[138,27,225,23],[139,10,226,6],[139,14,226,6,"_getItemLayout"],[139,28,226,6],[139,31,226,31,"getItemLayout"],[139,44,226,44],[139,45,226,45,"data"],[139,49,226,49],[139,51,226,51,"index"],[139,56,226,56],[139,57,226,57],[140,12,226,13,"length"],[140,18,226,19],[140,21,226,19,"_getItemLayout"],[140,35,226,19],[140,36,226,13,"length"],[140,42,226,19],[141,12,226,21,"offset"],[141,18,226,27],[141,21,226,27,"_getItemLayout"],[141,35,226,27],[141,36,226,21,"offset"],[141,42,226,27],[142,10,229,6],[142,17,229,13],[143,12,229,14,"index"],[143,17,229,19],[144,12,229,21,"length"],[144,18,229,27],[145,12,229,29,"offset"],[145,18,229,35],[146,12,229,37,"isMounted"],[146,21,229,46],[146,23,229,48],[147,10,229,52],[147,11,229,53],[148,8,230,4],[149,8,232,4],[149,15,232,11],[149,19,232,15],[150,6,233,2],[151,4,233,3],[152,6,233,3,"key"],[152,9,233,3],[153,6,233,3,"value"],[153,11,233,3],[153,13,239,2],[153,22,239,2,"getCellOffsetApprox"],[153,41,239,21,"getCellOffsetApprox"],[153,42,239,22,"index"],[153,47,239,35],[153,49,239,37,"props"],[153,54,239,59],[153,56,239,69],[154,8,240,4],[154,12,240,8,"Number"],[154,18,240,14],[154,19,240,15,"isInteger"],[154,28,240,24],[154,29,240,25,"index"],[154,34,240,30],[154,35,240,31],[154,37,240,33],[155,10,241,6],[155,17,241,13],[155,21,241,17],[155,22,241,18,"getCellMetricsApprox"],[155,42,241,38],[155,43,241,39,"index"],[155,48,241,44],[155,50,241,46,"props"],[155,55,241,51],[155,56,241,52],[155,57,241,53,"offset"],[155,63,241,59],[156,8,242,4],[156,9,242,5],[156,15,242,11],[157,10,243,6],[157,14,243,12,"frameMetrics"],[157,26,243,24],[157,29,243,27],[157,33,243,31],[157,34,243,32,"getCellMetricsApprox"],[157,54,243,52],[157,55,243,53,"Math"],[157,59,243,57],[157,60,243,58,"floor"],[157,65,243,63],[157,66,243,64,"index"],[157,71,243,69],[157,72,243,70],[157,74,243,72,"props"],[157,79,243,77],[157,80,243,78],[158,10,244,6],[158,14,244,12,"remainder"],[158,23,244,21],[158,26,244,24,"index"],[158,31,244,29],[158,34,244,32,"Math"],[158,38,244,36],[158,39,244,37,"floor"],[158,44,244,42],[158,45,244,43,"index"],[158,50,244,48],[158,51,244,49],[159,10,245,6],[159,17,245,13,"frameMetrics"],[159,29,245,25],[159,30,245,26,"offset"],[159,36,245,32],[159,39,245,35,"remainder"],[159,48,245,44],[159,51,245,47,"frameMetrics"],[159,63,245,59],[159,64,245,60,"length"],[159,70,245,66],[160,8,246,4],[161,6,247,2],[162,4,247,3],[163,6,247,3,"key"],[163,9,247,3],[164,6,247,3,"value"],[164,11,247,3],[164,13,252,2],[164,22,252,2,"getContentLength"],[164,38,252,18,"getContentLength"],[164,39,252,18],[164,41,252,29],[165,8,253,4],[165,15,253,11],[165,19,253,15],[165,20,253,16,"_contentLength"],[165,34,253,30],[165,38,253,34],[165,39,253,35],[166,6,254,2],[167,4,254,3],[168,6,254,3,"key"],[168,9,254,3],[169,6,254,3,"value"],[169,11,254,3],[169,13,259,2],[169,22,259,2,"hasContentLength"],[169,38,259,18,"hasContentLength"],[169,39,259,18],[169,41,259,30],[170,8,260,4],[170,15,260,11],[170,19,260,15],[170,20,260,16,"_contentLength"],[170,34,260,30],[170,38,260,34],[170,42,260,38],[171,6,261,2],[172,4,261,3],[173,6,261,3,"key"],[173,9,261,3],[174,6,261,3,"value"],[174,11,261,3],[174,13,267,2],[174,22,267,2,"flowRelativeOffset"],[174,40,267,20,"flowRelativeOffset"],[174,41,268,4,"layout"],[174,47,268,27],[174,49,269,4,"referenceContentLength"],[174,71,269,36],[174,73,270,12],[175,8,271,4],[175,12,271,4,"_this$_orientation"],[175,30,271,4],[175,33,271,30],[175,37,271,34],[175,38,271,35,"_orientation"],[175,50,271,47],[176,10,271,11,"horizontal"],[176,20,271,21],[176,23,271,21,"_this$_orientation"],[176,41,271,21],[176,42,271,11,"horizontal"],[176,52,271,21],[177,10,271,23,"rtl"],[177,13,271,26],[177,16,271,26,"_this$_orientation"],[177,34,271,26],[177,35,271,23,"rtl"],[177,38,271,26],[178,8,273,4],[178,12,273,8,"horizontal"],[178,22,273,18],[178,26,273,22,"rtl"],[178,29,273,25],[178,31,273,27],[179,10,274,6],[179,14,274,12,"contentLength"],[179,27,274,25],[179,30,274,28,"referenceContentLength"],[179,52,274,50],[179,56,274,54],[179,60,274,58],[179,61,274,59,"_contentLength"],[179,75,274,73],[180,10,275,6],[180,14,275,6,"invariant"],[180,23,275,15],[180,24,275,15,"default"],[180,31,275,15],[180,33,276,8,"contentLength"],[180,46,276,21],[180,50,276,25],[180,54,276,29],[180,56,277,8],[180,144,278,6],[180,145,278,7],[181,10,279,6],[181,17,280,8,"contentLength"],[181,30,280,21],[181,34,281,9],[181,38,281,13],[181,39,281,14,"_selectOffset"],[181,52,281,27],[181,53,281,28,"layout"],[181,59,281,34],[181,60,281,35],[181,63,281,38],[181,67,281,42],[181,68,281,43,"_selectLength"],[181,81,281,56],[181,82,281,57,"layout"],[181,88,281,63],[181,89,281,64],[181,90,281,65],[182,8,283,4],[182,9,283,5],[182,15,283,11],[183,10,284,6],[183,17,284,13],[183,21,284,17],[183,22,284,18,"_selectOffset"],[183,35,284,31],[183,36,284,32,"layout"],[183,42,284,38],[183,43,284,39],[184,8,285,4],[185,6,286,2],[186,4,286,3],[187,6,286,3,"key"],[187,9,286,3],[188,6,286,3,"value"],[188,11,286,3],[188,13,291,2],[188,22,291,2,"cartesianOffset"],[188,37,291,17,"cartesianOffset"],[188,38,291,18,"flowRelativeOffset"],[188,56,291,44],[188,58,291,54],[189,8,292,4],[189,12,292,4,"_this$_orientation2"],[189,31,292,4],[189,34,292,30],[189,38,292,34],[189,39,292,35,"_orientation"],[189,51,292,47],[190,10,292,11,"horizontal"],[190,20,292,21],[190,23,292,21,"_this$_orientation2"],[190,42,292,21],[190,43,292,11,"horizontal"],[190,53,292,21],[191,10,292,23,"rtl"],[191,13,292,26],[191,16,292,26,"_this$_orientation2"],[191,35,292,26],[191,36,292,23,"rtl"],[191,39,292,26],[192,8,294,4],[192,12,294,8,"horizontal"],[192,22,294,18],[192,26,294,22,"rtl"],[192,29,294,25],[192,31,294,27],[193,10,295,6],[193,14,295,6,"invariant"],[193,23,295,15],[193,24,295,15,"default"],[193,31,295,15],[193,33,296,8],[193,37,296,12],[193,38,296,13,"_contentLength"],[193,52,296,27],[193,56,296,31],[193,60,296,35],[193,62,297,8],[193,150,298,6],[193,151,298,7],[194,10,299,6],[194,17,299,13],[194,21,299,17],[194,22,299,18,"_contentLength"],[194,36,299,32],[194,39,299,35,"flowRelativeOffset"],[194,57,299,53],[195,8,300,4],[195,9,300,5],[195,15,300,11],[196,10,301,6],[196,17,301,13,"flowRelativeOffset"],[196,35,301,31],[197,8,302,4],[198,6,303,2],[199,4,303,3],[200,6,303,3,"key"],[200,9,303,3],[201,6,303,3,"value"],[201,11,303,3],[201,13,305,2],[201,22,305,2,"_invalidateIfOrientationChanged"],[201,53,305,33,"_invalidateIfOrientationChanged"],[201,54,305,34,"orientation"],[201,65,305,62],[201,67,305,70],[202,8,306,4],[202,12,306,8,"orientation"],[202,23,306,19],[202,24,306,20,"rtl"],[202,27,306,23],[202,32,306,28],[202,36,306,32],[202,37,306,33,"_orientation"],[202,49,306,45],[202,50,306,46,"rtl"],[202,53,306,49],[202,55,306,51],[203,10,307,6],[203,14,307,10],[203,15,307,11,"_cellMetrics"],[203,27,307,23],[203,28,307,24,"clear"],[203,33,307,29],[203,34,307,30],[203,35,307,31],[204,8,308,4],[205,8,310,4],[205,12,310,8,"orientation"],[205,23,310,19],[205,24,310,20,"horizontal"],[205,34,310,30],[205,39,310,35],[205,43,310,39],[205,44,310,40,"_orientation"],[205,56,310,52],[205,57,310,53,"horizontal"],[205,67,310,63],[205,69,310,65],[206,10,311,6],[206,14,311,10],[206,15,311,11,"_averageCellLength"],[206,33,311,29],[206,36,311,32],[206,37,311,33],[207,10,312,6],[207,14,312,10],[207,15,312,11,"_highestMeasuredCellIndex"],[207,40,312,36],[207,43,312,39],[207,44,312,40],[208,10,313,6],[208,14,313,10],[208,15,313,11,"_measuredCellsLength"],[208,35,313,31],[208,38,313,34],[208,39,313,35],[209,10,314,6],[209,14,314,10],[209,15,314,11,"_measuredCellsCount"],[209,34,314,30],[209,37,314,33],[209,38,314,34],[210,8,315,4],[211,8,317,4],[211,12,317,8],[211,13,317,9,"_orientation"],[211,25,317,21],[211,28,317,24,"orientation"],[211,39,317,35],[212,6,318,2],[213,4,318,3],[214,6,318,3,"key"],[214,9,318,3],[215,6,318,3,"value"],[215,11,318,3],[215,13,320,2],[215,22,320,2,"_selectLength"],[215,35,320,15,"_selectLength"],[215,36,320,15,"_ref3"],[215,41,320,15],[215,43,323,62],[216,8,323,62],[216,12,321,4,"width"],[216,17,321,9],[216,20,321,9,"_ref3"],[216,25,321,9],[216,26,321,4,"width"],[216,31,321,9],[217,10,322,4,"height"],[217,16,322,10],[217,19,322,10,"_ref3"],[217,24,322,10],[217,25,322,4,"height"],[217,31,322,10],[218,8,324,4],[218,15,324,11],[218,19,324,15],[218,20,324,16,"_orientation"],[218,32,324,28],[218,33,324,29,"horizontal"],[218,43,324,39],[218,46,324,42,"width"],[218,51,324,47],[218,54,324,50,"height"],[218,60,324,56],[219,6,325,2],[220,4,325,3],[221,6,325,3,"key"],[221,9,325,3],[222,6,325,3,"value"],[222,11,325,3],[222,13,327,2],[222,22,327,2,"_selectOffset"],[222,35,327,15,"_selectOffset"],[222,36,327,15,"_ref4"],[222,41,327,15],[222,43,327,72],[223,8,327,72],[223,12,327,17,"x"],[223,13,327,18],[223,16,327,18,"_ref4"],[223,21,327,18],[223,22,327,17,"x"],[223,23,327,18],[224,10,327,20,"y"],[224,11,327,21],[224,14,327,21,"_ref4"],[224,19,327,21],[224,20,327,20,"y"],[224,21,327,21],[225,8,328,4],[225,15,328,11],[225,19,328,15],[225,20,328,16,"_orientation"],[225,32,328,28],[225,33,328,29,"horizontal"],[225,43,328,39],[225,46,328,42,"x"],[225,47,328,43],[225,50,328,46,"y"],[225,51,328,47],[226,6,329,2],[227,4,329,3],[228,2,329,3],[229,0,329,3],[229,3]],"functionMap":{"names":["<global>","ListMetricsAggregator","notifyCellLayout","notifyCellUnmounted","notifyListContentLayout","getAverageCellLength","getHighestMeasuredCellIndex","getCellMetricsApprox","getCellMetrics","getCellOffsetApprox","getContentLength","hasContentLength","flowRelativeOffset","cartesianOffset","_invalidateIfOrientationChanged","_selectLength","_selectOffset"],"mappings":"AAA;eC0D;ECiB;GD0C;EEK;GFK;EGK;GHS;EIK;GJE;EKM;GLE;EMO;GN0C;EOK;GPsB;EQM;GRQ;ESK;GTE;EUK;GVE;EWM;GXmB;EYK;GZY;EaE;Gba;EcE;GdK;EeE;GfE"},"hasCjsExports":false},"type":"js/module"}]}