{"dependencies":[{"name":"@babel/runtime/helpers/slicedToArray","data":{"asyncType":null,"isESMImport":false,"locs":[],"key":"5y7e5+zC7teYEEC6niD9f5zII1M=","exportNames":["*"],"imports":1}},{"name":"./constants","data":{"asyncType":null,"isESMImport":false,"locs":[{"start":{"line":7,"column":4,"index":94},"end":{"line":7,"column":26,"index":116}}],"key":"3z43bJyk/UB4EKjDCOXTFak09do=","exportNames":["*"],"imports":1}},{"name":"./debug","data":{"asyncType":null,"isESMImport":false,"locs":[{"start":{"line":8,"column":14,"index":131},"end":{"line":8,"column":32,"index":149}}],"key":"TxAI1NjbyH9rczJWabibJU6Zawg=","exportNames":["*"],"imports":1}}],"output":[{"data":{"code":"__d(function (global, require, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {\n  'use strict';\n\n  var _slicedToArray = require(_dependencyMap[0]).default;\n  var _require = require(_dependencyMap[1]),\n    MAX_SAFE_COMPONENT_LENGTH = _require.MAX_SAFE_COMPONENT_LENGTH,\n    MAX_SAFE_BUILD_LENGTH = _require.MAX_SAFE_BUILD_LENGTH,\n    MAX_LENGTH = _require.MAX_LENGTH;\n  var debug = require(_dependencyMap[2]);\n  exports = module.exports = {};\n\n  // The actual regexps go on exports.re\n  var re = exports.re = [];\n  var safeRe = exports.safeRe = [];\n  var src = exports.src = [];\n  var safeSrc = exports.safeSrc = [];\n  var t = exports.t = {};\n  var R = 0;\n  var LETTERDASHNUMBER = '[a-zA-Z0-9-]';\n\n  // Replace some greedy regex tokens to prevent regex dos issues. These regex are\n  // used internally via the safeRe object since all inputs in this library get\n  // normalized first to trim and collapse all extra whitespace. The original\n  // regexes are exported for userland consumption and lower level usage. A\n  // future breaking change could export the safer regex only with a note that\n  // all input should have extra whitespace removed.\n  var safeRegexReplacements = [['\\\\s', 1], ['\\\\d', MAX_LENGTH], [LETTERDASHNUMBER, MAX_SAFE_BUILD_LENGTH]];\n  var makeSafeRegex = value => {\n    for (var _ref of safeRegexReplacements) {\n      var _ref2 = _slicedToArray(_ref, 2);\n      var token = _ref2[0];\n      var max = _ref2[1];\n      value = value.split(`${token}*`).join(`${token}{0,${max}}`).split(`${token}+`).join(`${token}{1,${max}}`);\n    }\n    return value;\n  };\n  var createToken = (name, value, isGlobal) => {\n    var safe = makeSafeRegex(value);\n    var index = R++;\n    debug(name, index, value);\n    t[name] = index;\n    src[index] = value;\n    safeSrc[index] = safe;\n    re[index] = new RegExp(value, isGlobal ? 'g' : undefined);\n    safeRe[index] = new RegExp(safe, isGlobal ? 'g' : undefined);\n  };\n\n  // The following Regular Expressions can be used for tokenizing,\n  // validating, and parsing SemVer version strings.\n\n  // ## Numeric Identifier\n  // A single `0`, or a non-zero digit followed by zero or more digits.\n\n  createToken('NUMERICIDENTIFIER', '0|[1-9]\\\\d*');\n  createToken('NUMERICIDENTIFIERLOOSE', '\\\\d+');\n\n  // ## Non-numeric Identifier\n  // Zero or more digits, followed by a letter or hyphen, and then zero or\n  // more letters, digits, or hyphens.\n\n  createToken('NONNUMERICIDENTIFIER', `\\\\d*[a-zA-Z-]${LETTERDASHNUMBER}*`);\n\n  // ## Main Version\n  // Three dot-separated numeric identifiers.\n\n  createToken('MAINVERSION', `(${src[t.NUMERICIDENTIFIER]})\\\\.` + `(${src[t.NUMERICIDENTIFIER]})\\\\.` + `(${src[t.NUMERICIDENTIFIER]})`);\n  createToken('MAINVERSIONLOOSE', `(${src[t.NUMERICIDENTIFIERLOOSE]})\\\\.` + `(${src[t.NUMERICIDENTIFIERLOOSE]})\\\\.` + `(${src[t.NUMERICIDENTIFIERLOOSE]})`);\n\n  // ## Pre-release Version Identifier\n  // A numeric identifier, or a non-numeric identifier.\n  // Non-numberic identifiers include numberic identifiers but can be longer.\n  // Therefore non-numberic identifiers must go first.\n\n  createToken('PRERELEASEIDENTIFIER', `(?:${src[t.NONNUMERICIDENTIFIER]}|${src[t.NUMERICIDENTIFIER]})`);\n  createToken('PRERELEASEIDENTIFIERLOOSE', `(?:${src[t.NONNUMERICIDENTIFIER]}|${src[t.NUMERICIDENTIFIERLOOSE]})`);\n\n  // ## Pre-release Version\n  // Hyphen, followed by one or more dot-separated pre-release version\n  // identifiers.\n\n  createToken('PRERELEASE', `(?:-(${src[t.PRERELEASEIDENTIFIER]}(?:\\\\.${src[t.PRERELEASEIDENTIFIER]})*))`);\n  createToken('PRERELEASELOOSE', `(?:-?(${src[t.PRERELEASEIDENTIFIERLOOSE]}(?:\\\\.${src[t.PRERELEASEIDENTIFIERLOOSE]})*))`);\n\n  // ## Build Metadata Identifier\n  // Any combination of digits, letters, or hyphens.\n\n  createToken('BUILDIDENTIFIER', `${LETTERDASHNUMBER}+`);\n\n  // ## Build Metadata\n  // Plus sign, followed by one or more period-separated build metadata\n  // identifiers.\n\n  createToken('BUILD', `(?:\\\\+(${src[t.BUILDIDENTIFIER]}(?:\\\\.${src[t.BUILDIDENTIFIER]})*))`);\n\n  // ## Full Version String\n  // A main version, followed optionally by a pre-release version and\n  // build metadata.\n\n  // Note that the only major, minor, patch, and pre-release sections of\n  // the version string are capturing groups.  The build metadata is not a\n  // capturing group, because it should not ever be used in version\n  // comparison.\n\n  createToken('FULLPLAIN', `v?${src[t.MAINVERSION]}${src[t.PRERELEASE]}?${src[t.BUILD]}?`);\n  createToken('FULL', `^${src[t.FULLPLAIN]}$`);\n\n  // like full, but allows v1.2.3 and =1.2.3, which people do sometimes.\n  // also, 1.0.0alpha1 (prerelease without the hyphen) which is pretty\n  // common in the npm registry.\n  createToken('LOOSEPLAIN', `[v=\\\\s]*${src[t.MAINVERSIONLOOSE]}${src[t.PRERELEASELOOSE]}?${src[t.BUILD]}?`);\n  createToken('LOOSE', `^${src[t.LOOSEPLAIN]}$`);\n  createToken('GTLT', '((?:<|>)?=?)');\n\n  // Something like \"2.*\" or \"1.2.x\".\n  // Note that \"x.x\" is a valid xRange identifer, meaning \"any version\"\n  // Only the first item is strictly required.\n  createToken('XRANGEIDENTIFIERLOOSE', `${src[t.NUMERICIDENTIFIERLOOSE]}|x|X|\\\\*`);\n  createToken('XRANGEIDENTIFIER', `${src[t.NUMERICIDENTIFIER]}|x|X|\\\\*`);\n  createToken('XRANGEPLAIN', `[v=\\\\s]*(${src[t.XRANGEIDENTIFIER]})` + `(?:\\\\.(${src[t.XRANGEIDENTIFIER]})` + `(?:\\\\.(${src[t.XRANGEIDENTIFIER]})` + `(?:${src[t.PRERELEASE]})?${src[t.BUILD]}?` + `)?)?`);\n  createToken('XRANGEPLAINLOOSE', `[v=\\\\s]*(${src[t.XRANGEIDENTIFIERLOOSE]})` + `(?:\\\\.(${src[t.XRANGEIDENTIFIERLOOSE]})` + `(?:\\\\.(${src[t.XRANGEIDENTIFIERLOOSE]})` + `(?:${src[t.PRERELEASELOOSE]})?${src[t.BUILD]}?` + `)?)?`);\n  createToken('XRANGE', `^${src[t.GTLT]}\\\\s*${src[t.XRANGEPLAIN]}$`);\n  createToken('XRANGELOOSE', `^${src[t.GTLT]}\\\\s*${src[t.XRANGEPLAINLOOSE]}$`);\n\n  // Coercion.\n  // Extract anything that could conceivably be a part of a valid semver\n  createToken('COERCEPLAIN', `${\"(^|[^\\\\d])(\\\\d{1,\"}${MAX_SAFE_COMPONENT_LENGTH}})` + `(?:\\\\.(\\\\d{1,${MAX_SAFE_COMPONENT_LENGTH}}))?` + `(?:\\\\.(\\\\d{1,${MAX_SAFE_COMPONENT_LENGTH}}))?`);\n  createToken('COERCE', `${src[t.COERCEPLAIN]}(?:$|[^\\\\d])`);\n  createToken('COERCEFULL', src[t.COERCEPLAIN] + `(?:${src[t.PRERELEASE]})?` + `(?:${src[t.BUILD]})?` + `(?:$|[^\\\\d])`);\n  createToken('COERCERTL', src[t.COERCE], true);\n  createToken('COERCERTLFULL', src[t.COERCEFULL], true);\n\n  // Tilde ranges.\n  // Meaning is \"reasonably at or greater than\"\n  createToken('LONETILDE', '(?:~>?)');\n  createToken('TILDETRIM', `(\\\\s*)${src[t.LONETILDE]}\\\\s+`, true);\n  exports.tildeTrimReplace = '$1~';\n  createToken('TILDE', `^${src[t.LONETILDE]}${src[t.XRANGEPLAIN]}$`);\n  createToken('TILDELOOSE', `^${src[t.LONETILDE]}${src[t.XRANGEPLAINLOOSE]}$`);\n\n  // Caret ranges.\n  // Meaning is \"at least and backwards compatible with\"\n  createToken('LONECARET', '(?:\\\\^)');\n  createToken('CARETTRIM', `(\\\\s*)${src[t.LONECARET]}\\\\s+`, true);\n  exports.caretTrimReplace = '$1^';\n  createToken('CARET', `^${src[t.LONECARET]}${src[t.XRANGEPLAIN]}$`);\n  createToken('CARETLOOSE', `^${src[t.LONECARET]}${src[t.XRANGEPLAINLOOSE]}$`);\n\n  // A simple gt/lt/eq thing, or just \"\" to indicate \"any version\"\n  createToken('COMPARATORLOOSE', `^${src[t.GTLT]}\\\\s*(${src[t.LOOSEPLAIN]})$|^$`);\n  createToken('COMPARATOR', `^${src[t.GTLT]}\\\\s*(${src[t.FULLPLAIN]})$|^$`);\n\n  // An expression to strip any whitespace between the gtlt and the thing\n  // it modifies, so that `> 1.2.3` ==> `>1.2.3`\n  createToken('COMPARATORTRIM', `(\\\\s*)${src[t.GTLT]}\\\\s*(${src[t.LOOSEPLAIN]}|${src[t.XRANGEPLAIN]})`, true);\n  exports.comparatorTrimReplace = '$1$2$3';\n\n  // Something like `1.2.3 - 1.2.4`\n  // Note that these all use the loose form, because they'll be\n  // checked against either the strict or loose comparator form\n  // later.\n  createToken('HYPHENRANGE', `^\\\\s*(${src[t.XRANGEPLAIN]})` + `\\\\s+-\\\\s+` + `(${src[t.XRANGEPLAIN]})` + `\\\\s*$`);\n  createToken('HYPHENRANGELOOSE', `^\\\\s*(${src[t.XRANGEPLAINLOOSE]})` + `\\\\s+-\\\\s+` + `(${src[t.XRANGEPLAINLOOSE]})` + `\\\\s*$`);\n\n  // Star ranges basically just allow anything at all.\n  createToken('STAR', '(<|>)?=?\\\\s*\\\\*');\n  // >=0.0.0 is like a star\n  createToken('GTE0', '^\\\\s*>=\\\\s*0\\\\.0\\\\.0\\\\s*$');\n  createToken('GTE0PRE', '^\\\\s*>=\\\\s*0\\\\.0\\\\.0-0\\\\s*$');\n});","lineCount":169,"map":[[2,2,1,0],[2,14,1,12],[4,2,1,12],[4,6,1,12,"_slicedToArray"],[4,20,1,12],[4,23,1,12,"require"],[4,30,1,12],[4,31,1,12,"_dependencyMap"],[4,45,1,12],[4,50,1,12,"default"],[4,57,1,12],[5,2,3,0],[5,6,3,0,"_require"],[5,14,3,0],[5,17,7,4,"require"],[5,24,7,11],[5,25,7,11,"_dependencyMap"],[5,39,7,11],[5,42,7,25],[5,43,7,26],[6,4,4,2,"MAX_SAFE_COMPONENT_LENGTH"],[6,29,4,27],[6,32,4,27,"_require"],[6,40,4,27],[6,41,4,2,"MAX_SAFE_COMPONENT_LENGTH"],[6,66,4,27],[7,4,5,2,"MAX_SAFE_BUILD_LENGTH"],[7,25,5,23],[7,28,5,23,"_require"],[7,36,5,23],[7,37,5,2,"MAX_SAFE_BUILD_LENGTH"],[7,58,5,23],[8,4,6,2,"MAX_LENGTH"],[8,14,6,12],[8,17,6,12,"_require"],[8,25,6,12],[8,26,6,2,"MAX_LENGTH"],[8,36,6,12],[9,2,8,0],[9,6,8,6,"debug"],[9,11,8,11],[9,14,8,14,"require"],[9,21,8,21],[9,22,8,21,"_dependencyMap"],[9,36,8,21],[9,39,8,31],[9,40,8,32],[10,2,9,0,"exports"],[10,9,9,7],[10,12,9,10,"module"],[10,18,9,16],[10,19,9,17,"exports"],[10,26,9,24],[10,29,9,27],[10,30,9,28],[10,31,9,29],[12,2,11,0],[13,2,12,0],[13,6,12,6,"re"],[13,8,12,8],[13,11,12,11,"exports"],[13,18,12,18],[13,19,12,19,"re"],[13,21,12,21],[13,24,12,24],[13,26,12,26],[14,2,13,0],[14,6,13,6,"safeRe"],[14,12,13,12],[14,15,13,15,"exports"],[14,22,13,22],[14,23,13,23,"safeRe"],[14,29,13,29],[14,32,13,32],[14,34,13,34],[15,2,14,0],[15,6,14,6,"src"],[15,9,14,9],[15,12,14,12,"exports"],[15,19,14,19],[15,20,14,20,"src"],[15,23,14,23],[15,26,14,26],[15,28,14,28],[16,2,15,0],[16,6,15,6,"safeSrc"],[16,13,15,13],[16,16,15,16,"exports"],[16,23,15,23],[16,24,15,24,"safeSrc"],[16,31,15,31],[16,34,15,34],[16,36,15,36],[17,2,16,0],[17,6,16,6,"t"],[17,7,16,7],[17,10,16,10,"exports"],[17,17,16,17],[17,18,16,18,"t"],[17,19,16,19],[17,22,16,22],[17,23,16,23],[17,24,16,24],[18,2,17,0],[18,6,17,4,"R"],[18,7,17,5],[18,10,17,8],[18,11,17,9],[19,2,19,0],[19,6,19,6,"LETTERDASHNUMBER"],[19,22,19,22],[19,25,19,25],[19,39,19,39],[21,2,21,0],[22,2,22,0],[23,2,23,0],[24,2,24,0],[25,2,25,0],[26,2,26,0],[27,2,27,0],[27,6,27,6,"safeRegexReplacements"],[27,27,27,27],[27,30,27,30],[27,31,28,2],[27,32,28,3],[27,37,28,8],[27,39,28,10],[27,40,28,11],[27,41,28,12],[27,43,29,2],[27,44,29,3],[27,49,29,8],[27,51,29,10,"MAX_LENGTH"],[27,61,29,20],[27,62,29,21],[27,64,30,2],[27,65,30,3,"LETTERDASHNUMBER"],[27,81,30,19],[27,83,30,21,"MAX_SAFE_BUILD_LENGTH"],[27,104,30,42],[27,105,30,43],[27,106,31,1],[28,2,33,0],[28,6,33,6,"makeSafeRegex"],[28,19,33,19],[28,22,33,23,"value"],[28,27,33,28],[28,31,33,33],[29,4,34,2],[29,13,34,2,"_ref"],[29,17,34,2],[29,21,34,29,"safeRegexReplacements"],[29,42,34,50],[29,44,34,52],[30,6,34,52],[30,10,34,52,"_ref2"],[30,15,34,52],[30,18,34,52,"_slicedToArray"],[30,32,34,52],[30,33,34,52,"_ref"],[30,37,34,52],[31,6,34,52],[31,10,34,14,"token"],[31,15,34,19],[31,18,34,19,"_ref2"],[31,23,34,19],[32,6,34,19],[32,10,34,21,"max"],[32,13,34,24],[32,16,34,24,"_ref2"],[32,21,34,24],[33,6,35,4,"value"],[33,11,35,9],[33,14,35,12,"value"],[33,19,35,17],[33,20,36,7,"split"],[33,25,36,12],[33,26,36,13],[33,29,36,16,"token"],[33,34,36,21],[33,37,36,24],[33,38,36,25],[33,39,36,26,"join"],[33,43,36,30],[33,44,36,31],[33,47,36,34,"token"],[33,52,36,39],[33,58,36,45,"max"],[33,61,36,48],[33,64,36,51],[33,65,36,52],[33,66,37,7,"split"],[33,71,37,12],[33,72,37,13],[33,75,37,16,"token"],[33,80,37,21],[33,83,37,24],[33,84,37,25],[33,85,37,26,"join"],[33,89,37,30],[33,90,37,31],[33,93,37,34,"token"],[33,98,37,39],[33,104,37,45,"max"],[33,107,37,48],[33,110,37,51],[33,111,37,52],[34,4,38,2],[35,4,39,2],[35,11,39,9,"value"],[35,16,39,14],[36,2,40,0],[36,3,40,1],[37,2,42,0],[37,6,42,6,"createToken"],[37,17,42,17],[37,20,42,20,"createToken"],[37,21,42,21,"name"],[37,25,42,25],[37,27,42,27,"value"],[37,32,42,32],[37,34,42,34,"isGlobal"],[37,42,42,42],[37,47,42,47],[38,4,43,2],[38,8,43,8,"safe"],[38,12,43,12],[38,15,43,15,"makeSafeRegex"],[38,28,43,28],[38,29,43,29,"value"],[38,34,43,34],[38,35,43,35],[39,4,44,2],[39,8,44,8,"index"],[39,13,44,13],[39,16,44,16,"R"],[39,17,44,17],[39,19,44,19],[40,4,45,2,"debug"],[40,9,45,7],[40,10,45,8,"name"],[40,14,45,12],[40,16,45,14,"index"],[40,21,45,19],[40,23,45,21,"value"],[40,28,45,26],[40,29,45,27],[41,4,46,2,"t"],[41,5,46,3],[41,6,46,4,"name"],[41,10,46,8],[41,11,46,9],[41,14,46,12,"index"],[41,19,46,17],[42,4,47,2,"src"],[42,7,47,5],[42,8,47,6,"index"],[42,13,47,11],[42,14,47,12],[42,17,47,15,"value"],[42,22,47,20],[43,4,48,2,"safeSrc"],[43,11,48,9],[43,12,48,10,"index"],[43,17,48,15],[43,18,48,16],[43,21,48,19,"safe"],[43,25,48,23],[44,4,49,2,"re"],[44,6,49,4],[44,7,49,5,"index"],[44,12,49,10],[44,13,49,11],[44,16,49,14],[44,20,49,18,"RegExp"],[44,26,49,24],[44,27,49,25,"value"],[44,32,49,30],[44,34,49,32,"isGlobal"],[44,42,49,40],[44,45,49,43],[44,48,49,46],[44,51,49,49,"undefined"],[44,60,49,58],[44,61,49,59],[45,4,50,2,"safeRe"],[45,10,50,8],[45,11,50,9,"index"],[45,16,50,14],[45,17,50,15],[45,20,50,18],[45,24,50,22,"RegExp"],[45,30,50,28],[45,31,50,29,"safe"],[45,35,50,33],[45,37,50,35,"isGlobal"],[45,45,50,43],[45,48,50,46],[45,51,50,49],[45,54,50,52,"undefined"],[45,63,50,61],[45,64,50,62],[46,2,51,0],[46,3,51,1],[48,2,53,0],[49,2,54,0],[51,2,56,0],[52,2,57,0],[54,2,59,0,"createToken"],[54,13,59,11],[54,14,59,12],[54,33,59,31],[54,35,59,33],[54,48,59,46],[54,49,59,47],[55,2,60,0,"createToken"],[55,13,60,11],[55,14,60,12],[55,38,60,36],[55,40,60,38],[55,46,60,44],[55,47,60,45],[57,2,62,0],[58,2,63,0],[59,2,64,0],[61,2,66,0,"createToken"],[61,13,66,11],[61,14,66,12],[61,36,66,34],[61,38,66,36],[61,54,66,52,"LETTERDASHNUMBER"],[61,70,66,68],[61,73,66,71],[61,74,66,72],[63,2,68,0],[64,2,69,0],[66,2,71,0,"createToken"],[66,13,71,11],[66,14,71,12],[66,27,71,25],[66,29,71,27],[66,33,71,31,"src"],[66,36,71,34],[66,37,71,35,"t"],[66,38,71,36],[66,39,71,37,"NUMERICIDENTIFIER"],[66,56,71,54],[66,57,71,55],[66,63,71,61],[66,66,72,19],[66,70,72,23,"src"],[66,73,72,26],[66,74,72,27,"t"],[66,75,72,28],[66,76,72,29,"NUMERICIDENTIFIER"],[66,93,72,46],[66,94,72,47],[66,100,72,53],[66,103,73,19],[66,107,73,23,"src"],[66,110,73,26],[66,111,73,27,"t"],[66,112,73,28],[66,113,73,29,"NUMERICIDENTIFIER"],[66,130,73,46],[66,131,73,47],[66,134,73,50],[66,135,73,51],[67,2,75,0,"createToken"],[67,13,75,11],[67,14,75,12],[67,32,75,30],[67,34,75,32],[67,38,75,36,"src"],[67,41,75,39],[67,42,75,40,"t"],[67,43,75,41],[67,44,75,42,"NUMERICIDENTIFIERLOOSE"],[67,66,75,64],[67,67,75,65],[67,73,75,71],[67,76,76,24],[67,80,76,28,"src"],[67,83,76,31],[67,84,76,32,"t"],[67,85,76,33],[67,86,76,34,"NUMERICIDENTIFIERLOOSE"],[67,108,76,56],[67,109,76,57],[67,115,76,63],[67,118,77,24],[67,122,77,28,"src"],[67,125,77,31],[67,126,77,32,"t"],[67,127,77,33],[67,128,77,34,"NUMERICIDENTIFIERLOOSE"],[67,150,77,56],[67,151,77,57],[67,154,77,60],[67,155,77,61],[69,2,79,0],[70,2,80,0],[71,2,81,0],[72,2,82,0],[74,2,84,0,"createToken"],[74,13,84,11],[74,14,84,12],[74,36,84,34],[74,38,84,36],[74,44,84,42,"src"],[74,47,84,45],[74,48,84,46,"t"],[74,49,84,47],[74,50,84,48,"NONNUMERICIDENTIFIER"],[74,70,84,68],[74,71,84,69],[74,75,85,4,"src"],[74,78,85,7],[74,79,85,8,"t"],[74,80,85,9],[74,81,85,10,"NUMERICIDENTIFIER"],[74,98,85,27],[74,99,85,28],[74,102,85,31],[74,103,85,32],[75,2,87,0,"createToken"],[75,13,87,11],[75,14,87,12],[75,41,87,39],[75,43,87,41],[75,49,87,47,"src"],[75,52,87,50],[75,53,87,51,"t"],[75,54,87,52],[75,55,87,53,"NONNUMERICIDENTIFIER"],[75,75,87,73],[75,76,87,74],[75,80,88,4,"src"],[75,83,88,7],[75,84,88,8,"t"],[75,85,88,9],[75,86,88,10,"NUMERICIDENTIFIERLOOSE"],[75,108,88,32],[75,109,88,33],[75,112,88,36],[75,113,88,37],[77,2,90,0],[78,2,91,0],[79,2,92,0],[81,2,94,0,"createToken"],[81,13,94,11],[81,14,94,12],[81,26,94,24],[81,28,94,26],[81,36,94,34,"src"],[81,39,94,37],[81,40,94,38,"t"],[81,41,94,39],[81,42,94,40,"PRERELEASEIDENTIFIER"],[81,62,94,60],[81,63,94,61],[81,72,95,9,"src"],[81,75,95,12],[81,76,95,13,"t"],[81,77,95,14],[81,78,95,15,"PRERELEASEIDENTIFIER"],[81,98,95,35],[81,99,95,36],[81,105,95,42],[81,106,95,43],[82,2,97,0,"createToken"],[82,13,97,11],[82,14,97,12],[82,31,97,29],[82,33,97,31],[82,42,97,40,"src"],[82,45,97,43],[82,46,97,44,"t"],[82,47,97,45],[82,48,97,46,"PRERELEASEIDENTIFIERLOOSE"],[82,73,97,71],[82,74,97,72],[82,83,98,9,"src"],[82,86,98,12],[82,87,98,13,"t"],[82,88,98,14],[82,89,98,15,"PRERELEASEIDENTIFIERLOOSE"],[82,114,98,40],[82,115,98,41],[82,121,98,47],[82,122,98,48],[84,2,100,0],[85,2,101,0],[87,2,103,0,"createToken"],[87,13,103,11],[87,14,103,12],[87,31,103,29],[87,33,103,31],[87,36,103,34,"LETTERDASHNUMBER"],[87,52,103,50],[87,55,103,53],[87,56,103,54],[89,2,105,0],[90,2,106,0],[91,2,107,0],[93,2,109,0,"createToken"],[93,13,109,11],[93,14,109,12],[93,21,109,19],[93,23,109,21],[93,33,109,31,"src"],[93,36,109,34],[93,37,109,35,"t"],[93,38,109,36],[93,39,109,37,"BUILDIDENTIFIER"],[93,54,109,52],[93,55,109,53],[93,64,110,9,"src"],[93,67,110,12],[93,68,110,13,"t"],[93,69,110,14],[93,70,110,15,"BUILDIDENTIFIER"],[93,85,110,30],[93,86,110,31],[93,92,110,37],[93,93,110,38],[95,2,112,0],[96,2,113,0],[97,2,114,0],[99,2,116,0],[100,2,117,0],[101,2,118,0],[102,2,119,0],[104,2,121,0,"createToken"],[104,13,121,11],[104,14,121,12],[104,25,121,23],[104,27,121,25],[104,32,121,30,"src"],[104,35,121,33],[104,36,121,34,"t"],[104,37,121,35],[104,38,121,36,"MAINVERSION"],[104,49,121,47],[104,50,121,48],[104,53,122,3,"src"],[104,56,122,6],[104,57,122,7,"t"],[104,58,122,8],[104,59,122,9,"PRERELEASE"],[104,69,122,19],[104,70,122,20],[104,74,123,2,"src"],[104,77,123,5],[104,78,123,6,"t"],[104,79,123,7],[104,80,123,8,"BUILD"],[104,85,123,13],[104,86,123,14],[104,89,123,17],[104,90,123,18],[105,2,125,0,"createToken"],[105,13,125,11],[105,14,125,12],[105,20,125,18],[105,22,125,20],[105,26,125,24,"src"],[105,29,125,27],[105,30,125,28,"t"],[105,31,125,29],[105,32,125,30,"FULLPLAIN"],[105,41,125,39],[105,42,125,40],[105,45,125,43],[105,46,125,44],[107,2,127,0],[108,2,128,0],[109,2,129,0],[110,2,130,0,"createToken"],[110,13,130,11],[110,14,130,12],[110,26,130,24],[110,28,130,26],[110,39,130,37,"src"],[110,42,130,40],[110,43,130,41,"t"],[110,44,130,42],[110,45,130,43,"MAINVERSIONLOOSE"],[110,61,130,59],[110,62,130,60],[110,65,131,3,"src"],[110,68,131,6],[110,69,131,7,"t"],[110,70,131,8],[110,71,131,9,"PRERELEASELOOSE"],[110,86,131,24],[110,87,131,25],[110,91,132,2,"src"],[110,94,132,5],[110,95,132,6,"t"],[110,96,132,7],[110,97,132,8,"BUILD"],[110,102,132,13],[110,103,132,14],[110,106,132,17],[110,107,132,18],[111,2,134,0,"createToken"],[111,13,134,11],[111,14,134,12],[111,21,134,19],[111,23,134,21],[111,27,134,25,"src"],[111,30,134,28],[111,31,134,29,"t"],[111,32,134,30],[111,33,134,31,"LOOSEPLAIN"],[111,43,134,41],[111,44,134,42],[111,47,134,45],[111,48,134,46],[112,2,136,0,"createToken"],[112,13,136,11],[112,14,136,12],[112,20,136,18],[112,22,136,20],[112,36,136,34],[112,37,136,35],[114,2,138,0],[115,2,139,0],[116,2,140,0],[117,2,141,0,"createToken"],[117,13,141,11],[117,14,141,12],[117,37,141,35],[117,39,141,37],[117,42,141,40,"src"],[117,45,141,43],[117,46,141,44,"t"],[117,47,141,45],[117,48,141,46,"NUMERICIDENTIFIERLOOSE"],[117,70,141,68],[117,71,141,69],[117,81,141,79],[117,82,141,80],[118,2,142,0,"createToken"],[118,13,142,11],[118,14,142,12],[118,32,142,30],[118,34,142,32],[118,37,142,35,"src"],[118,40,142,38],[118,41,142,39,"t"],[118,42,142,40],[118,43,142,41,"NUMERICIDENTIFIER"],[118,60,142,58],[118,61,142,59],[118,71,142,69],[118,72,142,70],[119,2,144,0,"createToken"],[119,13,144,11],[119,14,144,12],[119,27,144,25],[119,29,144,27],[119,41,144,39,"src"],[119,44,144,42],[119,45,144,43,"t"],[119,46,144,44],[119,47,144,45,"XRANGEIDENTIFIER"],[119,63,144,61],[119,64,144,62],[119,67,144,65],[119,70,145,19],[119,80,145,29,"src"],[119,83,145,32],[119,84,145,33,"t"],[119,85,145,34],[119,86,145,35,"XRANGEIDENTIFIER"],[119,102,145,51],[119,103,145,52],[119,106,145,55],[119,109,146,19],[119,119,146,29,"src"],[119,122,146,32],[119,123,146,33,"t"],[119,124,146,34],[119,125,146,35,"XRANGEIDENTIFIER"],[119,141,146,51],[119,142,146,52],[119,145,146,55],[119,148,147,19],[119,154,147,25,"src"],[119,157,147,28],[119,158,147,29,"t"],[119,159,147,30],[119,160,147,31,"PRERELEASE"],[119,170,147,41],[119,171,147,42],[119,176,148,21,"src"],[119,179,148,24],[119,180,148,25,"t"],[119,181,148,26],[119,182,148,27,"BUILD"],[119,187,148,32],[119,188,148,33],[119,191,148,36],[119,194,149,19],[119,200,149,25],[119,201,149,26],[120,2,151,0,"createToken"],[120,13,151,11],[120,14,151,12],[120,32,151,30],[120,34,151,32],[120,46,151,44,"src"],[120,49,151,47],[120,50,151,48,"t"],[120,51,151,49],[120,52,151,50,"XRANGEIDENTIFIERLOOSE"],[120,73,151,71],[120,74,151,72],[120,77,151,75],[120,80,152,24],[120,90,152,34,"src"],[120,93,152,37],[120,94,152,38,"t"],[120,95,152,39],[120,96,152,40,"XRANGEIDENTIFIERLOOSE"],[120,117,152,61],[120,118,152,62],[120,121,152,65],[120,124,153,24],[120,134,153,34,"src"],[120,137,153,37],[120,138,153,38,"t"],[120,139,153,39],[120,140,153,40,"XRANGEIDENTIFIERLOOSE"],[120,161,153,61],[120,162,153,62],[120,165,153,65],[120,168,154,24],[120,174,154,30,"src"],[120,177,154,33],[120,178,154,34,"t"],[120,179,154,35],[120,180,154,36,"PRERELEASELOOSE"],[120,195,154,51],[120,196,154,52],[120,201,155,26,"src"],[120,204,155,29],[120,205,155,30,"t"],[120,206,155,31],[120,207,155,32,"BUILD"],[120,212,155,37],[120,213,155,38],[120,216,155,41],[120,219,156,24],[120,225,156,30],[120,226,156,31],[121,2,158,0,"createToken"],[121,13,158,11],[121,14,158,12],[121,22,158,20],[121,24,158,22],[121,28,158,26,"src"],[121,31,158,29],[121,32,158,30,"t"],[121,33,158,31],[121,34,158,32,"GTLT"],[121,38,158,36],[121,39,158,37],[121,46,158,44,"src"],[121,49,158,47],[121,50,158,48,"t"],[121,51,158,49],[121,52,158,50,"XRANGEPLAIN"],[121,63,158,61],[121,64,158,62],[121,67,158,65],[121,68,158,66],[122,2,159,0,"createToken"],[122,13,159,11],[122,14,159,12],[122,27,159,25],[122,29,159,27],[122,33,159,31,"src"],[122,36,159,34],[122,37,159,35,"t"],[122,38,159,36],[122,39,159,37,"GTLT"],[122,43,159,41],[122,44,159,42],[122,51,159,49,"src"],[122,54,159,52],[122,55,159,53,"t"],[122,56,159,54],[122,57,159,55,"XRANGEPLAINLOOSE"],[122,73,159,71],[122,74,159,72],[122,77,159,75],[122,78,159,76],[124,2,161,0],[125,2,162,0],[126,2,163,0,"createToken"],[126,13,163,11],[126,14,163,12],[126,27,163,25],[126,29,163,27],[126,54,164,26,"MAX_SAFE_COMPONENT_LENGTH"],[126,79,164,51],[126,83,164,55],[126,86,165,14],[126,102,165,30,"MAX_SAFE_COMPONENT_LENGTH"],[126,127,165,55],[126,133,165,61],[126,136,166,14],[126,152,166,30,"MAX_SAFE_COMPONENT_LENGTH"],[126,177,166,55],[126,183,166,61],[126,184,166,62],[127,2,167,0,"createToken"],[127,13,167,11],[127,14,167,12],[127,22,167,20],[127,24,167,22],[127,27,167,25,"src"],[127,30,167,28],[127,31,167,29,"t"],[127,32,167,30],[127,33,167,31,"COERCEPLAIN"],[127,44,167,42],[127,45,167,43],[127,59,167,57],[127,60,167,58],[128,2,168,0,"createToken"],[128,13,168,11],[128,14,168,12],[128,26,168,24],[128,28,168,26,"src"],[128,31,168,29],[128,32,168,30,"t"],[128,33,168,31],[128,34,168,32,"COERCEPLAIN"],[128,45,168,43],[128,46,168,44],[128,49,169,14],[128,55,169,20,"src"],[128,58,169,23],[128,59,169,24,"t"],[128,60,169,25],[128,61,169,26,"PRERELEASE"],[128,71,169,36],[128,72,169,37],[128,76,169,41],[128,79,170,14],[128,85,170,20,"src"],[128,88,170,23],[128,89,170,24,"t"],[128,90,170,25],[128,91,170,26,"BUILD"],[128,96,170,31],[128,97,170,32],[128,101,170,36],[128,104,171,14],[128,118,171,28],[128,119,171,29],[129,2,172,0,"createToken"],[129,13,172,11],[129,14,172,12],[129,25,172,23],[129,27,172,25,"src"],[129,30,172,28],[129,31,172,29,"t"],[129,32,172,30],[129,33,172,31,"COERCE"],[129,39,172,37],[129,40,172,38],[129,42,172,40],[129,46,172,44],[129,47,172,45],[130,2,173,0,"createToken"],[130,13,173,11],[130,14,173,12],[130,29,173,27],[130,31,173,29,"src"],[130,34,173,32],[130,35,173,33,"t"],[130,36,173,34],[130,37,173,35,"COERCEFULL"],[130,47,173,45],[130,48,173,46],[130,50,173,48],[130,54,173,52],[130,55,173,53],[132,2,175,0],[133,2,176,0],[134,2,177,0,"createToken"],[134,13,177,11],[134,14,177,12],[134,25,177,23],[134,27,177,25],[134,36,177,34],[134,37,177,35],[135,2,179,0,"createToken"],[135,13,179,11],[135,14,179,12],[135,25,179,23],[135,27,179,25],[135,36,179,34,"src"],[135,39,179,37],[135,40,179,38,"t"],[135,41,179,39],[135,42,179,40,"LONETILDE"],[135,51,179,49],[135,52,179,50],[135,58,179,56],[135,60,179,58],[135,64,179,62],[135,65,179,63],[136,2,180,0,"exports"],[136,9,180,7],[136,10,180,8,"tildeTrimReplace"],[136,26,180,24],[136,29,180,27],[136,34,180,32],[137,2,182,0,"createToken"],[137,13,182,11],[137,14,182,12],[137,21,182,19],[137,23,182,21],[137,27,182,25,"src"],[137,30,182,28],[137,31,182,29,"t"],[137,32,182,30],[137,33,182,31,"LONETILDE"],[137,42,182,40],[137,43,182,41],[137,46,182,44,"src"],[137,49,182,47],[137,50,182,48,"t"],[137,51,182,49],[137,52,182,50,"XRANGEPLAIN"],[137,63,182,61],[137,64,182,62],[137,67,182,65],[137,68,182,66],[138,2,183,0,"createToken"],[138,13,183,11],[138,14,183,12],[138,26,183,24],[138,28,183,26],[138,32,183,30,"src"],[138,35,183,33],[138,36,183,34,"t"],[138,37,183,35],[138,38,183,36,"LONETILDE"],[138,47,183,45],[138,48,183,46],[138,51,183,49,"src"],[138,54,183,52],[138,55,183,53,"t"],[138,56,183,54],[138,57,183,55,"XRANGEPLAINLOOSE"],[138,73,183,71],[138,74,183,72],[138,77,183,75],[138,78,183,76],[140,2,185,0],[141,2,186,0],[142,2,187,0,"createToken"],[142,13,187,11],[142,14,187,12],[142,25,187,23],[142,27,187,25],[142,36,187,34],[142,37,187,35],[143,2,189,0,"createToken"],[143,13,189,11],[143,14,189,12],[143,25,189,23],[143,27,189,25],[143,36,189,34,"src"],[143,39,189,37],[143,40,189,38,"t"],[143,41,189,39],[143,42,189,40,"LONECARET"],[143,51,189,49],[143,52,189,50],[143,58,189,56],[143,60,189,58],[143,64,189,62],[143,65,189,63],[144,2,190,0,"exports"],[144,9,190,7],[144,10,190,8,"caretTrimReplace"],[144,26,190,24],[144,29,190,27],[144,34,190,32],[145,2,192,0,"createToken"],[145,13,192,11],[145,14,192,12],[145,21,192,19],[145,23,192,21],[145,27,192,25,"src"],[145,30,192,28],[145,31,192,29,"t"],[145,32,192,30],[145,33,192,31,"LONECARET"],[145,42,192,40],[145,43,192,41],[145,46,192,44,"src"],[145,49,192,47],[145,50,192,48,"t"],[145,51,192,49],[145,52,192,50,"XRANGEPLAIN"],[145,63,192,61],[145,64,192,62],[145,67,192,65],[145,68,192,66],[146,2,193,0,"createToken"],[146,13,193,11],[146,14,193,12],[146,26,193,24],[146,28,193,26],[146,32,193,30,"src"],[146,35,193,33],[146,36,193,34,"t"],[146,37,193,35],[146,38,193,36,"LONECARET"],[146,47,193,45],[146,48,193,46],[146,51,193,49,"src"],[146,54,193,52],[146,55,193,53,"t"],[146,56,193,54],[146,57,193,55,"XRANGEPLAINLOOSE"],[146,73,193,71],[146,74,193,72],[146,77,193,75],[146,78,193,76],[148,2,195,0],[149,2,196,0,"createToken"],[149,13,196,11],[149,14,196,12],[149,31,196,29],[149,33,196,31],[149,37,196,35,"src"],[149,40,196,38],[149,41,196,39,"t"],[149,42,196,40],[149,43,196,41,"GTLT"],[149,47,196,45],[149,48,196,46],[149,56,196,54,"src"],[149,59,196,57],[149,60,196,58,"t"],[149,61,196,59],[149,62,196,60,"LOOSEPLAIN"],[149,72,196,70],[149,73,196,71],[149,80,196,78],[149,81,196,79],[150,2,197,0,"createToken"],[150,13,197,11],[150,14,197,12],[150,26,197,24],[150,28,197,26],[150,32,197,30,"src"],[150,35,197,33],[150,36,197,34,"t"],[150,37,197,35],[150,38,197,36,"GTLT"],[150,42,197,40],[150,43,197,41],[150,51,197,49,"src"],[150,54,197,52],[150,55,197,53,"t"],[150,56,197,54],[150,57,197,55,"FULLPLAIN"],[150,66,197,64],[150,67,197,65],[150,74,197,72],[150,75,197,73],[152,2,199,0],[153,2,200,0],[154,2,201,0,"createToken"],[154,13,201,11],[154,14,201,12],[154,30,201,28],[154,32,201,30],[154,41,201,39,"src"],[154,44,201,42],[154,45,201,43,"t"],[154,46,201,44],[154,47,201,45,"GTLT"],[154,51,201,49],[154,52,201,50],[154,60,202,8,"src"],[154,63,202,11],[154,64,202,12,"t"],[154,65,202,13],[154,66,202,14,"LOOSEPLAIN"],[154,76,202,24],[154,77,202,25],[154,81,202,29,"src"],[154,84,202,32],[154,85,202,33,"t"],[154,86,202,34],[154,87,202,35,"XRANGEPLAIN"],[154,98,202,46],[154,99,202,47],[154,102,202,50],[154,104,202,52],[154,108,202,56],[154,109,202,57],[155,2,203,0,"exports"],[155,9,203,7],[155,10,203,8,"comparatorTrimReplace"],[155,31,203,29],[155,34,203,32],[155,42,203,40],[157,2,205,0],[158,2,206,0],[159,2,207,0],[160,2,208,0],[161,2,209,0,"createToken"],[161,13,209,11],[161,14,209,12],[161,27,209,25],[161,29,209,27],[161,38,209,36,"src"],[161,41,209,39],[161,42,209,40,"t"],[161,43,209,41],[161,44,209,42,"XRANGEPLAIN"],[161,55,209,53],[161,56,209,54],[161,59,209,57],[161,62,210,19],[161,73,210,30],[161,76,211,19],[161,80,211,23,"src"],[161,83,211,26],[161,84,211,27,"t"],[161,85,211,28],[161,86,211,29,"XRANGEPLAIN"],[161,97,211,40],[161,98,211,41],[161,101,211,44],[161,104,212,19],[161,111,212,26],[161,112,212,27],[162,2,214,0,"createToken"],[162,13,214,11],[162,14,214,12],[162,32,214,30],[162,34,214,32],[162,43,214,41,"src"],[162,46,214,44],[162,47,214,45,"t"],[162,48,214,46],[162,49,214,47,"XRANGEPLAINLOOSE"],[162,65,214,63],[162,66,214,64],[162,69,214,67],[162,72,215,24],[162,83,215,35],[162,86,216,24],[162,90,216,28,"src"],[162,93,216,31],[162,94,216,32,"t"],[162,95,216,33],[162,96,216,34,"XRANGEPLAINLOOSE"],[162,112,216,50],[162,113,216,51],[162,116,216,54],[162,119,217,24],[162,126,217,31],[162,127,217,32],[164,2,219,0],[165,2,220,0,"createToken"],[165,13,220,11],[165,14,220,12],[165,20,220,18],[165,22,220,20],[165,39,220,37],[165,40,220,38],[166,2,221,0],[167,2,222,0,"createToken"],[167,13,222,11],[167,14,222,12],[167,20,222,18],[167,22,222,20],[167,49,222,47],[167,50,222,48],[168,2,223,0,"createToken"],[168,13,223,11],[168,14,223,12],[168,23,223,21],[168,25,223,23],[168,54,223,52],[168,55,223,53],[169,0,223,53],[169,3]],"functionMap":{"names":["<global>","makeSafeRegex","createToken"],"mappings":"AAA;sBCgC;CDO;oBEE;CFS"},"hasCjsExports":true},"type":"js/module"}]}