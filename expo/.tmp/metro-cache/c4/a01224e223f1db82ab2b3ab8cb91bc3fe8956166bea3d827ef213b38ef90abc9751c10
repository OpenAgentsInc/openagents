{"dependencies":[{"name":"../Expo.fx","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":1,"column":0,"index":0},"end":{"line":1,"column":20,"index":20}}],"key":"FvsXvN3bPiq/mbLa3/fohyj0yKA=","exportNames":["*"],"imports":1}},{"name":"react-native","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":4,"column":0,"index":66},"end":{"line":4,"column":53,"index":119}}],"key":"KyzuX10g6ixS9UfynhmjlvCIG3g=","exportNames":["*"],"imports":1}}],"output":[{"data":{"code":"__d(function (global, require, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {\n  \"use strict\";\n\n  Object.defineProperty(exports, '__esModule', {\n    value: true\n  });\n  Object.defineProperty(exports, \"default\", {\n    enumerable: true,\n    get: function () {\n      return registerRootComponent;\n    }\n  });\n  require(_dependencyMap[0]);\n  var _reactNative = require(_dependencyMap[1]);\n  // @needsAudit\n  /**\n   * Sets the initial React component to render natively in the app's root React Native view on Android, iOS, tvOS and the web.\n   *\n   * This method does the following:\n   * - Invokes React Native's `AppRegistry.registerComponent`.\n   * - Invokes React Native web's `AppRegistry.runApplication` on web to render to the root `index.html` file.\n   * - Polyfills the `process.nextTick` function globally.\n   *\n   * This method also adds the following dev-only features that are removed in production bundles.\n   * - Adds the Fast Refresh and bundle splitting indicator to the app.\n   * - Asserts if the `expo-updates` package is misconfigured.\n   * - Asserts if `react-native` is not aliased to `react-native-web` when running in the browser.\n   * @param component The React component class that renders the rest of your app.\n   * @see For information on how to setup `registerRootComponent` in an existing (bare) React Native app, see [Common questions](#rootregistercomponent-setup-for-existing-react-native-projects) below.\n   */\n  function registerRootComponent(component) {\n    var qualifiedComponent = component;\n    _reactNative.AppRegistry.registerComponent('main', () => qualifiedComponent);\n    // Skip querying the DOM if we're in a Node.js environment.\n  }\n});","lineCount":36,"map":[[7,2,38,15,"Object"],[7,8,38,15],[7,9,38,15,"defineProperty"],[7,23,38,15],[7,24,38,15,"exports"],[7,31,38,15],[8,4,38,15,"enumerable"],[8,14,38,15],[9,4,38,15,"get"],[9,7,38,15],[9,18,38,15,"get"],[9,19,38,15],[10,6,38,15],[10,13,38,15,"registerRootComponent"],[10,34,38,15],[11,4,38,15],[12,2,38,15],[13,2,1,0,"require"],[13,9,1,0],[13,10,1,0,"_dependencyMap"],[13,24,1,0],[14,2,4,0],[14,6,4,0,"_reactNative"],[14,18,4,0],[14,21,4,0,"require"],[14,28,4,0],[14,29,4,0,"_dependencyMap"],[14,43,4,0],[15,2,22,0],[16,2,23,0],[17,0,24,0],[18,0,25,0],[19,0,26,0],[20,0,27,0],[21,0,28,0],[22,0,29,0],[23,0,30,0],[24,0,31,0],[25,0,32,0],[26,0,33,0],[27,0,34,0],[28,0,35,0],[29,0,36,0],[30,0,37,0],[31,2,38,15],[31,11,38,24,"registerRootComponent"],[31,32,38,45,"registerRootComponent"],[31,33,39,2,"component"],[31,42,39,29],[31,44,40,8],[32,4,41,2],[32,8,41,6,"qualifiedComponent"],[32,26,41,24],[32,29,41,27,"component"],[32,38,41,36],[33,4,48,2,"AppRegistry"],[33,16,48,13],[33,17,48,13,"AppRegistry"],[33,28,48,13],[33,29,48,14,"registerComponent"],[33,46,48,31],[33,47,48,32],[33,53,48,38],[33,55,48,40],[33,61,48,46,"qualifiedComponent"],[33,79,48,64],[33,80,48,65],[34,4,49,2],[35,2,64,0],[36,0,64,1],[36,3]],"functionMap":{"names":["<global>","registerRootComponent","AppRegistry.registerComponent$argument_1"],"mappings":"AAA;eCqC;wCCU,wBD;CDgB"},"hasCjsExports":false},"type":"js/module"}]}