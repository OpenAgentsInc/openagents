{"dependencies":[],"output":[{"data":{"code":"__d(function (global, require, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {\n  'use strict';\n\n  Object.defineProperty(exports, '__esModule', {\n    value: true\n  });\n  Object.defineProperty(exports, \"default\", {\n    enumerable: true,\n    get: function () {\n      return bezier;\n    }\n  });\n  var NEWTON_ITERATIONS = 4;\n  var NEWTON_MIN_SLOPE = 0.001;\n  var SUBDIVISION_PRECISION = 0.0000001;\n  var SUBDIVISION_MAX_ITERATIONS = 10;\n  var kSplineTableSize = 11;\n  var kSampleStepSize = 0.1;\n  var float32ArraySupported = typeof Float32Array === 'function';\n  function A(aA1, aA2) {\n    return 1.0 - 3.0 * aA2 + 3.0 * aA1;\n  }\n  function B(aA1, aA2) {\n    return 3.0 * aA2 - 6.0 * aA1;\n  }\n  function C(aA1) {\n    return 3.0 * aA1;\n  }\n  function calcBezier(aT, aA1, aA2) {\n    return ((A(aA1, aA2) * aT + B(aA1, aA2)) * aT + C(aA1)) * aT;\n  }\n  function getSlope(aT, aA1, aA2) {\n    return 3.0 * A(aA1, aA2) * aT * aT + 2.0 * B(aA1, aA2) * aT + C(aA1);\n  }\n  function binarySubdivide(aX, _aA, _aB, mX1, mX2) {\n    var currentX,\n      currentT,\n      i = 0,\n      aA = _aA,\n      aB = _aB;\n    do {\n      currentT = aA + (aB - aA) / 2.0;\n      currentX = calcBezier(currentT, mX1, mX2) - aX;\n      if (currentX > 0.0) {\n        aB = currentT;\n      } else {\n        aA = currentT;\n      }\n    } while (Math.abs(currentX) > SUBDIVISION_PRECISION && ++i < SUBDIVISION_MAX_ITERATIONS);\n    return currentT;\n  }\n  function newtonRaphsonIterate(aX, _aGuessT, mX1, mX2) {\n    var aGuessT = _aGuessT;\n    for (var i = 0; i < NEWTON_ITERATIONS; ++i) {\n      var currentSlope = getSlope(aGuessT, mX1, mX2);\n      if (currentSlope === 0.0) {\n        return aGuessT;\n      }\n      var currentX = calcBezier(aGuessT, mX1, mX2) - aX;\n      aGuessT -= currentX / currentSlope;\n    }\n    return aGuessT;\n  }\n  function bezier(mX1, mY1, mX2, mY2) {\n    if (!(mX1 >= 0 && mX1 <= 1 && mX2 >= 0 && mX2 <= 1)) {\n      throw new Error('bezier x values must be in [0, 1] range');\n    }\n    var sampleValues = float32ArraySupported ? new Float32Array(kSplineTableSize) : new Array(kSplineTableSize);\n    if (mX1 !== mY1 || mX2 !== mY2) {\n      for (var i = 0; i < kSplineTableSize; ++i) {\n        sampleValues[i] = calcBezier(i * kSampleStepSize, mX1, mX2);\n      }\n    }\n    function getTForX(aX) {\n      var intervalStart = 0.0;\n      var currentSample = 1;\n      var lastSample = 10;\n      for (; currentSample !== lastSample && sampleValues[currentSample] <= aX; ++currentSample) {\n        intervalStart += kSampleStepSize;\n      }\n      --currentSample;\n      var dist = (aX - sampleValues[currentSample]) / (sampleValues[currentSample + 1] - sampleValues[currentSample]);\n      var guessForT = intervalStart + dist * kSampleStepSize;\n      var initialSlope = getSlope(guessForT, mX1, mX2);\n      if (initialSlope >= NEWTON_MIN_SLOPE) {\n        return newtonRaphsonIterate(aX, guessForT, mX1, mX2);\n      } else if (initialSlope === 0.0) {\n        return guessForT;\n      } else {\n        return binarySubdivide(aX, intervalStart, intervalStart + kSampleStepSize, mX1, mX2);\n      }\n    }\n    return function BezierEasing(x) {\n      if (mX1 === mY1 && mX2 === mY2) {\n        return x;\n      }\n      if (x === 0) {\n        return 0;\n      }\n      if (x === 1) {\n        return 1;\n      }\n      return calcBezier(getTForX(x), mY1, mY2);\n    };\n  }\n});","lineCount":106,"map":[[2,2,17,0],[2,14,17,12],[4,2,17,13,"Object"],[4,8,17,13],[4,9,17,13,"defineProperty"],[4,23,17,13],[4,24,17,13,"exports"],[4,31,17,13],[5,4,17,13,"value"],[5,9,17,13],[6,2,17,13],[7,2,95,15,"Object"],[7,8,95,15],[7,9,95,15,"defineProperty"],[7,23,95,15],[7,24,95,15,"exports"],[7,31,95,15],[8,4,95,15,"enumerable"],[8,14,95,15],[9,4,95,15,"get"],[9,7,95,15],[9,18,95,15,"get"],[9,19,95,15],[10,6,95,15],[10,13,95,15,"bezier"],[10,19,95,15],[11,4,95,15],[12,2,95,15],[13,2,20,0],[13,6,20,6,"NEWTON_ITERATIONS"],[13,23,20,23],[13,26,20,26],[13,27,20,27],[14,2,21,0],[14,6,21,6,"NEWTON_MIN_SLOPE"],[14,22,21,22],[14,25,21,25],[14,30,21,30],[15,2,22,0],[15,6,22,6,"SUBDIVISION_PRECISION"],[15,27,22,27],[15,30,22,30],[15,39,22,39],[16,2,23,0],[16,6,23,6,"SUBDIVISION_MAX_ITERATIONS"],[16,32,23,32],[16,35,23,35],[16,37,23,37],[17,2,25,0],[17,6,25,6,"kSplineTableSize"],[17,22,25,22],[17,25,25,25],[17,27,25,27],[18,2,26,0],[18,6,26,6,"kSampleStepSize"],[18,21,26,21],[18,27,26,54],[19,2,28,0],[19,6,28,6,"float32ArraySupported"],[19,27,28,27],[19,30,28,30],[19,37,28,37,"Float32Array"],[19,49,28,49],[19,54,28,54],[19,64,28,64],[20,2,30,0],[20,11,30,9,"A"],[20,12,30,10,"A"],[20,13,30,11,"aA1"],[20,16,30,22],[20,18,30,24,"aA2"],[20,21,30,35],[20,23,30,37],[21,4,31,2],[21,11,31,9],[21,14,31,12],[21,17,31,15],[21,20,31,18],[21,23,31,21,"aA2"],[21,26,31,24],[21,29,31,27],[21,32,31,30],[21,35,31,33,"aA1"],[21,38,31,36],[22,2,32,0],[23,2,33,0],[23,11,33,9,"B"],[23,12,33,10,"B"],[23,13,33,11,"aA1"],[23,16,33,22],[23,18,33,24,"aA2"],[23,21,33,35],[23,23,33,37],[24,4,34,2],[24,11,34,9],[24,14,34,12],[24,17,34,15,"aA2"],[24,20,34,18],[24,23,34,21],[24,26,34,24],[24,29,34,27,"aA1"],[24,32,34,30],[25,2,35,0],[26,2,36,0],[26,11,36,9,"C"],[26,12,36,10,"C"],[26,13,36,11,"aA1"],[26,16,36,22],[26,18,36,24],[27,4,37,2],[27,11,37,9],[27,14,37,12],[27,17,37,15,"aA1"],[27,20,37,18],[28,2,38,0],[29,2,41,0],[29,11,41,9,"calcBezier"],[29,21,41,19,"calcBezier"],[29,22,41,20,"aT"],[29,24,41,30],[29,26,41,32,"aA1"],[29,29,41,43],[29,31,41,45,"aA2"],[29,34,41,56],[29,36,41,58],[30,4,42,2],[30,11,42,9],[30,12,42,10],[30,13,42,11,"A"],[30,14,42,12],[30,15,42,13,"aA1"],[30,18,42,16],[30,20,42,18,"aA2"],[30,23,42,21],[30,24,42,22],[30,27,42,25,"aT"],[30,29,42,27],[30,32,42,30,"B"],[30,33,42,31],[30,34,42,32,"aA1"],[30,37,42,35],[30,39,42,37,"aA2"],[30,42,42,40],[30,43,42,41],[30,47,42,45,"aT"],[30,49,42,47],[30,52,42,50,"C"],[30,53,42,51],[30,54,42,52,"aA1"],[30,57,42,55],[30,58,42,56],[30,62,42,60,"aT"],[30,64,42,62],[31,2,43,0],[32,2,46,0],[32,11,46,9,"getSlope"],[32,19,46,17,"getSlope"],[32,20,46,18,"aT"],[32,22,46,28],[32,24,46,30,"aA1"],[32,27,46,41],[32,29,46,43,"aA2"],[32,32,46,54],[32,34,46,56],[33,4,47,2],[33,11,47,9],[33,14,47,12],[33,17,47,15,"A"],[33,18,47,16],[33,19,47,17,"aA1"],[33,22,47,20],[33,24,47,22,"aA2"],[33,27,47,25],[33,28,47,26],[33,31,47,29,"aT"],[33,33,47,31],[33,36,47,34,"aT"],[33,38,47,36],[33,41,47,39],[33,44,47,42],[33,47,47,45,"B"],[33,48,47,46],[33,49,47,47,"aA1"],[33,52,47,50],[33,54,47,52,"aA2"],[33,57,47,55],[33,58,47,56],[33,61,47,59,"aT"],[33,63,47,61],[33,66,47,64,"C"],[33,67,47,65],[33,68,47,66,"aA1"],[33,71,47,69],[33,72,47,70],[34,2,48,0],[35,2,50,0],[35,11,50,9,"binarySubdivide"],[35,26,50,24,"binarySubdivide"],[35,27,51,2,"aX"],[35,29,51,12],[35,31,52,2,"_aA"],[35,34,52,13],[35,36,53,2,"_aB"],[35,39,53,13],[35,41,54,2,"mX1"],[35,44,54,13],[35,46,55,2,"mX2"],[35,49,55,13],[35,51,56,2],[36,4,57,2],[36,8,57,6,"currentX"],[36,16,57,14],[37,6,58,4,"currentT"],[37,14,58,12],[38,6,59,4,"i"],[38,7,59,5],[38,10,59,8],[38,11,59,9],[39,6,60,4,"aA"],[39,8,60,6],[39,11,60,9,"_aA"],[39,14,60,12],[40,6,61,4,"aB"],[40,8,61,6],[40,11,61,9,"_aB"],[40,14,61,12],[41,4,62,2],[41,7,62,5],[42,6,63,4,"currentT"],[42,14,63,12],[42,17,63,15,"aA"],[42,19,63,17],[42,22,63,20],[42,23,63,21,"aB"],[42,25,63,23],[42,28,63,26,"aA"],[42,30,63,28],[42,34,63,32],[42,37,63,35],[43,6,64,4,"currentX"],[43,14,64,12],[43,17,64,15,"calcBezier"],[43,27,64,25],[43,28,64,26,"currentT"],[43,36,64,34],[43,38,64,36,"mX1"],[43,41,64,39],[43,43,64,41,"mX2"],[43,46,64,44],[43,47,64,45],[43,50,64,48,"aX"],[43,52,64,50],[44,6,65,4],[44,10,65,8,"currentX"],[44,18,65,16],[44,21,65,19],[44,24,65,22],[44,26,65,24],[45,8,66,6,"aB"],[45,10,66,8],[45,13,66,11,"currentT"],[45,21,66,19],[46,6,67,4],[46,7,67,5],[46,13,67,11],[47,8,68,6,"aA"],[47,10,68,8],[47,13,68,11,"currentT"],[47,21,68,19],[48,6,69,4],[49,4,70,2],[49,5,70,3],[49,13,71,4,"Math"],[49,17,71,8],[49,18,71,9,"abs"],[49,21,71,12],[49,22,71,13,"currentX"],[49,30,71,21],[49,31,71,22],[49,34,71,25,"SUBDIVISION_PRECISION"],[49,55,71,46],[49,59,72,4],[49,61,72,6,"i"],[49,62,72,7],[49,65,72,10,"SUBDIVISION_MAX_ITERATIONS"],[49,91,72,36],[50,4,74,2],[50,11,74,9,"currentT"],[50,19,74,17],[51,2,75,0],[52,2,77,0],[52,11,77,9,"newtonRaphsonIterate"],[52,31,77,29,"newtonRaphsonIterate"],[52,32,78,2,"aX"],[52,34,78,12],[52,36,79,2,"_aGuessT"],[52,44,79,18],[52,46,80,2,"mX1"],[52,49,80,13],[52,51,81,2,"mX2"],[52,54,81,13],[52,56,82,2],[53,4,83,2],[53,8,83,6,"aGuessT"],[53,15,83,13],[53,18,83,16,"_aGuessT"],[53,26,83,24],[54,4,84,2],[54,9,84,7],[54,13,84,11,"i"],[54,14,84,12],[54,17,84,15],[54,18,84,16],[54,20,84,18,"i"],[54,21,84,19],[54,24,84,22,"NEWTON_ITERATIONS"],[54,41,84,39],[54,43,84,41],[54,45,84,43,"i"],[54,46,84,44],[54,48,84,46],[55,6,85,4],[55,10,85,10,"currentSlope"],[55,22,85,22],[55,25,85,25,"getSlope"],[55,33,85,33],[55,34,85,34,"aGuessT"],[55,41,85,41],[55,43,85,43,"mX1"],[55,46,85,46],[55,48,85,48,"mX2"],[55,51,85,51],[55,52,85,52],[56,6,86,4],[56,10,86,8,"currentSlope"],[56,22,86,20],[56,27,86,25],[56,30,86,28],[56,32,86,30],[57,8,87,6],[57,15,87,13,"aGuessT"],[57,22,87,20],[58,6,88,4],[59,6,89,4],[59,10,89,10,"currentX"],[59,18,89,18],[59,21,89,21,"calcBezier"],[59,31,89,31],[59,32,89,32,"aGuessT"],[59,39,89,39],[59,41,89,41,"mX1"],[59,44,89,44],[59,46,89,46,"mX2"],[59,49,89,49],[59,50,89,50],[59,53,89,53,"aX"],[59,55,89,55],[60,6,90,4,"aGuessT"],[60,13,90,11],[60,17,90,15,"currentX"],[60,25,90,23],[60,28,90,26,"currentSlope"],[60,40,90,38],[61,4,91,2],[62,4,92,2],[62,11,92,9,"aGuessT"],[62,18,92,16],[63,2,93,0],[64,2,95,15],[64,11,95,24,"bezier"],[64,17,95,30,"bezier"],[64,18,96,2,"mX1"],[64,21,96,13],[64,23,97,2,"mY1"],[64,26,97,13],[64,28,98,2,"mX2"],[64,31,98,13],[64,33,99,2,"mY2"],[64,36,99,13],[64,38,100,25],[65,4,101,2],[65,8,101,6],[65,10,101,8,"mX1"],[65,13,101,11],[65,17,101,15],[65,18,101,16],[65,22,101,20,"mX1"],[65,25,101,23],[65,29,101,27],[65,30,101,28],[65,34,101,32,"mX2"],[65,37,101,35],[65,41,101,39],[65,42,101,40],[65,46,101,44,"mX2"],[65,49,101,47],[65,53,101,51],[65,54,101,52],[65,55,101,53],[65,57,101,55],[66,6,102,4],[66,12,102,10],[66,16,102,14,"Error"],[66,21,102,19],[66,22,102,20],[66,63,102,61],[66,64,102,62],[67,4,103,2],[68,4,106,2],[68,8,106,8,"sampleValues"],[68,20,106,20],[68,23,106,23,"float32ArraySupported"],[68,44,106,44],[68,47,107,6],[68,51,107,10,"Float32Array"],[68,63,107,22],[68,64,107,23,"kSplineTableSize"],[68,80,107,39],[68,81,107,40],[68,84,108,6],[68,88,108,10,"Array"],[68,93,108,15],[68,94,108,24,"kSplineTableSize"],[68,110,108,40],[68,111,108,41],[69,4,109,2],[69,8,109,6,"mX1"],[69,11,109,9],[69,16,109,14,"mY1"],[69,19,109,17],[69,23,109,21,"mX2"],[69,26,109,24],[69,31,109,29,"mY2"],[69,34,109,32],[69,36,109,34],[70,6,110,4],[70,11,110,9],[70,15,110,13,"i"],[70,16,110,14],[70,19,110,17],[70,20,110,18],[70,22,110,20,"i"],[70,23,110,21],[70,26,110,24,"kSplineTableSize"],[70,42,110,40],[70,44,110,42],[70,46,110,44,"i"],[70,47,110,45],[70,49,110,47],[71,8,111,6,"sampleValues"],[71,20,111,18],[71,21,111,19,"i"],[71,22,111,20],[71,23,111,21],[71,26,111,24,"calcBezier"],[71,36,111,34],[71,37,111,35,"i"],[71,38,111,36],[71,41,111,39,"kSampleStepSize"],[71,56,111,54],[71,58,111,56,"mX1"],[71,61,111,59],[71,63,111,61,"mX2"],[71,66,111,64],[71,67,111,65],[72,6,112,4],[73,4,113,2],[74,4,115,2],[74,13,115,11,"getTForX"],[74,21,115,19,"getTForX"],[74,22,115,20,"aX"],[74,24,115,30],[74,26,115,32],[75,6,116,4],[75,10,116,8,"intervalStart"],[75,23,116,21],[75,26,116,24],[75,29,116,27],[76,6,117,4],[76,10,117,8,"currentSample"],[76,23,117,21],[76,26,117,24],[76,27,117,25],[77,6,118,4],[77,10,118,10,"lastSample"],[77,20,118,20],[77,25,118,43],[78,6,120,4],[78,13,122,6,"currentSample"],[78,26,122,19],[78,31,122,24,"lastSample"],[78,41,122,34],[78,45,122,38,"sampleValues"],[78,57,122,50],[78,58,122,51,"currentSample"],[78,71,122,64],[78,72,122,65],[78,76,122,69,"aX"],[78,78,122,71],[78,80,123,6],[78,82,123,8,"currentSample"],[78,95,123,21],[78,97,124,6],[79,8,125,6,"intervalStart"],[79,21,125,19],[79,25,125,23,"kSampleStepSize"],[79,40,125,38],[80,6,126,4],[81,6,127,4],[81,8,127,6,"currentSample"],[81,21,127,19],[82,6,130,4],[82,10,130,10,"dist"],[82,14,130,14],[82,17,131,6],[82,18,131,7,"aX"],[82,20,131,9],[82,23,131,12,"sampleValues"],[82,35,131,24],[82,36,131,25,"currentSample"],[82,49,131,38],[82,50,131,39],[82,55,132,7,"sampleValues"],[82,67,132,19],[82,68,132,20,"currentSample"],[82,81,132,33],[82,84,132,36],[82,85,132,37],[82,86,132,38],[82,89,132,41,"sampleValues"],[82,101,132,53],[82,102,132,54,"currentSample"],[82,115,132,67],[82,116,132,68],[82,117,132,69],[83,6,133,4],[83,10,133,10,"guessForT"],[83,19,133,19],[83,22,133,22,"intervalStart"],[83,35,133,35],[83,38,133,38,"dist"],[83,42,133,42],[83,45,133,45,"kSampleStepSize"],[83,60,133,60],[84,6,135,4],[84,10,135,10,"initialSlope"],[84,22,135,22],[84,25,135,25,"getSlope"],[84,33,135,33],[84,34,135,34,"guessForT"],[84,43,135,43],[84,45,135,45,"mX1"],[84,48,135,48],[84,50,135,50,"mX2"],[84,53,135,53],[84,54,135,54],[85,6,136,4],[85,10,136,8,"initialSlope"],[85,22,136,20],[85,26,136,24,"NEWTON_MIN_SLOPE"],[85,42,136,40],[85,44,136,42],[86,8,137,6],[86,15,137,13,"newtonRaphsonIterate"],[86,35,137,33],[86,36,137,34,"aX"],[86,38,137,36],[86,40,137,38,"guessForT"],[86,49,137,47],[86,51,137,49,"mX1"],[86,54,137,52],[86,56,137,54,"mX2"],[86,59,137,57],[86,60,137,58],[87,6,138,4],[87,7,138,5],[87,13,138,11],[87,17,138,15,"initialSlope"],[87,29,138,27],[87,34,138,32],[87,37,138,35],[87,39,138,37],[88,8,139,6],[88,15,139,13,"guessForT"],[88,24,139,22],[89,6,140,4],[89,7,140,5],[89,13,140,11],[90,8,141,6],[90,15,141,13,"binarySubdivide"],[90,30,141,28],[90,31,142,8,"aX"],[90,33,142,10],[90,35,143,8,"intervalStart"],[90,48,143,21],[90,50,144,8,"intervalStart"],[90,63,144,21],[90,66,144,24,"kSampleStepSize"],[90,81,144,39],[90,83,145,8,"mX1"],[90,86,145,11],[90,88,146,8,"mX2"],[90,91,147,6],[90,92,147,7],[91,6,148,4],[92,4,149,2],[93,4,151,2],[93,11,151,9],[93,20,151,18,"BezierEasing"],[93,32,151,30,"BezierEasing"],[93,33,151,31,"x"],[93,34,151,40],[93,36,151,50],[94,6,152,4],[94,10,152,8,"mX1"],[94,13,152,11],[94,18,152,16,"mY1"],[94,21,152,19],[94,25,152,23,"mX2"],[94,28,152,26],[94,33,152,31,"mY2"],[94,36,152,34],[94,38,152,36],[95,8,153,6],[95,15,153,13,"x"],[95,16,153,14],[96,6,154,4],[97,6,156,4],[97,10,156,8,"x"],[97,11,156,9],[97,16,156,14],[97,17,156,15],[97,19,156,17],[98,8,157,6],[98,15,157,13],[98,16,157,14],[99,6,158,4],[100,6,159,4],[100,10,159,8,"x"],[100,11,159,9],[100,16,159,14],[100,17,159,15],[100,19,159,17],[101,8,160,6],[101,15,160,13],[101,16,160,14],[102,6,161,4],[103,6,162,4],[103,13,162,11,"calcBezier"],[103,23,162,21],[103,24,162,22,"getTForX"],[103,32,162,30],[103,33,162,31,"x"],[103,34,162,32],[103,35,162,33],[103,37,162,35,"mY1"],[103,40,162,38],[103,42,162,40,"mY2"],[103,45,162,43],[103,46,162,44],[104,4,163,2],[104,5,163,3],[105,2,164,0],[106,0,164,1],[106,3]],"functionMap":{"names":["<global>","A","B","C","calcBezier","getSlope","binarySubdivide","newtonRaphsonIterate","bezier","getTForX","BezierEasing"],"mappings":"AAA;AC6B;CDE;AEC;CFE;AGC;CHE;AIG;CJE;AKG;CLE;AME;CNyB;AOE;CPgB;eQE;ECoB;GDkC;SEE;GFY"},"hasCjsExports":false},"type":"js/module"}]}