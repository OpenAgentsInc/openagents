{"dependencies":[{"name":"@babel/runtime/helpers/objectWithoutProperties","data":{"asyncType":null,"isESMImport":false,"locs":[],"key":"fnQVLibs90KHiJ7y48fLgPWzDS0=","exportNames":["*"],"imports":1}},{"name":"@babel/runtime/helpers/slicedToArray","data":{"asyncType":null,"isESMImport":false,"locs":[],"key":"5y7e5+zC7teYEEC6niD9f5zII1M=","exportNames":["*"],"imports":1}},{"name":"react","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":3,"column":0,"index":15},"end":{"line":3,"column":26,"index":41}}],"key":"RtGiGa+/H7VrI7GDQDLhO1UbpU8=","exportNames":["*"],"imports":1}},{"name":"react-freeze","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":4,"column":0,"index":42},"end":{"line":4,"column":38,"index":80}}],"key":"Efe2ZZW2JdfPDT7ApPzpVwSLPQs=","exportNames":["*"],"imports":1}},{"name":"react-native","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":5,"column":0,"index":81},"end":{"line":12,"column":22,"index":226}}],"key":"KyzuX10g6ixS9UfynhmjlvCIG3g=","exportNames":["*"],"imports":1}},{"name":"../../core","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":13,"column":0,"index":227},"end":{"line":13,"column":43,"index":270}}],"key":"r0IgWxAkToJXQODRpeLzi19uAjQ=","exportNames":["*"],"imports":1}},{"name":"../../fabric/bottom-tabs/BottomTabsScreenNativeComponent","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":14,"column":0,"index":271},"end":{"line":20,"column":66,"index":486}}],"key":"67Kj4UVzJXgKiET6boE4H53QMLk=","exportNames":["*"],"imports":1}},{"name":"../../flags","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":21,"column":0,"index":487},"end":{"line":21,"column":43,"index":530}}],"key":"GMeUMLKxbLoJBm4nL5B/HB1X9xA=","exportNames":["*"],"imports":1}},{"name":"../../private/logging","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":30,"column":0,"index":731},"end":{"line":30,"column":59,"index":790}}],"key":"nV+KDLe55lcIpZNXM2lgiPWC/hM=","exportNames":["*"],"imports":1}},{"name":"react/jsx-runtime","data":{"asyncType":null,"isESMImport":false,"locs":[],"key":"3suYSPX9nHbHZ1xNTsKXtKj0atE=","exportNames":["*"],"imports":1}}],"output":[{"data":{"code":"__d(function (global, require, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {\n  'use client';\n  \"use strict\";\n\n  var _excluded = [\"onWillAppear\", \"onDidAppear\", \"onWillDisappear\", \"onDidDisappear\", \"isFocused\", \"freezeContents\", \"icon\", \"iconResource\", \"selectedIcon\", \"standardAppearance\", \"scrollEdgeAppearance\"];\n  /**\n   * EXPERIMENTAL API, MIGHT CHANGE W/O ANY NOTICE\n   */\n  Object.defineProperty(exports, '__esModule', {\n    value: true\n  });\n  function _interopDefault(e) {\n    return e && e.__esModule ? e : {\n      default: e\n    };\n  }\n  Object.defineProperty(exports, \"default\", {\n    enumerable: true,\n    get: function () {\n      return _default;\n    }\n  });\n  var _babelRuntimeHelpersObjectWithoutProperties = require(_dependencyMap[0]);\n  var _objectWithoutProperties = _interopDefault(_babelRuntimeHelpersObjectWithoutProperties);\n  var _babelRuntimeHelpersSlicedToArray = require(_dependencyMap[1]);\n  var _slicedToArray = _interopDefault(_babelRuntimeHelpersSlicedToArray);\n  var _react = require(_dependencyMap[2]);\n  var React = _interopDefault(_react);\n  var _reactFreeze = require(_dependencyMap[3]);\n  var _reactNative = require(_dependencyMap[4]);\n  var _core = require(_dependencyMap[5]);\n  var _fabricBottomTabsBottomTabsScreenNativeComponent = require(_dependencyMap[6]);\n  var BottomTabsScreenNativeComponent = _interopDefault(_fabricBottomTabsBottomTabsScreenNativeComponent);\n  var _flags = require(_dependencyMap[7]);\n  var _privateLogging = require(_dependencyMap[8]);\n  var _reactJsxRuntime = require(_dependencyMap[9]);\n  function BottomTabsScreen(props) {\n    var componentNodeRef = React.default.useRef(null);\n    var componentNodeHandle = React.default.useRef(-1);\n    React.default.useEffect(() => {\n      if (componentNodeRef.current != null) {\n        componentNodeHandle.current = (0, _reactNative.findNodeHandle)(componentNodeRef.current) ?? -1;\n      } else {\n        componentNodeHandle.current = -1;\n      }\n    }, []);\n    var _React$useState = React.default.useState(false),\n      _React$useState2 = (0, _slicedToArray.default)(_React$useState, 2),\n      nativeViewIsVisible = _React$useState2[0],\n      setNativeViewIsVisible = _React$useState2[1];\n    var onWillAppear = props.onWillAppear,\n      onDidAppear = props.onDidAppear,\n      onWillDisappear = props.onWillDisappear,\n      onDidDisappear = props.onDidDisappear,\n      _props$isFocused = props.isFocused,\n      isFocused = _props$isFocused === undefined ? false : _props$isFocused,\n      freezeContents = props.freezeContents,\n      icon = props.icon,\n      iconResource = props.iconResource,\n      selectedIcon = props.selectedIcon,\n      standardAppearance = props.standardAppearance,\n      scrollEdgeAppearance = props.scrollEdgeAppearance,\n      rest = (0, _objectWithoutProperties.default)(props, _excluded);\n    var shouldFreeze = shouldFreezeScreen(nativeViewIsVisible, isFocused, freezeContents);\n    var onWillAppearCallback = React.default.useCallback(event => {\n      (0, _privateLogging.bottomTabsDebugLog)(`TabsScreen [${componentNodeHandle.current}] onWillAppear received`);\n      setNativeViewIsVisible(true);\n      onWillAppear?.(event);\n    }, [onWillAppear]);\n    var onDidAppearCallback = React.default.useCallback(event => {\n      (0, _privateLogging.bottomTabsDebugLog)(`TabsScreen [${componentNodeHandle.current}] onDidAppear received`);\n      onDidAppear?.(event);\n    }, [onDidAppear]);\n    var onWillDisappearCallback = React.default.useCallback(event => {\n      (0, _privateLogging.bottomTabsDebugLog)(`TabsScreen [${componentNodeHandle.current}] onWillDisappear received`);\n      onWillDisappear?.(event);\n    }, [onWillDisappear]);\n    var onDidDisappearCallback = React.default.useCallback(event => {\n      (0, _privateLogging.bottomTabsDebugLog)(`TabsScreen [${componentNodeHandle.current}] onDidDisappear received`);\n      setNativeViewIsVisible(false);\n      onDidDisappear?.(event);\n    }, [onDidDisappear]);\n    (0, _privateLogging.bottomTabsDebugLog)(`TabsScreen [${componentNodeHandle.current ?? -1}] render; tabKey: ${rest.tabKey} shouldFreeze: ${shouldFreeze}, isFocused: ${isFocused} nativeViewIsVisible: ${nativeViewIsVisible}`);\n    var iconProps = parseIconsToNativeProps(icon, selectedIcon);\n    var parsedIconResource;\n    if (iconResource) {\n      parsedIconResource = _reactNative.Image.resolveAssetSource(iconResource);\n      if (!parsedIconResource) {\n        console.error('[RNScreens] failed to resolve an asset for bottom tab icon');\n      }\n    }\n    return /*#__PURE__*/(0, _reactJsxRuntime.jsx)(BottomTabsScreenNativeComponent.default, {\n      collapsable: false,\n      style: styles.fillParent,\n      onWillAppear: onWillAppearCallback,\n      onDidAppear: onDidAppearCallback,\n      onWillDisappear: onWillDisappearCallback,\n      onDidDisappear: onDidDisappearCallback,\n      isFocused: isFocused\n      // I'm keeping undefined as a fallback if `Image.resolveAssetSource` has failed for some reason.\n      // It won't render any icon, but it will prevent from crashing on the native side which is expecting\n      // ReadableMap. Passing `iconResource` directly will result in crash, because `require` API is returning\n      // double as a value.\n      ,\n      iconResource: parsedIconResource || undefined,\n      ...iconProps,\n      standardAppearance: mapAppearanceToNativeProp(standardAppearance),\n      scrollEdgeAppearance: mapAppearanceToNativeProp(scrollEdgeAppearance)\n      // @ts-ignore - This is debug only anyway\n      ,\n      ref: componentNodeRef,\n      ...rest,\n      children: /*#__PURE__*/(0, _reactJsxRuntime.jsx)(_reactFreeze.Freeze, {\n        freeze: shouldFreeze,\n        placeholder: rest.placeholder,\n        children: rest.children\n      })\n    });\n  }\n  function mapAppearanceToNativeProp(appearance) {\n    if (!appearance) return undefined;\n    var stacked = appearance.stacked,\n      inline = appearance.inline,\n      compactInline = appearance.compactInline,\n      tabBarBackgroundColor = appearance.tabBarBackgroundColor,\n      tabBarShadowColor = appearance.tabBarShadowColor;\n    return {\n      ...appearance,\n      stacked: mapItemAppearanceToNativeProp(stacked),\n      inline: mapItemAppearanceToNativeProp(inline),\n      compactInline: mapItemAppearanceToNativeProp(compactInline),\n      tabBarBackgroundColor: (0, _reactNative.processColor)(tabBarBackgroundColor),\n      tabBarShadowColor: (0, _reactNative.processColor)(tabBarShadowColor)\n    };\n  }\n  function mapItemAppearanceToNativeProp(itemAppearance) {\n    if (!itemAppearance) return undefined;\n    var normal = itemAppearance.normal,\n      selected = itemAppearance.selected,\n      focused = itemAppearance.focused,\n      disabled = itemAppearance.disabled;\n    return {\n      ...itemAppearance,\n      normal: mapItemStateAppearanceToNativeProp(normal),\n      selected: mapItemStateAppearanceToNativeProp(selected),\n      focused: mapItemStateAppearanceToNativeProp(focused),\n      disabled: mapItemStateAppearanceToNativeProp(disabled)\n    };\n  }\n  function mapItemStateAppearanceToNativeProp(itemStateAppearance) {\n    if (!itemStateAppearance) return undefined;\n    var tabBarItemTitleFontColor = itemStateAppearance.tabBarItemTitleFontColor,\n      tabBarItemIconColor = itemStateAppearance.tabBarItemIconColor,\n      tabBarItemBadgeBackgroundColor = itemStateAppearance.tabBarItemBadgeBackgroundColor,\n      tabBarItemTitleFontWeight = itemStateAppearance.tabBarItemTitleFontWeight;\n    return {\n      ...itemStateAppearance,\n      tabBarItemTitleFontColor: (0, _reactNative.processColor)(tabBarItemTitleFontColor),\n      tabBarItemIconColor: (0, _reactNative.processColor)(tabBarItemIconColor),\n      tabBarItemBadgeBackgroundColor: (0, _reactNative.processColor)(tabBarItemBadgeBackgroundColor),\n      tabBarItemTitleFontWeight: tabBarItemTitleFontWeight !== undefined ? String(tabBarItemTitleFontWeight) : undefined\n    };\n  }\n  function shouldFreezeScreen(nativeViewVisible, screenFocused, freezeOverride) {\n    if (!(0, _core.freezeEnabled)()) {\n      return false;\n    }\n    if (freezeOverride !== undefined) {\n      return freezeOverride;\n    }\n    if (_flags.featureFlags.experiment.controlledBottomTabs) {\n      // If the tabs are JS controlled, we want to freeze only when given view is not focused && it is not currently visible\n      return !nativeViewVisible && !screenFocused;\n    }\n    return !nativeViewVisible;\n  }\n  function parseIconToNativeProps(icon) {\n    if (!icon) {\n      return {};\n    }\n    if ('sfSymbolName' in icon) {\n      // iOS-specific: SFSymbol usage\n      return {\n        iconType: 'sfSymbol',\n        iconSfSymbolName: icon.sfSymbolName\n      };\n    } else if ('imageSource' in icon) {\n      return {\n        iconType: 'image',\n        iconImageSource: icon.imageSource\n      };\n    } else if ('templateSource' in icon) {\n      // iOS-specifig: image as a template usage\n      return {\n        iconType: 'template',\n        iconImageSource: icon.templateSource\n      };\n    } else {\n      // iOS-specific: SFSymbol, image as a template usage\n      throw new Error('[RNScreens] Incorrect icon format. You must provide sfSymbolName, imageSource or templateSource.');\n    }\n  }\n  function parseIconsToNativeProps(icon, selectedIcon) {\n    var _parseIconToNativePro = parseIconToNativeProps(icon),\n      iconImageSource = _parseIconToNativePro.iconImageSource,\n      iconSfSymbolName = _parseIconToNativePro.iconSfSymbolName,\n      iconType = _parseIconToNativePro.iconType;\n    var _parseIconToNativePro2 = parseIconToNativeProps(selectedIcon),\n      selectedIconImageSource = _parseIconToNativePro2.iconImageSource,\n      selectedIconSfSymbolName = _parseIconToNativePro2.iconSfSymbolName,\n      selectedIconType = _parseIconToNativePro2.iconType;\n    if (iconType !== undefined && selectedIconType !== undefined && iconType !== selectedIconType) {\n      throw new Error('[RNScreens] icon and selectedIcon must be same type.');\n    } else if (iconType === undefined && selectedIconType !== undefined) {\n      // iOS-specific: UIKit requirement\n      throw new Error('[RNScreens] To use selectedIcon prop, the icon prop must also be provided.');\n    }\n    return {\n      iconType,\n      iconImageSource,\n      iconSfSymbolName,\n      selectedIconImageSource,\n      selectedIconSfSymbolName\n    };\n  }\n  var _default = BottomTabsScreen;\n  var styles = _reactNative.StyleSheet.create({\n    fillParent: {\n      position: 'absolute',\n      flex: 1,\n      width: '100%',\n      height: '100%'\n    }\n  });\n});","lineCount":235,"map":[[2,2,1,0],[2,14,1,12],[3,2,1,13],[5,2,1,13],[5,6,1,13,"_excluded"],[5,15,1,13],[6,2,32,0],[7,0,33,0],[8,0,34,0],[9,2,32,0,"Object"],[9,8,32,0],[9,9,32,0,"defineProperty"],[9,23,32,0],[9,24,32,0,"exports"],[9,31,32,0],[10,4,32,0,"value"],[10,9,32,0],[11,2,32,0],[12,2,32,0],[12,11,32,0,"_interopDefault"],[12,27,32,0,"e"],[12,28,32,0],[13,4,32,0],[13,11,32,0,"e"],[13,12,32,0],[13,16,32,0,"e"],[13,17,32,0],[13,18,32,0,"__esModule"],[13,28,32,0],[13,31,32,0,"e"],[13,32,32,0],[14,6,32,0,"default"],[14,13,32,0],[14,15,32,0,"e"],[15,4,32,0],[16,2,32,0],[17,2,318,0,"Object"],[17,8,318,0],[17,9,318,0,"defineProperty"],[17,23,318,0],[17,24,318,0,"exports"],[17,31,318,0],[18,4,318,0,"enumerable"],[18,14,318,0],[19,4,318,0,"get"],[19,7,318,0],[19,18,318,0,"get"],[19,19,318,0],[20,6,318,0],[20,13,318,0,"_default"],[20,21,318,0],[21,4,318,0],[22,2,318,0],[23,2,318,32],[23,6,318,32,"_babelRuntimeHelpersObjectWithoutProperties"],[23,49,318,32],[23,52,318,32,"require"],[23,59,318,32],[23,60,318,32,"_dependencyMap"],[23,74,318,32],[24,2,318,32],[24,6,318,32,"_objectWithoutProperties"],[24,30,318,32],[24,33,318,32,"_interopDefault"],[24,48,318,32],[24,49,318,32,"_babelRuntimeHelpersObjectWithoutProperties"],[24,92,318,32],[25,2,318,32],[25,6,318,32,"_babelRuntimeHelpersSlicedToArray"],[25,39,318,32],[25,42,318,32,"require"],[25,49,318,32],[25,50,318,32,"_dependencyMap"],[25,64,318,32],[26,2,318,32],[26,6,318,32,"_slicedToArray"],[26,20,318,32],[26,23,318,32,"_interopDefault"],[26,38,318,32],[26,39,318,32,"_babelRuntimeHelpersSlicedToArray"],[26,72,318,32],[27,2,3,0],[27,6,3,0,"_react"],[27,12,3,0],[27,15,3,0,"require"],[27,22,3,0],[27,23,3,0,"_dependencyMap"],[27,37,3,0],[28,2,3,0],[28,6,3,0,"React"],[28,11,3,0],[28,14,3,0,"_interopDefault"],[28,29,3,0],[28,30,3,0,"_react"],[28,36,3,0],[29,2,4,0],[29,6,4,0,"_reactFreeze"],[29,18,4,0],[29,21,4,0,"require"],[29,28,4,0],[29,29,4,0,"_dependencyMap"],[29,43,4,0],[30,2,5,0],[30,6,5,0,"_reactNative"],[30,18,5,0],[30,21,5,0,"require"],[30,28,5,0],[30,29,5,0,"_dependencyMap"],[30,43,5,0],[31,2,13,0],[31,6,13,0,"_core"],[31,11,13,0],[31,14,13,0,"require"],[31,21,13,0],[31,22,13,0,"_dependencyMap"],[31,36,13,0],[32,2,14,0],[32,6,14,0,"_fabricBottomTabsBottomTabsScreenNativeComponent"],[32,54,14,0],[32,57,14,0,"require"],[32,64,14,0],[32,65,14,0,"_dependencyMap"],[32,79,14,0],[33,2,14,0],[33,6,14,0,"BottomTabsScreenNativeComponent"],[33,37,14,0],[33,40,14,0,"_interopDefault"],[33,55,14,0],[33,56,14,0,"_fabricBottomTabsBottomTabsScreenNativeComponent"],[33,104,14,0],[34,2,21,0],[34,6,21,0,"_flags"],[34,12,21,0],[34,15,21,0,"require"],[34,22,21,0],[34,23,21,0,"_dependencyMap"],[34,37,21,0],[35,2,30,0],[35,6,30,0,"_privateLogging"],[35,21,30,0],[35,24,30,0,"require"],[35,31,30,0],[35,32,30,0,"_dependencyMap"],[35,46,30,0],[36,2,30,59],[36,6,30,59,"_reactJsxRuntime"],[36,22,30,59],[36,25,30,59,"require"],[36,32,30,59],[36,33,30,59,"_dependencyMap"],[36,47,30,59],[37,2,35,0],[37,11,35,9,"BottomTabsScreen"],[37,27,35,25,"BottomTabsScreen"],[37,28,35,26,"props"],[37,33,35,54],[37,35,35,56],[38,4,36,2],[38,8,36,8,"componentNodeRef"],[38,24,36,24],[38,27,36,27,"React"],[38,32,36,32],[38,33,36,32,"default"],[38,40,36,32],[38,41,36,33,"useRef"],[38,47,36,39],[38,48,36,70],[38,52,36,74],[38,53,36,75],[39,4,37,2],[39,8,37,8,"componentNodeHandle"],[39,27,37,27],[39,30,37,30,"React"],[39,35,37,35],[39,36,37,35,"default"],[39,43,37,35],[39,44,37,36,"useRef"],[39,50,37,42],[39,53,37,53],[39,54,37,54],[40,4,39,2,"React"],[40,9,39,7],[40,10,39,7,"default"],[40,17,39,7],[40,18,39,8,"useEffect"],[40,27,39,17],[40,28,39,18],[40,34,39,24],[41,6,40,4],[41,10,40,8,"componentNodeRef"],[41,26,40,24],[41,27,40,25,"current"],[41,34,40,32],[41,38,40,36],[41,42,40,40],[41,44,40,42],[42,8,41,6,"componentNodeHandle"],[42,27,41,25],[42,28,41,26,"current"],[42,35,41,33],[42,38,42,8],[42,42,42,8,"findNodeHandle"],[42,54,42,22],[42,55,42,22,"findNodeHandle"],[42,69,42,22],[42,71,42,23,"componentNodeRef"],[42,87,42,39],[42,88,42,40,"current"],[42,95,42,47],[42,96,42,48],[42,102,42,54],[43,6,43,4],[43,7,43,5],[43,13,43,11],[44,8,44,6,"componentNodeHandle"],[44,27,44,25],[44,28,44,26,"current"],[44,35,44,33],[44,40,44,38],[45,6,45,4],[46,4,46,2],[46,5,46,3],[46,7,46,5],[46,9,46,7],[46,10,46,8],[47,4,48,2],[47,8,48,2,"_React$useState"],[47,23,48,2],[47,26,48,56,"React"],[47,31,48,61],[47,32,48,61,"default"],[47,39,48,61],[47,40,48,62,"useState"],[47,48,48,70],[47,49,48,71],[47,54,48,76],[47,55,48,77],[48,6,48,77,"_React$useState2"],[48,22,48,77],[48,29,48,77,"_slicedToArray"],[48,43,48,77],[48,44,48,77,"default"],[48,51,48,77],[48,53,48,77,"_React$useState"],[48,68,48,77],[49,6,48,9,"nativeViewIsVisible"],[49,25,48,28],[49,28,48,28,"_React$useState2"],[49,44,48,28],[50,6,48,30,"setNativeViewIsVisible"],[50,28,48,52],[50,31,48,52,"_React$useState2"],[50,47,48,52],[51,4,50,2],[51,8,51,4,"onWillAppear"],[51,20,51,16],[51,23,63,6,"props"],[51,28,63,11],[51,29,51,4,"onWillAppear"],[51,41,51,16],[52,6,52,4,"onDidAppear"],[52,17,52,15],[52,20,63,6,"props"],[52,25,63,11],[52,26,52,4,"onDidAppear"],[52,37,52,15],[53,6,53,4,"onWillDisappear"],[53,21,53,19],[53,24,63,6,"props"],[53,29,63,11],[53,30,53,4,"onWillDisappear"],[53,45,53,19],[54,6,54,4,"onDidDisappear"],[54,20,54,18],[54,23,63,6,"props"],[54,28,63,11],[54,29,54,4,"onDidDisappear"],[54,43,54,18],[55,6,54,18,"_props$isFocused"],[55,22,54,18],[55,25,63,6,"props"],[55,30,63,11],[55,31,55,4,"isFocused"],[55,40,55,13],[56,6,55,4,"isFocused"],[56,15,55,13],[56,18,55,13,"_props$isFocused"],[56,34,55,13],[56,39,55,13,"undefined"],[56,48,55,13],[56,51,55,16],[56,56,55,21],[56,59,55,21,"_props$isFocused"],[56,75,55,21],[57,6,56,4,"freezeContents"],[57,20,56,18],[57,23,63,6,"props"],[57,28,63,11],[57,29,56,4,"freezeContents"],[57,43,56,18],[58,6,57,4,"icon"],[58,10,57,8],[58,13,63,6,"props"],[58,18,63,11],[58,19,57,4,"icon"],[58,23,57,8],[59,6,58,4,"iconResource"],[59,18,58,16],[59,21,63,6,"props"],[59,26,63,11],[59,27,58,4,"iconResource"],[59,39,58,16],[60,6,59,4,"selectedIcon"],[60,18,59,16],[60,21,63,6,"props"],[60,26,63,11],[60,27,59,4,"selectedIcon"],[60,39,59,16],[61,6,60,4,"standardAppearance"],[61,24,60,22],[61,27,63,6,"props"],[61,32,63,11],[61,33,60,4,"standardAppearance"],[61,51,60,22],[62,6,61,4,"scrollEdgeAppearance"],[62,26,61,24],[62,29,63,6,"props"],[62,34,63,11],[62,35,61,4,"scrollEdgeAppearance"],[62,55,61,24],[63,6,62,7,"rest"],[63,10,62,11],[63,17,62,11,"_objectWithoutProperties"],[63,41,62,11],[63,42,62,11,"default"],[63,49,62,11],[63,51,63,6,"props"],[63,56,63,11],[63,58,63,11,"_excluded"],[63,67,63,11],[64,4,65,2],[64,8,65,8,"shouldFreeze"],[64,20,65,20],[64,23,65,23,"shouldFreezeScreen"],[64,41,65,41],[64,42,66,4,"nativeViewIsVisible"],[64,61,66,23],[64,63,67,4,"isFocused"],[64,72,67,13],[64,74,68,4,"freezeContents"],[64,88,69,2],[64,89,69,3],[65,4,71,2],[65,8,71,8,"onWillAppearCallback"],[65,28,71,28],[65,31,71,31,"React"],[65,36,71,36],[65,37,71,36,"default"],[65,44,71,36],[65,45,71,37,"useCallback"],[65,56,71,48],[65,57,72,5,"event"],[65,62,72,45],[65,66,72,50],[66,6,73,6],[66,10,73,6,"bottomTabsDebugLog"],[66,25,73,24],[66,26,73,24,"bottomTabsDebugLog"],[66,44,73,24],[66,46,74,8],[66,61,74,23,"componentNodeHandle"],[66,80,74,42],[66,81,74,43,"current"],[66,88,74,50],[66,113,75,6],[66,114,75,7],[67,6,76,6,"setNativeViewIsVisible"],[67,28,76,28],[67,29,76,29],[67,33,76,33],[67,34,76,34],[68,6,77,6,"onWillAppear"],[68,18,77,18],[68,21,77,21,"event"],[68,26,77,26],[68,27,77,27],[69,4,78,4],[69,5,78,5],[69,7,79,4],[69,8,79,5,"onWillAppear"],[69,20,79,17],[69,21,80,2],[69,22,80,3],[70,4,82,2],[70,8,82,8,"onDidAppearCallback"],[70,27,82,27],[70,30,82,30,"React"],[70,35,82,35],[70,36,82,35,"default"],[70,43,82,35],[70,44,82,36,"useCallback"],[70,55,82,47],[70,56,83,5,"event"],[70,61,83,45],[70,65,83,50],[71,6,84,6],[71,10,84,6,"bottomTabsDebugLog"],[71,25,84,24],[71,26,84,24,"bottomTabsDebugLog"],[71,44,84,24],[71,46,85,8],[71,61,85,23,"componentNodeHandle"],[71,80,85,42],[71,81,85,43,"current"],[71,88,85,50],[71,112,86,6],[71,113,86,7],[72,6,87,6,"onDidAppear"],[72,17,87,17],[72,20,87,20,"event"],[72,25,87,25],[72,26,87,26],[73,4,88,4],[73,5,88,5],[73,7,89,4],[73,8,89,5,"onDidAppear"],[73,19,89,16],[73,20,90,2],[73,21,90,3],[74,4,92,2],[74,8,92,8,"onWillDisappearCallback"],[74,31,92,31],[74,34,92,34,"React"],[74,39,92,39],[74,40,92,39,"default"],[74,47,92,39],[74,48,92,40,"useCallback"],[74,59,92,51],[74,60,93,5,"event"],[74,65,93,45],[74,69,93,50],[75,6,94,6],[75,10,94,6,"bottomTabsDebugLog"],[75,25,94,24],[75,26,94,24,"bottomTabsDebugLog"],[75,44,94,24],[75,46,95,8],[75,61,95,23,"componentNodeHandle"],[75,80,95,42],[75,81,95,43,"current"],[75,88,95,50],[75,116,96,6],[75,117,96,7],[76,6,97,6,"onWillDisappear"],[76,21,97,21],[76,24,97,24,"event"],[76,29,97,29],[76,30,97,30],[77,4,98,4],[77,5,98,5],[77,7,99,4],[77,8,99,5,"onWillDisappear"],[77,23,99,20],[77,24,100,2],[77,25,100,3],[78,4,102,2],[78,8,102,8,"onDidDisappearCallback"],[78,30,102,30],[78,33,102,33,"React"],[78,38,102,38],[78,39,102,38,"default"],[78,46,102,38],[78,47,102,39,"useCallback"],[78,58,102,50],[78,59,103,5,"event"],[78,64,103,45],[78,68,103,50],[79,6,104,6],[79,10,104,6,"bottomTabsDebugLog"],[79,25,104,24],[79,26,104,24,"bottomTabsDebugLog"],[79,44,104,24],[79,46,105,8],[79,61,105,23,"componentNodeHandle"],[79,80,105,42],[79,81,105,43,"current"],[79,88,105,50],[79,115,106,6],[79,116,106,7],[80,6,107,6,"setNativeViewIsVisible"],[80,28,107,28],[80,29,107,29],[80,34,107,34],[80,35,107,35],[81,6,108,6,"onDidDisappear"],[81,20,108,20],[81,23,108,23,"event"],[81,28,108,28],[81,29,108,29],[82,4,109,4],[82,5,109,5],[82,7,110,4],[82,8,110,5,"onDidDisappear"],[82,22,110,19],[82,23,111,2],[82,24,111,3],[83,4,113,2],[83,8,113,2,"bottomTabsDebugLog"],[83,23,113,20],[83,24,113,20,"bottomTabsDebugLog"],[83,42,113,20],[83,44,114,4],[83,59,114,19,"componentNodeHandle"],[83,78,114,38],[83,79,114,39,"current"],[83,86,114,46],[83,92,114,52],[83,113,115,6,"rest"],[83,117,115,10],[83,118,115,11,"tabKey"],[83,124,115,17],[83,142,116,22,"shouldFreeze"],[83,154,116,34],[83,170,116,50,"isFocused"],[83,179,116,59],[83,204,116,84,"nativeViewIsVisible"],[83,223,116,103],[83,225,117,2],[83,226,117,3],[84,4,119,2],[84,8,119,8,"iconProps"],[84,17,119,17],[84,20,119,20,"parseIconsToNativeProps"],[84,43,119,43],[84,44,119,44,"icon"],[84,48,119,48],[84,50,119,50,"selectedIcon"],[84,62,119,62],[84,63,119,63],[85,4,121,2],[85,8,121,6,"parsedIconResource"],[85,26,121,24],[86,4,122,2],[86,8,122,6,"iconResource"],[86,20,122,18],[86,22,122,20],[87,6,123,4,"parsedIconResource"],[87,24,123,22],[87,27,123,25,"Image"],[87,39,123,30],[87,40,123,30,"Image"],[87,45,123,30],[87,46,123,31,"resolveAssetSource"],[87,64,123,49],[87,65,123,50,"iconResource"],[87,77,123,62],[87,78,123,63],[88,6,124,4],[88,10,124,8],[88,11,124,9,"parsedIconResource"],[88,29,124,27],[88,31,124,29],[89,8,125,6,"console"],[89,15,125,13],[89,16,125,14,"error"],[89,21,125,19],[89,22,126,8],[89,82,127,6],[89,83,127,7],[90,6,128,4],[91,4,129,2],[92,4,131,2],[92,24,132,4],[92,28,132,4,"_reactJsxRuntime"],[92,44,132,4],[92,45,132,4,"jsx"],[92,48,132,4],[92,50,132,5,"BottomTabsScreenNativeComponent"],[92,81,132,36],[92,82,132,36,"default"],[92,89,132,36],[93,6,133,6,"collapsable"],[93,17,133,17],[93,19,133,19],[93,24,133,25],[94,6,134,6,"style"],[94,11,134,11],[94,13,134,13,"styles"],[94,19,134,19],[94,20,134,20,"fillParent"],[94,30,134,31],[95,6,135,6,"onWillAppear"],[95,18,135,18],[95,20,135,20,"onWillAppearCallback"],[95,40,135,41],[96,6,136,6,"onDidAppear"],[96,17,136,17],[96,19,136,19,"onDidAppearCallback"],[96,38,136,39],[97,6,137,6,"onWillDisappear"],[97,21,137,21],[97,23,137,23,"onWillDisappearCallback"],[97,46,137,47],[98,6,138,6,"onDidDisappear"],[98,20,138,20],[98,22,138,22,"onDidDisappearCallback"],[98,44,138,45],[99,6,139,6,"isFocused"],[99,15,139,15],[99,17,139,17,"isFocused"],[100,6,140,6],[101,6,141,6],[102,6,142,6],[103,6,143,6],[104,6,143,6],[105,6,144,6,"iconResource"],[105,18,144,18],[105,20,144,20,"parsedIconResource"],[105,38,144,38],[105,42,144,42,"undefined"],[105,51,144,52],[106,6,144,52],[106,9,145,10,"iconProps"],[106,18,145,19],[107,6,146,6,"standardAppearance"],[107,24,146,24],[107,26,146,26,"mapAppearanceToNativeProp"],[107,51,146,51],[107,52,146,52,"standardAppearance"],[107,70,146,70],[107,71,146,72],[108,6,147,6,"scrollEdgeAppearance"],[108,26,147,26],[108,28,147,28,"mapAppearanceToNativeProp"],[108,53,147,53],[108,54,147,54,"scrollEdgeAppearance"],[108,74,147,74],[109,6,148,6],[110,6,148,6],[111,6,149,6,"ref"],[111,9,149,9],[111,11,149,11,"componentNodeRef"],[111,27,149,28],[112,6,149,28],[112,9,150,10,"rest"],[112,13,150,14],[113,6,150,14,"children"],[113,14,150,14],[113,29,151,6],[113,33,151,6,"_reactJsxRuntime"],[113,49,151,6],[113,50,151,6,"jsx"],[113,53,151,6],[113,55,151,7,"_reactFreeze"],[113,67,151,13],[113,68,151,13,"Freeze"],[113,74,151,13],[114,8,151,14,"freeze"],[114,14,151,20],[114,16,151,22,"shouldFreeze"],[114,28,151,35],[115,8,151,36,"placeholder"],[115,19,151,47],[115,21,151,49,"rest"],[115,25,151,53],[115,26,151,54,"placeholder"],[115,37,151,66],[116,8,151,66,"children"],[116,16,151,66],[116,18,152,9,"rest"],[116,22,152,13],[116,23,152,14,"children"],[117,6,152,22],[117,7,153,14],[118,4,153,15],[118,5,154,37],[118,6,154,38],[119,2,156,0],[120,2,158,0],[120,11,158,9,"mapAppearanceToNativeProp"],[120,36,158,34,"mapAppearanceToNativeProp"],[120,37,159,2,"appearance"],[120,47,159,41],[120,49,160,26],[121,4,161,2],[121,8,161,6],[121,9,161,7,"appearance"],[121,19,161,17],[121,21,161,19],[121,28,161,26,"undefined"],[121,37,161,35],[122,4,163,2],[122,8,164,4,"stacked"],[122,15,164,11],[122,18,169,6,"appearance"],[122,28,169,16],[122,29,164,4,"stacked"],[122,36,164,11],[123,6,165,4,"inline"],[123,12,165,10],[123,15,169,6,"appearance"],[123,25,169,16],[123,26,165,4,"inline"],[123,32,165,10],[124,6,166,4,"compactInline"],[124,19,166,17],[124,22,169,6,"appearance"],[124,32,169,16],[124,33,166,4,"compactInline"],[124,46,166,17],[125,6,167,4,"tabBarBackgroundColor"],[125,27,167,25],[125,30,169,6,"appearance"],[125,40,169,16],[125,41,167,4,"tabBarBackgroundColor"],[125,62,167,25],[126,6,168,4,"tabBarShadowColor"],[126,23,168,21],[126,26,169,6,"appearance"],[126,36,169,16],[126,37,168,4,"tabBarShadowColor"],[126,54,168,21],[127,4,171,2],[127,11,171,9],[128,6,172,4],[128,9,172,7,"appearance"],[128,19,172,17],[129,6,173,4,"stacked"],[129,13,173,11],[129,15,173,13,"mapItemAppearanceToNativeProp"],[129,44,173,42],[129,45,173,43,"stacked"],[129,52,173,50],[129,53,173,51],[130,6,174,4,"inline"],[130,12,174,10],[130,14,174,12,"mapItemAppearanceToNativeProp"],[130,43,174,41],[130,44,174,42,"inline"],[130,50,174,48],[130,51,174,49],[131,6,175,4,"compactInline"],[131,19,175,17],[131,21,175,19,"mapItemAppearanceToNativeProp"],[131,50,175,48],[131,51,175,49,"compactInline"],[131,64,175,62],[131,65,175,63],[132,6,176,4,"tabBarBackgroundColor"],[132,27,176,25],[132,29,176,27],[132,33,176,27,"processColor"],[132,45,176,39],[132,46,176,39,"processColor"],[132,58,176,39],[132,60,176,40,"tabBarBackgroundColor"],[132,81,176,61],[132,82,176,62],[133,6,177,4,"tabBarShadowColor"],[133,23,177,21],[133,25,177,23],[133,29,177,23,"processColor"],[133,41,177,35],[133,42,177,35,"processColor"],[133,54,177,35],[133,56,177,36,"tabBarShadowColor"],[133,73,177,53],[134,4,178,2],[134,5,178,3],[135,2,179,0],[136,2,181,0],[136,11,181,9,"mapItemAppearanceToNativeProp"],[136,40,181,38,"mapItemAppearanceToNativeProp"],[136,41,182,2,"itemAppearance"],[136,55,182,49],[136,57,183,30],[137,4,184,2],[137,8,184,6],[137,9,184,7,"itemAppearance"],[137,23,184,21],[137,25,184,23],[137,32,184,30,"undefined"],[137,41,184,39],[138,4,186,2],[138,8,186,10,"normal"],[138,14,186,16],[138,17,186,50,"itemAppearance"],[138,31,186,64],[138,32,186,10,"normal"],[138,38,186,16],[139,6,186,18,"selected"],[139,14,186,26],[139,17,186,50,"itemAppearance"],[139,31,186,64],[139,32,186,18,"selected"],[139,40,186,26],[140,6,186,28,"focused"],[140,13,186,35],[140,16,186,50,"itemAppearance"],[140,30,186,64],[140,31,186,28,"focused"],[140,38,186,35],[141,6,186,37,"disabled"],[141,14,186,45],[141,17,186,50,"itemAppearance"],[141,31,186,64],[141,32,186,37,"disabled"],[141,40,186,45],[142,4,188,2],[142,11,188,9],[143,6,189,4],[143,9,189,7,"itemAppearance"],[143,23,189,21],[144,6,190,4,"normal"],[144,12,190,10],[144,14,190,12,"mapItemStateAppearanceToNativeProp"],[144,48,190,46],[144,49,190,47,"normal"],[144,55,190,53],[144,56,190,54],[145,6,191,4,"selected"],[145,14,191,12],[145,16,191,14,"mapItemStateAppearanceToNativeProp"],[145,50,191,48],[145,51,191,49,"selected"],[145,59,191,57],[145,60,191,58],[146,6,192,4,"focused"],[146,13,192,11],[146,15,192,13,"mapItemStateAppearanceToNativeProp"],[146,49,192,47],[146,50,192,48,"focused"],[146,57,192,55],[146,58,192,56],[147,6,193,4,"disabled"],[147,14,193,12],[147,16,193,14,"mapItemStateAppearanceToNativeProp"],[147,50,193,48],[147,51,193,49,"disabled"],[147,59,193,57],[148,4,194,2],[148,5,194,3],[149,2,195,0],[150,2,197,0],[150,11,197,9,"mapItemStateAppearanceToNativeProp"],[150,45,197,43,"mapItemStateAppearanceToNativeProp"],[150,46,198,2,"itemStateAppearance"],[150,65,198,59],[150,67,199,35],[151,4,200,2],[151,8,200,6],[151,9,200,7,"itemStateAppearance"],[151,28,200,26],[151,30,200,28],[151,37,200,35,"undefined"],[151,46,200,44],[152,4,202,2],[152,8,203,4,"tabBarItemTitleFontColor"],[152,32,203,28],[152,35,207,6,"itemStateAppearance"],[152,54,207,25],[152,55,203,4,"tabBarItemTitleFontColor"],[152,79,203,28],[153,6,204,4,"tabBarItemIconColor"],[153,25,204,23],[153,28,207,6,"itemStateAppearance"],[153,47,207,25],[153,48,204,4,"tabBarItemIconColor"],[153,67,204,23],[154,6,205,4,"tabBarItemBadgeBackgroundColor"],[154,36,205,34],[154,39,207,6,"itemStateAppearance"],[154,58,207,25],[154,59,205,4,"tabBarItemBadgeBackgroundColor"],[154,89,205,34],[155,6,206,4,"tabBarItemTitleFontWeight"],[155,31,206,29],[155,34,207,6,"itemStateAppearance"],[155,53,207,25],[155,54,206,4,"tabBarItemTitleFontWeight"],[155,79,206,29],[156,4,209,2],[156,11,209,9],[157,6,210,4],[157,9,210,7,"itemStateAppearance"],[157,28,210,26],[158,6,211,4,"tabBarItemTitleFontColor"],[158,30,211,28],[158,32,211,30],[158,36,211,30,"processColor"],[158,48,211,42],[158,49,211,42,"processColor"],[158,61,211,42],[158,63,211,43,"tabBarItemTitleFontColor"],[158,87,211,67],[158,88,211,68],[159,6,212,4,"tabBarItemIconColor"],[159,25,212,23],[159,27,212,25],[159,31,212,25,"processColor"],[159,43,212,37],[159,44,212,37,"processColor"],[159,56,212,37],[159,58,212,38,"tabBarItemIconColor"],[159,77,212,57],[159,78,212,58],[160,6,213,4,"tabBarItemBadgeBackgroundColor"],[160,36,213,34],[160,38,213,36],[160,42,213,36,"processColor"],[160,54,213,48],[160,55,213,48,"processColor"],[160,67,213,48],[160,69,214,6,"tabBarItemBadgeBackgroundColor"],[160,99,215,4],[160,100,215,5],[161,6,216,4,"tabBarItemTitleFontWeight"],[161,31,216,29],[161,33,217,6,"tabBarItemTitleFontWeight"],[161,58,217,31],[161,63,217,36,"undefined"],[161,72,217,45],[161,75,218,10,"String"],[161,81,218,16],[161,82,218,17,"tabBarItemTitleFontWeight"],[161,107,218,42],[161,108,218,43],[161,111,219,10,"undefined"],[162,4,220,2],[162,5,220,3],[163,2,221,0],[164,2,223,0],[164,11,223,9,"shouldFreezeScreen"],[164,29,223,27,"shouldFreezeScreen"],[164,30,224,2,"nativeViewVisible"],[164,47,224,28],[164,49,225,2,"screenFocused"],[164,62,225,24],[164,64,226,2,"freezeOverride"],[164,78,226,37],[164,80,227,2],[165,4,228,2],[165,8,228,6],[165,9,228,7],[165,13,228,7,"freezeEnabled"],[165,18,228,20],[165,19,228,20,"freezeEnabled"],[165,32,228,20],[165,34,228,21],[165,35,228,22],[165,37,228,24],[166,6,229,4],[166,13,229,11],[166,18,229,16],[167,4,230,2],[168,4,232,2],[168,8,232,6,"freezeOverride"],[168,22,232,20],[168,27,232,25,"undefined"],[168,36,232,34],[168,38,232,36],[169,6,233,4],[169,13,233,11,"freezeOverride"],[169,27,233,25],[170,4,234,2],[171,4,236,2],[171,8,236,6,"featureFlags"],[171,14,236,18],[171,15,236,18,"featureFlags"],[171,27,236,18],[171,28,236,19,"experiment"],[171,38,236,29],[171,39,236,30,"controlledBottomTabs"],[171,59,236,50],[171,61,236,52],[172,6,237,4],[173,6,238,4],[173,13,238,11],[173,14,238,12,"nativeViewVisible"],[173,31,238,29],[173,35,238,33],[173,36,238,34,"screenFocused"],[173,49,238,47],[174,4,239,2],[175,4,241,2],[175,11,241,9],[175,12,241,10,"nativeViewVisible"],[175,29,241,27],[176,2,242,0],[177,2,244,0],[177,11,244,9,"parseIconToNativeProps"],[177,33,244,31,"parseIconToNativeProps"],[177,34,244,32,"icon"],[177,38,244,54],[177,40,248,2],[178,4,249,2],[178,8,249,6],[178,9,249,7,"icon"],[178,13,249,11],[178,15,249,13],[179,6,250,4],[179,13,250,11],[179,14,250,12],[179,15,250,13],[180,4,251,2],[181,4,253,2],[181,8,253,6],[181,22,253,20],[181,26,253,24,"icon"],[181,30,253,28],[181,32,253,30],[182,6,254,4],[183,6,255,4],[183,13,255,11],[184,8,256,6,"iconType"],[184,16,256,14],[184,18,256,16],[184,28,256,26],[185,8,257,6,"iconSfSymbolName"],[185,24,257,22],[185,26,257,24,"icon"],[185,30,257,28],[185,31,257,29,"sfSymbolName"],[186,6,258,4],[186,7,258,5],[187,4,259,2],[187,5,259,3],[187,11,259,9],[187,15,259,13],[187,28,259,26],[187,32,259,30,"icon"],[187,36,259,34],[187,38,259,36],[188,6,260,4],[188,13,260,11],[189,8,261,6,"iconType"],[189,16,261,14],[189,18,261,16],[189,25,261,23],[190,8,262,6,"iconImageSource"],[190,23,262,21],[190,25,262,23,"icon"],[190,29,262,27],[190,30,262,28,"imageSource"],[191,6,263,4],[191,7,263,5],[192,4,264,2],[192,5,264,3],[192,11,264,9],[192,15,264,13],[192,31,264,29],[192,35,264,33,"icon"],[192,39,264,37],[192,41,264,39],[193,6,265,4],[194,6,266,4],[194,13,266,11],[195,8,267,6,"iconType"],[195,16,267,14],[195,18,267,16],[195,28,267,26],[196,8,268,6,"iconImageSource"],[196,23,268,21],[196,25,268,23,"icon"],[196,29,268,27],[196,30,268,28,"templateSource"],[197,6,269,4],[197,7,269,5],[198,4,270,2],[198,5,270,3],[198,11,270,9],[199,6,271,4],[200,6,272,4],[200,12,272,10],[200,16,272,14,"Error"],[200,21,272,19],[200,22,273,6],[200,120,274,4],[200,121,274,5],[201,4,275,2],[202,2,276,0],[203,2,278,0],[203,11,278,9,"parseIconsToNativeProps"],[203,34,278,32,"parseIconsToNativeProps"],[203,35,279,2,"icon"],[203,39,279,24],[203,41,280,2,"selectedIcon"],[203,53,280,32],[203,55,287,2],[204,4,288,2],[204,8,288,2,"_parseIconToNativePro"],[204,29,288,2],[204,32,289,4,"parseIconToNativeProps"],[204,54,289,26],[204,55,289,27,"icon"],[204,59,289,31],[204,60,289,32],[205,6,288,10,"iconImageSource"],[205,21,288,25],[205,24,288,25,"_parseIconToNativePro"],[205,45,288,25],[205,46,288,10,"iconImageSource"],[205,61,288,25],[206,6,288,27,"iconSfSymbolName"],[206,22,288,43],[206,25,288,43,"_parseIconToNativePro"],[206,46,288,43],[206,47,288,27,"iconSfSymbolName"],[206,63,288,43],[207,6,288,45,"iconType"],[207,14,288,53],[207,17,288,53,"_parseIconToNativePro"],[207,38,288,53],[207,39,288,45,"iconType"],[207,47,288,53],[208,4,290,2],[208,8,290,2,"_parseIconToNativePro2"],[208,30,290,2],[208,33,294,6,"parseIconToNativeProps"],[208,55,294,28],[208,56,294,29,"selectedIcon"],[208,68,294,41],[208,69,294,42],[209,6,291,21,"selectedIconImageSource"],[209,29,291,44],[209,32,291,44,"_parseIconToNativePro2"],[209,54,291,44],[209,55,291,4,"iconImageSource"],[209,70,291,19],[210,6,292,22,"selectedIconSfSymbolName"],[210,30,292,46],[210,33,292,46,"_parseIconToNativePro2"],[210,55,292,46],[210,56,292,4,"iconSfSymbolName"],[210,72,292,20],[211,6,293,14,"selectedIconType"],[211,22,293,30],[211,25,293,30,"_parseIconToNativePro2"],[211,47,293,30],[211,48,293,4,"iconType"],[211,56,293,12],[212,4,296,2],[212,8,297,4,"iconType"],[212,16,297,12],[212,21,297,17,"undefined"],[212,30,297,26],[212,34,298,4,"selectedIconType"],[212,50,298,20],[212,55,298,25,"undefined"],[212,64,298,34],[212,68,299,4,"iconType"],[212,76,299,12],[212,81,299,17,"selectedIconType"],[212,97,299,33],[212,99,300,4],[213,6,301,4],[213,12,301,10],[213,16,301,14,"Error"],[213,21,301,19],[213,22,301,20],[213,76,301,74],[213,77,301,75],[214,4,302,2],[214,5,302,3],[214,11,302,9],[214,15,302,13,"iconType"],[214,23,302,21],[214,28,302,26,"undefined"],[214,37,302,35],[214,41,302,39,"selectedIconType"],[214,57,302,55],[214,62,302,60,"undefined"],[214,71,302,69],[214,73,302,71],[215,6,303,4],[216,6,304,4],[216,12,304,10],[216,16,304,14,"Error"],[216,21,304,19],[216,22,305,6],[216,98,306,4],[216,99,306,5],[217,4,307,2],[218,4,309,2],[218,11,309,9],[219,6,310,4,"iconType"],[219,14,310,12],[220,6,311,4,"iconImageSource"],[220,21,311,19],[221,6,312,4,"iconSfSymbolName"],[221,22,312,20],[222,6,313,4,"selectedIconImageSource"],[222,29,313,27],[223,6,314,4,"selectedIconSfSymbolName"],[224,4,315,2],[224,5,315,3],[225,2,316,0],[226,2,318,0],[226,6,318,0,"_default"],[226,14,318,0],[226,17,318,15,"BottomTabsScreen"],[226,33,318,31],[227,2,320,0],[227,6,320,6,"styles"],[227,12,320,12],[227,15,320,15,"StyleSheet"],[227,27,320,25],[227,28,320,25,"StyleSheet"],[227,38,320,25],[227,39,320,26,"create"],[227,45,320,32],[227,46,320,33],[228,4,321,2,"fillParent"],[228,14,321,12],[228,16,321,14],[229,6,322,4,"position"],[229,14,322,12],[229,16,322,14],[229,26,322,24],[230,6,323,4,"flex"],[230,10,323,8],[230,12,323,10],[230,13,323,11],[231,6,324,4,"width"],[231,11,324,9],[231,13,324,11],[231,19,324,17],[232,6,325,4,"height"],[232,12,325,10],[232,14,325,12],[233,4,326,2],[234,2,327,0],[234,3,327,1],[234,4,327,2],[235,0,327,3],[235,3]],"functionMap":{"names":["<global>","BottomTabsScreen","React.useEffect$argument_0","onWillAppearCallback","onDidAppearCallback","onWillDisappearCallback","onDidDisappearCallback","mapAppearanceToNativeProp","mapItemAppearanceToNativeProp","mapItemStateAppearanceToNativeProp","shouldFreezeScreen","parseIconToNativeProps","parseIconsToNativeProps"],"mappings":"AAA;ACkC;kBCI;GDO;IE0B;KFM;IGK;KHK;IIK;KJK;IKK;KLM;CD+C;AOE;CPqB;AQE;CRc;ASE;CTwB;AUE;CVmB;AWE;CXgC;AYE;CZsC"},"hasCjsExports":false},"type":"js/module"}]}