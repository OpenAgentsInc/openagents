{"dependencies":[{"name":"invariant","data":{"asyncType":null,"isESMImport":false,"locs":[{"start":{"line":13,"column":18},"end":{"line":13,"column":38}}],"key":"oQpL0Es3H146KnQH9ygFeHrzVP4=","exportNames":["*"],"imports":1}}],"output":[{"data":{"code":"__d(function (global, require, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {\n  'use strict';\n\n  Object.defineProperty(exports, '__esModule', {\n    value: true\n  });\n  Object.defineProperty(exports, \"default\", {\n    enumerable: true,\n    get: function () {\n      return _default;\n    }\n  });\n  var invariant = require(_dependencyMap[0]);\n  var levelsMap = {\n    log: 'log',\n    info: 'info',\n    warn: 'warn',\n    error: 'error',\n    fatal: 'error'\n  };\n  var warningHandler = null;\n  var RCTLog = {\n    logIfNoNativeHook(level) {\n      for (var _len = arguments.length, args = new Array(_len > 1 ? _len - 1 : 0), _key = 1; _key < _len; _key++) {\n        args[_key - 1] = arguments[_key];\n      }\n      if (typeof global.nativeLoggingHook === 'undefined') {\n        RCTLog.logToConsole(level, ...args);\n      } else {\n        if (warningHandler && level === 'warn') {\n          warningHandler(...args);\n        }\n      }\n    },\n    logToConsole(level) {\n      var logFn = levelsMap[level];\n      invariant(logFn, 'Level \"' + level + '\" not one of ' + Object.keys(levelsMap).toString());\n      for (var _len2 = arguments.length, args = new Array(_len2 > 1 ? _len2 - 1 : 0), _key2 = 1; _key2 < _len2; _key2++) {\n        args[_key2 - 1] = arguments[_key2];\n      }\n      console[logFn](...args);\n    },\n    setWarningHandler(handler) {\n      warningHandler = handler;\n    }\n  };\n  var _default = RCTLog;\n});","lineCount":48,"map":[[2,2,11,0],[2,14,11,12],[4,2,11,13,"Object"],[4,8,11,13],[4,9,11,13,"defineProperty"],[4,23,11,13],[4,24,11,13,"exports"],[4,31,11,13],[5,4,11,13,"value"],[5,9,11,13],[6,2,11,13],[7,2,56,0,"Object"],[7,8,56,0],[7,9,56,0,"defineProperty"],[7,23,56,0],[7,24,56,0,"exports"],[7,31,56,0],[8,4,56,0,"enumerable"],[8,14,56,0],[9,4,56,0,"get"],[9,7,56,0],[9,18,56,0,"get"],[9,19,56,0],[10,6,56,0],[10,13,56,0,"_default"],[10,21,56,0],[11,4,56,0],[12,2,56,0],[13,2,13,0],[13,6,13,6,"invariant"],[13,15,13,15],[13,18,13,18,"require"],[13,25,13,25],[13,26,13,25,"_dependencyMap"],[13,40,13,25],[13,43,13,37],[13,44,13,38],[14,2,15,0],[14,6,15,6,"levelsMap"],[14,15,15,15],[14,18,15,18],[15,4,16,2,"log"],[15,7,16,5],[15,9,16,7],[15,14,16,12],[16,4,17,2,"info"],[16,8,17,6],[16,10,17,8],[16,16,17,14],[17,4,18,2,"warn"],[17,8,18,6],[17,10,18,8],[17,16,18,14],[18,4,19,2,"error"],[18,9,19,7],[18,11,19,9],[18,18,19,16],[19,4,20,2,"fatal"],[19,9,20,7],[19,11,20,9],[20,2,21,0],[20,3,21,1],[21,2,23,0],[21,6,23,4,"warningHandler"],[21,20,23,46],[21,23,23,49],[21,27,23,53],[22,2,25,0],[22,6,25,6,"RCTLog"],[22,12,25,12],[22,15,25,15],[23,4,27,2,"logIfNoNativeHook"],[23,21,27,19,"logIfNoNativeHook"],[23,22,27,20,"level"],[23,27,27,33],[23,29,27,64],[24,6,27,64],[24,15,27,64,"_len"],[24,19,27,64],[24,22,27,64,"arguments"],[24,31,27,64],[24,32,27,64,"length"],[24,38,27,64],[24,40,27,38,"args"],[24,44,27,42],[24,51,27,42,"Array"],[24,56,27,42],[24,57,27,42,"_len"],[24,61,27,42],[24,68,27,42,"_len"],[24,72,27,42],[24,83,27,42,"_key"],[24,87,27,42],[24,93,27,42,"_key"],[24,97,27,42],[24,100,27,42,"_len"],[24,104,27,42],[24,106,27,42,"_key"],[24,110,27,42],[25,8,27,38,"args"],[25,12,27,42],[25,13,27,42,"_key"],[25,17,27,42],[25,25,27,42,"arguments"],[25,34,27,42],[25,35,27,42,"_key"],[25,39,27,42],[26,6,27,42],[27,6,29,4],[27,10,29,8],[27,17,29,15,"global"],[27,23,29,21],[27,24,29,22,"nativeLoggingHook"],[27,41,29,39],[27,46,29,44],[27,57,29,55],[27,59,29,57],[28,8,30,6,"RCTLog"],[28,14,30,12],[28,15,30,13,"logToConsole"],[28,27,30,25],[28,28,30,26,"level"],[28,33,30,31],[28,35,30,33],[28,38,30,36,"args"],[28,42,30,40],[28,43,30,41],[29,6,31,4],[29,7,31,5],[29,13,31,11],[30,8,33,6],[30,12,33,10,"warningHandler"],[30,26,33,24],[30,30,33,28,"level"],[30,35,33,33],[30,40,33,38],[30,46,33,44],[30,48,33,46],[31,10,34,8,"warningHandler"],[31,24,34,22],[31,25,34,23],[31,28,34,26,"args"],[31,32,34,30],[31,33,34,31],[32,8,35,6],[33,6,36,4],[34,4,37,2],[34,5,37,3],[35,4,40,2,"logToConsole"],[35,16,40,14,"logToConsole"],[35,17,40,15,"level"],[35,22,40,28],[35,24,40,59],[36,6,42,4],[36,10,42,10,"logFn"],[36,15,42,15],[36,18,42,18,"levelsMap"],[36,27,42,27],[36,28,42,28,"level"],[36,33,42,33],[36,34,42,34],[37,6,43,4,"invariant"],[37,15,43,13],[37,16,44,6,"logFn"],[37,21,44,11],[37,23,45,6],[37,32,45,15],[37,35,45,18,"level"],[37,40,45,23],[37,43,45,26],[37,58,45,41],[37,61,45,44,"Object"],[37,67,45,50],[37,68,45,51,"keys"],[37,72,45,55],[37,73,45,56,"levelsMap"],[37,82,45,65],[37,83,45,66],[37,84,45,67,"toString"],[37,92,45,75],[37,93,45,76],[37,94,46,4],[37,95,46,5],[38,6,46,6],[38,15,46,6,"_len2"],[38,20,46,6],[38,23,46,6,"arguments"],[38,32,46,6],[38,33,46,6,"length"],[38,39,46,6],[38,41,40,33,"args"],[38,45,40,37],[38,52,40,37,"Array"],[38,57,40,37],[38,58,40,37,"_len2"],[38,63,40,37],[38,70,40,37,"_len2"],[38,75,40,37],[38,86,40,37,"_key2"],[38,91,40,37],[38,97,40,37,"_key2"],[38,102,40,37],[38,105,40,37,"_len2"],[38,110,40,37],[38,112,40,37,"_key2"],[38,117,40,37],[39,8,40,33,"args"],[39,12,40,37],[39,13,40,37,"_key2"],[39,18,40,37],[39,26,40,37,"arguments"],[39,35,40,37],[39,36,40,37,"_key2"],[39,41,40,37],[40,6,40,37],[41,6,48,4,"console"],[41,13,48,11],[41,14,48,12,"logFn"],[41,19,48,17],[41,20,48,18],[41,21,48,19],[41,24,48,22,"args"],[41,28,48,26],[41,29,48,27],[42,4,49,2],[42,5,49,3],[43,4,51,2,"setWarningHandler"],[43,21,51,19,"setWarningHandler"],[43,22,51,20,"handler"],[43,29,51,50],[43,31,51,58],[44,6,52,4,"warningHandler"],[44,20,52,18],[44,23,52,21,"handler"],[44,30,52,28],[45,4,53,2],[46,2,54,0],[46,3,54,1],[47,2,56,0],[47,6,56,0,"_default"],[47,14,56,0],[47,17,56,15,"RCTLog"],[47,23,56,21],[48,0,56,22],[48,3]],"functionMap":{"names":["<global>","logIfNoNativeHook","logToConsole","setWarningHandler"],"mappings":"AAA;EC0B;GDU;EEG;GFS;EGE;GHE"},"hasCjsExports":false},"type":"js/module"}]}