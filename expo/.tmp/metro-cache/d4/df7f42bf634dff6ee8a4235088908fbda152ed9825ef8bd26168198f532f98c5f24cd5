{"dependencies":[],"output":[{"data":{"code":"__d(function (global, require, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {\n  \"use strict\";\n\n  Object.defineProperty(exports, '__esModule', {\n    value: true\n  });\n  exports.getFilename = getFilename;\n  exports.getFileExtension = getFileExtension;\n  exports.getManifestBaseUrl = getManifestBaseUrl;\n  function getFilename(url) {\n    var _URL = new URL(url, 'https://e'),\n      pathname = _URL.pathname,\n      searchParams = _URL.searchParams;\n    // When attached to a dev server, we use `unstable_path` to represent the file path. This ensures\n    // the file name is not canonicalized by the browser.\n    // NOTE(EvanBacon): This is technically not tied to `__DEV__` as it's possible to use this while bundling in production\n    // mode.\n\n    return getBasename(pathname);\n  }\n  function getBasename(pathname) {\n    return pathname.substring(pathname.lastIndexOf('/') + 1);\n  }\n  function getFileExtension(url) {\n    var filename = getFilename(url);\n    var dotIndex = filename.lastIndexOf('.');\n    // Ignore leading dots for hidden files\n    return dotIndex > 0 ? filename.substring(dotIndex) : '';\n  }\n  /**\n   * Returns the base URL from a manifest's URL. For example, given a manifest hosted at\n   * https://example.com/app/manifest.json, the base URL would be https://example.com/app/. Query\n   * parameters and fragments also are removed.\n   *\n   * For an Expo-hosted project with a manifest hosted at https://exp.host/@user/project/index.exp, the\n   * base URL would be https://exp.host/@user/project.\n   *\n   * We also normalize the \"exp\" protocol to \"http\" to handle internal URLs with the Expo schemes used\n   * to tell the OS to open the URLs in the the Expo client.\n   */\n  function getManifestBaseUrl(manifestUrl) {\n    var urlObject = new URL(manifestUrl);\n    var nextProtocol = urlObject.protocol;\n    // Change the scheme to http(s) if it is exp(s)\n    if (nextProtocol === 'exp:') {\n      nextProtocol = 'http:';\n    } else if (nextProtocol === 'exps:') {\n      nextProtocol = 'https:';\n    }\n    urlObject.protocol = nextProtocol;\n    // Trim filename, query parameters, and fragment, if any\n    var directory = urlObject.pathname.substring(0, urlObject.pathname.lastIndexOf('/') + 1);\n    urlObject.pathname = directory;\n    urlObject.search = '';\n    urlObject.hash = '';\n    // The URL spec doesn't allow for changing the protocol to `http` or `https`\n    // without a port set so instead, we'll just swap the protocol manually.\n    return urlObject.protocol !== nextProtocol ? urlObject.href.replace(urlObject.protocol, nextProtocol) : urlObject.href;\n  }\n});","lineCount":60,"map":[[7,2,1,0,"exports"],[7,9,1,0],[7,10,1,0,"getFilename"],[7,21,1,0],[7,24,1,0,"getFilename"],[7,35,1,0],[8,2,18,0,"exports"],[8,9,18,0],[8,10,18,0,"getFileExtension"],[8,26,18,0],[8,29,18,0,"getFileExtension"],[8,45,18,0],[9,2,35,0,"exports"],[9,9,35,0],[9,10,35,0,"getManifestBaseUrl"],[9,28,35,0],[9,31,35,0,"getManifestBaseUrl"],[9,49,35,0],[10,2,1,7],[10,11,1,16,"getFilename"],[10,22,1,27,"getFilename"],[10,23,1,28,"url"],[10,26,1,31],[10,28,1,33],[11,4,2,4],[11,8,2,4,"_URL"],[11,12,2,4],[11,15,2,39],[11,19,2,43,"URL"],[11,22,2,46],[11,23,2,47,"url"],[11,26,2,50],[11,28,2,52],[11,39,2,63],[11,40,2,64],[12,6,2,12,"pathname"],[12,14,2,20],[12,17,2,20,"_URL"],[12,21,2,20],[12,22,2,12,"pathname"],[12,30,2,20],[13,6,2,22,"searchParams"],[13,18,2,34],[13,21,2,34,"_URL"],[13,25,2,34],[13,26,2,22,"searchParams"],[13,38,2,34],[14,4,3,4],[15,4,4,4],[16,4,5,4],[17,4,6,4],[19,4,13,4],[19,11,13,11,"getBasename"],[19,22,13,22],[19,23,13,23,"pathname"],[19,31,13,31],[19,32,13,32],[20,2,14,0],[21,2,15,0],[21,11,15,9,"getBasename"],[21,22,15,20,"getBasename"],[21,23,15,21,"pathname"],[21,31,15,29],[21,33,15,31],[22,4,16,4],[22,11,16,11,"pathname"],[22,19,16,19],[22,20,16,20,"substring"],[22,29,16,29],[22,30,16,30,"pathname"],[22,38,16,38],[22,39,16,39,"lastIndexOf"],[22,50,16,50],[22,51,16,51],[22,54,16,54],[22,55,16,55],[22,58,16,58],[22,59,16,59],[22,60,16,60],[23,2,17,0],[24,2,18,7],[24,11,18,16,"getFileExtension"],[24,27,18,32,"getFileExtension"],[24,28,18,33,"url"],[24,31,18,36],[24,33,18,38],[25,4,19,4],[25,8,19,10,"filename"],[25,16,19,18],[25,19,19,21,"getFilename"],[25,30,19,32],[25,31,19,33,"url"],[25,34,19,36],[25,35,19,37],[26,4,20,4],[26,8,20,10,"dotIndex"],[26,16,20,18],[26,19,20,21,"filename"],[26,27,20,29],[26,28,20,30,"lastIndexOf"],[26,39,20,41],[26,40,20,42],[26,43,20,45],[26,44,20,46],[27,4,21,4],[28,4,22,4],[28,11,22,11,"dotIndex"],[28,19,22,19],[28,22,22,22],[28,23,22,23],[28,26,22,26,"filename"],[28,34,22,34],[28,35,22,35,"substring"],[28,44,22,44],[28,45,22,45,"dotIndex"],[28,53,22,53],[28,54,22,54],[28,57,22,57],[28,59,22,59],[29,2,23,0],[30,2,24,0],[31,0,25,0],[32,0,26,0],[33,0,27,0],[34,0,28,0],[35,0,29,0],[36,0,30,0],[37,0,31,0],[38,0,32,0],[39,0,33,0],[40,0,34,0],[41,2,35,7],[41,11,35,16,"getManifestBaseUrl"],[41,29,35,34,"getManifestBaseUrl"],[41,30,35,35,"manifestUrl"],[41,41,35,46],[41,43,35,48],[42,4,36,4],[42,8,36,10,"urlObject"],[42,17,36,19],[42,20,36,22],[42,24,36,26,"URL"],[42,27,36,29],[42,28,36,30,"manifestUrl"],[42,39,36,41],[42,40,36,42],[43,4,37,4],[43,8,37,8,"nextProtocol"],[43,20,37,20],[43,23,37,23,"urlObject"],[43,32,37,32],[43,33,37,33,"protocol"],[43,41,37,41],[44,4,38,4],[45,4,39,4],[45,8,39,8,"nextProtocol"],[45,20,39,20],[45,25,39,25],[45,31,39,31],[45,33,39,33],[46,6,40,8,"nextProtocol"],[46,18,40,20],[46,21,40,23],[46,28,40,30],[47,4,41,4],[47,5,41,5],[47,11,42,9],[47,15,42,13,"nextProtocol"],[47,27,42,25],[47,32,42,30],[47,39,42,37],[47,41,42,39],[48,6,43,8,"nextProtocol"],[48,18,43,20],[48,21,43,23],[48,29,43,31],[49,4,44,4],[50,4,45,4,"urlObject"],[50,13,45,13],[50,14,45,14,"protocol"],[50,22,45,22],[50,25,45,25,"nextProtocol"],[50,37,45,37],[51,4,46,4],[52,4,47,4],[52,8,47,10,"directory"],[52,17,47,19],[52,20,47,22,"urlObject"],[52,29,47,31],[52,30,47,32,"pathname"],[52,38,47,40],[52,39,47,41,"substring"],[52,48,47,50],[52,49,47,51],[52,50,47,52],[52,52,47,54,"urlObject"],[52,61,47,63],[52,62,47,64,"pathname"],[52,70,47,72],[52,71,47,73,"lastIndexOf"],[52,82,47,84],[52,83,47,85],[52,86,47,88],[52,87,47,89],[52,90,47,92],[52,91,47,93],[52,92,47,94],[53,4,48,4,"urlObject"],[53,13,48,13],[53,14,48,14,"pathname"],[53,22,48,22],[53,25,48,25,"directory"],[53,34,48,34],[54,4,49,4,"urlObject"],[54,13,49,13],[54,14,49,14,"search"],[54,20,49,20],[54,23,49,23],[54,25,49,25],[55,4,50,4,"urlObject"],[55,13,50,13],[55,14,50,14,"hash"],[55,18,50,18],[55,21,50,21],[55,23,50,23],[56,4,51,4],[57,4,52,4],[58,4,53,4],[58,11,53,11,"urlObject"],[58,20,53,20],[58,21,53,21,"protocol"],[58,29,53,29],[58,34,53,34,"nextProtocol"],[58,46,53,46],[58,49,54,10,"urlObject"],[58,58,54,19],[58,59,54,20,"href"],[58,63,54,24],[58,64,54,25,"replace"],[58,71,54,32],[58,72,54,33,"urlObject"],[58,81,54,42],[58,82,54,43,"protocol"],[58,90,54,51],[58,92,54,53,"nextProtocol"],[58,104,54,65],[58,105,54,66],[58,108,55,10,"urlObject"],[58,117,55,19],[58,118,55,20,"href"],[58,122,55,24],[59,2,56,0],[60,0,56,1],[60,3]],"functionMap":{"names":["<global>","getFilename","getBasename","getFileExtension","getManifestBaseUrl"],"mappings":"AAA,OC;CDa;AEC;CFE;OGC;CHK;OIY;CJqB"},"hasCjsExports":false},"type":"js/module"}]}