{"dependencies":[{"name":"../common/utils","data":{"asyncType":null,"isESMImport":false,"locs":[{"start":{"line":6,"column":18,"index":63},"end":{"line":6,"column":44,"index":89}}],"key":"s68H+Qrc8so5XeN472FI/1YNbEY=","exportNames":["*"],"imports":1}}],"output":[{"data":{"code":"__d(function (global, require, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {\n  // Parse link destination\n  //\n  'use strict';\n\n  var unescapeAll = require(_dependencyMap[0]).unescapeAll;\n  module.exports = function parseLinkDestination(str, pos, max) {\n    var code,\n      level,\n      lines = 0,\n      start = pos,\n      result = {\n        ok: false,\n        pos: 0,\n        lines: 0,\n        str: ''\n      };\n    if (str.charCodeAt(pos) === 0x3C /* < */) {\n      pos++;\n      while (pos < max) {\n        code = str.charCodeAt(pos);\n        if (code === 0x0A /* \\n */) {\n          return result;\n        }\n        if (code === 0x3E /* > */) {\n          result.pos = pos + 1;\n          result.str = unescapeAll(str.slice(start + 1, pos));\n          result.ok = true;\n          return result;\n        }\n        if (code === 0x5C /* \\ */ && pos + 1 < max) {\n          pos += 2;\n          continue;\n        }\n        pos++;\n      }\n\n      // no closing '>'\n      return result;\n    }\n\n    // this should be ... } else { ... branch\n\n    level = 0;\n    while (pos < max) {\n      code = str.charCodeAt(pos);\n      if (code === 0x20) {\n        break;\n      }\n\n      // ascii control characters\n      if (code < 0x20 || code === 0x7F) {\n        break;\n      }\n      if (code === 0x5C /* \\ */ && pos + 1 < max) {\n        pos += 2;\n        continue;\n      }\n      if (code === 0x28 /* ( */) {\n        level++;\n      }\n      if (code === 0x29 /* ) */) {\n        if (level === 0) {\n          break;\n        }\n        level--;\n      }\n      pos++;\n    }\n    if (start === pos) {\n      return result;\n    }\n    if (level !== 0) {\n      return result;\n    }\n    result.str = unescapeAll(str.slice(start, pos));\n    result.lines = lines;\n    result.pos = pos;\n    result.ok = true;\n    return result;\n  };\n});","lineCount":82,"map":[[2,2,1,0],[3,2,2,0],[4,2,3,0],[4,14,3,12],[6,2,6,0],[6,6,6,4,"unescapeAll"],[6,17,6,15],[6,20,6,18,"require"],[6,27,6,25],[6,28,6,25,"_dependencyMap"],[6,42,6,25],[6,45,6,43],[6,46,6,44],[6,47,6,45,"unescapeAll"],[6,58,6,56],[7,2,9,0,"module"],[7,8,9,6],[7,9,9,7,"exports"],[7,16,9,14],[7,19,9,17],[7,28,9,26,"parseLinkDestination"],[7,48,9,46,"parseLinkDestination"],[7,49,9,47,"str"],[7,52,9,50],[7,54,9,52,"pos"],[7,57,9,55],[7,59,9,57,"max"],[7,62,9,60],[7,64,9,62],[8,4,10,2],[8,8,10,6,"code"],[8,12,10,10],[9,6,10,12,"level"],[9,11,10,17],[10,6,11,6,"lines"],[10,11,11,11],[10,14,11,14],[10,15,11,15],[11,6,12,6,"start"],[11,11,12,11],[11,14,12,14,"pos"],[11,17,12,17],[12,6,13,6,"result"],[12,12,13,12],[12,15,13,15],[13,8,14,8,"ok"],[13,10,14,10],[13,12,14,12],[13,17,14,17],[14,8,15,8,"pos"],[14,11,15,11],[14,13,15,13],[14,14,15,14],[15,8,16,8,"lines"],[15,13,16,13],[15,15,16,15],[15,16,16,16],[16,8,17,8,"str"],[16,11,17,11],[16,13,17,13],[17,6,18,6],[17,7,18,7],[18,4,20,2],[18,8,20,6,"str"],[18,11,20,9],[18,12,20,10,"charCodeAt"],[18,22,20,20],[18,23,20,21,"pos"],[18,26,20,24],[18,27,20,25],[18,32,20,30],[18,36,20,34],[18,37,20,35],[18,46,20,44],[19,6,21,4,"pos"],[19,9,21,7],[19,11,21,9],[20,6,22,4],[20,13,22,11,"pos"],[20,16,22,14],[20,19,22,17,"max"],[20,22,22,20],[20,24,22,22],[21,8,23,6,"code"],[21,12,23,10],[21,15,23,13,"str"],[21,18,23,16],[21,19,23,17,"charCodeAt"],[21,29,23,27],[21,30,23,28,"pos"],[21,33,23,31],[21,34,23,32],[22,8,24,6],[22,12,24,10,"code"],[22,16,24,14],[22,21,24,19],[22,25,24,23],[22,26,24,24],[22,36,24,34],[23,10,24,36],[23,17,24,43,"result"],[23,23,24,49],[24,8,24,51],[25,8,25,6],[25,12,25,10,"code"],[25,16,25,14],[25,21,25,19],[25,25,25,23],[25,26,25,24],[25,35,25,33],[26,10,26,8,"result"],[26,16,26,14],[26,17,26,15,"pos"],[26,20,26,18],[26,23,26,21,"pos"],[26,26,26,24],[26,29,26,27],[26,30,26,28],[27,10,27,8,"result"],[27,16,27,14],[27,17,27,15,"str"],[27,20,27,18],[27,23,27,21,"unescapeAll"],[27,34,27,32],[27,35,27,33,"str"],[27,38,27,36],[27,39,27,37,"slice"],[27,44,27,42],[27,45,27,43,"start"],[27,50,27,48],[27,53,27,51],[27,54,27,52],[27,56,27,54,"pos"],[27,59,27,57],[27,60,27,58],[27,61,27,59],[28,10,28,8,"result"],[28,16,28,14],[28,17,28,15,"ok"],[28,19,28,17],[28,22,28,20],[28,26,28,24],[29,10,29,8],[29,17,29,15,"result"],[29,23,29,21],[30,8,30,6],[31,8,31,6],[31,12,31,10,"code"],[31,16,31,14],[31,21,31,19],[31,25,31,23],[31,26,31,24],[31,37,31,35,"pos"],[31,40,31,38],[31,43,31,41],[31,44,31,42],[31,47,31,45,"max"],[31,50,31,48],[31,52,31,50],[32,10,32,8,"pos"],[32,13,32,11],[32,17,32,15],[32,18,32,16],[33,10,33,8],[34,8,34,6],[35,8,36,6,"pos"],[35,11,36,9],[35,13,36,11],[36,6,37,4],[38,6,39,4],[39,6,40,4],[39,13,40,11,"result"],[39,19,40,17],[40,4,41,2],[42,4,43,2],[44,4,45,2,"level"],[44,9,45,7],[44,12,45,10],[44,13,45,11],[45,4,46,2],[45,11,46,9,"pos"],[45,14,46,12],[45,17,46,15,"max"],[45,20,46,18],[45,22,46,20],[46,6,47,4,"code"],[46,10,47,8],[46,13,47,11,"str"],[46,16,47,14],[46,17,47,15,"charCodeAt"],[46,27,47,25],[46,28,47,26,"pos"],[46,31,47,29],[46,32,47,30],[47,6,49,4],[47,10,49,8,"code"],[47,14,49,12],[47,19,49,17],[47,23,49,21],[47,25,49,23],[48,8,49,25],[49,6,49,32],[51,6,51,4],[52,6,52,4],[52,10,52,8,"code"],[52,14,52,12],[52,17,52,15],[52,21,52,19],[52,25,52,23,"code"],[52,29,52,27],[52,34,52,32],[52,38,52,36],[52,40,52,38],[53,8,52,40],[54,6,52,47],[55,6,54,4],[55,10,54,8,"code"],[55,14,54,12],[55,19,54,17],[55,23,54,21],[55,24,54,22],[55,35,54,33,"pos"],[55,38,54,36],[55,41,54,39],[55,42,54,40],[55,45,54,43,"max"],[55,48,54,46],[55,50,54,48],[56,8,55,6,"pos"],[56,11,55,9],[56,15,55,13],[56,16,55,14],[57,8,56,6],[58,6,57,4],[59,6,59,4],[59,10,59,8,"code"],[59,14,59,12],[59,19,59,17],[59,23,59,21],[59,24,59,22],[59,33,59,31],[60,8,60,6,"level"],[60,13,60,11],[60,15,60,13],[61,6,61,4],[62,6,63,4],[62,10,63,8,"code"],[62,14,63,12],[62,19,63,17],[62,23,63,21],[62,24,63,22],[62,33,63,31],[63,8,64,6],[63,12,64,10,"level"],[63,17,64,15],[63,22,64,20],[63,23,64,21],[63,25,64,23],[64,10,64,25],[65,8,64,32],[66,8,65,6,"level"],[66,13,65,11],[66,15,65,13],[67,6,66,4],[68,6,68,4,"pos"],[68,9,68,7],[68,11,68,9],[69,4,69,2],[70,4,71,2],[70,8,71,6,"start"],[70,13,71,11],[70,18,71,16,"pos"],[70,21,71,19],[70,23,71,21],[71,6,71,23],[71,13,71,30,"result"],[71,19,71,36],[72,4,71,38],[73,4,72,2],[73,8,72,6,"level"],[73,13,72,11],[73,18,72,16],[73,19,72,17],[73,21,72,19],[74,6,72,21],[74,13,72,28,"result"],[74,19,72,34],[75,4,72,36],[76,4,74,2,"result"],[76,10,74,8],[76,11,74,9,"str"],[76,14,74,12],[76,17,74,15,"unescapeAll"],[76,28,74,26],[76,29,74,27,"str"],[76,32,74,30],[76,33,74,31,"slice"],[76,38,74,36],[76,39,74,37,"start"],[76,44,74,42],[76,46,74,44,"pos"],[76,49,74,47],[76,50,74,48],[76,51,74,49],[77,4,75,2,"result"],[77,10,75,8],[77,11,75,9,"lines"],[77,16,75,14],[77,19,75,17,"lines"],[77,24,75,22],[78,4,76,2,"result"],[78,10,76,8],[78,11,76,9,"pos"],[78,14,76,12],[78,17,76,15,"pos"],[78,20,76,18],[79,4,77,2,"result"],[79,10,77,8],[79,11,77,9,"ok"],[79,13,77,11],[79,16,77,14],[79,20,77,18],[80,4,78,2],[80,11,78,9,"result"],[80,17,78,15],[81,2,79,0],[81,3,79,1],[82,0,79,2],[82,3]],"functionMap":{"names":["<global>","parseLinkDestination"],"mappings":"AAA;iBCQ;CDsE"},"hasCjsExports":true},"type":"js/module"}]}