{"dependencies":[{"name":"./getTokenTypeByToken","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":1,"column":0,"index":0},"end":{"line":1,"column":56,"index":56}}],"key":"PMc6A+qkYtCKG7S1QyRx2DvJYu0=","exportNames":["*"],"imports":1}},{"name":"./flattenInlineTokens","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":2,"column":0,"index":57},"end":{"line":2,"column":56,"index":113}}],"key":"+HKRd5WEhGoaLyk9gmLLXSqBj+g=","exportNames":["*"],"imports":1}},{"name":"./renderInlineAsText","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":3,"column":0,"index":114},"end":{"line":3,"column":54,"index":168}}],"key":"07dbIL7Xmspzq5voxcDl0AhNWTo=","exportNames":["*"],"imports":1}}],"output":[{"data":{"code":"__d(function (global, require, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {\n  \"use strict\";\n\n  Object.defineProperty(exports, '__esModule', {\n    value: true\n  });\n  function _interopDefault(e) {\n    return e && e.__esModule ? e : {\n      default: e\n    };\n  }\n  exports.cleanupTokens = cleanupTokens;\n  var _getTokenTypeByToken = require(_dependencyMap[0]);\n  var getTokenTypeByToken = _interopDefault(_getTokenTypeByToken);\n  var _flattenInlineTokens = require(_dependencyMap[1]);\n  var flattenInlineTokens = _interopDefault(_flattenInlineTokens);\n  var _renderInlineAsText = require(_dependencyMap[2]);\n  var renderInlineAsText = _interopDefault(_renderInlineAsText);\n  function cleanupTokens(tokens) {\n    tokens = (0, flattenInlineTokens.default)(tokens);\n    tokens.forEach(token => {\n      token.type = (0, getTokenTypeByToken.default)(token);\n\n      // set image and hardbreak to block elements\n      if (token.type === 'image' || token.type === 'hardbreak') {\n        token.block = true;\n      }\n\n      // Set img alt text\n      if (token.type === 'image') {\n        token.attrs[token.attrIndex('alt')][1] = (0, renderInlineAsText.default)(token.children);\n      }\n    });\n\n    /**\n     * changing a link token to a blocklink to fix issue where link tokens with\n     * nested non text tokens breaks component\n     */\n    var stack = [];\n    tokens = tokens.reduce((acc, token, index) => {\n      if (token.type === 'link' && token.nesting === 1) {\n        stack.push(token);\n      } else if (stack.length > 0 && token.type === 'link' && token.nesting === -1) {\n        if (stack.some(stackToken => stackToken.block)) {\n          stack[0].type = 'blocklink';\n          stack[0].block = true;\n          token.type = 'blocklink';\n          token.block = true;\n        }\n        stack.push(token);\n        while (stack.length) {\n          acc.push(stack.shift());\n        }\n      } else if (stack.length > 0) {\n        stack.push(token);\n      } else {\n        acc.push(token);\n      }\n      return acc;\n    }, []);\n    return tokens;\n  }\n});","lineCount":63,"map":[[12,2,5,0,"exports"],[12,9,5,0],[12,10,5,0,"cleanupTokens"],[12,23,5,0],[12,26,5,0,"cleanupTokens"],[12,39,5,0],[13,2,1,0],[13,6,1,0,"_getTokenTypeByToken"],[13,26,1,0],[13,29,1,0,"require"],[13,36,1,0],[13,37,1,0,"_dependencyMap"],[13,51,1,0],[14,2,1,0],[14,6,1,0,"getTokenTypeByToken"],[14,25,1,0],[14,28,1,0,"_interopDefault"],[14,43,1,0],[14,44,1,0,"_getTokenTypeByToken"],[14,64,1,0],[15,2,2,0],[15,6,2,0,"_flattenInlineTokens"],[15,26,2,0],[15,29,2,0,"require"],[15,36,2,0],[15,37,2,0,"_dependencyMap"],[15,51,2,0],[16,2,2,0],[16,6,2,0,"flattenInlineTokens"],[16,25,2,0],[16,28,2,0,"_interopDefault"],[16,43,2,0],[16,44,2,0,"_flattenInlineTokens"],[16,64,2,0],[17,2,3,0],[17,6,3,0,"_renderInlineAsText"],[17,25,3,0],[17,28,3,0,"require"],[17,35,3,0],[17,36,3,0,"_dependencyMap"],[17,50,3,0],[18,2,3,0],[18,6,3,0,"renderInlineAsText"],[18,24,3,0],[18,27,3,0,"_interopDefault"],[18,42,3,0],[18,43,3,0,"_renderInlineAsText"],[18,62,3,0],[19,2,5,7],[19,11,5,16,"cleanupTokens"],[19,24,5,29,"cleanupTokens"],[19,25,5,30,"tokens"],[19,31,5,36],[19,33,5,38],[20,4,6,2,"tokens"],[20,10,6,8],[20,13,6,11],[20,17,6,11,"flattenInlineTokens"],[20,36,6,30],[20,37,6,30,"default"],[20,44,6,30],[20,46,6,31,"tokens"],[20,52,6,37],[20,53,6,38],[21,4,7,2,"tokens"],[21,10,7,8],[21,11,7,9,"forEach"],[21,18,7,16],[21,19,7,18,"token"],[21,24,7,23],[21,28,7,28],[22,6,8,4,"token"],[22,11,8,9],[22,12,8,10,"type"],[22,16,8,14],[22,19,8,17],[22,23,8,17,"getTokenTypeByToken"],[22,42,8,36],[22,43,8,36,"default"],[22,50,8,36],[22,52,8,37,"token"],[22,57,8,42],[22,58,8,43],[24,6,10,4],[25,6,11,4],[25,10,11,8,"token"],[25,15,11,13],[25,16,11,14,"type"],[25,20,11,18],[25,25,11,23],[25,32,11,30],[25,36,11,34,"token"],[25,41,11,39],[25,42,11,40,"type"],[25,46,11,44],[25,51,11,49],[25,62,11,60],[25,64,11,62],[26,8,12,6,"token"],[26,13,12,11],[26,14,12,12,"block"],[26,19,12,17],[26,22,12,20],[26,26,12,24],[27,6,13,4],[29,6,15,4],[30,6,16,4],[30,10,16,8,"token"],[30,15,16,13],[30,16,16,14,"type"],[30,20,16,18],[30,25,16,23],[30,32,16,30],[30,34,16,32],[31,8,17,6,"token"],[31,13,17,11],[31,14,17,12,"attrs"],[31,19,17,17],[31,20,17,18,"token"],[31,25,17,23],[31,26,17,24,"attrIndex"],[31,35,17,33],[31,36,17,34],[31,41,17,39],[31,42,17,40],[31,43,17,41],[31,44,17,42],[31,45,17,43],[31,46,17,44],[31,49,17,47],[31,53,17,47,"renderInlineAsText"],[31,71,17,65],[31,72,17,65,"default"],[31,79,17,65],[31,81,18,8,"token"],[31,86,18,13],[31,87,18,14,"children"],[31,95,19,6],[31,96,19,7],[32,6,20,4],[33,4,21,2],[33,5,21,3],[33,6,21,4],[35,4,23,2],[36,0,24,0],[37,0,25,0],[38,0,26,0],[39,4,27,2],[39,8,27,8,"stack"],[39,13,27,13],[39,16,27,16],[39,18,27,18],[40,4,28,2,"tokens"],[40,10,28,8],[40,13,28,11,"tokens"],[40,19,28,17],[40,20,28,18,"reduce"],[40,26,28,24],[40,27,28,25],[40,28,28,26,"acc"],[40,31,28,29],[40,33,28,31,"token"],[40,38,28,36],[40,40,28,38,"index"],[40,45,28,43],[40,50,28,48],[41,6,29,4],[41,10,29,8,"token"],[41,15,29,13],[41,16,29,14,"type"],[41,20,29,18],[41,25,29,23],[41,31,29,29],[41,35,29,33,"token"],[41,40,29,38],[41,41,29,39,"nesting"],[41,48,29,46],[41,53,29,51],[41,54,29,52],[41,56,29,54],[42,8,30,6,"stack"],[42,13,30,11],[42,14,30,12,"push"],[42,18,30,16],[42,19,30,17,"token"],[42,24,30,22],[42,25,30,23],[43,6,31,4],[43,7,31,5],[43,13,31,11],[43,17,32,6,"stack"],[43,22,32,11],[43,23,32,12,"length"],[43,29,32,18],[43,32,32,21],[43,33,32,22],[43,37,33,6,"token"],[43,42,33,11],[43,43,33,12,"type"],[43,47,33,16],[43,52,33,21],[43,58,33,27],[43,62,34,6,"token"],[43,67,34,11],[43,68,34,12,"nesting"],[43,75,34,19],[43,82,34,26],[43,84,35,6],[44,8,36,6],[44,12,36,10,"stack"],[44,17,36,15],[44,18,36,16,"some"],[44,22,36,20],[44,23,36,22,"stackToken"],[44,33,36,32],[44,37,36,37,"stackToken"],[44,47,36,47],[44,48,36,48,"block"],[44,53,36,53],[44,54,36,54],[44,56,36,56],[45,10,37,8,"stack"],[45,15,37,13],[45,16,37,14],[45,17,37,15],[45,18,37,16],[45,19,37,17,"type"],[45,23,37,21],[45,26,37,24],[45,37,37,35],[46,10,38,8,"stack"],[46,15,38,13],[46,16,38,14],[46,17,38,15],[46,18,38,16],[46,19,38,17,"block"],[46,24,38,22],[46,27,38,25],[46,31,38,29],[47,10,39,8,"token"],[47,15,39,13],[47,16,39,14,"type"],[47,20,39,18],[47,23,39,21],[47,34,39,32],[48,10,40,8,"token"],[48,15,40,13],[48,16,40,14,"block"],[48,21,40,19],[48,24,40,22],[48,28,40,26],[49,8,41,6],[50,8,43,6,"stack"],[50,13,43,11],[50,14,43,12,"push"],[50,18,43,16],[50,19,43,17,"token"],[50,24,43,22],[50,25,43,23],[51,8,45,6],[51,15,45,13,"stack"],[51,20,45,18],[51,21,45,19,"length"],[51,27,45,25],[51,29,45,27],[52,10,46,8,"acc"],[52,13,46,11],[52,14,46,12,"push"],[52,18,46,16],[52,19,46,17,"stack"],[52,24,46,22],[52,25,46,23,"shift"],[52,30,46,28],[52,31,46,29],[52,32,46,30],[52,33,46,31],[53,8,47,6],[54,6,48,4],[54,7,48,5],[54,13,48,11],[54,17,48,15,"stack"],[54,22,48,20],[54,23,48,21,"length"],[54,29,48,27],[54,32,48,30],[54,33,48,31],[54,35,48,33],[55,8,49,6,"stack"],[55,13,49,11],[55,14,49,12,"push"],[55,18,49,16],[55,19,49,17,"token"],[55,24,49,22],[55,25,49,23],[56,6,50,4],[56,7,50,5],[56,13,50,11],[57,8,51,6,"acc"],[57,11,51,9],[57,12,51,10,"push"],[57,16,51,14],[57,17,51,15,"token"],[57,22,51,20],[57,23,51,21],[58,6,52,4],[59,6,54,4],[59,13,54,11,"acc"],[59,16,54,14],[60,4,55,2],[60,5,55,3],[60,7,55,5],[60,9,55,7],[60,10,55,8],[61,4,57,2],[61,11,57,9,"tokens"],[61,17,57,15],[62,2,58,0],[63,0,58,1],[63,3]],"functionMap":{"names":["<global>","cleanupTokens","tokens.forEach$argument_0","tokens.reduce$argument_0","stack.some$argument_0"],"mappings":"AAA;OCI;iBCE;GDc;yBEO;qBCQ,gCD;GFmB;CDG"},"hasCjsExports":false},"type":"js/module"}]}