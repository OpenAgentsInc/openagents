{"dependencies":[{"name":"../gesture","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":1,"column":0,"index":0},"end":{"line":1,"column":61,"index":61}}],"key":"tAi+3DTq2/XlM2rT1I9X7ektuV0=","exportNames":["*"],"imports":1}},{"name":"../reanimatedWrapper","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":2,"column":0,"index":62},"end":{"line":2,"column":50,"index":112}}],"key":"55E8XkeO+dzLnJh3bfoVrgRwD58=","exportNames":["*"],"imports":1}},{"name":"../gestureStateManager","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":8,"column":0,"index":229},"end":{"line":11,"column":32,"index":320}}],"key":"6LCevhjgWrTPA6v411SOrqBFOt8=","exportNames":["*"],"imports":1}},{"name":"../../../State","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":12,"column":0,"index":321},"end":{"line":12,"column":39,"index":360}}],"key":"IejmxDhiCXPiMeZAbmULeVBR7VE=","exportNames":["*"],"imports":1}},{"name":"../../../TouchEventType","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":13,"column":0,"index":361},"end":{"line":13,"column":57,"index":418}}],"key":"PyG3b4ZwjXzi6z4zhvmBkUTmp1M=","exportNames":["*"],"imports":1}},{"name":"../../../utils","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":14,"column":0,"index":419},"end":{"line":14,"column":44,"index":463}}],"key":"4wo4OYT4MSo2InL8kiWmZxvepwE=","exportNames":["*"],"imports":1}}],"output":[{"data":{"code":"__d(function (global, require, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {\n  \"use strict\";\n\n  Object.defineProperty(exports, '__esModule', {\n    value: true\n  });\n  exports.useAnimatedGesture = useAnimatedGesture;\n  var _gesture = require(_dependencyMap[0]);\n  var _reanimatedWrapper = require(_dependencyMap[1]);\n  var _gestureStateManager = require(_dependencyMap[2]);\n  var _State = require(_dependencyMap[3]);\n  var _TouchEventType = require(_dependencyMap[4]);\n  var _utils = require(_dependencyMap[5]);\n  var _worklet_2054655450554_init_data = {\n    code: \"function getHandler_reactNativeGestureHandler_useAnimatedGestureTs1(type,gesture){const{CALLBACK_TYPE}=this.__closure;switch(type){case CALLBACK_TYPE.BEGAN:return gesture.onBegin;case CALLBACK_TYPE.START:return gesture.onStart;case CALLBACK_TYPE.UPDATE:return gesture.onUpdate;case CALLBACK_TYPE.CHANGE:return gesture.onChange;case CALLBACK_TYPE.END:return gesture.onEnd;case CALLBACK_TYPE.FINALIZE:return gesture.onFinalize;case CALLBACK_TYPE.TOUCHES_DOWN:return gesture.onTouchesDown;case CALLBACK_TYPE.TOUCHES_MOVE:return gesture.onTouchesMove;case CALLBACK_TYPE.TOUCHES_UP:return gesture.onTouchesUp;case CALLBACK_TYPE.TOUCHES_CANCELLED:return gesture.onTouchesCancelled;}}\"\n  };\n  var getHandler = function getHandler_reactNativeGestureHandler_useAnimatedGestureTs1Factory(_ref) {\n    var _worklet_2054655450554_init_data = _ref._worklet_2054655450554_init_data,\n      CALLBACK_TYPE = _ref.CALLBACK_TYPE;\n    var getHandler = function (type, gesture) {\n      switch (type) {\n        case CALLBACK_TYPE.BEGAN:\n          return gesture.onBegin;\n        case CALLBACK_TYPE.START:\n          return gesture.onStart;\n        case CALLBACK_TYPE.UPDATE:\n          return gesture.onUpdate;\n        case CALLBACK_TYPE.CHANGE:\n          return gesture.onChange;\n        case CALLBACK_TYPE.END:\n          return gesture.onEnd;\n        case CALLBACK_TYPE.FINALIZE:\n          return gesture.onFinalize;\n        case CALLBACK_TYPE.TOUCHES_DOWN:\n          return gesture.onTouchesDown;\n        case CALLBACK_TYPE.TOUCHES_MOVE:\n          return gesture.onTouchesMove;\n        case CALLBACK_TYPE.TOUCHES_UP:\n          return gesture.onTouchesUp;\n        case CALLBACK_TYPE.TOUCHES_CANCELLED:\n          return gesture.onTouchesCancelled;\n      }\n    };\n    getHandler.__closure = {\n      CALLBACK_TYPE\n    };\n    getHandler.__workletHash = 2054655450554;\n    getHandler.__initData = _worklet_2054655450554_init_data;\n    return getHandler;\n  }({\n    _worklet_2054655450554_init_data,\n    CALLBACK_TYPE: _gesture.CALLBACK_TYPE\n  });\n  var _worklet_14903447069497_init_data = {\n    code: \"function touchEventTypeToCallbackType_reactNativeGestureHandler_useAnimatedGestureTs2(eventType){const{TouchEventType,CALLBACK_TYPE}=this.__closure;switch(eventType){case TouchEventType.TOUCHES_DOWN:return CALLBACK_TYPE.TOUCHES_DOWN;case TouchEventType.TOUCHES_MOVE:return CALLBACK_TYPE.TOUCHES_MOVE;case TouchEventType.TOUCHES_UP:return CALLBACK_TYPE.TOUCHES_UP;case TouchEventType.TOUCHES_CANCELLED:return CALLBACK_TYPE.TOUCHES_CANCELLED;}return CALLBACK_TYPE.UNDEFINED;}\"\n  };\n  var touchEventTypeToCallbackType = function touchEventTypeToCallbackType_reactNativeGestureHandler_useAnimatedGestureTs2Factory(_ref2) {\n    var _worklet_14903447069497_init_data = _ref2._worklet_14903447069497_init_data,\n      TouchEventType = _ref2.TouchEventType,\n      CALLBACK_TYPE = _ref2.CALLBACK_TYPE;\n    var touchEventTypeToCallbackType = function (eventType) {\n      switch (eventType) {\n        case TouchEventType.TOUCHES_DOWN:\n          return CALLBACK_TYPE.TOUCHES_DOWN;\n        case TouchEventType.TOUCHES_MOVE:\n          return CALLBACK_TYPE.TOUCHES_MOVE;\n        case TouchEventType.TOUCHES_UP:\n          return CALLBACK_TYPE.TOUCHES_UP;\n        case TouchEventType.TOUCHES_CANCELLED:\n          return CALLBACK_TYPE.TOUCHES_CANCELLED;\n      }\n      return CALLBACK_TYPE.UNDEFINED;\n    };\n    touchEventTypeToCallbackType.__closure = {\n      TouchEventType,\n      CALLBACK_TYPE\n    };\n    touchEventTypeToCallbackType.__workletHash = 14903447069497;\n    touchEventTypeToCallbackType.__initData = _worklet_14903447069497_init_data;\n    return touchEventTypeToCallbackType;\n  }({\n    _worklet_14903447069497_init_data,\n    TouchEventType: _TouchEventType.TouchEventType,\n    CALLBACK_TYPE: _gesture.CALLBACK_TYPE\n  });\n  var _worklet_10526057831000_init_data = {\n    code: \"function runWorklet_reactNativeGestureHandler_useAnimatedGestureTs3(type,gesture,event){const{getHandler,tagMessage}=this.__closure;const handler=getHandler(type,gesture);if(gesture.isWorklet[type]){for(var _len=arguments.length,args=new Array(_len>3?_len-3:0),_key=3;_key<_len;_key++){args[_key-3]=arguments[_key];}handler===null||handler===void 0||handler(event,...args);}else if(handler){console.warn(tagMessage('Animated gesture callback must be a worklet'));}}\"\n  };\n  var runWorklet = function runWorklet_reactNativeGestureHandler_useAnimatedGestureTs3Factory(_ref3) {\n    var _worklet_10526057831000_init_data = _ref3._worklet_10526057831000_init_data,\n      getHandler = _ref3.getHandler,\n      tagMessage = _ref3.tagMessage;\n    var runWorklet = function (type, gesture, event) {\n      var handler = getHandler(type, gesture);\n      if (gesture.isWorklet[type]) {\n        for (var _len = arguments.length, args = new Array(_len > 3 ? _len - 3 : 0), _key = 3; _key < _len; _key++) {\n          args[_key - 3] = arguments[_key];\n        }\n        // @ts-ignore Logic below makes sure the correct event is send to the\n        // correct handler.\n        handler?.(event, ...args);\n      } else if (handler) {\n        console.warn(tagMessage('Animated gesture callback must be a worklet'));\n      }\n    };\n    runWorklet.__closure = {\n      getHandler,\n      tagMessage\n    };\n    runWorklet.__workletHash = 10526057831000;\n    runWorklet.__initData = _worklet_10526057831000_init_data;\n    return runWorklet;\n  }({\n    _worklet_10526057831000_init_data,\n    getHandler,\n    tagMessage: _utils.tagMessage\n  });\n  var _worklet_1443917263962_init_data = {\n    code: \"function isStateChangeEvent_reactNativeGestureHandler_useAnimatedGestureTs4(event){return event.oldState!=null;}\"\n  };\n  var isStateChangeEvent = function isStateChangeEvent_reactNativeGestureHandler_useAnimatedGestureTs4Factory(_ref4) {\n    var _worklet_1443917263962_init_data = _ref4._worklet_1443917263962_init_data;\n    var isStateChangeEvent = function (event) {\n      // @ts-ignore Yes, the oldState prop is missing on GestureTouchEvent, that's the point\n      return event.oldState != null;\n    };\n    isStateChangeEvent.__closure = {};\n    isStateChangeEvent.__workletHash = 1443917263962;\n    isStateChangeEvent.__initData = _worklet_1443917263962_init_data;\n    return isStateChangeEvent;\n  }({\n    _worklet_1443917263962_init_data\n  });\n  var _worklet_15574765637067_init_data = {\n    code: \"function isTouchEvent_reactNativeGestureHandler_useAnimatedGestureTs5(event){return event.eventType!=null;}\"\n  };\n  var isTouchEvent = function isTouchEvent_reactNativeGestureHandler_useAnimatedGestureTs5Factory(_ref5) {\n    var _worklet_15574765637067_init_data = _ref5._worklet_15574765637067_init_data;\n    var isTouchEvent = function (event) {\n      return event.eventType != null;\n    };\n    isTouchEvent.__closure = {};\n    isTouchEvent.__workletHash = 15574765637067;\n    isTouchEvent.__initData = _worklet_15574765637067_init_data;\n    return isTouchEvent;\n  }({\n    _worklet_15574765637067_init_data\n  });\n  var _worklet_10458000393606_init_data = {\n    code: \"function reactNativeGestureHandler_useAnimatedGestureTs6(event){const{sharedHandlersCallbacks,isStateChangeEvent,State,runWorklet,CALLBACK_TYPE,lastUpdateEvent,isTouchEvent,stateControllers,GestureStateManager,TouchEventType,touchEventTypeToCallbackType}=this.__closure;const currentCallback=sharedHandlersCallbacks.value;if(!currentCallback){return;}for(let i=0;i<currentCallback.length;i++){const gesture=currentCallback[i];if(event.handlerTag!==gesture.handlerTag){continue;}if(isStateChangeEvent(event)){if(event.oldState===State.UNDETERMINED&&event.state===State.BEGAN){runWorklet(CALLBACK_TYPE.BEGAN,gesture,event);}else if((event.oldState===State.BEGAN||event.oldState===State.UNDETERMINED)&&event.state===State.ACTIVE){runWorklet(CALLBACK_TYPE.START,gesture,event);lastUpdateEvent.value[gesture.handlerTag]=undefined;}else if(event.oldState!==event.state&&event.state===State.END){if(event.oldState===State.ACTIVE){runWorklet(CALLBACK_TYPE.END,gesture,event,true);}runWorklet(CALLBACK_TYPE.FINALIZE,gesture,event,true);}else if((event.state===State.FAILED||event.state===State.CANCELLED)&&event.state!==event.oldState){if(event.oldState===State.ACTIVE){runWorklet(CALLBACK_TYPE.END,gesture,event,false);}runWorklet(CALLBACK_TYPE.FINALIZE,gesture,event,false);}}else if(isTouchEvent(event)){if(!stateControllers[i]){stateControllers[i]=GestureStateManager.create(event.handlerTag);}if(event.eventType!==TouchEventType.UNDETERMINED){runWorklet(touchEventTypeToCallbackType(event.eventType),gesture,event,stateControllers[i]);}}else{runWorklet(CALLBACK_TYPE.UPDATE,gesture,event);if(gesture.onChange&&gesture.changeEventCalculator){var _gesture$changeEventC;runWorklet(CALLBACK_TYPE.CHANGE,gesture,(_gesture$changeEventC=gesture.changeEventCalculator)===null||_gesture$changeEventC===void 0?void 0:_gesture$changeEventC.call(gesture,event,lastUpdateEvent.value[gesture.handlerTag]));lastUpdateEvent.value[gesture.handlerTag]=event;}}}}\"\n  };\n  function useAnimatedGesture(preparedGesture, needsRebuild) {\n    if (!_reanimatedWrapper.Reanimated) {\n      return;\n    }\n\n    // Hooks are called conditionally, but the condition is whether the\n    // react-native-reanimated is installed, which shouldn't change while running\n    // eslint-disable-next-line react-hooks/rules-of-hooks\n    var sharedHandlersCallbacks = _reanimatedWrapper.Reanimated.useSharedValue(null);\n\n    // eslint-disable-next-line react-hooks/rules-of-hooks\n    var lastUpdateEvent = _reanimatedWrapper.Reanimated.useSharedValue([]);\n\n    // not every gesture needs a state controller, init them lazily\n    var stateControllers = [];\n    var callback = function reactNativeGestureHandler_useAnimatedGestureTs6Factory(_ref6) {\n      var _worklet_10458000393606_init_data = _ref6._worklet_10458000393606_init_data,\n        sharedHandlersCallbacks = _ref6.sharedHandlersCallbacks,\n        isStateChangeEvent = _ref6.isStateChangeEvent,\n        State = _ref6.State,\n        runWorklet = _ref6.runWorklet,\n        CALLBACK_TYPE = _ref6.CALLBACK_TYPE,\n        lastUpdateEvent = _ref6.lastUpdateEvent,\n        isTouchEvent = _ref6.isTouchEvent,\n        stateControllers = _ref6.stateControllers,\n        GestureStateManager = _ref6.GestureStateManager,\n        TouchEventType = _ref6.TouchEventType,\n        touchEventTypeToCallbackType = _ref6.touchEventTypeToCallbackType;\n      var reactNativeGestureHandler_useAnimatedGestureTs6 = function (event) {\n        var currentCallback = sharedHandlersCallbacks.value;\n        if (!currentCallback) {\n          return;\n        }\n        for (var i = 0; i < currentCallback.length; i++) {\n          var gesture = currentCallback[i];\n          if (event.handlerTag !== gesture.handlerTag) {\n            continue;\n          }\n          if (isStateChangeEvent(event)) {\n            if (event.oldState === State.UNDETERMINED && event.state === State.BEGAN) {\n              runWorklet(CALLBACK_TYPE.BEGAN, gesture, event);\n            } else if ((event.oldState === State.BEGAN || event.oldState === State.UNDETERMINED) && event.state === State.ACTIVE) {\n              runWorklet(CALLBACK_TYPE.START, gesture, event);\n              lastUpdateEvent.value[gesture.handlerTag] = undefined;\n            } else if (event.oldState !== event.state && event.state === State.END) {\n              if (event.oldState === State.ACTIVE) {\n                runWorklet(CALLBACK_TYPE.END, gesture, event, true);\n              }\n              runWorklet(CALLBACK_TYPE.FINALIZE, gesture, event, true);\n            } else if ((event.state === State.FAILED || event.state === State.CANCELLED) && event.state !== event.oldState) {\n              if (event.oldState === State.ACTIVE) {\n                runWorklet(CALLBACK_TYPE.END, gesture, event, false);\n              }\n              runWorklet(CALLBACK_TYPE.FINALIZE, gesture, event, false);\n            }\n          } else if (isTouchEvent(event)) {\n            if (!stateControllers[i]) {\n              stateControllers[i] = GestureStateManager.create(event.handlerTag);\n            }\n            if (event.eventType !== TouchEventType.UNDETERMINED) {\n              runWorklet(touchEventTypeToCallbackType(event.eventType), gesture, event, stateControllers[i]);\n            }\n          } else {\n            runWorklet(CALLBACK_TYPE.UPDATE, gesture, event);\n            if (gesture.onChange && gesture.changeEventCalculator) {\n              runWorklet(CALLBACK_TYPE.CHANGE, gesture, gesture.changeEventCalculator?.(event, lastUpdateEvent.value[gesture.handlerTag]));\n              lastUpdateEvent.value[gesture.handlerTag] = event;\n            }\n          }\n        }\n      };\n      reactNativeGestureHandler_useAnimatedGestureTs6.__closure = {\n        sharedHandlersCallbacks,\n        isStateChangeEvent,\n        State,\n        runWorklet,\n        CALLBACK_TYPE,\n        lastUpdateEvent,\n        isTouchEvent,\n        stateControllers,\n        GestureStateManager,\n        TouchEventType,\n        touchEventTypeToCallbackType\n      };\n      reactNativeGestureHandler_useAnimatedGestureTs6.__workletHash = 10458000393606;\n      reactNativeGestureHandler_useAnimatedGestureTs6.__initData = _worklet_10458000393606_init_data;\n      return reactNativeGestureHandler_useAnimatedGestureTs6;\n    }({\n      _worklet_10458000393606_init_data,\n      sharedHandlersCallbacks,\n      isStateChangeEvent,\n      State: _State.State,\n      runWorklet,\n      CALLBACK_TYPE: _gesture.CALLBACK_TYPE,\n      lastUpdateEvent,\n      isTouchEvent,\n      stateControllers,\n      GestureStateManager: _gestureStateManager.GestureStateManager,\n      TouchEventType: _TouchEventType.TouchEventType,\n      touchEventTypeToCallbackType\n    });\n\n    // eslint-disable-next-line react-hooks/rules-of-hooks\n    var event = _reanimatedWrapper.Reanimated.useEvent(callback, ['onGestureHandlerStateChange', 'onGestureHandlerEvent'], needsRebuild);\n    preparedGesture.animatedEventHandler = event;\n    preparedGesture.animatedHandlers = sharedHandlersCallbacks;\n  }\n});","lineCount":259,"map":[[7,2,95,0,"exports"],[7,9,95,0],[7,10,95,0,"useAnimatedGesture"],[7,28,95,0],[7,31,95,0,"useAnimatedGesture"],[7,49,95,0],[8,2,1,0],[8,6,1,0,"_gesture"],[8,14,1,0],[8,17,1,0,"require"],[8,24,1,0],[8,25,1,0,"_dependencyMap"],[8,39,1,0],[9,2,2,0],[9,6,2,0,"_reanimatedWrapper"],[9,24,2,0],[9,27,2,0,"require"],[9,34,2,0],[9,35,2,0,"_dependencyMap"],[9,49,2,0],[10,2,8,0],[10,6,8,0,"_gestureStateManager"],[10,26,8,0],[10,29,8,0,"require"],[10,36,8,0],[10,37,8,0,"_dependencyMap"],[10,51,8,0],[11,2,12,0],[11,6,12,0,"_State"],[11,12,12,0],[11,15,12,0,"require"],[11,22,12,0],[11,23,12,0,"_dependencyMap"],[11,37,12,0],[12,2,13,0],[12,6,13,0,"_TouchEventType"],[12,21,13,0],[12,24,13,0,"require"],[12,31,13,0],[12,32,13,0,"_dependencyMap"],[12,46,13,0],[13,2,14,0],[13,6,14,0,"_utils"],[13,12,14,0],[13,15,14,0,"require"],[13,22,14,0],[13,23,14,0,"_dependencyMap"],[13,37,14,0],[14,2,14,44],[14,6,14,44,"_worklet_2054655450554_init_data"],[14,38,14,44],[15,4,14,44,"code"],[15,8,14,44],[16,2,14,44],[17,2,14,44],[17,6,14,44,"getHandler"],[17,16,14,44],[17,19,17,0],[17,28,17,0,"getHandler_reactNativeGestureHandler_useAnimatedGestureTs1Factory"],[17,94,17,0,"_ref"],[17,98,17,0],[18,4,17,0],[18,8,17,0,"_worklet_2054655450554_init_data"],[18,40,17,0],[18,43,17,0,"_ref"],[18,47,17,0],[18,48,17,0,"_worklet_2054655450554_init_data"],[18,80,17,0],[19,6,23,9,"CALLBACK_TYPE"],[19,19,23,22],[19,22,23,22,"_ref"],[19,26,23,22],[19,27,23,9,"CALLBACK_TYPE"],[19,40,23,22],[20,4,23,22],[20,8,23,22,"getHandler"],[20,18,23,22],[20,30,23,22,"getHandler"],[20,31,18,2,"type"],[20,35,18,21],[20,37,19,2,"gesture"],[20,44,19,52],[20,46,20,2],[21,6,22,2],[21,14,22,10,"type"],[21,18,22,14],[22,8,23,4],[22,13,23,9,"CALLBACK_TYPE"],[22,26,23,22],[22,27,23,23,"BEGAN"],[22,32,23,28],[23,10,24,6],[23,17,24,13,"gesture"],[23,24,24,20],[23,25,24,21,"onBegin"],[23,32,24,28],[24,8,25,4],[24,13,25,9,"CALLBACK_TYPE"],[24,26,25,22],[24,27,25,23,"START"],[24,32,25,28],[25,10,26,6],[25,17,26,13,"gesture"],[25,24,26,20],[25,25,26,21,"onStart"],[25,32,26,28],[26,8,27,4],[26,13,27,9,"CALLBACK_TYPE"],[26,26,27,22],[26,27,27,23,"UPDATE"],[26,33,27,29],[27,10,28,6],[27,17,28,13,"gesture"],[27,24,28,20],[27,25,28,21,"onUpdate"],[27,33,28,29],[28,8,29,4],[28,13,29,9,"CALLBACK_TYPE"],[28,26,29,22],[28,27,29,23,"CHANGE"],[28,33,29,29],[29,10,30,6],[29,17,30,13,"gesture"],[29,24,30,20],[29,25,30,21,"onChange"],[29,33,30,29],[30,8,31,4],[30,13,31,9,"CALLBACK_TYPE"],[30,26,31,22],[30,27,31,23,"END"],[30,30,31,26],[31,10,32,6],[31,17,32,13,"gesture"],[31,24,32,20],[31,25,32,21,"onEnd"],[31,30,32,26],[32,8,33,4],[32,13,33,9,"CALLBACK_TYPE"],[32,26,33,22],[32,27,33,23,"FINALIZE"],[32,35,33,31],[33,10,34,6],[33,17,34,13,"gesture"],[33,24,34,20],[33,25,34,21,"onFinalize"],[33,35,34,31],[34,8,35,4],[34,13,35,9,"CALLBACK_TYPE"],[34,26,35,22],[34,27,35,23,"TOUCHES_DOWN"],[34,39,35,35],[35,10,36,6],[35,17,36,13,"gesture"],[35,24,36,20],[35,25,36,21,"onTouchesDown"],[35,38,36,34],[36,8,37,4],[36,13,37,9,"CALLBACK_TYPE"],[36,26,37,22],[36,27,37,23,"TOUCHES_MOVE"],[36,39,37,35],[37,10,38,6],[37,17,38,13,"gesture"],[37,24,38,20],[37,25,38,21,"onTouchesMove"],[37,38,38,34],[38,8,39,4],[38,13,39,9,"CALLBACK_TYPE"],[38,26,39,22],[38,27,39,23,"TOUCHES_UP"],[38,37,39,33],[39,10,40,6],[39,17,40,13,"gesture"],[39,24,40,20],[39,25,40,21,"onTouchesUp"],[39,36,40,32],[40,8,41,4],[40,13,41,9,"CALLBACK_TYPE"],[40,26,41,22],[40,27,41,23,"TOUCHES_CANCELLED"],[40,44,41,40],[41,10,42,6],[41,17,42,13,"gesture"],[41,24,42,20],[41,25,42,21,"onTouchesCancelled"],[41,43,42,39],[42,6,43,2],[43,4,44,0],[43,5,44,1],[44,4,44,1,"getHandler"],[44,14,44,1],[44,15,44,1,"__closure"],[44,24,44,1],[45,6,23,9,"CALLBACK_TYPE"],[46,4,23,22],[47,4,23,22,"getHandler"],[47,14,23,22],[47,15,23,22,"__workletHash"],[47,28,23,22],[48,4,23,22,"getHandler"],[48,14,23,22],[48,15,23,22,"__initData"],[48,25,23,22],[48,28,23,22,"_worklet_2054655450554_init_data"],[48,60,23,22],[49,4,23,22],[49,11,23,22,"getHandler"],[49,21,23,22],[50,2,23,22],[50,3,17,0],[51,4,17,0,"_worklet_2054655450554_init_data"],[51,36,17,0],[52,4,23,9,"CALLBACK_TYPE"],[52,17,23,22],[52,19,23,9,"CALLBACK_TYPE"],[52,27,23,22],[52,28,23,22,"CALLBACK_TYPE"],[53,2,23,22],[54,2,23,22],[54,6,23,22,"_worklet_14903447069497_init_data"],[54,39,23,22],[55,4,23,22,"code"],[55,8,23,22],[56,2,23,22],[57,2,23,22],[57,6,23,22,"touchEventTypeToCallbackType"],[57,34,23,22],[57,37,46,0],[57,46,46,0,"touchEventTypeToCallbackType_reactNativeGestureHandler_useAnimatedGestureTs2Factory"],[57,130,46,0,"_ref2"],[57,135,46,0],[58,4,46,0],[58,8,46,0,"_worklet_14903447069497_init_data"],[58,41,46,0],[58,44,46,0,"_ref2"],[58,49,46,0],[58,50,46,0,"_worklet_14903447069497_init_data"],[58,83,46,0],[59,6,51,9,"TouchEventType"],[59,20,51,23],[59,23,51,23,"_ref2"],[59,28,51,23],[59,29,51,9,"TouchEventType"],[59,43,51,23],[60,6,52,13,"CALLBACK_TYPE"],[60,19,52,26],[60,22,52,26,"_ref2"],[60,27,52,26],[60,28,52,13,"CALLBACK_TYPE"],[60,41,52,26],[61,4,52,26],[61,8,52,26,"touchEventTypeToCallbackType"],[61,36,52,26],[61,48,52,26,"touchEventTypeToCallbackType"],[61,49,47,2,"eventType"],[61,58,47,27],[61,60,48,17],[62,6,50,2],[62,14,50,10,"eventType"],[62,23,50,19],[63,8,51,4],[63,13,51,9,"TouchEventType"],[63,27,51,23],[63,28,51,24,"TOUCHES_DOWN"],[63,40,51,36],[64,10,52,6],[64,17,52,13,"CALLBACK_TYPE"],[64,30,52,26],[64,31,52,27,"TOUCHES_DOWN"],[64,43,52,39],[65,8,53,4],[65,13,53,9,"TouchEventType"],[65,27,53,23],[65,28,53,24,"TOUCHES_MOVE"],[65,40,53,36],[66,10,54,6],[66,17,54,13,"CALLBACK_TYPE"],[66,30,54,26],[66,31,54,27,"TOUCHES_MOVE"],[66,43,54,39],[67,8,55,4],[67,13,55,9,"TouchEventType"],[67,27,55,23],[67,28,55,24,"TOUCHES_UP"],[67,38,55,34],[68,10,56,6],[68,17,56,13,"CALLBACK_TYPE"],[68,30,56,26],[68,31,56,27,"TOUCHES_UP"],[68,41,56,37],[69,8,57,4],[69,13,57,9,"TouchEventType"],[69,27,57,23],[69,28,57,24,"TOUCHES_CANCELLED"],[69,45,57,41],[70,10,58,6],[70,17,58,13,"CALLBACK_TYPE"],[70,30,58,26],[70,31,58,27,"TOUCHES_CANCELLED"],[70,48,58,44],[71,6,59,2],[72,6,60,2],[72,13,60,9,"CALLBACK_TYPE"],[72,26,60,22],[72,27,60,23,"UNDEFINED"],[72,36,60,32],[73,4,61,0],[73,5,61,1],[74,4,61,1,"touchEventTypeToCallbackType"],[74,32,61,1],[74,33,61,1,"__closure"],[74,42,61,1],[75,6,51,9,"TouchEventType"],[75,20,51,23],[76,6,52,13,"CALLBACK_TYPE"],[77,4,52,26],[78,4,52,26,"touchEventTypeToCallbackType"],[78,32,52,26],[78,33,52,26,"__workletHash"],[78,46,52,26],[79,4,52,26,"touchEventTypeToCallbackType"],[79,32,52,26],[79,33,52,26,"__initData"],[79,43,52,26],[79,46,52,26,"_worklet_14903447069497_init_data"],[79,79,52,26],[80,4,52,26],[80,11,52,26,"touchEventTypeToCallbackType"],[80,39,52,26],[81,2,52,26],[81,3,46,0],[82,4,46,0,"_worklet_14903447069497_init_data"],[82,37,46,0],[83,4,51,9,"TouchEventType"],[83,18,51,23],[83,20,51,9,"TouchEventType"],[83,35,51,23],[83,36,51,23,"TouchEventType"],[83,50,51,23],[84,4,52,13,"CALLBACK_TYPE"],[84,17,52,26],[84,19,52,13,"CALLBACK_TYPE"],[84,27,52,26],[84,28,52,26,"CALLBACK_TYPE"],[85,2,52,26],[86,2,52,26],[86,6,52,26,"_worklet_10526057831000_init_data"],[86,39,52,26],[87,4,52,26,"code"],[87,8,52,26],[88,2,52,26],[89,2,52,26],[89,6,52,26,"runWorklet"],[89,16,52,26],[89,19,63,0],[89,28,63,0,"runWorklet_reactNativeGestureHandler_useAnimatedGestureTs3Factory"],[89,94,63,0,"_ref3"],[89,99,63,0],[90,4,63,0],[90,8,63,0,"_worklet_10526057831000_init_data"],[90,41,63,0],[90,44,63,0,"_ref3"],[90,49,63,0],[90,50,63,0,"_worklet_10526057831000_init_data"],[90,83,63,0],[91,6,70,18,"getHandler"],[91,16,70,28],[91,19,70,28,"_ref3"],[91,24,70,28],[91,25,70,18,"getHandler"],[91,35,70,28],[92,6,76,17,"tagMessage"],[92,16,76,27],[92,19,76,27,"_ref3"],[92,24,76,27],[92,25,76,17,"tagMessage"],[92,35,76,27],[93,4,76,27],[93,8,76,27,"runWorklet"],[93,18,76,27],[93,30,76,27,"runWorklet"],[93,31,64,2,"type"],[93,35,64,21],[93,37,65,2,"gesture"],[93,44,65,52],[93,46,66,2,"event"],[93,51,66,73],[93,53,68,2],[94,6,70,2],[94,10,70,8,"handler"],[94,17,70,15],[94,20,70,18,"getHandler"],[94,30,70,28],[94,31,70,29,"type"],[94,35,70,33],[94,37,70,35,"gesture"],[94,44,70,42],[94,45,70,43],[95,6,71,2],[95,10,71,6,"gesture"],[95,17,71,13],[95,18,71,14,"isWorklet"],[95,27,71,23],[95,28,71,24,"type"],[95,32,71,28],[95,33,71,29],[95,35,71,31],[96,8,71,31],[96,17,71,31,"_len"],[96,21,71,31],[96,24,71,31,"arguments"],[96,33,71,31],[96,34,71,31,"length"],[96,40,71,31],[96,42,67,5,"args"],[96,46,67,9],[96,53,67,9,"Array"],[96,58,67,9],[96,59,67,9,"_len"],[96,63,67,9],[96,70,67,9,"_len"],[96,74,67,9],[96,85,67,9,"_key"],[96,89,67,9],[96,95,67,9,"_key"],[96,99,67,9],[96,102,67,9,"_len"],[96,106,67,9],[96,108,67,9,"_key"],[96,112,67,9],[97,10,67,5,"args"],[97,14,67,9],[97,15,67,9,"_key"],[97,19,67,9],[97,27,67,9,"arguments"],[97,36,67,9],[97,37,67,9,"_key"],[97,41,67,9],[98,8,67,9],[99,8,72,4],[100,8,73,4],[101,8,74,4,"handler"],[101,15,74,11],[101,18,74,14,"event"],[101,23,74,19],[101,25,74,21],[101,28,74,24,"args"],[101,32,74,28],[101,33,74,29],[102,6,75,2],[102,7,75,3],[102,13,75,9],[102,17,75,13,"handler"],[102,24,75,20],[102,26,75,22],[103,8,76,4,"console"],[103,15,76,11],[103,16,76,12,"warn"],[103,20,76,16],[103,21,76,17,"tagMessage"],[103,31,76,27],[103,32,76,28],[103,77,76,73],[103,78,76,74],[103,79,76,75],[104,6,77,2],[105,4,78,0],[105,5,78,1],[106,4,78,1,"runWorklet"],[106,14,78,1],[106,15,78,1,"__closure"],[106,24,78,1],[107,6,70,18,"getHandler"],[107,16,70,28],[108,6,76,17,"tagMessage"],[109,4,76,27],[110,4,76,27,"runWorklet"],[110,14,76,27],[110,15,76,27,"__workletHash"],[110,28,76,27],[111,4,76,27,"runWorklet"],[111,14,76,27],[111,15,76,27,"__initData"],[111,25,76,27],[111,28,76,27,"_worklet_10526057831000_init_data"],[111,61,76,27],[112,4,76,27],[112,11,76,27,"runWorklet"],[112,21,76,27],[113,2,76,27],[113,3,63,0],[114,4,63,0,"_worklet_10526057831000_init_data"],[114,37,63,0],[115,4,70,18,"getHandler"],[115,14,70,28],[116,4,76,17,"tagMessage"],[116,14,76,27],[116,16,76,17,"tagMessage"],[116,22,76,27],[116,23,76,27,"tagMessage"],[117,2,76,27],[118,2,76,27],[118,6,76,27,"_worklet_1443917263962_init_data"],[118,38,76,27],[119,4,76,27,"code"],[119,8,76,27],[120,2,76,27],[121,2,76,27],[121,6,76,27,"isStateChangeEvent"],[121,24,76,27],[121,27,80,0],[121,36,80,0,"isStateChangeEvent_reactNativeGestureHandler_useAnimatedGestureTs4Factory"],[121,110,80,0,"_ref4"],[121,115,80,0],[122,4,80,0],[122,8,80,0,"_worklet_1443917263962_init_data"],[122,40,80,0],[122,43,80,0,"_ref4"],[122,48,80,0],[122,49,80,0,"_worklet_1443917263962_init_data"],[122,81,80,0],[123,4,80,0],[123,8,80,0,"isStateChangeEvent"],[123,26,80,0],[123,38,80,0,"isStateChangeEvent"],[123,39,81,2,"event"],[123,44,81,73],[123,46,82,36],[124,6,84,2],[125,6,85,2],[125,13,85,9,"event"],[125,18,85,14],[125,19,85,15,"oldState"],[125,27,85,23],[125,31,85,27],[125,35,85,31],[126,4,86,0],[126,5,86,1],[127,4,86,1,"isStateChangeEvent"],[127,22,86,1],[127,23,86,1,"__closure"],[127,32,86,1],[128,4,86,1,"isStateChangeEvent"],[128,22,86,1],[128,23,86,1,"__workletHash"],[128,36,86,1],[129,4,86,1,"isStateChangeEvent"],[129,22,86,1],[129,23,86,1,"__initData"],[129,33,86,1],[129,36,86,1,"_worklet_1443917263962_init_data"],[129,68,86,1],[130,4,86,1],[130,11,86,1,"isStateChangeEvent"],[130,29,86,1],[131,2,86,1],[131,3,80,0],[132,4,80,0,"_worklet_1443917263962_init_data"],[133,2,80,0],[134,2,80,0],[134,6,80,0,"_worklet_15574765637067_init_data"],[134,39,80,0],[135,4,80,0,"code"],[135,8,80,0],[136,2,80,0],[137,2,80,0],[137,6,80,0,"isTouchEvent"],[137,18,80,0],[137,21,88,0],[137,30,88,0,"isTouchEvent_reactNativeGestureHandler_useAnimatedGestureTs5Factory"],[137,98,88,0,"_ref5"],[137,103,88,0],[138,4,88,0],[138,8,88,0,"_worklet_15574765637067_init_data"],[138,41,88,0],[138,44,88,0,"_ref5"],[138,49,88,0],[138,50,88,0,"_worklet_15574765637067_init_data"],[138,83,88,0],[139,4,88,0],[139,8,88,0,"isTouchEvent"],[139,20,88,0],[139,32,88,0,"isTouchEvent"],[139,33,89,2,"event"],[139,38,89,73],[139,40,90,30],[140,6,92,2],[140,13,92,9,"event"],[140,18,92,14],[140,19,92,15,"eventType"],[140,28,92,24],[140,32,92,28],[140,36,92,32],[141,4,93,0],[141,5,93,1],[142,4,93,1,"isTouchEvent"],[142,16,93,1],[142,17,93,1,"__closure"],[142,26,93,1],[143,4,93,1,"isTouchEvent"],[143,16,93,1],[143,17,93,1,"__workletHash"],[143,30,93,1],[144,4,93,1,"isTouchEvent"],[144,16,93,1],[144,17,93,1,"__initData"],[144,27,93,1],[144,30,93,1,"_worklet_15574765637067_init_data"],[144,63,93,1],[145,4,93,1],[145,11,93,1,"isTouchEvent"],[145,23,93,1],[146,2,93,1],[146,3,88,0],[147,4,88,0,"_worklet_15574765637067_init_data"],[148,2,88,0],[149,2,88,0],[149,6,88,0,"_worklet_10458000393606_init_data"],[149,39,88,0],[150,4,88,0,"code"],[150,8,88,0],[151,2,88,0],[152,2,95,7],[152,11,95,16,"useAnimatedGesture"],[152,29,95,34,"useAnimatedGesture"],[152,30,96,2,"preparedGesture"],[152,45,96,39],[152,47,97,2,"needsRebuild"],[152,59,97,23],[152,61,98,2],[153,4,99,2],[153,8,99,6],[153,9,99,7,"Reanimated"],[153,27,99,17],[153,28,99,17,"Reanimated"],[153,38,99,17],[153,40,99,19],[154,6,100,4],[155,4,101,2],[157,4,103,2],[158,4,104,2],[159,4,105,2],[160,4,106,2],[160,8,106,8,"sharedHandlersCallbacks"],[160,31,106,31],[160,34,106,34,"Reanimated"],[160,52,106,44],[160,53,106,44,"Reanimated"],[160,63,106,44],[160,64,106,45,"useSharedValue"],[160,78,106,59],[160,79,108,4],[160,83,108,8],[160,84,108,9],[162,4,110,2],[163,4,111,2],[163,8,111,8,"lastUpdateEvent"],[163,23,111,23],[163,26,111,26,"Reanimated"],[163,44,111,36],[163,45,111,36,"Reanimated"],[163,55,111,36],[163,56,111,37,"useSharedValue"],[163,70,111,51],[163,71,113,4],[163,73,113,6],[163,74,113,7],[165,4,115,2],[166,4,116,2],[166,8,116,8,"stateControllers"],[166,24,116,51],[166,27,116,54],[166,29,116,56],[167,4,118,2],[167,8,118,8,"callback"],[167,16,118,16],[167,19,118,19],[167,28,118,19,"reactNativeGestureHandler_useAnimatedGestureTs6Factory"],[167,83,118,19,"_ref6"],[167,88,118,19],[168,6,118,19],[168,10,118,19,"_worklet_10458000393606_init_data"],[168,43,118,19],[168,46,118,19,"_ref6"],[168,51,118,19],[168,52,118,19,"_worklet_10458000393606_init_data"],[168,85,118,19],[169,8,123,28,"sharedHandlersCallbacks"],[169,31,123,51],[169,34,123,51,"_ref6"],[169,39,123,51],[169,40,123,28,"sharedHandlersCallbacks"],[169,63,123,51],[170,8,135,10,"isStateChangeEvent"],[170,26,135,28],[170,29,135,28,"_ref6"],[170,34,135,28],[170,35,135,10,"isStateChangeEvent"],[170,53,135,28],[171,8,137,29,"State"],[171,13,137,34],[171,16,137,34,"_ref6"],[171,21,137,34],[171,22,137,29,"State"],[171,27,137,34],[172,8,140,10,"runWorklet"],[172,18,140,20],[172,21,140,20,"_ref6"],[172,26,140,20],[172,27,140,10,"runWorklet"],[172,37,140,20],[173,8,140,21,"CALLBACK_TYPE"],[173,21,140,34],[173,24,140,34,"_ref6"],[173,29,140,34],[173,30,140,21,"CALLBACK_TYPE"],[173,43,140,34],[174,8,147,10,"lastUpdateEvent"],[174,23,147,25],[174,26,147,25,"_ref6"],[174,31,147,25],[174,32,147,10,"lastUpdateEvent"],[174,47,147,25],[175,8,165,17,"isTouchEvent"],[175,20,165,29],[175,23,165,29,"_ref6"],[175,28,165,29],[175,29,165,17,"isTouchEvent"],[175,41,165,29],[176,8,166,13,"stateControllers"],[176,24,166,29],[176,27,166,29,"_ref6"],[176,32,166,29],[176,33,166,13,"stateControllers"],[176,49,166,29],[177,8,167,32,"GestureStateManager"],[177,27,167,51],[177,30,167,51,"_ref6"],[177,35,167,51],[177,36,167,32,"GestureStateManager"],[177,55,167,51],[178,8,170,32,"TouchEventType"],[178,22,170,46],[178,25,170,46,"_ref6"],[178,30,170,46],[178,31,170,32,"TouchEventType"],[178,45,170,46],[179,8,172,12,"touchEventTypeToCallbackType"],[179,36,172,40],[179,39,172,40,"_ref6"],[179,44,172,40],[179,45,172,12,"touchEventTypeToCallbackType"],[179,73,172,40],[180,6,172,40],[180,10,172,40,"reactNativeGestureHandler_useAnimatedGestureTs6"],[180,57,172,40],[180,69,172,40,"reactNativeGestureHandler_useAnimatedGestureTs6"],[180,70,119,4,"event"],[180,75,119,75],[180,77,120,7],[181,8,123,4],[181,12,123,10,"currentCallback"],[181,27,123,25],[181,30,123,28,"sharedHandlersCallbacks"],[181,53,123,51],[181,54,123,52,"value"],[181,59,123,57],[182,8,124,4],[182,12,124,8],[182,13,124,9,"currentCallback"],[182,28,124,24],[182,30,124,26],[183,10,125,6],[184,8,126,4],[185,8,128,4],[185,13,128,9],[185,17,128,13,"i"],[185,18,128,14],[185,21,128,17],[185,22,128,18],[185,24,128,20,"i"],[185,25,128,21],[185,28,128,24,"currentCallback"],[185,43,128,39],[185,44,128,40,"length"],[185,50,128,46],[185,52,128,48,"i"],[185,53,128,49],[185,55,128,51],[185,57,128,53],[186,10,129,6],[186,14,129,12,"gesture"],[186,21,129,19],[186,24,129,22,"currentCallback"],[186,39,129,37],[186,40,129,38,"i"],[186,41,129,39],[186,42,129,40],[187,10,131,6],[187,14,131,10,"event"],[187,19,131,15],[187,20,131,16,"handlerTag"],[187,30,131,26],[187,35,131,31,"gesture"],[187,42,131,38],[187,43,131,39,"handlerTag"],[187,53,131,49],[187,55,131,51],[188,12,132,8],[189,10,133,6],[190,10,135,6],[190,14,135,10,"isStateChangeEvent"],[190,32,135,28],[190,33,135,29,"event"],[190,38,135,34],[190,39,135,35],[190,41,135,37],[191,12,136,8],[191,16,137,10,"event"],[191,21,137,15],[191,22,137,16,"oldState"],[191,30,137,24],[191,35,137,29,"State"],[191,40,137,34],[191,41,137,35,"UNDETERMINED"],[191,53,137,47],[191,57,138,10,"event"],[191,62,138,15],[191,63,138,16,"state"],[191,68,138,21],[191,73,138,26,"State"],[191,78,138,31],[191,79,138,32,"BEGAN"],[191,84,138,37],[191,86,139,10],[192,14,140,10,"runWorklet"],[192,24,140,20],[192,25,140,21,"CALLBACK_TYPE"],[192,38,140,34],[192,39,140,35,"BEGAN"],[192,44,140,40],[192,46,140,42,"gesture"],[192,53,140,49],[192,55,140,51,"event"],[192,60,140,56],[192,61,140,57],[193,12,141,8],[193,13,141,9],[193,19,141,15],[193,23,142,10],[193,24,142,11,"event"],[193,29,142,16],[193,30,142,17,"oldState"],[193,38,142,25],[193,43,142,30,"State"],[193,48,142,35],[193,49,142,36,"BEGAN"],[193,54,142,41],[193,58,143,12,"event"],[193,63,143,17],[193,64,143,18,"oldState"],[193,72,143,26],[193,77,143,31,"State"],[193,82,143,36],[193,83,143,37,"UNDETERMINED"],[193,95,143,49],[193,100,144,10,"event"],[193,105,144,15],[193,106,144,16,"state"],[193,111,144,21],[193,116,144,26,"State"],[193,121,144,31],[193,122,144,32,"ACTIVE"],[193,128,144,38],[193,130,145,10],[194,14,146,10,"runWorklet"],[194,24,146,20],[194,25,146,21,"CALLBACK_TYPE"],[194,38,146,34],[194,39,146,35,"START"],[194,44,146,40],[194,46,146,42,"gesture"],[194,53,146,49],[194,55,146,51,"event"],[194,60,146,56],[194,61,146,57],[195,14,147,10,"lastUpdateEvent"],[195,29,147,25],[195,30,147,26,"value"],[195,35,147,31],[195,36,147,32,"gesture"],[195,43,147,39],[195,44,147,40,"handlerTag"],[195,54,147,50],[195,55,147,51],[195,58,147,54,"undefined"],[195,67,147,63],[196,12,148,8],[196,13,148,9],[196,19,148,15],[196,23,149,10,"event"],[196,28,149,15],[196,29,149,16,"oldState"],[196,37,149,24],[196,42,149,29,"event"],[196,47,149,34],[196,48,149,35,"state"],[196,53,149,40],[196,57,150,10,"event"],[196,62,150,15],[196,63,150,16,"state"],[196,68,150,21],[196,73,150,26,"State"],[196,78,150,31],[196,79,150,32,"END"],[196,82,150,35],[196,84,151,10],[197,14,152,10],[197,18,152,14,"event"],[197,23,152,19],[197,24,152,20,"oldState"],[197,32,152,28],[197,37,152,33,"State"],[197,42,152,38],[197,43,152,39,"ACTIVE"],[197,49,152,45],[197,51,152,47],[198,16,153,12,"runWorklet"],[198,26,153,22],[198,27,153,23,"CALLBACK_TYPE"],[198,40,153,36],[198,41,153,37,"END"],[198,44,153,40],[198,46,153,42,"gesture"],[198,53,153,49],[198,55,153,51,"event"],[198,60,153,56],[198,62,153,58],[198,66,153,62],[198,67,153,63],[199,14,154,10],[200,14,155,10,"runWorklet"],[200,24,155,20],[200,25,155,21,"CALLBACK_TYPE"],[200,38,155,34],[200,39,155,35,"FINALIZE"],[200,47,155,43],[200,49,155,45,"gesture"],[200,56,155,52],[200,58,155,54,"event"],[200,63,155,59],[200,65,155,61],[200,69,155,65],[200,70,155,66],[201,12,156,8],[201,13,156,9],[201,19,156,15],[201,23,157,10],[201,24,157,11,"event"],[201,29,157,16],[201,30,157,17,"state"],[201,35,157,22],[201,40,157,27,"State"],[201,45,157,32],[201,46,157,33,"FAILED"],[201,52,157,39],[201,56,157,43,"event"],[201,61,157,48],[201,62,157,49,"state"],[201,67,157,54],[201,72,157,59,"State"],[201,77,157,64],[201,78,157,65,"CANCELLED"],[201,87,157,74],[201,92,158,10,"event"],[201,97,158,15],[201,98,158,16,"state"],[201,103,158,21],[201,108,158,26,"event"],[201,113,158,31],[201,114,158,32,"oldState"],[201,122,158,40],[201,124,159,10],[202,14,160,10],[202,18,160,14,"event"],[202,23,160,19],[202,24,160,20,"oldState"],[202,32,160,28],[202,37,160,33,"State"],[202,42,160,38],[202,43,160,39,"ACTIVE"],[202,49,160,45],[202,51,160,47],[203,16,161,12,"runWorklet"],[203,26,161,22],[203,27,161,23,"CALLBACK_TYPE"],[203,40,161,36],[203,41,161,37,"END"],[203,44,161,40],[203,46,161,42,"gesture"],[203,53,161,49],[203,55,161,51,"event"],[203,60,161,56],[203,62,161,58],[203,67,161,63],[203,68,161,64],[204,14,162,10],[205,14,163,10,"runWorklet"],[205,24,163,20],[205,25,163,21,"CALLBACK_TYPE"],[205,38,163,34],[205,39,163,35,"FINALIZE"],[205,47,163,43],[205,49,163,45,"gesture"],[205,56,163,52],[205,58,163,54,"event"],[205,63,163,59],[205,65,163,61],[205,70,163,66],[205,71,163,67],[206,12,164,8],[207,10,165,6],[207,11,165,7],[207,17,165,13],[207,21,165,17,"isTouchEvent"],[207,33,165,29],[207,34,165,30,"event"],[207,39,165,35],[207,40,165,36],[207,42,165,38],[208,12,166,8],[208,16,166,12],[208,17,166,13,"stateControllers"],[208,33,166,29],[208,34,166,30,"i"],[208,35,166,31],[208,36,166,32],[208,38,166,34],[209,14,167,10,"stateControllers"],[209,30,167,26],[209,31,167,27,"i"],[209,32,167,28],[209,33,167,29],[209,36,167,32,"GestureStateManager"],[209,55,167,51],[209,56,167,52,"create"],[209,62,167,58],[209,63,167,59,"event"],[209,68,167,64],[209,69,167,65,"handlerTag"],[209,79,167,75],[209,80,167,76],[210,12,168,8],[211,12,170,8],[211,16,170,12,"event"],[211,21,170,17],[211,22,170,18,"eventType"],[211,31,170,27],[211,36,170,32,"TouchEventType"],[211,50,170,46],[211,51,170,47,"UNDETERMINED"],[211,63,170,59],[211,65,170,61],[212,14,171,10,"runWorklet"],[212,24,171,20],[212,25,172,12,"touchEventTypeToCallbackType"],[212,53,172,40],[212,54,172,41,"event"],[212,59,172,46],[212,60,172,47,"eventType"],[212,69,172,56],[212,70,172,57],[212,72,173,12,"gesture"],[212,79,173,19],[212,81,174,12,"event"],[212,86,174,17],[212,88,175,12,"stateControllers"],[212,104,175,28],[212,105,175,29,"i"],[212,106,175,30],[212,107,176,10],[212,108,176,11],[213,12,177,8],[214,10,178,6],[214,11,178,7],[214,17,178,13],[215,12,179,8,"runWorklet"],[215,22,179,18],[215,23,179,19,"CALLBACK_TYPE"],[215,36,179,32],[215,37,179,33,"UPDATE"],[215,43,179,39],[215,45,179,41,"gesture"],[215,52,179,48],[215,54,179,50,"event"],[215,59,179,55],[215,60,179,56],[216,12,181,8],[216,16,181,12,"gesture"],[216,23,181,19],[216,24,181,20,"onChange"],[216,32,181,28],[216,36,181,32,"gesture"],[216,43,181,39],[216,44,181,40,"changeEventCalculator"],[216,65,181,61],[216,67,181,63],[217,14,182,10,"runWorklet"],[217,24,182,20],[217,25,183,12,"CALLBACK_TYPE"],[217,38,183,25],[217,39,183,26,"CHANGE"],[217,45,183,32],[217,47,184,12,"gesture"],[217,54,184,19],[217,56,185,12,"gesture"],[217,63,185,19],[217,64,185,20,"changeEventCalculator"],[217,85,185,41],[217,88,186,14,"event"],[217,93,186,19],[217,95,187,14,"lastUpdateEvent"],[217,110,187,29],[217,111,187,30,"value"],[217,116,187,35],[217,117,187,36,"gesture"],[217,124,187,43],[217,125,187,44,"handlerTag"],[217,135,187,54],[217,136,188,12],[217,137,189,10],[217,138,189,11],[218,14,191,10,"lastUpdateEvent"],[218,29,191,25],[218,30,191,26,"value"],[218,35,191,31],[218,36,191,32,"gesture"],[218,43,191,39],[218,44,191,40,"handlerTag"],[218,54,191,50],[218,55,191,51],[218,58,191,54,"event"],[218,63,191,59],[219,12,192,8],[220,10,193,6],[221,8,194,4],[222,6,195,2],[222,7,195,3],[223,6,195,3,"reactNativeGestureHandler_useAnimatedGestureTs6"],[223,53,195,3],[223,54,195,3,"__closure"],[223,63,195,3],[224,8,123,28,"sharedHandlersCallbacks"],[224,31,123,51],[225,8,135,10,"isStateChangeEvent"],[225,26,135,28],[226,8,137,29,"State"],[226,13,137,34],[227,8,140,10,"runWorklet"],[227,18,140,20],[228,8,140,21,"CALLBACK_TYPE"],[228,21,140,34],[229,8,147,10,"lastUpdateEvent"],[229,23,147,25],[230,8,165,17,"isTouchEvent"],[230,20,165,29],[231,8,166,13,"stateControllers"],[231,24,166,29],[232,8,167,32,"GestureStateManager"],[232,27,167,51],[233,8,170,32,"TouchEventType"],[233,22,170,46],[234,8,172,12,"touchEventTypeToCallbackType"],[235,6,172,40],[236,6,172,40,"reactNativeGestureHandler_useAnimatedGestureTs6"],[236,53,172,40],[236,54,172,40,"__workletHash"],[236,67,172,40],[237,6,172,40,"reactNativeGestureHandler_useAnimatedGestureTs6"],[237,53,172,40],[237,54,172,40,"__initData"],[237,64,172,40],[237,67,172,40,"_worklet_10458000393606_init_data"],[237,100,172,40],[238,6,172,40],[238,13,172,40,"reactNativeGestureHandler_useAnimatedGestureTs6"],[238,60,172,40],[239,4,172,40],[239,5,118,19],[240,6,118,19,"_worklet_10458000393606_init_data"],[240,39,118,19],[241,6,123,28,"sharedHandlersCallbacks"],[241,29,123,51],[242,6,135,10,"isStateChangeEvent"],[242,24,135,28],[243,6,137,29,"State"],[243,11,137,34],[243,13,137,29,"State"],[243,19,137,34],[243,20,137,34,"State"],[243,25,137,34],[244,6,140,10,"runWorklet"],[244,16,140,20],[245,6,140,21,"CALLBACK_TYPE"],[245,19,140,34],[245,21,140,21,"CALLBACK_TYPE"],[245,29,140,34],[245,30,140,34,"CALLBACK_TYPE"],[245,43,140,34],[246,6,147,10,"lastUpdateEvent"],[246,21,147,25],[247,6,165,17,"isTouchEvent"],[247,18,165,29],[248,6,166,13,"stateControllers"],[248,22,166,29],[249,6,167,32,"GestureStateManager"],[249,25,167,51],[249,27,167,32,"GestureStateManager"],[249,47,167,51],[249,48,167,51,"GestureStateManager"],[249,67,167,51],[250,6,170,32,"TouchEventType"],[250,20,170,46],[250,22,170,32,"TouchEventType"],[250,37,170,46],[250,38,170,46,"TouchEventType"],[250,52,170,46],[251,6,172,12,"touchEventTypeToCallbackType"],[252,4,172,40],[252,6,195,3],[254,4,197,2],[255,4,198,2],[255,8,198,8,"event"],[255,13,198,13],[255,16,198,16,"Reanimated"],[255,34,198,26],[255,35,198,26,"Reanimated"],[255,45,198,26],[255,46,198,27,"useEvent"],[255,54,198,35],[255,55,199,4,"callback"],[255,63,199,12],[255,65,200,4],[255,66,200,5],[255,95,200,34],[255,97,200,36],[255,120,200,59],[255,121,200,60],[255,123,201,4,"needsRebuild"],[255,135,202,2],[255,136,202,3],[256,4,204,2,"preparedGesture"],[256,19,204,17],[256,20,204,18,"animatedEventHandler"],[256,40,204,38],[256,43,204,41,"event"],[256,48,204,46],[257,4,205,2,"preparedGesture"],[257,19,205,17],[257,20,205,18,"animatedHandlers"],[257,36,205,34],[257,39,205,37,"sharedHandlersCallbacks"],[257,62,205,60],[258,2,206,0],[259,0,206,1],[259,3]],"functionMap":{"names":["<global>","getHandler","touchEventTypeToCallbackType","runWorklet","isStateChangeEvent","isTouchEvent","useAnimatedGesture","callback"],"mappings":"AAA;ACgB;CD2B;AEE;CFe;AGE;CHe;AIE;CJM;AKE;CLK;OME;mBCuB;GD6E;CNW"},"hasCjsExports":false},"type":"js/module"}]}