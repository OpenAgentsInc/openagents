{"dependencies":[{"name":"../common/utils","data":{"asyncType":null,"isESMImport":false,"locs":[{"start":{"line":5,"column":14,"index":47},"end":{"line":5,"column":40,"index":73}}],"key":"s68H+Qrc8so5XeN472FI/1YNbEY=","exportNames":["*"],"imports":1}}],"output":[{"data":{"code":"__d(function (global, require, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {\n  // Proceess '\\n'\n\n  'use strict';\n\n  var isSpace = require(_dependencyMap[0]).isSpace;\n  module.exports = function newline(state, silent) {\n    var pmax,\n      max,\n      pos = state.pos;\n    if (state.src.charCodeAt(pos) !== 0x0A /* \\n */) {\n      return false;\n    }\n    pmax = state.pending.length - 1;\n    max = state.posMax;\n\n    // '  \\n' -> hardbreak\n    // Lookup in pending chars is bad practice! Don't copy to other rules!\n    // Pending string is stored in concat mode, indexed lookups will cause\n    // convertion to flat mode.\n    if (!silent) {\n      if (pmax >= 0 && state.pending.charCodeAt(pmax) === 0x20) {\n        if (pmax >= 1 && state.pending.charCodeAt(pmax - 1) === 0x20) {\n          state.pending = state.pending.replace(/ +$/, '');\n          state.push('hardbreak', 'br', 0);\n        } else {\n          state.pending = state.pending.slice(0, -1);\n          state.push('softbreak', 'br', 0);\n        }\n      } else {\n        state.push('softbreak', 'br', 0);\n      }\n    }\n    pos++;\n\n    // skip heading spaces for next line\n    while (pos < max && isSpace(state.src.charCodeAt(pos))) {\n      pos++;\n    }\n    state.pos = pos;\n    return true;\n  };\n});","lineCount":43,"map":[[2,2,1,0],[4,2,3,0],[4,14,3,12],[6,2,5,0],[6,6,5,4,"isSpace"],[6,13,5,11],[6,16,5,14,"require"],[6,23,5,21],[6,24,5,21,"_dependencyMap"],[6,38,5,21],[6,41,5,39],[6,42,5,40],[6,43,5,41,"isSpace"],[6,50,5,48],[7,2,8,0,"module"],[7,8,8,6],[7,9,8,7,"exports"],[7,16,8,14],[7,19,8,17],[7,28,8,26,"newline"],[7,35,8,33,"newline"],[7,36,8,34,"state"],[7,41,8,39],[7,43,8,41,"silent"],[7,49,8,47],[7,51,8,49],[8,4,9,2],[8,8,9,6,"pmax"],[8,12,9,10],[9,6,9,12,"max"],[9,9,9,15],[10,6,9,17,"pos"],[10,9,9,20],[10,12,9,23,"state"],[10,17,9,28],[10,18,9,29,"pos"],[10,21,9,32],[11,4,11,2],[11,8,11,6,"state"],[11,13,11,11],[11,14,11,12,"src"],[11,17,11,15],[11,18,11,16,"charCodeAt"],[11,28,11,26],[11,29,11,27,"pos"],[11,32,11,30],[11,33,11,31],[11,38,11,36],[11,42,11,40],[11,53,11,50],[12,6,11,52],[12,13,11,59],[12,18,11,64],[13,4,11,66],[14,4,13,2,"pmax"],[14,8,13,6],[14,11,13,9,"state"],[14,16,13,14],[14,17,13,15,"pending"],[14,24,13,22],[14,25,13,23,"length"],[14,31,13,29],[14,34,13,32],[14,35,13,33],[15,4,14,2,"max"],[15,7,14,5],[15,10,14,8,"state"],[15,15,14,13],[15,16,14,14,"posMax"],[15,22,14,20],[17,4,16,2],[18,4,17,2],[19,4,18,2],[20,4,19,2],[21,4,20,2],[21,8,20,6],[21,9,20,7,"silent"],[21,15,20,13],[21,17,20,15],[22,6,21,4],[22,10,21,8,"pmax"],[22,14,21,12],[22,18,21,16],[22,19,21,17],[22,23,21,21,"state"],[22,28,21,26],[22,29,21,27,"pending"],[22,36,21,34],[22,37,21,35,"charCodeAt"],[22,47,21,45],[22,48,21,46,"pmax"],[22,52,21,50],[22,53,21,51],[22,58,21,56],[22,62,21,60],[22,64,21,62],[23,8,22,6],[23,12,22,10,"pmax"],[23,16,22,14],[23,20,22,18],[23,21,22,19],[23,25,22,23,"state"],[23,30,22,28],[23,31,22,29,"pending"],[23,38,22,36],[23,39,22,37,"charCodeAt"],[23,49,22,47],[23,50,22,48,"pmax"],[23,54,22,52],[23,57,22,55],[23,58,22,56],[23,59,22,57],[23,64,22,62],[23,68,22,66],[23,70,22,68],[24,10,23,8,"state"],[24,15,23,13],[24,16,23,14,"pending"],[24,23,23,21],[24,26,23,24,"state"],[24,31,23,29],[24,32,23,30,"pending"],[24,39,23,37],[24,40,23,38,"replace"],[24,47,23,45],[24,48,23,46],[24,53,23,51],[24,55,23,53],[24,57,23,55],[24,58,23,56],[25,10,24,8,"state"],[25,15,24,13],[25,16,24,14,"push"],[25,20,24,18],[25,21,24,19],[25,32,24,30],[25,34,24,32],[25,38,24,36],[25,40,24,38],[25,41,24,39],[25,42,24,40],[26,8,25,6],[26,9,25,7],[26,15,25,13],[27,10,26,8,"state"],[27,15,26,13],[27,16,26,14,"pending"],[27,23,26,21],[27,26,26,24,"state"],[27,31,26,29],[27,32,26,30,"pending"],[27,39,26,37],[27,40,26,38,"slice"],[27,45,26,43],[27,46,26,44],[27,47,26,45],[27,51,26,49],[27,52,26,50],[28,10,27,8,"state"],[28,15,27,13],[28,16,27,14,"push"],[28,20,27,18],[28,21,27,19],[28,32,27,30],[28,34,27,32],[28,38,27,36],[28,40,27,38],[28,41,27,39],[28,42,27,40],[29,8,28,6],[30,6,30,4],[30,7,30,5],[30,13,30,11],[31,8,31,6,"state"],[31,13,31,11],[31,14,31,12,"push"],[31,18,31,16],[31,19,31,17],[31,30,31,28],[31,32,31,30],[31,36,31,34],[31,38,31,36],[31,39,31,37],[31,40,31,38],[32,6,32,4],[33,4,33,2],[34,4,35,2,"pos"],[34,7,35,5],[34,9,35,7],[36,4,37,2],[37,4,38,2],[37,11,38,9,"pos"],[37,14,38,12],[37,17,38,15,"max"],[37,20,38,18],[37,24,38,22,"isSpace"],[37,31,38,29],[37,32,38,30,"state"],[37,37,38,35],[37,38,38,36,"src"],[37,41,38,39],[37,42,38,40,"charCodeAt"],[37,52,38,50],[37,53,38,51,"pos"],[37,56,38,54],[37,57,38,55],[37,58,38,56],[37,60,38,58],[38,6,38,60,"pos"],[38,9,38,63],[38,11,38,65],[39,4,38,67],[40,4,40,2,"state"],[40,9,40,7],[40,10,40,8,"pos"],[40,13,40,11],[40,16,40,14,"pos"],[40,19,40,17],[41,4,41,2],[41,11,41,9],[41,15,41,13],[42,2,42,0],[42,3,42,1],[43,0,42,2],[43,3]],"functionMap":{"names":["<global>","newline"],"mappings":"AAA;iBCO;CDkC"},"hasCjsExports":true},"type":"js/module"}]}