{"dependencies":[{"name":"@babel/runtime/helpers/slicedToArray","data":{"asyncType":null,"isESMImport":false,"locs":[],"key":"5y7e5+zC7teYEEC6niD9f5zII1M=","exportNames":["*"],"imports":1}},{"name":"react","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":1,"column":0,"index":0},"end":{"line":1,"column":44,"index":44}}],"key":"RtGiGa+/H7VrI7GDQDLhO1UbpU8=","exportNames":["*"],"imports":1}},{"name":"./Font","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":2,"column":0,"index":45},"end":{"line":2,"column":45,"index":90}}],"key":"uhjJvb2CC+i2amHkDH4+UF8lIHQ=","exportNames":["*"],"imports":1}}],"output":[{"data":{"code":"__d(function (global, require, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {\n  \"use strict\";\n\n  Object.defineProperty(exports, '__esModule', {\n    value: true\n  });\n  function _interopDefault(e) {\n    return e && e.__esModule ? e : {\n      default: e\n    };\n  }\n  Object.defineProperty(exports, \"useFonts\", {\n    enumerable: true,\n    get: function () {\n      return useFonts;\n    }\n  });\n  var _babelRuntimeHelpersSlicedToArray = require(_dependencyMap[0]);\n  var _slicedToArray = _interopDefault(_babelRuntimeHelpersSlicedToArray);\n  var _react = require(_dependencyMap[1]);\n  var _Font = require(_dependencyMap[2]);\n  function isMapLoaded(map) {\n    if (typeof map === 'string') {\n      return (0, _Font.isLoaded)(map);\n    } else {\n      return Object.keys(map).every(fontFamily => (0, _Font.isLoaded)(fontFamily));\n    }\n  }\n  function useRuntimeFonts(map) {\n    var _useState = (0, _react.useState)(\n      // For web rehydration, we need to check if the fonts are already loaded during the static render.\n      // Native will also benefit from this optimization.\n      isMapLoaded(map)),\n      _useState2 = (0, _slicedToArray.default)(_useState, 2),\n      loaded = _useState2[0],\n      setLoaded = _useState2[1];\n    var _useState3 = (0, _react.useState)(null),\n      _useState4 = (0, _slicedToArray.default)(_useState3, 2),\n      error = _useState4[0],\n      setError = _useState4[1];\n    (0, _react.useEffect)(() => {\n      var isMounted = true;\n      (0, _Font.loadAsync)(map).then(() => {\n        if (isMounted) {\n          setLoaded(true);\n        }\n      }).catch(error => {\n        if (isMounted) {\n          setError(error);\n        }\n      });\n      return () => {\n        isMounted = false;\n      };\n    }, []);\n    return [loaded, error];\n  }\n  function useStaticFonts(map) {\n    (0, _Font.loadAsync)(map);\n    return [true, null];\n  }\n  // @needsAudit\n  /**\n   * Load a map of fonts at runtime with [`loadAsync`](#loadasyncfontfamilyorfontmap-source). This returns a `boolean` if the fonts are\n   * loaded and ready to use. It also returns an error if something went wrong, to use in development.\n   *\n   * > Note, the fonts are not \"reloaded\" when you dynamically change the font map.\n   *\n   * @param map A map of `fontFamily`s to [`FontSource`](#fontsource)s. After loading the font you can\n   * use the key in the `fontFamily` style prop of a `Text` element.\n   *\n   * @return\n   * - __loaded__ (`boolean`) - A boolean to detect if the font for `fontFamily` has finished\n   * loading.\n   * - __error__ (`Error | null`) - An error encountered when loading the fonts.\n   *\n   * @example\n   * ```tsx\n   * const [loaded, error] = useFonts({\n   *   'Inter-Black': require('./assets/fonts/Inter-Black.otf'),\n   * });\n   * ```\n   */\n  var useFonts = typeof window === 'undefined' ? useStaticFonts : useRuntimeFonts;\n});","lineCount":85,"map":[[12,2,62,0,"Object"],[12,8,62,0],[12,9,62,0,"defineProperty"],[12,23,62,0],[12,24,62,0,"exports"],[12,31,62,0],[13,4,62,0,"enumerable"],[13,14,62,0],[14,4,62,0,"get"],[14,7,62,0],[14,18,62,0,"get"],[14,19,62,0],[15,6,62,0],[15,13,62,0,"useFonts"],[15,21,62,0],[16,4,62,0],[17,2,62,0],[18,2,62,89],[18,6,62,89,"_babelRuntimeHelpersSlicedToArray"],[18,39,62,89],[18,42,62,89,"require"],[18,49,62,89],[18,50,62,89,"_dependencyMap"],[18,64,62,89],[19,2,62,89],[19,6,62,89,"_slicedToArray"],[19,20,62,89],[19,23,62,89,"_interopDefault"],[19,38,62,89],[19,39,62,89,"_babelRuntimeHelpersSlicedToArray"],[19,72,62,89],[20,2,1,0],[20,6,1,0,"_react"],[20,12,1,0],[20,15,1,0,"require"],[20,22,1,0],[20,23,1,0,"_dependencyMap"],[20,37,1,0],[21,2,2,0],[21,6,2,0,"_Font"],[21,11,2,0],[21,14,2,0,"require"],[21,21,2,0],[21,22,2,0,"_dependencyMap"],[21,36,2,0],[22,2,3,0],[22,11,3,9,"isMapLoaded"],[22,22,3,20,"isMapLoaded"],[22,23,3,21,"map"],[22,26,3,24],[22,28,3,26],[23,4,4,4],[23,8,4,8],[23,15,4,15,"map"],[23,18,4,18],[23,23,4,23],[23,31,4,31],[23,33,4,33],[24,6,5,8],[24,13,5,15],[24,17,5,15,"isLoaded"],[24,22,5,23],[24,23,5,23,"isLoaded"],[24,31,5,23],[24,33,5,24,"map"],[24,36,5,27],[24,37,5,28],[25,4,6,4],[25,5,6,5],[25,11,7,9],[26,6,8,8],[26,13,8,15,"Object"],[26,19,8,21],[26,20,8,22,"keys"],[26,24,8,26],[26,25,8,27,"map"],[26,28,8,30],[26,29,8,31],[26,30,8,32,"every"],[26,35,8,37],[26,36,8,39,"fontFamily"],[26,46,8,49],[26,50,8,54],[26,54,8,54,"isLoaded"],[26,59,8,62],[26,60,8,62,"isLoaded"],[26,68,8,62],[26,70,8,63,"fontFamily"],[26,80,8,73],[26,81,8,74],[26,82,8,75],[27,4,9,4],[28,2,10,0],[29,2,11,0],[29,11,11,9,"useRuntimeFonts"],[29,26,11,24,"useRuntimeFonts"],[29,27,11,25,"map"],[29,30,11,28],[29,32,11,30],[30,4,12,4],[30,8,12,4,"_useState"],[30,17,12,4],[30,20,12,32],[30,24,12,32,"useState"],[30,30,12,40],[30,31,12,40,"useState"],[30,39,12,40],[31,6,13,4],[32,6,14,4],[33,6,15,4,"isMapLoaded"],[33,17,15,15],[33,18,15,16,"map"],[33,21,15,19],[33,22,15,20],[33,23,15,21],[34,6,15,21,"_useState2"],[34,16,15,21],[34,23,15,21,"_slicedToArray"],[34,37,15,21],[34,38,15,21,"default"],[34,45,15,21],[34,47,15,21,"_useState"],[34,56,15,21],[35,6,12,11,"loaded"],[35,12,12,17],[35,15,12,17,"_useState2"],[35,25,12,17],[36,6,12,19,"setLoaded"],[36,15,12,28],[36,18,12,28,"_useState2"],[36,28,12,28],[37,4,16,4],[37,8,16,4,"_useState3"],[37,18,16,4],[37,21,16,30],[37,25,16,30,"useState"],[37,31,16,38],[37,32,16,38,"useState"],[37,40,16,38],[37,42,16,39],[37,46,16,43],[37,47,16,44],[38,6,16,44,"_useState4"],[38,16,16,44],[38,23,16,44,"_slicedToArray"],[38,37,16,44],[38,38,16,44,"default"],[38,45,16,44],[38,47,16,44,"_useState3"],[38,57,16,44],[39,6,16,11,"error"],[39,11,16,16],[39,14,16,16,"_useState4"],[39,24,16,16],[40,6,16,18,"setError"],[40,14,16,26],[40,17,16,26,"_useState4"],[40,27,16,26],[41,4,17,4],[41,8,17,4,"useEffect"],[41,14,17,13],[41,15,17,13,"useEffect"],[41,24,17,13],[41,26,17,14],[41,32,17,20],[42,6,18,8],[42,10,18,12,"isMounted"],[42,19,18,21],[42,22,18,24],[42,26,18,28],[43,6,19,8],[43,10,19,8,"loadAsync"],[43,15,19,17],[43,16,19,17,"loadAsync"],[43,25,19,17],[43,27,19,18,"map"],[43,30,19,21],[43,31,19,22],[43,32,20,13,"then"],[43,36,20,17],[43,37,20,18],[43,43,20,24],[44,8,21,12],[44,12,21,16,"isMounted"],[44,21,21,25],[44,23,21,27],[45,10,22,16,"setLoaded"],[45,19,22,25],[45,20,22,26],[45,24,22,30],[45,25,22,31],[46,8,23,12],[47,6,24,8],[47,7,24,9],[47,8,24,10],[47,9,25,13,"catch"],[47,14,25,18],[47,15,25,20,"error"],[47,20,25,25],[47,24,25,30],[48,8,26,12],[48,12,26,16,"isMounted"],[48,21,26,25],[48,23,26,27],[49,10,27,16,"setError"],[49,18,27,24],[49,19,27,25,"error"],[49,24,27,30],[49,25,27,31],[50,8,28,12],[51,6,29,8],[51,7,29,9],[51,8,29,10],[52,6,30,8],[52,13,30,15],[52,19,30,21],[53,8,31,12,"isMounted"],[53,17,31,21],[53,20,31,24],[53,25,31,29],[54,6,32,8],[54,7,32,9],[55,4,33,4],[55,5,33,5],[55,7,33,7],[55,9,33,9],[55,10,33,10],[56,4,34,4],[56,11,34,11],[56,12,34,12,"loaded"],[56,18,34,18],[56,20,34,20,"error"],[56,25,34,25],[56,26,34,26],[57,2,35,0],[58,2,36,0],[58,11,36,9,"useStaticFonts"],[58,25,36,23,"useStaticFonts"],[58,26,36,24,"map"],[58,29,36,27],[58,31,36,29],[59,4,37,4],[59,8,37,4,"loadAsync"],[59,13,37,13],[59,14,37,13,"loadAsync"],[59,23,37,13],[59,25,37,14,"map"],[59,28,37,17],[59,29,37,18],[60,4,38,4],[60,11,38,11],[60,12,38,12],[60,16,38,16],[60,18,38,18],[60,22,38,22],[60,23,38,23],[61,2,39,0],[62,2,40,0],[63,2,41,0],[64,0,42,0],[65,0,43,0],[66,0,44,0],[67,0,45,0],[68,0,46,0],[69,0,47,0],[70,0,48,0],[71,0,49,0],[72,0,50,0],[73,0,51,0],[74,0,52,0],[75,0,53,0],[76,0,54,0],[77,0,55,0],[78,0,56,0],[79,0,57,0],[80,0,58,0],[81,0,59,0],[82,0,60,0],[83,0,61,0],[84,2,62,7],[84,6,62,13,"useFonts"],[84,14,62,21],[84,17,62,24],[84,24,62,31,"window"],[84,30,62,37],[84,35,62,42],[84,46,62,53],[84,49,62,56,"useStaticFonts"],[84,63,62,70],[84,66,62,73,"useRuntimeFonts"],[84,81,62,88],[85,0,62,89],[85,3]],"functionMap":{"names":["<global>","isMapLoaded","Object.keys.every$argument_0","useRuntimeFonts","useEffect$argument_0","loadAsync.then$argument_0","loadAsync.then._catch$argument_0","<anonymous>","useStaticFonts"],"mappings":"AAA;ACE;sCCK,oCD;CDE;AGC;cCM;kBCG;SDI;mBEC;SFI;eGC;SHE;KDC;CHE;AQC;CRG"},"hasCjsExports":false},"type":"js/module"}]}