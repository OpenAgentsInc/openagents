{"dependencies":[{"name":"../common/utils","data":{"asyncType":null,"isESMImport":false,"locs":[{"start":{"line":4,"column":27,"index":43},"end":{"line":4,"column":53,"index":69}},{"start":{"line":5,"column":27,"index":117},"end":{"line":5,"column":53,"index":143}}],"key":"s68H+Qrc8so5XeN472FI/1YNbEY=","exportNames":["*"],"imports":2}}],"output":[{"data":{"code":"__d(function (global, require, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {\n  'use strict';\n\n  var normalizeReference = require(_dependencyMap[0]).normalizeReference;\n  var isSpace = require(_dependencyMap[0]).isSpace;\n  module.exports = function reference(state, startLine, _endLine, silent) {\n    var ch,\n      destEndPos,\n      destEndLineNo,\n      endLine,\n      href,\n      i,\n      l,\n      label,\n      labelEnd,\n      oldParentType,\n      res,\n      start,\n      str,\n      terminate,\n      terminatorRules,\n      title,\n      lines = 0,\n      pos = state.bMarks[startLine] + state.tShift[startLine],\n      max = state.eMarks[startLine],\n      nextLine = startLine + 1;\n\n    // if it's indented more than 3 spaces, it should be a code block\n    if (state.sCount[startLine] - state.blkIndent >= 4) {\n      return false;\n    }\n    if (state.src.charCodeAt(pos) !== 0x5B /* [ */) {\n      return false;\n    }\n\n    // Simple check to quickly interrupt scan on [link](url) at the start of line.\n    // Can be useful on practice: https://github.com/markdown-it/markdown-it/issues/54\n    while (++pos < max) {\n      if (state.src.charCodeAt(pos) === 0x5D /* ] */ && state.src.charCodeAt(pos - 1) !== 0x5C /* \\ */) {\n        if (pos + 1 === max) {\n          return false;\n        }\n        if (state.src.charCodeAt(pos + 1) !== 0x3A /* : */) {\n          return false;\n        }\n        break;\n      }\n    }\n    endLine = state.lineMax;\n\n    // jump line-by-line until empty one or EOF\n    terminatorRules = state.md.block.ruler.getRules('reference');\n    oldParentType = state.parentType;\n    state.parentType = 'reference';\n    for (; nextLine < endLine && !state.isEmpty(nextLine); nextLine++) {\n      // this would be a code block normally, but after paragraph\n      // it's considered a lazy continuation regardless of what's there\n      if (state.sCount[nextLine] - state.blkIndent > 3) {\n        continue;\n      }\n\n      // quirk for blockquotes, this line should already be checked by that rule\n      if (state.sCount[nextLine] < 0) {\n        continue;\n      }\n\n      // Some tags can terminate paragraph without empty line.\n      terminate = false;\n      for (i = 0, l = terminatorRules.length; i < l; i++) {\n        if (terminatorRules[i](state, nextLine, endLine, true)) {\n          terminate = true;\n          break;\n        }\n      }\n      if (terminate) {\n        break;\n      }\n    }\n    str = state.getLines(startLine, nextLine, state.blkIndent, false).trim();\n    max = str.length;\n    for (pos = 1; pos < max; pos++) {\n      ch = str.charCodeAt(pos);\n      if (ch === 0x5B /* [ */) {\n        return false;\n      } else if (ch === 0x5D /* ] */) {\n        labelEnd = pos;\n        break;\n      } else if (ch === 0x0A /* \\n */) {\n        lines++;\n      } else if (ch === 0x5C /* \\ */) {\n        pos++;\n        if (pos < max && str.charCodeAt(pos) === 0x0A) {\n          lines++;\n        }\n      }\n    }\n    if (labelEnd < 0 || str.charCodeAt(labelEnd + 1) !== 0x3A /* : */) {\n      return false;\n    }\n\n    // [label]:   destination   'title'\n    //         ^^^ skip optional whitespace here\n    for (pos = labelEnd + 2; pos < max; pos++) {\n      ch = str.charCodeAt(pos);\n      if (ch === 0x0A) {\n        lines++;\n      } else if (isSpace(ch)) {\n        /*eslint no-empty:0*/\n      } else {\n        break;\n      }\n    }\n\n    // [label]:   destination   'title'\n    //            ^^^^^^^^^^^ parse this\n    res = state.md.helpers.parseLinkDestination(str, pos, max);\n    if (!res.ok) {\n      return false;\n    }\n    href = state.md.normalizeLink(res.str);\n    if (!state.md.validateLink(href)) {\n      return false;\n    }\n    pos = res.pos;\n    lines += res.lines;\n\n    // save cursor state, we could require to rollback later\n    destEndPos = pos;\n    destEndLineNo = lines;\n\n    // [label]:   destination   'title'\n    //                       ^^^ skipping those spaces\n    start = pos;\n    for (; pos < max; pos++) {\n      ch = str.charCodeAt(pos);\n      if (ch === 0x0A) {\n        lines++;\n      } else if (isSpace(ch)) {\n        /*eslint no-empty:0*/\n      } else {\n        break;\n      }\n    }\n\n    // [label]:   destination   'title'\n    //                          ^^^^^^^ parse this\n    res = state.md.helpers.parseLinkTitle(str, pos, max);\n    if (pos < max && start !== pos && res.ok) {\n      title = res.str;\n      pos = res.pos;\n      lines += res.lines;\n    } else {\n      title = '';\n      pos = destEndPos;\n      lines = destEndLineNo;\n    }\n\n    // skip trailing spaces until the rest of the line\n    while (pos < max) {\n      ch = str.charCodeAt(pos);\n      if (!isSpace(ch)) {\n        break;\n      }\n      pos++;\n    }\n    if (pos < max && str.charCodeAt(pos) !== 0x0A) {\n      if (title) {\n        // garbage at the end of the line after title,\n        // but it could still be a valid reference if we roll back\n        title = '';\n        pos = destEndPos;\n        lines = destEndLineNo;\n        while (pos < max) {\n          ch = str.charCodeAt(pos);\n          if (!isSpace(ch)) {\n            break;\n          }\n          pos++;\n        }\n      }\n    }\n    if (pos < max && str.charCodeAt(pos) !== 0x0A) {\n      // garbage at the end of the line\n      return false;\n    }\n    label = normalizeReference(str.slice(1, labelEnd));\n    if (!label) {\n      // CommonMark 0.20 disallows empty labels\n      return false;\n    }\n\n    // Reference can not terminate anything. This check is for safety only.\n    /*istanbul ignore if*/\n    if (silent) {\n      return true;\n    }\n    if (typeof state.env.references === 'undefined') {\n      state.env.references = {};\n    }\n    if (typeof state.env.references[label] === 'undefined') {\n      state.env.references[label] = {\n        title: title,\n        href: href\n      };\n    }\n    state.parentType = oldParentType;\n    state.line = startLine + lines + 1;\n    return true;\n  };\n});","lineCount":210,"map":[[2,2,1,0],[2,14,1,12],[4,2,4,0],[4,6,4,4,"normalizeReference"],[4,24,4,22],[4,27,4,27,"require"],[4,34,4,34],[4,35,4,34,"_dependencyMap"],[4,49,4,34],[4,52,4,52],[4,53,4,53],[4,54,4,54,"normalizeReference"],[4,72,4,72],[5,2,5,0],[5,6,5,4,"isSpace"],[5,13,5,11],[5,16,5,27,"require"],[5,23,5,34],[5,24,5,34,"_dependencyMap"],[5,38,5,34],[5,41,5,52],[5,42,5,53],[5,43,5,54,"isSpace"],[5,50,5,61],[6,2,8,0,"module"],[6,8,8,6],[6,9,8,7,"exports"],[6,16,8,14],[6,19,8,17],[6,28,8,26,"reference"],[6,37,8,35,"reference"],[6,38,8,36,"state"],[6,43,8,41],[6,45,8,43,"startLine"],[6,54,8,52],[6,56,8,54,"_endLine"],[6,64,8,62],[6,66,8,64,"silent"],[6,72,8,70],[6,74,8,72],[7,4,9,2],[7,8,9,6,"ch"],[7,10,9,8],[8,6,10,6,"destEndPos"],[8,16,10,16],[9,6,11,6,"destEndLineNo"],[9,19,11,19],[10,6,12,6,"endLine"],[10,13,12,13],[11,6,13,6,"href"],[11,10,13,10],[12,6,14,6,"i"],[12,7,14,7],[13,6,15,6,"l"],[13,7,15,7],[14,6,16,6,"label"],[14,11,16,11],[15,6,17,6,"labelEnd"],[15,14,17,14],[16,6,18,6,"oldParentType"],[16,19,18,19],[17,6,19,6,"res"],[17,9,19,9],[18,6,20,6,"start"],[18,11,20,11],[19,6,21,6,"str"],[19,9,21,9],[20,6,22,6,"terminate"],[20,15,22,15],[21,6,23,6,"terminatorRules"],[21,21,23,21],[22,6,24,6,"title"],[22,11,24,11],[23,6,25,6,"lines"],[23,11,25,11],[23,14,25,14],[23,15,25,15],[24,6,26,6,"pos"],[24,9,26,9],[24,12,26,12,"state"],[24,17,26,17],[24,18,26,18,"bMarks"],[24,24,26,24],[24,25,26,25,"startLine"],[24,34,26,34],[24,35,26,35],[24,38,26,38,"state"],[24,43,26,43],[24,44,26,44,"tShift"],[24,50,26,50],[24,51,26,51,"startLine"],[24,60,26,60],[24,61,26,61],[25,6,27,6,"max"],[25,9,27,9],[25,12,27,12,"state"],[25,17,27,17],[25,18,27,18,"eMarks"],[25,24,27,24],[25,25,27,25,"startLine"],[25,34,27,34],[25,35,27,35],[26,6,28,6,"nextLine"],[26,14,28,14],[26,17,28,17,"startLine"],[26,26,28,26],[26,29,28,29],[26,30,28,30],[28,4,30,2],[29,4,31,2],[29,8,31,6,"state"],[29,13,31,11],[29,14,31,12,"sCount"],[29,20,31,18],[29,21,31,19,"startLine"],[29,30,31,28],[29,31,31,29],[29,34,31,32,"state"],[29,39,31,37],[29,40,31,38,"blkIndent"],[29,49,31,47],[29,53,31,51],[29,54,31,52],[29,56,31,54],[30,6,31,56],[30,13,31,63],[30,18,31,68],[31,4,31,70],[32,4,33,2],[32,8,33,6,"state"],[32,13,33,11],[32,14,33,12,"src"],[32,17,33,15],[32,18,33,16,"charCodeAt"],[32,28,33,26],[32,29,33,27,"pos"],[32,32,33,30],[32,33,33,31],[32,38,33,36],[32,42,33,40],[32,52,33,49],[33,6,33,51],[33,13,33,58],[33,18,33,63],[34,4,33,65],[36,4,35,2],[37,4,36,2],[38,4,37,2],[38,11,37,9],[38,13,37,11,"pos"],[38,16,37,14],[38,19,37,17,"max"],[38,22,37,20],[38,24,37,22],[39,6,38,4],[39,10,38,8,"state"],[39,15,38,13],[39,16,38,14,"src"],[39,19,38,17],[39,20,38,18,"charCodeAt"],[39,30,38,28],[39,31,38,29,"pos"],[39,34,38,32],[39,35,38,33],[39,40,38,38],[39,44,38,42],[39,45,38,43],[39,56,39,8,"state"],[39,61,39,13],[39,62,39,14,"src"],[39,65,39,17],[39,66,39,18,"charCodeAt"],[39,76,39,28],[39,77,39,29,"pos"],[39,80,39,32],[39,83,39,35],[39,84,39,36],[39,85,39,37],[39,90,39,42],[39,94,39,46],[39,104,39,55],[40,8,40,6],[40,12,40,10,"pos"],[40,15,40,13],[40,18,40,16],[40,19,40,17],[40,24,40,22,"max"],[40,27,40,25],[40,29,40,27],[41,10,40,29],[41,17,40,36],[41,22,40,41],[42,8,40,43],[43,8,41,6],[43,12,41,10,"state"],[43,17,41,15],[43,18,41,16,"src"],[43,21,41,19],[43,22,41,20,"charCodeAt"],[43,32,41,30],[43,33,41,31,"pos"],[43,36,41,34],[43,39,41,37],[43,40,41,38],[43,41,41,39],[43,46,41,44],[43,50,41,48],[43,60,41,57],[44,10,41,59],[44,17,41,66],[44,22,41,71],[45,8,41,73],[46,8,42,6],[47,6,43,4],[48,4,44,2],[49,4,46,2,"endLine"],[49,11,46,9],[49,14,46,12,"state"],[49,19,46,17],[49,20,46,18,"lineMax"],[49,27,46,25],[51,4,48,2],[52,4,49,2,"terminatorRules"],[52,19,49,17],[52,22,49,20,"state"],[52,27,49,25],[52,28,49,26,"md"],[52,30,49,28],[52,31,49,29,"block"],[52,36,49,34],[52,37,49,35,"ruler"],[52,42,49,40],[52,43,49,41,"getRules"],[52,51,49,49],[52,52,49,50],[52,63,49,61],[52,64,49,62],[53,4,51,2,"oldParentType"],[53,17,51,15],[53,20,51,18,"state"],[53,25,51,23],[53,26,51,24,"parentType"],[53,36,51,34],[54,4,52,2,"state"],[54,9,52,7],[54,10,52,8,"parentType"],[54,20,52,18],[54,23,52,21],[54,34,52,32],[55,4,54,2],[55,11,54,9,"nextLine"],[55,19,54,17],[55,22,54,20,"endLine"],[55,29,54,27],[55,33,54,31],[55,34,54,32,"state"],[55,39,54,37],[55,40,54,38,"isEmpty"],[55,47,54,45],[55,48,54,46,"nextLine"],[55,56,54,54],[55,57,54,55],[55,59,54,57,"nextLine"],[55,67,54,65],[55,69,54,67],[55,71,54,69],[56,6,55,4],[57,6,56,4],[58,6,57,4],[58,10,57,8,"state"],[58,15,57,13],[58,16,57,14,"sCount"],[58,22,57,20],[58,23,57,21,"nextLine"],[58,31,57,29],[58,32,57,30],[58,35,57,33,"state"],[58,40,57,38],[58,41,57,39,"blkIndent"],[58,50,57,48],[58,53,57,51],[58,54,57,52],[58,56,57,54],[59,8,57,56],[60,6,57,66],[62,6,59,4],[63,6,60,4],[63,10,60,8,"state"],[63,15,60,13],[63,16,60,14,"sCount"],[63,22,60,20],[63,23,60,21,"nextLine"],[63,31,60,29],[63,32,60,30],[63,35,60,33],[63,36,60,34],[63,38,60,36],[64,8,60,38],[65,6,60,48],[67,6,62,4],[68,6,63,4,"terminate"],[68,15,63,13],[68,18,63,16],[68,23,63,21],[69,6,64,4],[69,11,64,9,"i"],[69,12,64,10],[69,15,64,13],[69,16,64,14],[69,18,64,16,"l"],[69,19,64,17],[69,22,64,20,"terminatorRules"],[69,37,64,35],[69,38,64,36,"length"],[69,44,64,42],[69,46,64,44,"i"],[69,47,64,45],[69,50,64,48,"l"],[69,51,64,49],[69,53,64,51,"i"],[69,54,64,52],[69,56,64,54],[69,58,64,56],[70,8,65,6],[70,12,65,10,"terminatorRules"],[70,27,65,25],[70,28,65,26,"i"],[70,29,65,27],[70,30,65,28],[70,31,65,29,"state"],[70,36,65,34],[70,38,65,36,"nextLine"],[70,46,65,44],[70,48,65,46,"endLine"],[70,55,65,53],[70,57,65,55],[70,61,65,59],[70,62,65,60],[70,64,65,62],[71,10,66,8,"terminate"],[71,19,66,17],[71,22,66,20],[71,26,66,24],[72,10,67,8],[73,8,68,6],[74,6,69,4],[75,6,70,4],[75,10,70,8,"terminate"],[75,19,70,17],[75,21,70,19],[76,8,70,21],[77,6,70,28],[78,4,71,2],[79,4,73,2,"str"],[79,7,73,5],[79,10,73,8,"state"],[79,15,73,13],[79,16,73,14,"getLines"],[79,24,73,22],[79,25,73,23,"startLine"],[79,34,73,32],[79,36,73,34,"nextLine"],[79,44,73,42],[79,46,73,44,"state"],[79,51,73,49],[79,52,73,50,"blkIndent"],[79,61,73,59],[79,63,73,61],[79,68,73,66],[79,69,73,67],[79,70,73,68,"trim"],[79,74,73,72],[79,75,73,73],[79,76,73,74],[80,4,74,2,"max"],[80,7,74,5],[80,10,74,8,"str"],[80,13,74,11],[80,14,74,12,"length"],[80,20,74,18],[81,4,76,2],[81,9,76,7,"pos"],[81,12,76,10],[81,15,76,13],[81,16,76,14],[81,18,76,16,"pos"],[81,21,76,19],[81,24,76,22,"max"],[81,27,76,25],[81,29,76,27,"pos"],[81,32,76,30],[81,34,76,32],[81,36,76,34],[82,6,77,4,"ch"],[82,8,77,6],[82,11,77,9,"str"],[82,14,77,12],[82,15,77,13,"charCodeAt"],[82,25,77,23],[82,26,77,24,"pos"],[82,29,77,27],[82,30,77,28],[83,6,78,4],[83,10,78,8,"ch"],[83,12,78,10],[83,17,78,15],[83,21,78,19],[83,22,78,20],[83,31,78,29],[84,8,79,6],[84,15,79,13],[84,20,79,18],[85,6,80,4],[85,7,80,5],[85,13,80,11],[85,17,80,15,"ch"],[85,19,80,17],[85,24,80,22],[85,28,80,26],[85,29,80,27],[85,38,80,36],[86,8,81,6,"labelEnd"],[86,16,81,14],[86,19,81,17,"pos"],[86,22,81,20],[87,8,82,6],[88,6,83,4],[88,7,83,5],[88,13,83,11],[88,17,83,15,"ch"],[88,19,83,17],[88,24,83,22],[88,28,83,26],[88,29,83,27],[88,39,83,37],[89,8,84,6,"lines"],[89,13,84,11],[89,15,84,13],[90,6,85,4],[90,7,85,5],[90,13,85,11],[90,17,85,15,"ch"],[90,19,85,17],[90,24,85,22],[90,28,85,26],[90,29,85,27],[90,38,85,36],[91,8,86,6,"pos"],[91,11,86,9],[91,13,86,11],[92,8,87,6],[92,12,87,10,"pos"],[92,15,87,13],[92,18,87,16,"max"],[92,21,87,19],[92,25,87,23,"str"],[92,28,87,26],[92,29,87,27,"charCodeAt"],[92,39,87,37],[92,40,87,38,"pos"],[92,43,87,41],[92,44,87,42],[92,49,87,47],[92,53,87,51],[92,55,87,53],[93,10,88,8,"lines"],[93,15,88,13],[93,17,88,15],[94,8,89,6],[95,6,90,4],[96,4,91,2],[97,4,93,2],[97,8,93,6,"labelEnd"],[97,16,93,14],[97,19,93,17],[97,20,93,18],[97,24,93,22,"str"],[97,27,93,25],[97,28,93,26,"charCodeAt"],[97,38,93,36],[97,39,93,37,"labelEnd"],[97,47,93,45],[97,50,93,48],[97,51,93,49],[97,52,93,50],[97,57,93,55],[97,61,93,59],[97,71,93,68],[98,6,93,70],[98,13,93,77],[98,18,93,82],[99,4,93,84],[101,4,95,2],[102,4,96,2],[103,4,97,2],[103,9,97,7,"pos"],[103,12,97,10],[103,15,97,13,"labelEnd"],[103,23,97,21],[103,26,97,24],[103,27,97,25],[103,29,97,27,"pos"],[103,32,97,30],[103,35,97,33,"max"],[103,38,97,36],[103,40,97,38,"pos"],[103,43,97,41],[103,45,97,43],[103,47,97,45],[104,6,98,4,"ch"],[104,8,98,6],[104,11,98,9,"str"],[104,14,98,12],[104,15,98,13,"charCodeAt"],[104,25,98,23],[104,26,98,24,"pos"],[104,29,98,27],[104,30,98,28],[105,6,99,4],[105,10,99,8,"ch"],[105,12,99,10],[105,17,99,15],[105,21,99,19],[105,23,99,21],[106,8,100,6,"lines"],[106,13,100,11],[106,15,100,13],[107,6,101,4],[107,7,101,5],[107,13,101,11],[107,17,101,15,"isSpace"],[107,24,101,22],[107,25,101,23,"ch"],[107,27,101,25],[107,28,101,26],[107,30,101,28],[108,8,102,6],[109,6,102,6],[109,7,103,5],[109,13,103,11],[110,8,104,6],[111,6,105,4],[112,4,106,2],[114,4,108,2],[115,4,109,2],[116,4,110,2,"res"],[116,7,110,5],[116,10,110,8,"state"],[116,15,110,13],[116,16,110,14,"md"],[116,18,110,16],[116,19,110,17,"helpers"],[116,26,110,24],[116,27,110,25,"parseLinkDestination"],[116,47,110,45],[116,48,110,46,"str"],[116,51,110,49],[116,53,110,51,"pos"],[116,56,110,54],[116,58,110,56,"max"],[116,61,110,59],[116,62,110,60],[117,4,111,2],[117,8,111,6],[117,9,111,7,"res"],[117,12,111,10],[117,13,111,11,"ok"],[117,15,111,13],[117,17,111,15],[118,6,111,17],[118,13,111,24],[118,18,111,29],[119,4,111,31],[120,4,113,2,"href"],[120,8,113,6],[120,11,113,9,"state"],[120,16,113,14],[120,17,113,15,"md"],[120,19,113,17],[120,20,113,18,"normalizeLink"],[120,33,113,31],[120,34,113,32,"res"],[120,37,113,35],[120,38,113,36,"str"],[120,41,113,39],[120,42,113,40],[121,4,114,2],[121,8,114,6],[121,9,114,7,"state"],[121,14,114,12],[121,15,114,13,"md"],[121,17,114,15],[121,18,114,16,"validateLink"],[121,30,114,28],[121,31,114,29,"href"],[121,35,114,33],[121,36,114,34],[121,38,114,36],[122,6,114,38],[122,13,114,45],[122,18,114,50],[123,4,114,52],[124,4,116,2,"pos"],[124,7,116,5],[124,10,116,8,"res"],[124,13,116,11],[124,14,116,12,"pos"],[124,17,116,15],[125,4,117,2,"lines"],[125,9,117,7],[125,13,117,11,"res"],[125,16,117,14],[125,17,117,15,"lines"],[125,22,117,20],[127,4,119,2],[128,4,120,2,"destEndPos"],[128,14,120,12],[128,17,120,15,"pos"],[128,20,120,18],[129,4,121,2,"destEndLineNo"],[129,17,121,15],[129,20,121,18,"lines"],[129,25,121,23],[131,4,123,2],[132,4,124,2],[133,4,125,2,"start"],[133,9,125,7],[133,12,125,10,"pos"],[133,15,125,13],[134,4,126,2],[134,11,126,9,"pos"],[134,14,126,12],[134,17,126,15,"max"],[134,20,126,18],[134,22,126,20,"pos"],[134,25,126,23],[134,27,126,25],[134,29,126,27],[135,6,127,4,"ch"],[135,8,127,6],[135,11,127,9,"str"],[135,14,127,12],[135,15,127,13,"charCodeAt"],[135,25,127,23],[135,26,127,24,"pos"],[135,29,127,27],[135,30,127,28],[136,6,128,4],[136,10,128,8,"ch"],[136,12,128,10],[136,17,128,15],[136,21,128,19],[136,23,128,21],[137,8,129,6,"lines"],[137,13,129,11],[137,15,129,13],[138,6,130,4],[138,7,130,5],[138,13,130,11],[138,17,130,15,"isSpace"],[138,24,130,22],[138,25,130,23,"ch"],[138,27,130,25],[138,28,130,26],[138,30,130,28],[139,8,131,6],[140,6,131,6],[140,7,132,5],[140,13,132,11],[141,8,133,6],[142,6,134,4],[143,4,135,2],[145,4,137,2],[146,4,138,2],[147,4,139,2,"res"],[147,7,139,5],[147,10,139,8,"state"],[147,15,139,13],[147,16,139,14,"md"],[147,18,139,16],[147,19,139,17,"helpers"],[147,26,139,24],[147,27,139,25,"parseLinkTitle"],[147,41,139,39],[147,42,139,40,"str"],[147,45,139,43],[147,47,139,45,"pos"],[147,50,139,48],[147,52,139,50,"max"],[147,55,139,53],[147,56,139,54],[148,4,140,2],[148,8,140,6,"pos"],[148,11,140,9],[148,14,140,12,"max"],[148,17,140,15],[148,21,140,19,"start"],[148,26,140,24],[148,31,140,29,"pos"],[148,34,140,32],[148,38,140,36,"res"],[148,41,140,39],[148,42,140,40,"ok"],[148,44,140,42],[148,46,140,44],[149,6,141,4,"title"],[149,11,141,9],[149,14,141,12,"res"],[149,17,141,15],[149,18,141,16,"str"],[149,21,141,19],[150,6,142,4,"pos"],[150,9,142,7],[150,12,142,10,"res"],[150,15,142,13],[150,16,142,14,"pos"],[150,19,142,17],[151,6,143,4,"lines"],[151,11,143,9],[151,15,143,13,"res"],[151,18,143,16],[151,19,143,17,"lines"],[151,24,143,22],[152,4,144,2],[152,5,144,3],[152,11,144,9],[153,6,145,4,"title"],[153,11,145,9],[153,14,145,12],[153,16,145,14],[154,6,146,4,"pos"],[154,9,146,7],[154,12,146,10,"destEndPos"],[154,22,146,20],[155,6,147,4,"lines"],[155,11,147,9],[155,14,147,12,"destEndLineNo"],[155,27,147,25],[156,4,148,2],[158,4,150,2],[159,4,151,2],[159,11,151,9,"pos"],[159,14,151,12],[159,17,151,15,"max"],[159,20,151,18],[159,22,151,20],[160,6,152,4,"ch"],[160,8,152,6],[160,11,152,9,"str"],[160,14,152,12],[160,15,152,13,"charCodeAt"],[160,25,152,23],[160,26,152,24,"pos"],[160,29,152,27],[160,30,152,28],[161,6,153,4],[161,10,153,8],[161,11,153,9,"isSpace"],[161,18,153,16],[161,19,153,17,"ch"],[161,21,153,19],[161,22,153,20],[161,24,153,22],[162,8,153,24],[163,6,153,31],[164,6,154,4,"pos"],[164,9,154,7],[164,11,154,9],[165,4,155,2],[166,4,157,2],[166,8,157,6,"pos"],[166,11,157,9],[166,14,157,12,"max"],[166,17,157,15],[166,21,157,19,"str"],[166,24,157,22],[166,25,157,23,"charCodeAt"],[166,35,157,33],[166,36,157,34,"pos"],[166,39,157,37],[166,40,157,38],[166,45,157,43],[166,49,157,47],[166,51,157,49],[167,6,158,4],[167,10,158,8,"title"],[167,15,158,13],[167,17,158,15],[168,8,159,6],[169,8,160,6],[170,8,161,6,"title"],[170,13,161,11],[170,16,161,14],[170,18,161,16],[171,8,162,6,"pos"],[171,11,162,9],[171,14,162,12,"destEndPos"],[171,24,162,22],[172,8,163,6,"lines"],[172,13,163,11],[172,16,163,14,"destEndLineNo"],[172,29,163,27],[173,8,164,6],[173,15,164,13,"pos"],[173,18,164,16],[173,21,164,19,"max"],[173,24,164,22],[173,26,164,24],[174,10,165,8,"ch"],[174,12,165,10],[174,15,165,13,"str"],[174,18,165,16],[174,19,165,17,"charCodeAt"],[174,29,165,27],[174,30,165,28,"pos"],[174,33,165,31],[174,34,165,32],[175,10,166,8],[175,14,166,12],[175,15,166,13,"isSpace"],[175,22,166,20],[175,23,166,21,"ch"],[175,25,166,23],[175,26,166,24],[175,28,166,26],[176,12,166,28],[177,10,166,35],[178,10,167,8,"pos"],[178,13,167,11],[178,15,167,13],[179,8,168,6],[180,6,169,4],[181,4,170,2],[182,4,172,2],[182,8,172,6,"pos"],[182,11,172,9],[182,14,172,12,"max"],[182,17,172,15],[182,21,172,19,"str"],[182,24,172,22],[182,25,172,23,"charCodeAt"],[182,35,172,33],[182,36,172,34,"pos"],[182,39,172,37],[182,40,172,38],[182,45,172,43],[182,49,172,47],[182,51,172,49],[183,6,173,4],[184,6,174,4],[184,13,174,11],[184,18,174,16],[185,4,175,2],[186,4,177,2,"label"],[186,9,177,7],[186,12,177,10,"normalizeReference"],[186,30,177,28],[186,31,177,29,"str"],[186,34,177,32],[186,35,177,33,"slice"],[186,40,177,38],[186,41,177,39],[186,42,177,40],[186,44,177,42,"labelEnd"],[186,52,177,50],[186,53,177,51],[186,54,177,52],[187,4,178,2],[187,8,178,6],[187,9,178,7,"label"],[187,14,178,12],[187,16,178,14],[188,6,179,4],[189,6,180,4],[189,13,180,11],[189,18,180,16],[190,4,181,2],[192,4,183,2],[193,4,184,2],[194,4,185,2],[194,8,185,6,"silent"],[194,14,185,12],[194,16,185,14],[195,6,185,16],[195,13,185,23],[195,17,185,27],[196,4,185,29],[197,4,187,2],[197,8,187,6],[197,15,187,13,"state"],[197,20,187,18],[197,21,187,19,"env"],[197,24,187,22],[197,25,187,23,"references"],[197,35,187,33],[197,40,187,38],[197,51,187,49],[197,53,187,51],[198,6,188,4,"state"],[198,11,188,9],[198,12,188,10,"env"],[198,15,188,13],[198,16,188,14,"references"],[198,26,188,24],[198,29,188,27],[198,30,188,28],[198,31,188,29],[199,4,189,2],[200,4,190,2],[200,8,190,6],[200,15,190,13,"state"],[200,20,190,18],[200,21,190,19,"env"],[200,24,190,22],[200,25,190,23,"references"],[200,35,190,33],[200,36,190,34,"label"],[200,41,190,39],[200,42,190,40],[200,47,190,45],[200,58,190,56],[200,60,190,58],[201,6,191,4,"state"],[201,11,191,9],[201,12,191,10,"env"],[201,15,191,13],[201,16,191,14,"references"],[201,26,191,24],[201,27,191,25,"label"],[201,32,191,30],[201,33,191,31],[201,36,191,34],[202,8,191,36,"title"],[202,13,191,41],[202,15,191,43,"title"],[202,20,191,48],[203,8,191,50,"href"],[203,12,191,54],[203,14,191,56,"href"],[204,6,191,61],[204,7,191,62],[205,4,192,2],[206,4,194,2,"state"],[206,9,194,7],[206,10,194,8,"parentType"],[206,20,194,18],[206,23,194,21,"oldParentType"],[206,36,194,34],[207,4,196,2,"state"],[207,9,196,7],[207,10,196,8,"line"],[207,14,196,12],[207,17,196,15,"startLine"],[207,26,196,24],[207,29,196,27,"lines"],[207,34,196,32],[207,37,196,35],[207,38,196,36],[208,4,197,2],[208,11,197,9],[208,15,197,13],[209,2,198,0],[209,3,198,1],[210,0,198,2],[210,3]],"functionMap":{"names":["<global>","reference"],"mappings":"AAA;iBCO;CD8L"},"hasCjsExports":true},"type":"js/module"}]}