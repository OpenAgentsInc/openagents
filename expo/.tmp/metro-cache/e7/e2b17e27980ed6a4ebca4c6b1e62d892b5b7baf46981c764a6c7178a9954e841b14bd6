{"dependencies":[{"name":"nanoid/non-secure","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":3,"column":0,"index":15},"end":{"line":3,"column":43,"index":58}}],"key":"SN8WVal79eAEDQEpzmVqVAy5JJs=","exportNames":["*"],"imports":1}},{"name":"./BaseRouter.js","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":4,"column":0,"index":59},"end":{"line":4,"column":45,"index":104}}],"key":"dJts27xOtIr7LbP/D7m0z2vzxHI=","exportNames":["*"],"imports":1}}],"output":[{"data":{"code":"__d(function (global, require, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {\n  \"use strict\";\n\n  Object.defineProperty(exports, '__esModule', {\n    value: true\n  });\n  Object.defineProperty(exports, \"TabActions\", {\n    enumerable: true,\n    get: function () {\n      return TabActions;\n    }\n  });\n  exports.TabRouter = TabRouter;\n  var _nanoidNonSecure = require(_dependencyMap[0]);\n  var _BaseRouterJs = require(_dependencyMap[1]);\n  var TYPE_ROUTE = 'route';\n  var TabActions = {\n    jumpTo(name, params) {\n      return {\n        type: 'JUMP_TO',\n        payload: {\n          name,\n          params\n        }\n      };\n    }\n  };\n  var getRouteHistory = (routes, index, backBehavior, initialRouteName) => {\n    var history = [{\n      type: TYPE_ROUTE,\n      key: routes[index].key\n    }];\n    var initialRouteIndex;\n    switch (backBehavior) {\n      case 'order':\n        for (var i = index; i > 0; i--) {\n          history.unshift({\n            type: TYPE_ROUTE,\n            key: routes[i - 1].key\n          });\n        }\n        break;\n      case 'firstRoute':\n        if (index !== 0) {\n          history.unshift({\n            type: TYPE_ROUTE,\n            key: routes[0].key\n          });\n        }\n        break;\n      case 'initialRoute':\n        initialRouteIndex = routes.findIndex(route => route.name === initialRouteName);\n        initialRouteIndex = initialRouteIndex === -1 ? 0 : initialRouteIndex;\n        if (index !== initialRouteIndex) {\n          history.unshift({\n            type: TYPE_ROUTE,\n            key: routes[initialRouteIndex].key\n          });\n        }\n        break;\n      case 'history':\n      case 'fullHistory':\n        // The history will fill up on navigation\n        break;\n    }\n    return history;\n  };\n  var changeIndex = (state, index, backBehavior, initialRouteName) => {\n    var history = state.history;\n    if (backBehavior === 'history' || backBehavior === 'fullHistory') {\n      var currentRoute = state.routes[index];\n      if (backBehavior === 'history') {\n        // Remove the existing key from the history to de-duplicate it\n        history = history.filter(it => it.type === 'route' ? it.key !== currentRoute.key : false);\n      } else if (backBehavior === 'fullHistory') {\n        var lastHistoryRouteItemIndex = history.findLastIndex(item => item.type === 'route');\n        if (currentRoute.key === history[lastHistoryRouteItemIndex]?.key) {\n          // For full-history, only remove if it matches the last route\n          // Useful for drawer, if current route was in history, then drawer state changed\n          // Then we only need to move the route to the front\n          history = [...history.slice(0, lastHistoryRouteItemIndex), ...history.slice(lastHistoryRouteItemIndex + 1)];\n        }\n      }\n      history = history.concat({\n        type: TYPE_ROUTE,\n        key: currentRoute.key,\n        params: backBehavior === 'fullHistory' ? currentRoute.params : undefined\n      });\n    } else {\n      history = getRouteHistory(state.routes, index, backBehavior, initialRouteName);\n    }\n    return {\n      ...state,\n      index,\n      history\n    };\n  };\n  function TabRouter(_ref) {\n    var initialRouteName = _ref.initialRouteName,\n      _ref$backBehavior = _ref.backBehavior,\n      backBehavior = _ref$backBehavior === undefined ? 'firstRoute' : _ref$backBehavior;\n    var router = {\n      ..._BaseRouterJs.BaseRouter,\n      type: 'tab',\n      getInitialState(_ref2) {\n        var routeNames = _ref2.routeNames,\n          routeParamList = _ref2.routeParamList;\n        var index = initialRouteName !== undefined && routeNames.includes(initialRouteName) ? routeNames.indexOf(initialRouteName) : 0;\n        var routes = routeNames.map(name => ({\n          name,\n          key: `${name}-${(0, _nanoidNonSecure.nanoid)()}`,\n          params: routeParamList[name]\n        }));\n        var history = getRouteHistory(routes, index, backBehavior, initialRouteName);\n        return {\n          stale: false,\n          type: 'tab',\n          key: `tab-${(0, _nanoidNonSecure.nanoid)()}`,\n          index,\n          routeNames,\n          history,\n          routes,\n          preloadedRouteKeys: []\n        };\n      },\n      getRehydratedState(partialState, _ref3) {\n        var routeNames = _ref3.routeNames,\n          routeParamList = _ref3.routeParamList;\n        var state = partialState;\n        if (state.stale === false) {\n          return state;\n        }\n        var routes = routeNames.map(name => {\n          var route = state.routes.find(r => r.name === name);\n          return {\n            ...route,\n            name,\n            key: route && route.name === name && route.key ? route.key : `${name}-${(0, _nanoidNonSecure.nanoid)()}`,\n            params: routeParamList[name] !== undefined ? {\n              ...routeParamList[name],\n              ...(route ? route.params : undefined)\n            } : route ? route.params : undefined\n          };\n        });\n        var index = Math.min(Math.max(routeNames.indexOf(state.routes[state?.index ?? 0]?.name), 0), routes.length - 1);\n        var routeKeys = routes.map(route => route.key);\n        var history = state.history?.filter(it => routeKeys.includes(it.key)) ?? [];\n        return changeIndex({\n          stale: false,\n          type: 'tab',\n          key: `tab-${(0, _nanoidNonSecure.nanoid)()}`,\n          index,\n          routeNames,\n          history,\n          routes,\n          preloadedRouteKeys: state.preloadedRouteKeys?.filter(key => routeKeys.includes(key)) ?? []\n        }, index, backBehavior, initialRouteName);\n      },\n      getStateForRouteNamesChange(state, _ref4) {\n        var routeNames = _ref4.routeNames,\n          routeParamList = _ref4.routeParamList,\n          routeKeyChanges = _ref4.routeKeyChanges;\n        var routes = routeNames.map(name => state.routes.find(r => r.name === name && !routeKeyChanges.includes(r.name)) || {\n          name,\n          key: `${name}-${(0, _nanoidNonSecure.nanoid)()}`,\n          params: routeParamList[name]\n        });\n        var index = Math.max(0, routeNames.indexOf(state.routes[state.index].name));\n        var history = state.history.filter(\n        // Type will always be 'route' for tabs, but could be different in a router extending this (e.g. drawer)\n        it => it.type !== 'route' || routes.find(r => r.key === it.key));\n        if (!history.length) {\n          history = getRouteHistory(routes, index, backBehavior, initialRouteName);\n        }\n        return {\n          ...state,\n          history,\n          routeNames,\n          routes,\n          index\n        };\n      },\n      getStateForRouteFocus(state, key) {\n        var index = state.routes.findIndex(r => r.key === key);\n        if (index === -1 || index === state.index) {\n          return state;\n        }\n        return changeIndex(state, index, backBehavior, initialRouteName);\n      },\n      getStateForAction(state, action, _ref5) {\n        var routeParamList = _ref5.routeParamList,\n          routeGetIdList = _ref5.routeGetIdList;\n        switch (action.type) {\n          case 'JUMP_TO':\n          case 'NAVIGATE':\n          case 'NAVIGATE_DEPRECATED':\n            {\n              var index = state.routes.findIndex(route => route.name === action.payload.name);\n              if (index === -1) {\n                return null;\n              }\n              var updatedState = changeIndex({\n                ...state,\n                routes: state.routes.map(route => {\n                  if (route.name !== action.payload.name) {\n                    return route;\n                  }\n                  var getId = routeGetIdList[route.name];\n                  var currentId = getId?.({\n                    params: route.params\n                  });\n                  var nextId = getId?.({\n                    params: action.payload.params\n                  });\n                  var key = currentId === nextId ? route.key : `${route.name}-${(0, _nanoidNonSecure.nanoid)()}`;\n                  var params;\n                  if ((action.type === 'NAVIGATE' || action.type === 'NAVIGATE_DEPRECATED') && action.payload.merge && currentId === nextId) {\n                    params = action.payload.params !== undefined || routeParamList[route.name] !== undefined ? {\n                      ...routeParamList[route.name],\n                      ...route.params,\n                      ...action.payload.params\n                    } : route.params;\n                  } else {\n                    params = routeParamList[route.name] !== undefined ? {\n                      ...routeParamList[route.name],\n                      ...action.payload.params\n                    } : action.payload.params;\n                  }\n                  var path = action.type === 'NAVIGATE' && action.payload.path != null ? action.payload.path : route.path;\n                  return params !== route.params || path !== route.path ? {\n                    ...route,\n                    key,\n                    path,\n                    params\n                  } : route;\n                })\n              }, index, backBehavior, initialRouteName);\n              return {\n                ...updatedState,\n                preloadedRouteKeys: updatedState.preloadedRouteKeys.filter(key => key !== state.routes[updatedState.index].key)\n              };\n            }\n          case 'SET_PARAMS':\n          case 'REPLACE_PARAMS':\n            {\n              var nextState = _BaseRouterJs.BaseRouter.getStateForAction(state, action);\n              if (nextState !== null) {\n                var _index = nextState.index;\n                if (_index != null) {\n                  var focusedRoute = nextState.routes[_index];\n                  var historyItemIndex = state.history.findLastIndex(item => item.key === focusedRoute.key);\n                  var updatedHistory = state.history;\n                  if (historyItemIndex !== -1) {\n                    updatedHistory = [...state.history];\n                    updatedHistory[historyItemIndex] = {\n                      ...updatedHistory[historyItemIndex],\n                      params: focusedRoute.params\n                    };\n                  }\n                  return {\n                    ...nextState,\n                    history: updatedHistory\n                  };\n                }\n              }\n              return nextState;\n            }\n          case 'GO_BACK':\n            {\n              if (state.history.length === 1) {\n                return null;\n              }\n              var previousHistoryItem = state.history[state.history.length - 2];\n              var previousKey = previousHistoryItem?.key;\n              var _index2 = state.routes.findLastIndex(route => route.key === previousKey);\n              if (_index2 === -1) {\n                return null;\n              }\n              var routes = state.routes;\n              if (backBehavior === 'fullHistory' && routes[_index2].params !== previousHistoryItem.params) {\n                routes = [...state.routes];\n                routes[_index2] = {\n                  ...routes[_index2],\n                  params: previousHistoryItem.params\n                };\n              }\n              return {\n                ...state,\n                routes,\n                preloadedRouteKeys: state.preloadedRouteKeys.filter(key => key !== state.routes[_index2].key),\n                history: state.history.slice(0, -1),\n                index: _index2\n              };\n            }\n          case 'PRELOAD':\n            {\n              var routeIndex = state.routes.findIndex(route => route.name === action.payload.name);\n              if (routeIndex === -1) {\n                return null;\n              }\n              var route = state.routes[routeIndex];\n              var getId = routeGetIdList[route.name];\n              var currentId = getId?.({\n                params: route.params\n              });\n              var nextId = getId?.({\n                params: action.payload.params\n              });\n              var key = currentId === nextId ? route.key : `${route.name}-${(0, _nanoidNonSecure.nanoid)()}`;\n              var params = action.payload.params !== undefined || routeParamList[route.name] !== undefined ? {\n                ...routeParamList[route.name],\n                ...action.payload.params\n              } : undefined;\n              var newRoute = params !== route.params ? {\n                ...route,\n                key,\n                params\n              } : route;\n              return {\n                ...state,\n                preloadedRouteKeys: state.preloadedRouteKeys.filter(key => key !== route.key).concat(newRoute.key),\n                routes: state.routes.map((route, index) => index === routeIndex ? newRoute : route),\n                history: key === route.key ? state.history : state.history.filter(record => record.key !== route.key)\n              };\n            }\n          default:\n            return _BaseRouterJs.BaseRouter.getStateForAction(state, action);\n        }\n      },\n      actionCreators: TabActions\n    };\n    return router;\n  }\n});","lineCount":334,"map":[[2,2,1,0],[2,14,1,12],[4,2,1,13,"Object"],[4,8,1,13],[4,9,1,13,"defineProperty"],[4,23,1,13],[4,24,1,13,"exports"],[4,31,1,13],[5,4,1,13,"value"],[5,9,1,13],[6,2,1,13],[7,2,6,0,"Object"],[7,8,6,0],[7,9,6,0,"defineProperty"],[7,23,6,0],[7,24,6,0,"exports"],[7,31,6,0],[8,4,6,0,"enumerable"],[8,14,6,0],[9,4,6,0,"get"],[9,7,6,0],[9,18,6,0,"get"],[9,19,6,0],[10,6,6,0],[10,13,6,0,"TabActions"],[10,23,6,0],[11,4,6,0],[12,2,6,0],[13,2,87,0,"exports"],[13,9,87,0],[13,10,87,0,"TabRouter"],[13,19,87,0],[13,22,87,0,"TabRouter"],[13,31,87,0],[14,2,3,0],[14,6,3,0,"_nanoidNonSecure"],[14,22,3,0],[14,25,3,0,"require"],[14,32,3,0],[14,33,3,0,"_dependencyMap"],[14,47,3,0],[15,2,4,0],[15,6,4,0,"_BaseRouterJs"],[15,19,4,0],[15,22,4,0,"require"],[15,29,4,0],[15,30,4,0,"_dependencyMap"],[15,44,4,0],[16,2,5,0],[16,6,5,6,"TYPE_ROUTE"],[16,16,5,16],[16,19,5,19],[16,26,5,26],[17,2,6,7],[17,6,6,13,"TabActions"],[17,16,6,23],[17,19,6,26],[18,4,7,2,"jumpTo"],[18,10,7,8,"jumpTo"],[18,11,7,9,"name"],[18,15,7,13],[18,17,7,15,"params"],[18,23,7,21],[18,25,7,23],[19,6,8,4],[19,13,8,11],[20,8,9,6,"type"],[20,12,9,10],[20,14,9,12],[20,23,9,21],[21,8,10,6,"payload"],[21,15,10,13],[21,17,10,15],[22,10,11,8,"name"],[22,14,11,12],[23,10,12,8,"params"],[24,8,13,6],[25,6,14,4],[25,7,14,5],[26,4,15,2],[27,2,16,0],[27,3,16,1],[28,2,17,0],[28,6,17,6,"getRouteHistory"],[28,21,17,21],[28,24,17,24,"getRouteHistory"],[28,25,17,25,"routes"],[28,31,17,31],[28,33,17,33,"index"],[28,38,17,38],[28,40,17,40,"backBehavior"],[28,52,17,52],[28,54,17,54,"initialRouteName"],[28,70,17,70],[28,75,17,75],[29,4,18,2],[29,8,18,8,"history"],[29,15,18,15],[29,18,18,18],[29,19,18,19],[30,6,19,4,"type"],[30,10,19,8],[30,12,19,10,"TYPE_ROUTE"],[30,22,19,20],[31,6,20,4,"key"],[31,9,20,7],[31,11,20,9,"routes"],[31,17,20,15],[31,18,20,16,"index"],[31,23,20,21],[31,24,20,22],[31,25,20,23,"key"],[32,4,21,2],[32,5,21,3],[32,6,21,4],[33,4,22,2],[33,8,22,6,"initialRouteIndex"],[33,25,22,23],[34,4,23,2],[34,12,23,10,"backBehavior"],[34,24,23,22],[35,6,24,4],[35,11,24,9],[35,18,24,16],[36,8,25,6],[36,13,25,11],[36,17,25,15,"i"],[36,18,25,16],[36,21,25,19,"index"],[36,26,25,24],[36,28,25,26,"i"],[36,29,25,27],[36,32,25,30],[36,33,25,31],[36,35,25,33,"i"],[36,36,25,34],[36,38,25,36],[36,40,25,38],[37,10,26,8,"history"],[37,17,26,15],[37,18,26,16,"unshift"],[37,25,26,23],[37,26,26,24],[38,12,27,10,"type"],[38,16,27,14],[38,18,27,16,"TYPE_ROUTE"],[38,28,27,26],[39,12,28,10,"key"],[39,15,28,13],[39,17,28,15,"routes"],[39,23,28,21],[39,24,28,22,"i"],[39,25,28,23],[39,28,28,26],[39,29,28,27],[39,30,28,28],[39,31,28,29,"key"],[40,10,29,8],[40,11,29,9],[40,12,29,10],[41,8,30,6],[42,8,31,6],[43,6,32,4],[43,11,32,9],[43,23,32,21],[44,8,33,6],[44,12,33,10,"index"],[44,17,33,15],[44,22,33,20],[44,23,33,21],[44,25,33,23],[45,10,34,8,"history"],[45,17,34,15],[45,18,34,16,"unshift"],[45,25,34,23],[45,26,34,24],[46,12,35,10,"type"],[46,16,35,14],[46,18,35,16,"TYPE_ROUTE"],[46,28,35,26],[47,12,36,10,"key"],[47,15,36,13],[47,17,36,15,"routes"],[47,23,36,21],[47,24,36,22],[47,25,36,23],[47,26,36,24],[47,27,36,25,"key"],[48,10,37,8],[48,11,37,9],[48,12,37,10],[49,8,38,6],[50,8,39,6],[51,6,40,4],[51,11,40,9],[51,25,40,23],[52,8,41,6,"initialRouteIndex"],[52,25,41,23],[52,28,41,26,"routes"],[52,34,41,32],[52,35,41,33,"findIndex"],[52,44,41,42],[52,45,41,43,"route"],[52,50,41,48],[52,54,41,52,"route"],[52,59,41,57],[52,60,41,58,"name"],[52,64,41,62],[52,69,41,67,"initialRouteName"],[52,85,41,83],[52,86,41,84],[53,8,42,6,"initialRouteIndex"],[53,25,42,23],[53,28,42,26,"initialRouteIndex"],[53,45,42,43],[53,52,42,50],[53,55,42,53],[53,56,42,54],[53,59,42,57,"initialRouteIndex"],[53,76,42,74],[54,8,43,6],[54,12,43,10,"index"],[54,17,43,15],[54,22,43,20,"initialRouteIndex"],[54,39,43,37],[54,41,43,39],[55,10,44,8,"history"],[55,17,44,15],[55,18,44,16,"unshift"],[55,25,44,23],[55,26,44,24],[56,12,45,10,"type"],[56,16,45,14],[56,18,45,16,"TYPE_ROUTE"],[56,28,45,26],[57,12,46,10,"key"],[57,15,46,13],[57,17,46,15,"routes"],[57,23,46,21],[57,24,46,22,"initialRouteIndex"],[57,41,46,39],[57,42,46,40],[57,43,46,41,"key"],[58,10,47,8],[58,11,47,9],[58,12,47,10],[59,8,48,6],[60,8,49,6],[61,6,50,4],[61,11,50,9],[61,20,50,18],[62,6,51,4],[62,11,51,9],[62,24,51,22],[63,8,52,6],[64,8,53,6],[65,4,54,2],[66,4,55,2],[66,11,55,9,"history"],[66,18,55,16],[67,2,56,0],[67,3,56,1],[68,2,57,0],[68,6,57,6,"changeIndex"],[68,17,57,17],[68,20,57,20,"changeIndex"],[68,21,57,21,"state"],[68,26,57,26],[68,28,57,28,"index"],[68,33,57,33],[68,35,57,35,"backBehavior"],[68,47,57,47],[68,49,57,49,"initialRouteName"],[68,65,57,65],[68,70,57,70],[69,4,58,2],[69,8,58,6,"history"],[69,15,58,13],[69,18,58,16,"state"],[69,23,58,21],[69,24,58,22,"history"],[69,31,58,29],[70,4,59,2],[70,8,59,6,"backBehavior"],[70,20,59,18],[70,25,59,23],[70,34,59,32],[70,38,59,36,"backBehavior"],[70,50,59,48],[70,55,59,53],[70,68,59,66],[70,70,59,68],[71,6,60,4],[71,10,60,10,"currentRoute"],[71,22,60,22],[71,25,60,25,"state"],[71,30,60,30],[71,31,60,31,"routes"],[71,37,60,37],[71,38,60,38,"index"],[71,43,60,43],[71,44,60,44],[72,6,61,4],[72,10,61,8,"backBehavior"],[72,22,61,20],[72,27,61,25],[72,36,61,34],[72,38,61,36],[73,8,62,6],[74,8,63,6,"history"],[74,15,63,13],[74,18,63,16,"history"],[74,25,63,23],[74,26,63,24,"filter"],[74,32,63,30],[74,33,63,31,"it"],[74,35,63,33],[74,39,63,37,"it"],[74,41,63,39],[74,42,63,40,"type"],[74,46,63,44],[74,51,63,49],[74,58,63,56],[74,61,63,59,"it"],[74,63,63,61],[74,64,63,62,"key"],[74,67,63,65],[74,72,63,70,"currentRoute"],[74,84,63,82],[74,85,63,83,"key"],[74,88,63,86],[74,91,63,89],[74,96,63,94],[74,97,63,95],[75,6,64,4],[75,7,64,5],[75,13,64,11],[75,17,64,15,"backBehavior"],[75,29,64,27],[75,34,64,32],[75,47,64,45],[75,49,64,47],[76,8,65,6],[76,12,65,12,"lastHistoryRouteItemIndex"],[76,37,65,37],[76,40,65,40,"history"],[76,47,65,47],[76,48,65,48,"findLastIndex"],[76,61,65,61],[76,62,65,62,"item"],[76,66,65,66],[76,70,65,70,"item"],[76,74,65,74],[76,75,65,75,"type"],[76,79,65,79],[76,84,65,84],[76,91,65,91],[76,92,65,92],[77,8,66,6],[77,12,66,10,"currentRoute"],[77,24,66,22],[77,25,66,23,"key"],[77,28,66,26],[77,33,66,31,"history"],[77,40,66,38],[77,41,66,39,"lastHistoryRouteItemIndex"],[77,66,66,64],[77,67,66,65],[77,69,66,67,"key"],[77,72,66,70],[77,74,66,72],[78,10,67,8],[79,10,68,8],[80,10,69,8],[81,10,70,8,"history"],[81,17,70,15],[81,20,70,18],[81,21,70,19],[81,24,70,22,"history"],[81,31,70,29],[81,32,70,30,"slice"],[81,37,70,35],[81,38,70,36],[81,39,70,37],[81,41,70,39,"lastHistoryRouteItemIndex"],[81,66,70,64],[81,67,70,65],[81,69,70,67],[81,72,70,70,"history"],[81,79,70,77],[81,80,70,78,"slice"],[81,85,70,83],[81,86,70,84,"lastHistoryRouteItemIndex"],[81,111,70,109],[81,114,70,112],[81,115,70,113],[81,116,70,114],[81,117,70,115],[82,8,71,6],[83,6,72,4],[84,6,73,4,"history"],[84,13,73,11],[84,16,73,14,"history"],[84,23,73,21],[84,24,73,22,"concat"],[84,30,73,28],[84,31,73,29],[85,8,74,6,"type"],[85,12,74,10],[85,14,74,12,"TYPE_ROUTE"],[85,24,74,22],[86,8,75,6,"key"],[86,11,75,9],[86,13,75,11,"currentRoute"],[86,25,75,23],[86,26,75,24,"key"],[86,29,75,27],[87,8,76,6,"params"],[87,14,76,12],[87,16,76,14,"backBehavior"],[87,28,76,26],[87,33,76,31],[87,46,76,44],[87,49,76,47,"currentRoute"],[87,61,76,59],[87,62,76,60,"params"],[87,68,76,66],[87,71,76,69,"undefined"],[88,6,77,4],[88,7,77,5],[88,8,77,6],[89,4,78,2],[89,5,78,3],[89,11,78,9],[90,6,79,4,"history"],[90,13,79,11],[90,16,79,14,"getRouteHistory"],[90,31,79,29],[90,32,79,30,"state"],[90,37,79,35],[90,38,79,36,"routes"],[90,44,79,42],[90,46,79,44,"index"],[90,51,79,49],[90,53,79,51,"backBehavior"],[90,65,79,63],[90,67,79,65,"initialRouteName"],[90,83,79,81],[90,84,79,82],[91,4,80,2],[92,4,81,2],[92,11,81,9],[93,6,82,4],[93,9,82,7,"state"],[93,14,82,12],[94,6,83,4,"index"],[94,11,83,9],[95,6,84,4,"history"],[96,4,85,2],[96,5,85,3],[97,2,86,0],[97,3,86,1],[98,2,87,7],[98,11,87,16,"TabRouter"],[98,20,87,25,"TabRouter"],[98,21,87,25,"_ref"],[98,25,87,25],[98,27,90,3],[99,4,90,3],[99,8,88,2,"initialRouteName"],[99,24,88,18],[99,27,88,18,"_ref"],[99,31,88,18],[99,32,88,2,"initialRouteName"],[99,48,88,18],[100,6,88,18,"_ref$backBehavior"],[100,23,88,18],[100,26,88,18,"_ref"],[100,30,88,18],[100,31,89,2,"backBehavior"],[100,43,89,14],[101,6,89,2,"backBehavior"],[101,18,89,14],[101,21,89,14,"_ref$backBehavior"],[101,38,89,14],[101,43,89,14,"undefined"],[101,52,89,14],[101,55,89,17],[101,67,89,29],[101,70,89,29,"_ref$backBehavior"],[101,87,89,29],[102,4,91,2],[102,8,91,8,"router"],[102,14,91,14],[102,17,91,17],[103,6,92,4],[103,9,92,7,"BaseRouter"],[103,22,92,17],[103,23,92,17,"BaseRouter"],[103,33,92,17],[104,6,93,4,"type"],[104,10,93,8],[104,12,93,10],[104,17,93,15],[105,6,94,4,"getInitialState"],[105,21,94,19,"getInitialState"],[105,22,94,19,"_ref2"],[105,27,94,19],[105,29,97,7],[106,8,97,7],[106,12,95,6,"routeNames"],[106,22,95,16],[106,25,95,16,"_ref2"],[106,30,95,16],[106,31,95,6,"routeNames"],[106,41,95,16],[107,10,96,6,"routeParamList"],[107,24,96,20],[107,27,96,20,"_ref2"],[107,32,96,20],[107,33,96,6,"routeParamList"],[107,47,96,20],[108,8,98,6],[108,12,98,12,"index"],[108,17,98,17],[108,20,98,20,"initialRouteName"],[108,36,98,36],[108,41,98,41,"undefined"],[108,50,98,50],[108,54,98,54,"routeNames"],[108,64,98,64],[108,65,98,65,"includes"],[108,73,98,73],[108,74,98,74,"initialRouteName"],[108,90,98,90],[108,91,98,91],[108,94,98,94,"routeNames"],[108,104,98,104],[108,105,98,105,"indexOf"],[108,112,98,112],[108,113,98,113,"initialRouteName"],[108,129,98,129],[108,130,98,130],[108,133,98,133],[108,134,98,134],[109,8,99,6],[109,12,99,12,"routes"],[109,18,99,18],[109,21,99,21,"routeNames"],[109,31,99,31],[109,32,99,32,"map"],[109,35,99,35],[109,36,99,36,"name"],[109,40,99,40],[109,45,99,45],[110,10,100,8,"name"],[110,14,100,12],[111,10,101,8,"key"],[111,13,101,11],[111,15,101,13],[111,18,101,16,"name"],[111,22,101,20],[111,26,101,24],[111,30,101,24,"nanoid"],[111,46,101,30],[111,47,101,30,"nanoid"],[111,53,101,30],[111,55,101,31],[111,56,101,32],[111,58,101,34],[112,10,102,8,"params"],[112,16,102,14],[112,18,102,16,"routeParamList"],[112,32,102,30],[112,33,102,31,"name"],[112,37,102,35],[113,8,103,6],[113,9,103,7],[113,10,103,8],[113,11,103,9],[114,8,104,6],[114,12,104,12,"history"],[114,19,104,19],[114,22,104,22,"getRouteHistory"],[114,37,104,37],[114,38,104,38,"routes"],[114,44,104,44],[114,46,104,46,"index"],[114,51,104,51],[114,53,104,53,"backBehavior"],[114,65,104,65],[114,67,104,67,"initialRouteName"],[114,83,104,83],[114,84,104,84],[115,8,105,6],[115,15,105,13],[116,10,106,8,"stale"],[116,15,106,13],[116,17,106,15],[116,22,106,20],[117,10,107,8,"type"],[117,14,107,12],[117,16,107,14],[117,21,107,19],[118,10,108,8,"key"],[118,13,108,11],[118,15,108,13],[118,22,108,20],[118,26,108,20,"nanoid"],[118,42,108,26],[118,43,108,26,"nanoid"],[118,49,108,26],[118,51,108,27],[118,52,108,28],[118,54,108,30],[119,10,109,8,"index"],[119,15,109,13],[120,10,110,8,"routeNames"],[120,20,110,18],[121,10,111,8,"history"],[121,17,111,15],[122,10,112,8,"routes"],[122,16,112,14],[123,10,113,8,"preloadedRouteKeys"],[123,28,113,26],[123,30,113,28],[124,8,114,6],[124,9,114,7],[125,6,115,4],[125,7,115,5],[126,6,116,4,"getRehydratedState"],[126,24,116,22,"getRehydratedState"],[126,25,116,23,"partialState"],[126,37,116,35],[126,39,116,35,"_ref3"],[126,44,116,35],[126,46,119,7],[127,8,119,7],[127,12,117,6,"routeNames"],[127,22,117,16],[127,25,117,16,"_ref3"],[127,30,117,16],[127,31,117,6,"routeNames"],[127,41,117,16],[128,10,118,6,"routeParamList"],[128,24,118,20],[128,27,118,20,"_ref3"],[128,32,118,20],[128,33,118,6,"routeParamList"],[128,47,118,20],[129,8,120,6],[129,12,120,12,"state"],[129,17,120,17],[129,20,120,20,"partialState"],[129,32,120,32],[130,8,121,6],[130,12,121,10,"state"],[130,17,121,15],[130,18,121,16,"stale"],[130,23,121,21],[130,28,121,26],[130,33,121,31],[130,35,121,33],[131,10,122,8],[131,17,122,15,"state"],[131,22,122,20],[132,8,123,6],[133,8,124,6],[133,12,124,12,"routes"],[133,18,124,18],[133,21,124,21,"routeNames"],[133,31,124,31],[133,32,124,32,"map"],[133,35,124,35],[133,36,124,36,"name"],[133,40,124,40],[133,44,124,44],[134,10,125,8],[134,14,125,14,"route"],[134,19,125,19],[134,22,125,22,"state"],[134,27,125,27],[134,28,125,28,"routes"],[134,34,125,34],[134,35,125,35,"find"],[134,39,125,39],[134,40,125,40,"r"],[134,41,125,41],[134,45,125,45,"r"],[134,46,125,46],[134,47,125,47,"name"],[134,51,125,51],[134,56,125,56,"name"],[134,60,125,60],[134,61,125,61],[135,10,126,8],[135,17,126,15],[136,12,127,10],[136,15,127,13,"route"],[136,20,127,18],[137,12,128,10,"name"],[137,16,128,14],[138,12,129,10,"key"],[138,15,129,13],[138,17,129,15,"route"],[138,22,129,20],[138,26,129,24,"route"],[138,31,129,29],[138,32,129,30,"name"],[138,36,129,34],[138,41,129,39,"name"],[138,45,129,43],[138,49,129,47,"route"],[138,54,129,52],[138,55,129,53,"key"],[138,58,129,56],[138,61,129,59,"route"],[138,66,129,64],[138,67,129,65,"key"],[138,70,129,68],[138,73,129,71],[138,76,129,74,"name"],[138,80,129,78],[138,84,129,82],[138,88,129,82,"nanoid"],[138,104,129,88],[138,105,129,88,"nanoid"],[138,111,129,88],[138,113,129,89],[138,114,129,90],[138,116,129,92],[139,12,130,10,"params"],[139,18,130,16],[139,20,130,18,"routeParamList"],[139,34,130,32],[139,35,130,33,"name"],[139,39,130,37],[139,40,130,38],[139,45,130,43,"undefined"],[139,54,130,52],[139,57,130,55],[140,14,131,12],[140,17,131,15,"routeParamList"],[140,31,131,29],[140,32,131,30,"name"],[140,36,131,34],[140,37,131,35],[141,14,132,12],[141,18,132,16,"route"],[141,23,132,21],[141,26,132,24,"route"],[141,31,132,29],[141,32,132,30,"params"],[141,38,132,36],[141,41,132,39,"undefined"],[141,50,132,48],[142,12,133,10],[142,13,133,11],[142,16,133,14,"route"],[142,21,133,19],[142,24,133,22,"route"],[142,29,133,27],[142,30,133,28,"params"],[142,36,133,34],[142,39,133,37,"undefined"],[143,10,134,8],[143,11,134,9],[144,8,135,6],[144,9,135,7],[144,10,135,8],[145,8,136,6],[145,12,136,12,"index"],[145,17,136,17],[145,20,136,20,"Math"],[145,24,136,24],[145,25,136,25,"min"],[145,28,136,28],[145,29,136,29,"Math"],[145,33,136,33],[145,34,136,34,"max"],[145,37,136,37],[145,38,136,38,"routeNames"],[145,48,136,48],[145,49,136,49,"indexOf"],[145,56,136,56],[145,57,136,57,"state"],[145,62,136,62],[145,63,136,63,"routes"],[145,69,136,69],[145,70,136,70,"state"],[145,75,136,75],[145,77,136,77,"index"],[145,82,136,82],[145,86,136,86],[145,87,136,87],[145,88,136,88],[145,90,136,90,"name"],[145,94,136,94],[145,95,136,95],[145,97,136,97],[145,98,136,98],[145,99,136,99],[145,101,136,101,"routes"],[145,107,136,107],[145,108,136,108,"length"],[145,114,136,114],[145,117,136,117],[145,118,136,118],[145,119,136,119],[146,8,137,6],[146,12,137,12,"routeKeys"],[146,21,137,21],[146,24,137,24,"routes"],[146,30,137,30],[146,31,137,31,"map"],[146,34,137,34],[146,35,137,35,"route"],[146,40,137,40],[146,44,137,44,"route"],[146,49,137,49],[146,50,137,50,"key"],[146,53,137,53],[146,54,137,54],[147,8,138,6],[147,12,138,12,"history"],[147,19,138,19],[147,22,138,22,"state"],[147,27,138,27],[147,28,138,28,"history"],[147,35,138,35],[147,37,138,37,"filter"],[147,43,138,43],[147,44,138,44,"it"],[147,46,138,46],[147,50,138,50,"routeKeys"],[147,59,138,59],[147,60,138,60,"includes"],[147,68,138,68],[147,69,138,69,"it"],[147,71,138,71],[147,72,138,72,"key"],[147,75,138,75],[147,76,138,76],[147,77,138,77],[147,81,138,81],[147,83,138,83],[148,8,139,6],[148,15,139,13,"changeIndex"],[148,26,139,24],[148,27,139,25],[149,10,140,8,"stale"],[149,15,140,13],[149,17,140,15],[149,22,140,20],[150,10,141,8,"type"],[150,14,141,12],[150,16,141,14],[150,21,141,19],[151,10,142,8,"key"],[151,13,142,11],[151,15,142,13],[151,22,142,20],[151,26,142,20,"nanoid"],[151,42,142,26],[151,43,142,26,"nanoid"],[151,49,142,26],[151,51,142,27],[151,52,142,28],[151,54,142,30],[152,10,143,8,"index"],[152,15,143,13],[153,10,144,8,"routeNames"],[153,20,144,18],[154,10,145,8,"history"],[154,17,145,15],[155,10,146,8,"routes"],[155,16,146,14],[156,10,147,8,"preloadedRouteKeys"],[156,28,147,26],[156,30,147,28,"state"],[156,35,147,33],[156,36,147,34,"preloadedRouteKeys"],[156,54,147,52],[156,56,147,54,"filter"],[156,62,147,60],[156,63,147,61,"key"],[156,66,147,64],[156,70,147,68,"routeKeys"],[156,79,147,77],[156,80,147,78,"includes"],[156,88,147,86],[156,89,147,87,"key"],[156,92,147,90],[156,93,147,91],[156,94,147,92],[156,98,147,96],[157,8,148,6],[157,9,148,7],[157,11,148,9,"index"],[157,16,148,14],[157,18,148,16,"backBehavior"],[157,30,148,28],[157,32,148,30,"initialRouteName"],[157,48,148,46],[157,49,148,47],[158,6,149,4],[158,7,149,5],[159,6,150,4,"getStateForRouteNamesChange"],[159,33,150,31,"getStateForRouteNamesChange"],[159,34,150,32,"state"],[159,39,150,37],[159,41,150,37,"_ref4"],[159,46,150,37],[159,48,154,7],[160,8,154,7],[160,12,151,6,"routeNames"],[160,22,151,16],[160,25,151,16,"_ref4"],[160,30,151,16],[160,31,151,6,"routeNames"],[160,41,151,16],[161,10,152,6,"routeParamList"],[161,24,152,20],[161,27,152,20,"_ref4"],[161,32,152,20],[161,33,152,6,"routeParamList"],[161,47,152,20],[162,10,153,6,"routeKeyChanges"],[162,25,153,21],[162,28,153,21,"_ref4"],[162,33,153,21],[162,34,153,6,"routeKeyChanges"],[162,49,153,21],[163,8,155,6],[163,12,155,12,"routes"],[163,18,155,18],[163,21,155,21,"routeNames"],[163,31,155,31],[163,32,155,32,"map"],[163,35,155,35],[163,36,155,36,"name"],[163,40,155,40],[163,44,155,44,"state"],[163,49,155,49],[163,50,155,50,"routes"],[163,56,155,56],[163,57,155,57,"find"],[163,61,155,61],[163,62,155,62,"r"],[163,63,155,63],[163,67,155,67,"r"],[163,68,155,68],[163,69,155,69,"name"],[163,73,155,73],[163,78,155,78,"name"],[163,82,155,82],[163,86,155,86],[163,87,155,87,"routeKeyChanges"],[163,102,155,102],[163,103,155,103,"includes"],[163,111,155,111],[163,112,155,112,"r"],[163,113,155,113],[163,114,155,114,"name"],[163,118,155,118],[163,119,155,119],[163,120,155,120],[163,124,155,124],[164,10,156,8,"name"],[164,14,156,12],[165,10,157,8,"key"],[165,13,157,11],[165,15,157,13],[165,18,157,16,"name"],[165,22,157,20],[165,26,157,24],[165,30,157,24,"nanoid"],[165,46,157,30],[165,47,157,30,"nanoid"],[165,53,157,30],[165,55,157,31],[165,56,157,32],[165,58,157,34],[166,10,158,8,"params"],[166,16,158,14],[166,18,158,16,"routeParamList"],[166,32,158,30],[166,33,158,31,"name"],[166,37,158,35],[167,8,159,6],[167,9,159,7],[167,10,159,8],[168,8,160,6],[168,12,160,12,"index"],[168,17,160,17],[168,20,160,20,"Math"],[168,24,160,24],[168,25,160,25,"max"],[168,28,160,28],[168,29,160,29],[168,30,160,30],[168,32,160,32,"routeNames"],[168,42,160,42],[168,43,160,43,"indexOf"],[168,50,160,50],[168,51,160,51,"state"],[168,56,160,56],[168,57,160,57,"routes"],[168,63,160,63],[168,64,160,64,"state"],[168,69,160,69],[168,70,160,70,"index"],[168,75,160,75],[168,76,160,76],[168,77,160,77,"name"],[168,81,160,81],[168,82,160,82],[168,83,160,83],[169,8,161,6],[169,12,161,10,"history"],[169,19,161,17],[169,22,161,20,"state"],[169,27,161,25],[169,28,161,26,"history"],[169,35,161,33],[169,36,161,34,"filter"],[169,42,161,40],[170,8,162,6],[171,8,163,6,"it"],[171,10,163,8],[171,14,163,12,"it"],[171,16,163,14],[171,17,163,15,"type"],[171,21,163,19],[171,26,163,24],[171,33,163,31],[171,37,163,35,"routes"],[171,43,163,41],[171,44,163,42,"find"],[171,48,163,46],[171,49,163,47,"r"],[171,50,163,48],[171,54,163,52,"r"],[171,55,163,53],[171,56,163,54,"key"],[171,59,163,57],[171,64,163,62,"it"],[171,66,163,64],[171,67,163,65,"key"],[171,70,163,68],[171,71,163,69],[171,72,163,70],[172,8,164,6],[172,12,164,10],[172,13,164,11,"history"],[172,20,164,18],[172,21,164,19,"length"],[172,27,164,25],[172,29,164,27],[173,10,165,8,"history"],[173,17,165,15],[173,20,165,18,"getRouteHistory"],[173,35,165,33],[173,36,165,34,"routes"],[173,42,165,40],[173,44,165,42,"index"],[173,49,165,47],[173,51,165,49,"backBehavior"],[173,63,165,61],[173,65,165,63,"initialRouteName"],[173,81,165,79],[173,82,165,80],[174,8,166,6],[175,8,167,6],[175,15,167,13],[176,10,168,8],[176,13,168,11,"state"],[176,18,168,16],[177,10,169,8,"history"],[177,17,169,15],[178,10,170,8,"routeNames"],[178,20,170,18],[179,10,171,8,"routes"],[179,16,171,14],[180,10,172,8,"index"],[181,8,173,6],[181,9,173,7],[182,6,174,4],[182,7,174,5],[183,6,175,4,"getStateForRouteFocus"],[183,27,175,25,"getStateForRouteFocus"],[183,28,175,26,"state"],[183,33,175,31],[183,35,175,33,"key"],[183,38,175,36],[183,40,175,38],[184,8,176,6],[184,12,176,12,"index"],[184,17,176,17],[184,20,176,20,"state"],[184,25,176,25],[184,26,176,26,"routes"],[184,32,176,32],[184,33,176,33,"findIndex"],[184,42,176,42],[184,43,176,43,"r"],[184,44,176,44],[184,48,176,48,"r"],[184,49,176,49],[184,50,176,50,"key"],[184,53,176,53],[184,58,176,58,"key"],[184,61,176,61],[184,62,176,62],[185,8,177,6],[185,12,177,10,"index"],[185,17,177,15],[185,24,177,22],[185,28,177,26,"index"],[185,33,177,31],[185,38,177,36,"state"],[185,43,177,41],[185,44,177,42,"index"],[185,49,177,47],[185,51,177,49],[186,10,178,8],[186,17,178,15,"state"],[186,22,178,20],[187,8,179,6],[188,8,180,6],[188,15,180,13,"changeIndex"],[188,26,180,24],[188,27,180,25,"state"],[188,32,180,30],[188,34,180,32,"index"],[188,39,180,37],[188,41,180,39,"backBehavior"],[188,53,180,51],[188,55,180,53,"initialRouteName"],[188,71,180,69],[188,72,180,70],[189,6,181,4],[189,7,181,5],[190,6,182,4,"getStateForAction"],[190,23,182,21,"getStateForAction"],[190,24,182,22,"state"],[190,29,182,27],[190,31,182,29,"action"],[190,37,182,35],[190,39,182,35,"_ref5"],[190,44,182,35],[190,46,185,7],[191,8,185,7],[191,12,183,6,"routeParamList"],[191,26,183,20],[191,29,183,20,"_ref5"],[191,34,183,20],[191,35,183,6,"routeParamList"],[191,49,183,20],[192,10,184,6,"routeGetIdList"],[192,24,184,20],[192,27,184,20,"_ref5"],[192,32,184,20],[192,33,184,6,"routeGetIdList"],[192,47,184,20],[193,8,186,6],[193,16,186,14,"action"],[193,22,186,20],[193,23,186,21,"type"],[193,27,186,25],[194,10,187,8],[194,15,187,13],[194,24,187,22],[195,10,188,8],[195,15,188,13],[195,25,188,23],[196,10,189,8],[196,15,189,13],[196,36,189,34],[197,12,190,10],[198,14,191,12],[198,18,191,18,"index"],[198,23,191,23],[198,26,191,26,"state"],[198,31,191,31],[198,32,191,32,"routes"],[198,38,191,38],[198,39,191,39,"findIndex"],[198,48,191,48],[198,49,191,49,"route"],[198,54,191,54],[198,58,191,58,"route"],[198,63,191,63],[198,64,191,64,"name"],[198,68,191,68],[198,73,191,73,"action"],[198,79,191,79],[198,80,191,80,"payload"],[198,87,191,87],[198,88,191,88,"name"],[198,92,191,92],[198,93,191,93],[199,14,192,12],[199,18,192,16,"index"],[199,23,192,21],[199,30,192,28],[199,32,192,30],[200,16,193,14],[200,23,193,21],[200,27,193,25],[201,14,194,12],[202,14,195,12],[202,18,195,18,"updatedState"],[202,30,195,30],[202,33,195,33,"changeIndex"],[202,44,195,44],[202,45,195,45],[203,16,196,14],[203,19,196,17,"state"],[203,24,196,22],[204,16,197,14,"routes"],[204,22,197,20],[204,24,197,22,"state"],[204,29,197,27],[204,30,197,28,"routes"],[204,36,197,34],[204,37,197,35,"map"],[204,40,197,38],[204,41,197,39,"route"],[204,46,197,44],[204,50,197,48],[205,18,198,16],[205,22,198,20,"route"],[205,27,198,25],[205,28,198,26,"name"],[205,32,198,30],[205,37,198,35,"action"],[205,43,198,41],[205,44,198,42,"payload"],[205,51,198,49],[205,52,198,50,"name"],[205,56,198,54],[205,58,198,56],[206,20,199,18],[206,27,199,25,"route"],[206,32,199,30],[207,18,200,16],[208,18,201,16],[208,22,201,22,"getId"],[208,27,201,27],[208,30,201,30,"routeGetIdList"],[208,44,201,44],[208,45,201,45,"route"],[208,50,201,50],[208,51,201,51,"name"],[208,55,201,55],[208,56,201,56],[209,18,202,16],[209,22,202,22,"currentId"],[209,31,202,31],[209,34,202,34,"getId"],[209,39,202,39],[209,42,202,42],[210,20,203,18,"params"],[210,26,203,24],[210,28,203,26,"route"],[210,33,203,31],[210,34,203,32,"params"],[211,18,204,16],[211,19,204,17],[211,20,204,18],[212,18,205,16],[212,22,205,22,"nextId"],[212,28,205,28],[212,31,205,31,"getId"],[212,36,205,36],[212,39,205,39],[213,20,206,18,"params"],[213,26,206,24],[213,28,206,26,"action"],[213,34,206,32],[213,35,206,33,"payload"],[213,42,206,40],[213,43,206,41,"params"],[214,18,207,16],[214,19,207,17],[214,20,207,18],[215,18,208,16],[215,22,208,22,"key"],[215,25,208,25],[215,28,208,28,"currentId"],[215,37,208,37],[215,42,208,42,"nextId"],[215,48,208,48],[215,51,208,51,"route"],[215,56,208,56],[215,57,208,57,"key"],[215,60,208,60],[215,63,208,63],[215,66,208,66,"route"],[215,71,208,71],[215,72,208,72,"name"],[215,76,208,76],[215,80,208,80],[215,84,208,80,"nanoid"],[215,100,208,86],[215,101,208,86,"nanoid"],[215,107,208,86],[215,109,208,87],[215,110,208,88],[215,112,208,90],[216,18,209,16],[216,22,209,20,"params"],[216,28,209,26],[217,18,210,16],[217,22,210,20],[217,23,210,21,"action"],[217,29,210,27],[217,30,210,28,"type"],[217,34,210,32],[217,39,210,37],[217,49,210,47],[217,53,210,51,"action"],[217,59,210,57],[217,60,210,58,"type"],[217,64,210,62],[217,69,210,67],[217,90,210,88],[217,95,210,93,"action"],[217,101,210,99],[217,102,210,100,"payload"],[217,109,210,107],[217,110,210,108,"merge"],[217,115,210,113],[217,119,210,117,"currentId"],[217,128,210,126],[217,133,210,131,"nextId"],[217,139,210,137],[217,141,210,139],[218,20,211,18,"params"],[218,26,211,24],[218,29,211,27,"action"],[218,35,211,33],[218,36,211,34,"payload"],[218,43,211,41],[218,44,211,42,"params"],[218,50,211,48],[218,55,211,53,"undefined"],[218,64,211,62],[218,68,211,66,"routeParamList"],[218,82,211,80],[218,83,211,81,"route"],[218,88,211,86],[218,89,211,87,"name"],[218,93,211,91],[218,94,211,92],[218,99,211,97,"undefined"],[218,108,211,106],[218,111,211,109],[219,22,212,20],[219,25,212,23,"routeParamList"],[219,39,212,37],[219,40,212,38,"route"],[219,45,212,43],[219,46,212,44,"name"],[219,50,212,48],[219,51,212,49],[220,22,213,20],[220,25,213,23,"route"],[220,30,213,28],[220,31,213,29,"params"],[220,37,213,35],[221,22,214,20],[221,25,214,23,"action"],[221,31,214,29],[221,32,214,30,"payload"],[221,39,214,37],[221,40,214,38,"params"],[222,20,215,18],[222,21,215,19],[222,24,215,22,"route"],[222,29,215,27],[222,30,215,28,"params"],[222,36,215,34],[223,18,216,16],[223,19,216,17],[223,25,216,23],[224,20,217,18,"params"],[224,26,217,24],[224,29,217,27,"routeParamList"],[224,43,217,41],[224,44,217,42,"route"],[224,49,217,47],[224,50,217,48,"name"],[224,54,217,52],[224,55,217,53],[224,60,217,58,"undefined"],[224,69,217,67],[224,72,217,70],[225,22,218,20],[225,25,218,23,"routeParamList"],[225,39,218,37],[225,40,218,38,"route"],[225,45,218,43],[225,46,218,44,"name"],[225,50,218,48],[225,51,218,49],[226,22,219,20],[226,25,219,23,"action"],[226,31,219,29],[226,32,219,30,"payload"],[226,39,219,37],[226,40,219,38,"params"],[227,20,220,18],[227,21,220,19],[227,24,220,22,"action"],[227,30,220,28],[227,31,220,29,"payload"],[227,38,220,36],[227,39,220,37,"params"],[227,45,220,43],[228,18,221,16],[229,18,222,16],[229,22,222,22,"path"],[229,26,222,26],[229,29,222,29,"action"],[229,35,222,35],[229,36,222,36,"type"],[229,40,222,40],[229,45,222,45],[229,55,222,55],[229,59,222,59,"action"],[229,65,222,65],[229,66,222,66,"payload"],[229,73,222,73],[229,74,222,74,"path"],[229,78,222,78],[229,82,222,82],[229,86,222,86],[229,89,222,89,"action"],[229,95,222,95],[229,96,222,96,"payload"],[229,103,222,103],[229,104,222,104,"path"],[229,108,222,108],[229,111,222,111,"route"],[229,116,222,116],[229,117,222,117,"path"],[229,121,222,121],[230,18,223,16],[230,25,223,23,"params"],[230,31,223,29],[230,36,223,34,"route"],[230,41,223,39],[230,42,223,40,"params"],[230,48,223,46],[230,52,223,50,"path"],[230,56,223,54],[230,61,223,59,"route"],[230,66,223,64],[230,67,223,65,"path"],[230,71,223,69],[230,74,223,72],[231,20,224,18],[231,23,224,21,"route"],[231,28,224,26],[232,20,225,18,"key"],[232,23,225,21],[233,20,226,18,"path"],[233,24,226,22],[234,20,227,18,"params"],[235,18,228,16],[235,19,228,17],[235,22,228,20,"route"],[235,27,228,25],[236,16,229,14],[236,17,229,15],[237,14,230,12],[237,15,230,13],[237,17,230,15,"index"],[237,22,230,20],[237,24,230,22,"backBehavior"],[237,36,230,34],[237,38,230,36,"initialRouteName"],[237,54,230,52],[237,55,230,53],[238,14,231,12],[238,21,231,19],[239,16,232,14],[239,19,232,17,"updatedState"],[239,31,232,29],[240,16,233,14,"preloadedRouteKeys"],[240,34,233,32],[240,36,233,34,"updatedState"],[240,48,233,46],[240,49,233,47,"preloadedRouteKeys"],[240,67,233,65],[240,68,233,66,"filter"],[240,74,233,72],[240,75,233,73,"key"],[240,78,233,76],[240,82,233,80,"key"],[240,85,233,83],[240,90,233,88,"state"],[240,95,233,93],[240,96,233,94,"routes"],[240,102,233,100],[240,103,233,101,"updatedState"],[240,115,233,113],[240,116,233,114,"index"],[240,121,233,119],[240,122,233,120],[240,123,233,121,"key"],[240,126,233,124],[241,14,234,12],[241,15,234,13],[242,12,235,10],[243,10,236,8],[243,15,236,13],[243,27,236,25],[244,10,237,8],[244,15,237,13],[244,31,237,29],[245,12,238,10],[246,14,239,12],[246,18,239,18,"nextState"],[246,27,239,27],[246,30,239,30,"BaseRouter"],[246,43,239,40],[246,44,239,40,"BaseRouter"],[246,54,239,40],[246,55,239,41,"getStateForAction"],[246,72,239,58],[246,73,239,59,"state"],[246,78,239,64],[246,80,239,66,"action"],[246,86,239,72],[246,87,239,73],[247,14,240,12],[247,18,240,16,"nextState"],[247,27,240,25],[247,32,240,30],[247,36,240,34],[247,38,240,36],[248,16,241,14],[248,20,241,20,"index"],[248,26,241,25],[248,29,241,28,"nextState"],[248,38,241,37],[248,39,241,38,"index"],[248,44,241,43],[249,16,242,14],[249,20,242,18,"index"],[249,26,242,23],[249,30,242,27],[249,34,242,31],[249,36,242,33],[250,18,243,16],[250,22,243,22,"focusedRoute"],[250,34,243,34],[250,37,243,37,"nextState"],[250,46,243,46],[250,47,243,47,"routes"],[250,53,243,53],[250,54,243,54,"index"],[250,60,243,59],[250,61,243,60],[251,18,244,16],[251,22,244,22,"historyItemIndex"],[251,38,244,38],[251,41,244,41,"state"],[251,46,244,46],[251,47,244,47,"history"],[251,54,244,54],[251,55,244,55,"findLastIndex"],[251,68,244,68],[251,69,244,69,"item"],[251,73,244,73],[251,77,244,77,"item"],[251,81,244,81],[251,82,244,82,"key"],[251,85,244,85],[251,90,244,90,"focusedRoute"],[251,102,244,102],[251,103,244,103,"key"],[251,106,244,106],[251,107,244,107],[252,18,245,16],[252,22,245,20,"updatedHistory"],[252,36,245,34],[252,39,245,37,"state"],[252,44,245,42],[252,45,245,43,"history"],[252,52,245,50],[253,18,246,16],[253,22,246,20,"historyItemIndex"],[253,38,246,36],[253,45,246,43],[253,47,246,45],[254,20,247,18,"updatedHistory"],[254,34,247,32],[254,37,247,35],[254,38,247,36],[254,41,247,39,"state"],[254,46,247,44],[254,47,247,45,"history"],[254,54,247,52],[254,55,247,53],[255,20,248,18,"updatedHistory"],[255,34,248,32],[255,35,248,33,"historyItemIndex"],[255,51,248,49],[255,52,248,50],[255,55,248,53],[256,22,249,20],[256,25,249,23,"updatedHistory"],[256,39,249,37],[256,40,249,38,"historyItemIndex"],[256,56,249,54],[256,57,249,55],[257,22,250,20,"params"],[257,28,250,26],[257,30,250,28,"focusedRoute"],[257,42,250,40],[257,43,250,41,"params"],[258,20,251,18],[258,21,251,19],[259,18,252,16],[260,18,253,16],[260,25,253,23],[261,20,254,18],[261,23,254,21,"nextState"],[261,32,254,30],[262,20,255,18,"history"],[262,27,255,25],[262,29,255,27,"updatedHistory"],[263,18,256,16],[263,19,256,17],[264,16,257,14],[265,14,258,12],[266,14,259,12],[266,21,259,19,"nextState"],[266,30,259,28],[267,12,260,10],[268,10,261,8],[268,15,261,13],[268,24,261,22],[269,12,262,10],[270,14,263,12],[270,18,263,16,"state"],[270,23,263,21],[270,24,263,22,"history"],[270,31,263,29],[270,32,263,30,"length"],[270,38,263,36],[270,43,263,41],[270,44,263,42],[270,46,263,44],[271,16,264,14],[271,23,264,21],[271,27,264,25],[272,14,265,12],[273,14,266,12],[273,18,266,18,"previousHistoryItem"],[273,37,266,37],[273,40,266,40,"state"],[273,45,266,45],[273,46,266,46,"history"],[273,53,266,53],[273,54,266,54,"state"],[273,59,266,59],[273,60,266,60,"history"],[273,67,266,67],[273,68,266,68,"length"],[273,74,266,74],[273,77,266,77],[273,78,266,78],[273,79,266,79],[274,14,267,12],[274,18,267,18,"previousKey"],[274,29,267,29],[274,32,267,32,"previousHistoryItem"],[274,51,267,51],[274,53,267,53,"key"],[274,56,267,56],[275,14,268,12],[275,18,268,18,"index"],[275,25,268,23],[275,28,268,26,"state"],[275,33,268,31],[275,34,268,32,"routes"],[275,40,268,38],[275,41,268,39,"findLastIndex"],[275,54,268,52],[275,55,268,53,"route"],[275,60,268,58],[275,64,268,62,"route"],[275,69,268,67],[275,70,268,68,"key"],[275,73,268,71],[275,78,268,76,"previousKey"],[275,89,268,87],[275,90,268,88],[276,14,269,12],[276,18,269,16,"index"],[276,25,269,21],[276,32,269,28],[276,34,269,30],[277,16,270,14],[277,23,270,21],[277,27,270,25],[278,14,271,12],[279,14,272,12],[279,18,272,16,"routes"],[279,24,272,22],[279,27,272,25,"state"],[279,32,272,30],[279,33,272,31,"routes"],[279,39,272,37],[280,14,273,12],[280,18,273,16,"backBehavior"],[280,30,273,28],[280,35,273,33],[280,48,273,46],[280,52,273,50,"routes"],[280,58,273,56],[280,59,273,57,"index"],[280,66,273,62],[280,67,273,63],[280,68,273,64,"params"],[280,74,273,70],[280,79,273,75,"previousHistoryItem"],[280,98,273,94],[280,99,273,95,"params"],[280,105,273,101],[280,107,273,103],[281,16,274,14,"routes"],[281,22,274,20],[281,25,274,23],[281,26,274,24],[281,29,274,27,"state"],[281,34,274,32],[281,35,274,33,"routes"],[281,41,274,39],[281,42,274,40],[282,16,275,14,"routes"],[282,22,275,20],[282,23,275,21,"index"],[282,30,275,26],[282,31,275,27],[282,34,275,30],[283,18,276,16],[283,21,276,19,"routes"],[283,27,276,25],[283,28,276,26,"index"],[283,35,276,31],[283,36,276,32],[284,18,277,16,"params"],[284,24,277,22],[284,26,277,24,"previousHistoryItem"],[284,45,277,43],[284,46,277,44,"params"],[285,16,278,14],[285,17,278,15],[286,14,279,12],[287,14,280,12],[287,21,280,19],[288,16,281,14],[288,19,281,17,"state"],[288,24,281,22],[289,16,282,14,"routes"],[289,22,282,20],[290,16,283,14,"preloadedRouteKeys"],[290,34,283,32],[290,36,283,34,"state"],[290,41,283,39],[290,42,283,40,"preloadedRouteKeys"],[290,60,283,58],[290,61,283,59,"filter"],[290,67,283,65],[290,68,283,66,"key"],[290,71,283,69],[290,75,283,73,"key"],[290,78,283,76],[290,83,283,81,"state"],[290,88,283,86],[290,89,283,87,"routes"],[290,95,283,93],[290,96,283,94,"index"],[290,103,283,99],[290,104,283,100],[290,105,283,101,"key"],[290,108,283,104],[290,109,283,105],[291,16,284,14,"history"],[291,23,284,21],[291,25,284,23,"state"],[291,30,284,28],[291,31,284,29,"history"],[291,38,284,36],[291,39,284,37,"slice"],[291,44,284,42],[291,45,284,43],[291,46,284,44],[291,50,284,48],[291,51,284,49],[292,16,285,14,"index"],[292,21,285,19],[292,23,285,14,"index"],[293,14,286,12],[293,15,286,13],[294,12,287,10],[295,10,288,8],[295,15,288,13],[295,24,288,22],[296,12,289,10],[297,14,290,12],[297,18,290,18,"routeIndex"],[297,28,290,28],[297,31,290,31,"state"],[297,36,290,36],[297,37,290,37,"routes"],[297,43,290,43],[297,44,290,44,"findIndex"],[297,53,290,53],[297,54,290,54,"route"],[297,59,290,59],[297,63,290,63,"route"],[297,68,290,68],[297,69,290,69,"name"],[297,73,290,73],[297,78,290,78,"action"],[297,84,290,84],[297,85,290,85,"payload"],[297,92,290,92],[297,93,290,93,"name"],[297,97,290,97],[297,98,290,98],[298,14,291,12],[298,18,291,16,"routeIndex"],[298,28,291,26],[298,35,291,33],[298,37,291,35],[299,16,292,14],[299,23,292,21],[299,27,292,25],[300,14,293,12],[301,14,294,12],[301,18,294,18,"route"],[301,23,294,23],[301,26,294,26,"state"],[301,31,294,31],[301,32,294,32,"routes"],[301,38,294,38],[301,39,294,39,"routeIndex"],[301,49,294,49],[301,50,294,50],[302,14,295,12],[302,18,295,18,"getId"],[302,23,295,23],[302,26,295,26,"routeGetIdList"],[302,40,295,40],[302,41,295,41,"route"],[302,46,295,46],[302,47,295,47,"name"],[302,51,295,51],[302,52,295,52],[303,14,296,12],[303,18,296,18,"currentId"],[303,27,296,27],[303,30,296,30,"getId"],[303,35,296,35],[303,38,296,38],[304,16,297,14,"params"],[304,22,297,20],[304,24,297,22,"route"],[304,29,297,27],[304,30,297,28,"params"],[305,14,298,12],[305,15,298,13],[305,16,298,14],[306,14,299,12],[306,18,299,18,"nextId"],[306,24,299,24],[306,27,299,27,"getId"],[306,32,299,32],[306,35,299,35],[307,16,300,14,"params"],[307,22,300,20],[307,24,300,22,"action"],[307,30,300,28],[307,31,300,29,"payload"],[307,38,300,36],[307,39,300,37,"params"],[308,14,301,12],[308,15,301,13],[308,16,301,14],[309,14,302,12],[309,18,302,18,"key"],[309,21,302,21],[309,24,302,24,"currentId"],[309,33,302,33],[309,38,302,38,"nextId"],[309,44,302,44],[309,47,302,47,"route"],[309,52,302,52],[309,53,302,53,"key"],[309,56,302,56],[309,59,302,59],[309,62,302,62,"route"],[309,67,302,67],[309,68,302,68,"name"],[309,72,302,72],[309,76,302,76],[309,80,302,76,"nanoid"],[309,96,302,82],[309,97,302,82,"nanoid"],[309,103,302,82],[309,105,302,83],[309,106,302,84],[309,108,302,86],[310,14,303,12],[310,18,303,18,"params"],[310,24,303,24],[310,27,303,27,"action"],[310,33,303,33],[310,34,303,34,"payload"],[310,41,303,41],[310,42,303,42,"params"],[310,48,303,48],[310,53,303,53,"undefined"],[310,62,303,62],[310,66,303,66,"routeParamList"],[310,80,303,80],[310,81,303,81,"route"],[310,86,303,86],[310,87,303,87,"name"],[310,91,303,91],[310,92,303,92],[310,97,303,97,"undefined"],[310,106,303,106],[310,109,303,109],[311,16,304,14],[311,19,304,17,"routeParamList"],[311,33,304,31],[311,34,304,32,"route"],[311,39,304,37],[311,40,304,38,"name"],[311,44,304,42],[311,45,304,43],[312,16,305,14],[312,19,305,17,"action"],[312,25,305,23],[312,26,305,24,"payload"],[312,33,305,31],[312,34,305,32,"params"],[313,14,306,12],[313,15,306,13],[313,18,306,16,"undefined"],[313,27,306,25],[314,14,307,12],[314,18,307,18,"newRoute"],[314,26,307,26],[314,29,307,29,"params"],[314,35,307,35],[314,40,307,40,"route"],[314,45,307,45],[314,46,307,46,"params"],[314,52,307,52],[314,55,307,55],[315,16,308,14],[315,19,308,17,"route"],[315,24,308,22],[316,16,309,14,"key"],[316,19,309,17],[317,16,310,14,"params"],[318,14,311,12],[318,15,311,13],[318,18,311,16,"route"],[318,23,311,21],[319,14,312,12],[319,21,312,19],[320,16,313,14],[320,19,313,17,"state"],[320,24,313,22],[321,16,314,14,"preloadedRouteKeys"],[321,34,314,32],[321,36,314,34,"state"],[321,41,314,39],[321,42,314,40,"preloadedRouteKeys"],[321,60,314,58],[321,61,314,59,"filter"],[321,67,314,65],[321,68,314,66,"key"],[321,71,314,69],[321,75,314,73,"key"],[321,78,314,76],[321,83,314,81,"route"],[321,88,314,86],[321,89,314,87,"key"],[321,92,314,90],[321,93,314,91],[321,94,314,92,"concat"],[321,100,314,98],[321,101,314,99,"newRoute"],[321,109,314,107],[321,110,314,108,"key"],[321,113,314,111],[321,114,314,112],[322,16,315,14,"routes"],[322,22,315,20],[322,24,315,22,"state"],[322,29,315,27],[322,30,315,28,"routes"],[322,36,315,34],[322,37,315,35,"map"],[322,40,315,38],[322,41,315,39],[322,42,315,40,"route"],[322,47,315,45],[322,49,315,47,"index"],[322,54,315,52],[322,59,315,57,"index"],[322,64,315,62],[322,69,315,67,"routeIndex"],[322,79,315,77],[322,82,315,80,"newRoute"],[322,90,315,88],[322,93,315,91,"route"],[322,98,315,96],[322,99,315,97],[323,16,316,14,"history"],[323,23,316,21],[323,25,316,23,"key"],[323,28,316,26],[323,33,316,31,"route"],[323,38,316,36],[323,39,316,37,"key"],[323,42,316,40],[323,45,316,43,"state"],[323,50,316,48],[323,51,316,49,"history"],[323,58,316,56],[323,61,316,59,"state"],[323,66,316,64],[323,67,316,65,"history"],[323,74,316,72],[323,75,316,73,"filter"],[323,81,316,79],[323,82,316,80,"record"],[323,88,316,86],[323,92,316,90,"record"],[323,98,316,96],[323,99,316,97,"key"],[323,102,316,100],[323,107,316,105,"route"],[323,112,316,110],[323,113,316,111,"key"],[323,116,316,114],[324,14,317,12],[324,15,317,13],[325,12,318,10],[326,10,319,8],[327,12,320,10],[327,19,320,17,"BaseRouter"],[327,32,320,27],[327,33,320,27,"BaseRouter"],[327,43,320,27],[327,44,320,28,"getStateForAction"],[327,61,320,45],[327,62,320,46,"state"],[327,67,320,51],[327,69,320,53,"action"],[327,75,320,59],[327,76,320,60],[328,8,321,6],[329,6,322,4],[329,7,322,5],[330,6,323,4,"actionCreators"],[330,20,323,18],[330,22,323,20,"TabActions"],[331,4,324,2],[331,5,324,3],[332,4,325,2],[332,11,325,9,"router"],[332,17,325,15],[333,2,326,0],[334,0,326,1],[334,3]],"functionMap":{"names":["<global>","TabActions.jumpTo","getRouteHistory","routes.findIndex$argument_0","changeIndex","history.filter$argument_0","history.findLastIndex$argument_0","TabRouter","router.getInitialState","routeNames.map$argument_0","router.getRehydratedState","state.routes.find$argument_0","routes.map$argument_0","state.history.filter$argument_0","state.preloadedRouteKeys.filter$argument_0","router.getStateForRouteNamesChange","routes.find$argument_0","router.getStateForRouteFocus","state.routes.findIndex$argument_0","router.getStateForAction","state.routes.map$argument_0","updatedState.preloadedRouteKeys.filter$argument_0","state.history.findLastIndex$argument_0","state.routes.findLastIndex$argument_0"],"mappings":"AAA;ECM;GDQ;wBEE;2CCwB,wCD;CFe;oBIC;+BCM,+DD;8DEE,6BF;CJqB;OOC;ICO;oCCK;QDI;KDY;IGC;oCDQ;wCEC,oBF;OCU;mCEE,kBF;4CGC,gCH;6DIS,8BJ;KHE;IQC;oCNK,0BE,yDF;OMI;MFI,yCG,qBH,CE;KRW;IUC;2CCC,kBD;KVK;IYC;iDDS,2CC;uCCM;eDgC;yEEI,mDF;qEGW,qCH;qDIwB,kCJ;kELe,sCK;sDDO,2CC;kELwB,wBK;uCCC,yDD;gFNC,kCM;KZM;CPI"},"hasCjsExports":false},"type":"js/module"}]}