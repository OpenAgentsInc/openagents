{"dependencies":[],"output":[{"data":{"code":"__d(function (global, require, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {\n  'use strict';\n\n  Object.defineProperty(exports, '__esModule', {\n    value: true\n  });\n  Object.defineProperty(exports, \"default\", {\n    enumerable: true,\n    get: function () {\n      return parseHermesStack;\n    }\n  });\n  var RE_FRAME = /^ {4}at (.+?)(?: \\((native)\\)?| \\((address at )?(.*?):(\\d+):(\\d+)\\))$/;\n  var RE_SKIPPED = /^ {4}... skipping (\\d+) frames$/;\n  var RE_COMPONENT_NO_STACK = /^ {4}at .*$/;\n  function isInternalBytecodeSourceUrl(sourceUrl) {\n    return sourceUrl === 'InternalBytecode.js';\n  }\n  function parseLine(line) {\n    var asFrame = line.match(RE_FRAME);\n    if (asFrame) {\n      return {\n        type: 'FRAME',\n        functionName: asFrame[1],\n        location: asFrame[2] === 'native' ? {\n          type: 'NATIVE'\n        } : asFrame[3] === 'address at ' ? isInternalBytecodeSourceUrl(asFrame[4]) ? {\n          type: 'INTERNAL_BYTECODE',\n          sourceUrl: asFrame[4],\n          line1Based: Number.parseInt(asFrame[5], 10),\n          virtualOffset0Based: Number.parseInt(asFrame[6], 10)\n        } : {\n          type: 'BYTECODE',\n          sourceUrl: asFrame[4],\n          line1Based: Number.parseInt(asFrame[5], 10),\n          virtualOffset0Based: Number.parseInt(asFrame[6], 10)\n        } : {\n          type: 'SOURCE',\n          sourceUrl: asFrame[4],\n          line1Based: Number.parseInt(asFrame[5], 10),\n          column1Based: Number.parseInt(asFrame[6], 10)\n        }\n      };\n    }\n    var asSkipped = line.match(RE_SKIPPED);\n    if (asSkipped) {\n      return {\n        type: 'SKIPPED',\n        count: Number.parseInt(asSkipped[1], 10)\n      };\n    }\n  }\n  function parseHermesStack(stack) {\n    var lines = stack.split(/\\n/);\n    var entries = [];\n    var lastMessageLine = -1;\n    for (var i = 0; i < lines.length; ++i) {\n      var line = lines[i];\n      if (!line) {\n        continue;\n      }\n      var entry = parseLine(line);\n      if (entry) {\n        entries.push(entry);\n        continue;\n      }\n      if (RE_COMPONENT_NO_STACK.test(line)) {\n        continue;\n      }\n      lastMessageLine = i;\n      entries = [];\n    }\n    var message = lines.slice(0, lastMessageLine + 1).join('\\n');\n    return {\n      message,\n      entries\n    };\n  }\n});","lineCount":79,"map":[[2,2,11,0],[2,14,11,12],[4,2,11,13,"Object"],[4,8,11,13],[4,9,11,13,"defineProperty"],[4,23,11,13],[4,24,11,13,"exports"],[4,31,11,13],[5,4,11,13,"value"],[5,9,11,13],[6,2,11,13],[7,2,122,15,"Object"],[7,8,122,15],[7,9,122,15,"defineProperty"],[7,23,122,15],[7,24,122,15,"exports"],[7,31,122,15],[8,4,122,15,"enumerable"],[8,14,122,15],[9,4,122,15,"get"],[9,7,122,15],[9,18,122,15,"get"],[9,19,122,15],[10,6,122,15],[10,13,122,15,"parseHermesStack"],[10,29,122,15],[11,4,122,15],[12,2,122,15],[13,2,69,0],[13,6,69,6,"RE_FRAME"],[13,14,69,14],[13,17,70,2],[13,88,70,73],[14,2,74,0],[14,6,74,6,"RE_SKIPPED"],[14,16,74,16],[14,19,74,19],[14,52,74,52],[15,2,75,0],[15,6,75,6,"RE_COMPONENT_NO_STACK"],[15,27,75,27],[15,30,75,30],[15,43,75,43],[16,2,77,0],[16,11,77,9,"isInternalBytecodeSourceUrl"],[16,38,77,36,"isInternalBytecodeSourceUrl"],[16,39,77,37,"sourceUrl"],[16,48,77,54],[16,50,77,65],[17,4,79,2],[17,11,79,9,"sourceUrl"],[17,20,79,18],[17,25,79,23],[17,46,79,44],[18,2,80,0],[19,2,82,0],[19,11,82,9,"parseLine"],[19,20,82,18,"parseLine"],[19,21,82,19,"line"],[19,25,82,31],[19,27,82,52],[20,4,83,2],[20,8,83,8,"asFrame"],[20,15,83,15],[20,18,83,18,"line"],[20,22,83,22],[20,23,83,23,"match"],[20,28,83,28],[20,29,83,29,"RE_FRAME"],[20,37,83,37],[20,38,83,38],[21,4,84,2],[21,8,84,6,"asFrame"],[21,15,84,13],[21,17,84,15],[22,6,85,4],[22,13,85,11],[23,8,86,6,"type"],[23,12,86,10],[23,14,86,12],[23,21,86,19],[24,8,87,6,"functionName"],[24,20,87,18],[24,22,87,20,"asFrame"],[24,29,87,27],[24,30,87,28],[24,31,87,29],[24,32,87,30],[25,8,88,6,"location"],[25,16,88,14],[25,18,89,8,"asFrame"],[25,25,89,15],[25,26,89,16],[25,27,89,17],[25,28,89,18],[25,33,89,23],[25,41,89,31],[25,44,90,12],[26,10,90,13,"type"],[26,14,90,17],[26,16,90,19],[27,8,90,27],[27,9,90,28],[27,12,91,12,"asFrame"],[27,19,91,19],[27,20,91,20],[27,21,91,21],[27,22,91,22],[27,27,91,27],[27,40,91,40],[27,43,92,14,"isInternalBytecodeSourceUrl"],[27,70,92,41],[27,71,92,42,"asFrame"],[27,78,92,49],[27,79,92,50],[27,80,92,51],[27,81,92,52],[27,82,92,53],[27,85,93,16],[28,10,94,18,"type"],[28,14,94,22],[28,16,94,24],[28,35,94,43],[29,10,95,18,"sourceUrl"],[29,19,95,27],[29,21,95,29,"asFrame"],[29,28,95,36],[29,29,95,37],[29,30,95,38],[29,31,95,39],[30,10,96,18,"line1Based"],[30,20,96,28],[30,22,96,30,"Number"],[30,28,96,36],[30,29,96,37,"parseInt"],[30,37,96,45],[30,38,96,46,"asFrame"],[30,45,96,53],[30,46,96,54],[30,47,96,55],[30,48,96,56],[30,50,96,58],[30,52,96,60],[30,53,96,61],[31,10,97,18,"virtualOffset0Based"],[31,29,97,37],[31,31,97,39,"Number"],[31,37,97,45],[31,38,97,46,"parseInt"],[31,46,97,54],[31,47,97,55,"asFrame"],[31,54,97,62],[31,55,97,63],[31,56,97,64],[31,57,97,65],[31,59,97,67],[31,61,97,69],[32,8,98,16],[32,9,98,17],[32,12,99,16],[33,10,100,18,"type"],[33,14,100,22],[33,16,100,24],[33,26,100,34],[34,10,101,18,"sourceUrl"],[34,19,101,27],[34,21,101,29,"asFrame"],[34,28,101,36],[34,29,101,37],[34,30,101,38],[34,31,101,39],[35,10,102,18,"line1Based"],[35,20,102,28],[35,22,102,30,"Number"],[35,28,102,36],[35,29,102,37,"parseInt"],[35,37,102,45],[35,38,102,46,"asFrame"],[35,45,102,53],[35,46,102,54],[35,47,102,55],[35,48,102,56],[35,50,102,58],[35,52,102,60],[35,53,102,61],[36,10,103,18,"virtualOffset0Based"],[36,29,103,37],[36,31,103,39,"Number"],[36,37,103,45],[36,38,103,46,"parseInt"],[36,46,103,54],[36,47,103,55,"asFrame"],[36,54,103,62],[36,55,103,63],[36,56,103,64],[36,57,103,65],[36,59,103,67],[36,61,103,69],[37,8,104,16],[37,9,104,17],[37,12,105,14],[38,10,106,16,"type"],[38,14,106,20],[38,16,106,22],[38,24,106,30],[39,10,107,16,"sourceUrl"],[39,19,107,25],[39,21,107,27,"asFrame"],[39,28,107,34],[39,29,107,35],[39,30,107,36],[39,31,107,37],[40,10,108,16,"line1Based"],[40,20,108,26],[40,22,108,28,"Number"],[40,28,108,34],[40,29,108,35,"parseInt"],[40,37,108,43],[40,38,108,44,"asFrame"],[40,45,108,51],[40,46,108,52],[40,47,108,53],[40,48,108,54],[40,50,108,56],[40,52,108,58],[40,53,108,59],[41,10,109,16,"column1Based"],[41,22,109,28],[41,24,109,30,"Number"],[41,30,109,36],[41,31,109,37,"parseInt"],[41,39,109,45],[41,40,109,46,"asFrame"],[41,47,109,53],[41,48,109,54],[41,49,109,55],[41,50,109,56],[41,52,109,58],[41,54,109,60],[42,8,110,14],[43,6,111,4],[43,7,111,5],[44,4,112,2],[45,4,113,2],[45,8,113,8,"asSkipped"],[45,17,113,17],[45,20,113,20,"line"],[45,24,113,24],[45,25,113,25,"match"],[45,30,113,30],[45,31,113,31,"RE_SKIPPED"],[45,41,113,41],[45,42,113,42],[46,4,114,2],[46,8,114,6,"asSkipped"],[46,17,114,15],[46,19,114,17],[47,6,115,4],[47,13,115,11],[48,8,116,6,"type"],[48,12,116,10],[48,14,116,12],[48,23,116,21],[49,8,117,6,"count"],[49,13,117,11],[49,15,117,13,"Number"],[49,21,117,19],[49,22,117,20,"parseInt"],[49,30,117,28],[49,31,117,29,"asSkipped"],[49,40,117,38],[49,41,117,39],[49,42,117,40],[49,43,117,41],[49,45,117,43],[49,47,117,45],[50,6,118,4],[50,7,118,5],[51,4,119,2],[52,2,120,0],[53,2,122,15],[53,11,122,24,"parseHermesStack"],[53,27,122,40,"parseHermesStack"],[53,28,122,41,"stack"],[53,33,122,54],[53,35,122,75],[54,4,123,2],[54,8,123,8,"lines"],[54,13,123,13],[54,16,123,16,"stack"],[54,21,123,21],[54,22,123,22,"split"],[54,27,123,27],[54,28,123,28],[54,32,123,32],[54,33,123,33],[55,4,124,2],[55,8,124,6,"entries"],[55,15,124,69],[55,18,124,72],[55,20,124,74],[56,4,125,2],[56,8,125,6,"lastMessageLine"],[56,23,125,21],[56,28,125,26],[57,4,126,2],[57,9,126,7],[57,13,126,11,"i"],[57,14,126,12],[57,17,126,15],[57,18,126,16],[57,20,126,18,"i"],[57,21,126,19],[57,24,126,22,"lines"],[57,29,126,27],[57,30,126,28,"length"],[57,36,126,34],[57,38,126,36],[57,40,126,38,"i"],[57,41,126,39],[57,43,126,41],[58,6,127,4],[58,10,127,10,"line"],[58,14,127,14],[58,17,127,17,"lines"],[58,22,127,22],[58,23,127,23,"i"],[58,24,127,24],[58,25,127,25],[59,6,128,4],[59,10,128,8],[59,11,128,9,"line"],[59,15,128,13],[59,17,128,15],[60,8,129,6],[61,6,130,4],[62,6,131,4],[62,10,131,10,"entry"],[62,15,131,15],[62,18,131,18,"parseLine"],[62,27,131,27],[62,28,131,28,"line"],[62,32,131,32],[62,33,131,33],[63,6,132,4],[63,10,132,8,"entry"],[63,15,132,13],[63,17,132,15],[64,8,133,6,"entries"],[64,15,133,13],[64,16,133,14,"push"],[64,20,133,18],[64,21,133,19,"entry"],[64,26,133,24],[64,27,133,25],[65,8,134,6],[66,6,135,4],[67,6,136,4],[67,10,136,8,"RE_COMPONENT_NO_STACK"],[67,31,136,29],[67,32,136,30,"test"],[67,36,136,34],[67,37,136,35,"line"],[67,41,136,39],[67,42,136,40],[67,44,136,42],[68,8,139,6],[69,6,140,4],[70,6,142,4,"lastMessageLine"],[70,21,142,19],[70,24,142,22,"i"],[70,25,142,23],[71,6,143,4,"entries"],[71,13,143,11],[71,16,143,14],[71,18,143,16],[72,4,144,2],[73,4,145,2],[73,8,145,8,"message"],[73,15,145,15],[73,18,145,18,"lines"],[73,23,145,23],[73,24,145,24,"slice"],[73,29,145,29],[73,30,145,30],[73,31,145,31],[73,33,145,33,"lastMessageLine"],[73,48,145,48],[73,51,145,51],[73,52,145,52],[73,53,145,53],[73,54,145,54,"join"],[73,58,145,58],[73,59,145,59],[73,63,145,63],[73,64,145,64],[74,4,146,2],[74,11,146,9],[75,6,146,10,"message"],[75,13,146,17],[76,6,146,19,"entries"],[77,4,146,26],[77,5,146,27],[78,2,147,0],[79,0,147,1],[79,3]],"functionMap":{"names":["<global>","isInternalBytecodeSourceUrl","parseLine","parseHermesStack"],"mappings":"AAA;AC4E;CDG;AEE;CFsC;eGE"},"hasCjsExports":false},"type":"js/module"}]}