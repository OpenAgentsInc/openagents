{"dependencies":[],"output":[{"data":{"code":"__d(function (global, require, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {\n  \"use strict\";\n\n  Object.defineProperty(exports, '__esModule', {\n    value: true\n  });\n  Object.defineProperty(exports, \"default\", {\n    enumerable: true,\n    get: function () {\n      return omitListItemParagraph;\n    }\n  });\n  function omitListItemParagraph(tokens) {\n    // used to ensure that we remove the correct ending paragraph token\n    var depth = null;\n    return tokens.filter((token, index) => {\n      // update depth if we've already removed a starting paragraph token\n      if (depth !== null) {\n        depth = depth + token.nesting;\n      }\n\n      // check for a list_item token followed by paragraph token (to remove)\n      if (token.type === 'list_item' && token.nesting === 1 && depth === null) {\n        var next = index + 1 in tokens ? tokens[index + 1] : null;\n        if (next && next.type === 'paragraph' && next.nesting === 1) {\n          depth = 0;\n          return true;\n        }\n      } else if (token.type === 'paragraph') {\n        if (token.nesting === 1 && depth === 1) {\n          // remove the paragraph token immediately after the list_item token\n          return false;\n        } else if (token.nesting === -1 && depth === 0) {\n          // remove the ending paragraph token; reset depth\n          depth = null;\n          return false;\n        }\n      }\n      return true;\n    });\n  }\n});","lineCount":42,"map":[[7,2,1,15,"Object"],[7,8,1,15],[7,9,1,15,"defineProperty"],[7,23,1,15],[7,24,1,15,"exports"],[7,31,1,15],[8,4,1,15,"enumerable"],[8,14,1,15],[9,4,1,15,"get"],[9,7,1,15],[9,18,1,15,"get"],[9,19,1,15],[10,6,1,15],[10,13,1,15,"omitListItemParagraph"],[10,34,1,15],[11,4,1,15],[12,2,1,15],[13,2,1,15],[13,11,1,24,"omitListItemParagraph"],[13,32,1,45,"omitListItemParagraph"],[13,33,1,46,"tokens"],[13,39,1,52],[13,41,1,54],[14,4,2,2],[15,4,3,2],[15,8,3,6,"depth"],[15,13,3,11],[15,16,3,14],[15,20,3,18],[16,4,4,2],[16,11,4,9,"tokens"],[16,17,4,15],[16,18,4,16,"filter"],[16,24,4,22],[16,25,4,23],[16,26,4,24,"token"],[16,31,4,29],[16,33,4,31,"index"],[16,38,4,36],[16,43,4,41],[17,6,5,4],[18,6,6,4],[18,10,6,8,"depth"],[18,15,6,13],[18,20,6,18],[18,24,6,22],[18,26,6,24],[19,8,7,6,"depth"],[19,13,7,11],[19,16,7,14,"depth"],[19,21,7,19],[19,24,7,22,"token"],[19,29,7,27],[19,30,7,28,"nesting"],[19,37,7,35],[20,6,8,4],[22,6,10,4],[23,6,11,4],[23,10,11,8,"token"],[23,15,11,13],[23,16,11,14,"type"],[23,20,11,18],[23,25,11,23],[23,36,11,34],[23,40,11,38,"token"],[23,45,11,43],[23,46,11,44,"nesting"],[23,53,11,51],[23,58,11,56],[23,59,11,57],[23,63,11,61,"depth"],[23,68,11,66],[23,73,11,71],[23,77,11,75],[23,79,11,77],[24,8,12,6],[24,12,12,12,"next"],[24,16,12,16],[24,19,12,19,"index"],[24,24,12,24],[24,27,12,27],[24,28,12,28],[24,32,12,32,"tokens"],[24,38,12,38],[24,41,12,41,"tokens"],[24,47,12,47],[24,48,12,48,"index"],[24,53,12,53],[24,56,12,56],[24,57,12,57],[24,58,12,58],[24,61,12,61],[24,65,12,65],[25,8,13,6],[25,12,13,10,"next"],[25,16,13,14],[25,20,13,18,"next"],[25,24,13,22],[25,25,13,23,"type"],[25,29,13,27],[25,34,13,32],[25,45,13,43],[25,49,13,47,"next"],[25,53,13,51],[25,54,13,52,"nesting"],[25,61,13,59],[25,66,13,64],[25,67,13,65],[25,69,13,67],[26,10,14,8,"depth"],[26,15,14,13],[26,18,14,16],[26,19,14,17],[27,10,15,8],[27,17,15,15],[27,21,15,19],[28,8,16,6],[29,6,17,4],[29,7,17,5],[29,13,17,11],[29,17,17,15,"token"],[29,22,17,20],[29,23,17,21,"type"],[29,27,17,25],[29,32,17,30],[29,43,17,41],[29,45,17,43],[30,8,18,6],[30,12,18,10,"token"],[30,17,18,15],[30,18,18,16,"nesting"],[30,25,18,23],[30,30,18,28],[30,31,18,29],[30,35,18,33,"depth"],[30,40,18,38],[30,45,18,43],[30,46,18,44],[30,48,18,46],[31,10,19,8],[32,10,20,8],[32,17,20,15],[32,22,20,20],[33,8,21,6],[33,9,21,7],[33,15,21,13],[33,19,21,17,"token"],[33,24,21,22],[33,25,21,23,"nesting"],[33,32,21,30],[33,39,21,37],[33,43,21,41,"depth"],[33,48,21,46],[33,53,21,51],[33,54,21,52],[33,56,21,54],[34,10,22,8],[35,10,23,8,"depth"],[35,15,23,13],[35,18,23,16],[35,22,23,20],[36,10,24,8],[36,17,24,15],[36,22,24,20],[37,8,25,6],[38,6,26,4],[39,6,27,4],[39,13,27,11],[39,17,27,15],[40,4,28,2],[40,5,28,3],[40,6,28,4],[41,2,29,0],[42,0,29,1],[42,3]],"functionMap":{"names":["<global>","omitListItemParagraph","tokens.filter$argument_0"],"mappings":"AAA,eC;uBCG;GDwB;CDC"},"hasCjsExports":false},"type":"js/module"}]}