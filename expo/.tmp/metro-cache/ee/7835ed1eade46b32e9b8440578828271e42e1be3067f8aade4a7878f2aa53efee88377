{"dependencies":[{"name":"./parseHermesStack","data":{"asyncType":null,"isESMImport":false,"locs":[{"start":{"line":16,"column":25},"end":{"line":16,"column":54}}],"key":"g2H8jHpfFDqRqQesJZl7YucB+lo=","exportNames":["*"],"imports":1}},{"name":"stacktrace-parser","data":{"asyncType":null,"isESMImport":false,"locs":[{"start":{"line":48,"column":27},"end":{"line":48,"column":55}}],"key":"3r9LnSX2gWMcqYH/F2aaJpiC6Uw=","exportNames":["*"],"imports":1}}],"output":[{"data":{"code":"__d(function (global, require, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {\n  'use strict';\n\n  Object.defineProperty(exports, '__esModule', {\n    value: true\n  });\n  Object.defineProperty(exports, \"default\", {\n    enumerable: true,\n    get: function () {\n      return parseErrorStack;\n    }\n  });\n  var parseHermesStack = require(_dependencyMap[0]).default;\n  function convertHermesStack(stack) {\n    var frames = [];\n    for (var entry of stack.entries) {\n      if (entry.type !== 'FRAME') {\n        continue;\n      }\n      var location = entry.location,\n        functionName = entry.functionName;\n      if (location.type === 'NATIVE' || location.type === 'INTERNAL_BYTECODE') {\n        continue;\n      }\n      frames.push({\n        methodName: functionName,\n        file: location.sourceUrl,\n        lineNumber: location.line1Based,\n        column: location.type === 'SOURCE' ? location.column1Based - 1 : location.virtualOffset0Based\n      });\n    }\n    return frames;\n  }\n  function parseErrorStack(errorStack) {\n    if (errorStack == null) {\n      return [];\n    }\n    var stacktraceParser = require(_dependencyMap[1]);\n    var parsedStack = Array.isArray(errorStack) ? errorStack : global.HermesInternal ? convertHermesStack(parseHermesStack(errorStack)) : stacktraceParser.parse(errorStack).map(frame => ({\n      ...frame,\n      column: frame.column != null ? frame.column - 1 : null\n    }));\n    return parsedStack;\n  }\n});","lineCount":45,"map":[[2,2,11,0],[2,14,11,12],[4,2,11,13,"Object"],[4,8,11,13],[4,9,11,13,"defineProperty"],[4,23,11,13],[4,24,11,13,"exports"],[4,31,11,13],[5,4,11,13,"value"],[5,9,11,13],[6,2,11,13],[7,2,41,15,"Object"],[7,8,41,15],[7,9,41,15,"defineProperty"],[7,23,41,15],[7,24,41,15,"exports"],[7,31,41,15],[8,4,41,15,"enumerable"],[8,14,41,15],[9,4,41,15,"get"],[9,7,41,15],[9,18,41,15,"get"],[9,19,41,15],[10,6,41,15],[10,13,41,15,"parseErrorStack"],[10,28,41,15],[11,4,41,15],[12,2,41,15],[13,2,16,0],[13,6,16,6,"parseHermesStack"],[13,22,16,22],[13,25,16,25,"require"],[13,32,16,32],[13,33,16,32,"_dependencyMap"],[13,47,16,32],[13,50,16,53],[13,51,16,54],[13,52,16,55,"default"],[13,59,16,62],[14,2,18,0],[14,11,18,9,"convertHermesStack"],[14,29,18,27,"convertHermesStack"],[14,30,18,28,"stack"],[14,35,18,52],[14,37,18,73],[15,4,19,2],[15,8,19,8,"frames"],[15,14,19,33],[15,17,19,36],[15,19,19,38],[16,4,20,2],[16,9,20,7],[16,13,20,13,"entry"],[16,18,20,18],[16,22,20,22,"stack"],[16,27,20,27],[16,28,20,28,"entries"],[16,35,20,35],[16,37,20,37],[17,6,21,4],[17,10,21,8,"entry"],[17,15,21,13],[17,16,21,14,"type"],[17,20,21,18],[17,25,21,23],[17,32,21,30],[17,34,21,32],[18,8,22,6],[19,6,23,4],[20,6,24,4],[20,10,24,11,"location"],[20,18,24,19],[20,21,24,37,"entry"],[20,26,24,42],[20,27,24,11,"location"],[20,35,24,19],[21,8,24,21,"functionName"],[21,20,24,33],[21,23,24,37,"entry"],[21,28,24,42],[21,29,24,21,"functionName"],[21,41,24,33],[22,6,25,4],[22,10,25,8,"location"],[22,18,25,16],[22,19,25,17,"type"],[22,23,25,21],[22,28,25,26],[22,36,25,34],[22,40,25,38,"location"],[22,48,25,46],[22,49,25,47,"type"],[22,53,25,51],[22,58,25,56],[22,77,25,75],[22,79,25,77],[23,8,26,6],[24,6,27,4],[25,6,28,4,"frames"],[25,12,28,10],[25,13,28,11,"push"],[25,17,28,15],[25,18,28,16],[26,8,29,6,"methodName"],[26,18,29,16],[26,20,29,18,"functionName"],[26,32,29,30],[27,8,30,6,"file"],[27,12,30,10],[27,14,30,12,"location"],[27,22,30,20],[27,23,30,21,"sourceUrl"],[27,32,30,30],[28,8,31,6,"lineNumber"],[28,18,31,16],[28,20,31,18,"location"],[28,28,31,26],[28,29,31,27,"line1Based"],[28,39,31,37],[29,8,32,6,"column"],[29,14,32,12],[29,16,33,8,"location"],[29,24,33,16],[29,25,33,17,"type"],[29,29,33,21],[29,34,33,26],[29,42,33,34],[29,45,34,12,"location"],[29,53,34,20],[29,54,34,21,"column1Based"],[29,66,34,33],[29,69,34,36],[29,70,34,37],[29,73,35,12,"location"],[29,81,35,20],[29,82,35,21,"virtualOffset0Based"],[30,6,36,4],[30,7,36,5],[30,8,36,6],[31,4,37,2],[32,4,38,2],[32,11,38,9,"frames"],[32,17,38,15],[33,2,39,0],[34,2,41,15],[34,11,41,24,"parseErrorStack"],[34,26,41,39,"parseErrorStack"],[34,27,42,2,"errorStack"],[34,37,42,21],[34,39,43,21],[35,4,44,2],[35,8,44,6,"errorStack"],[35,18,44,16],[35,22,44,20],[35,26,44,24],[35,28,44,26],[36,6,45,4],[36,13,45,11],[36,15,45,13],[37,4,46,2],[38,4,48,2],[38,8,48,8,"stacktraceParser"],[38,24,48,24],[38,27,48,27,"require"],[38,34,48,34],[38,35,48,34,"_dependencyMap"],[38,49,48,34],[38,52,48,54],[38,53,48,55],[39,4,49,2],[39,8,49,8,"parsedStack"],[39,19,49,19],[39,22,49,22,"Array"],[39,27,49,27],[39,28,49,28,"isArray"],[39,35,49,35],[39,36,49,36,"errorStack"],[39,46,49,46],[39,47,49,47],[39,50,50,6,"errorStack"],[39,60,50,16],[39,63,51,6,"global"],[39,69,51,12],[39,70,51,13,"HermesInternal"],[39,84,51,27],[39,87,52,8,"convertHermesStack"],[39,105,52,26],[39,106,52,27,"parseHermesStack"],[39,122,52,43],[39,123,52,44,"errorStack"],[39,133,52,54],[39,134,52,55],[39,135,52,56],[39,138,53,8,"stacktraceParser"],[39,154,53,24],[39,155,53,25,"parse"],[39,160,53,30],[39,161,53,31,"errorStack"],[39,171,53,41],[39,172,53,42],[39,173,53,43,"map"],[39,176,53,46],[39,177,53,48,"frame"],[39,182,53,53],[39,187,53,71],[40,6,54,10],[40,9,54,13,"frame"],[40,14,54,18],[41,6,55,10,"column"],[41,12,55,16],[41,14,55,18,"frame"],[41,19,55,23],[41,20,55,24,"column"],[41,26,55,30],[41,30,55,34],[41,34,55,38],[41,37,55,41,"frame"],[41,42,55,46],[41,43,55,47,"column"],[41,49,55,53],[41,52,55,56],[41,53,55,57],[41,56,55,60],[42,4,56,8],[42,5,56,9],[42,6,56,10],[42,7,56,11],[43,4,58,2],[43,11,58,9,"parsedStack"],[43,22,58,20],[44,2,59,0],[45,0,59,1],[45,3]],"functionMap":{"names":["<global>","convertHermesStack","parseErrorStack","stacktraceParser.parse.map$argument_0"],"mappings":"AAA;ACiB;CDqB;eEE;+CCY;UDG"},"hasCjsExports":false},"type":"js/module"}]}