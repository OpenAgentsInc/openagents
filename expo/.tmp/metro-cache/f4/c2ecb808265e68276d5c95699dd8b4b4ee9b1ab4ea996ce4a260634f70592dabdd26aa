{"dependencies":[{"name":"@babel/runtime/helpers/slicedToArray","data":{"asyncType":null,"isESMImport":false,"locs":[],"key":"5y7e5+zC7teYEEC6niD9f5zII1M=","exportNames":["*"],"imports":1}},{"name":"@babel/runtime/helpers/classCallCheck","data":{"asyncType":null,"isESMImport":false,"locs":[],"key":"yg7e6laZwmpbIvId5jovq9ugXp8=","exportNames":["*"],"imports":1}},{"name":"@babel/runtime/helpers/createClass","data":{"asyncType":null,"isESMImport":false,"locs":[],"key":"Z6pzkVZ2fvxBLkFTgVVOy4UDj30=","exportNames":["*"],"imports":1}},{"name":"../../webidl/PlatformObjects","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":18,"column":0},"end":{"line":18,"column":63}}],"key":"Pk6x04Q+mONi/ko61CZ+tu2fURg=","exportNames":["*"],"imports":1}},{"name":"../oldstylecollections/NodeList","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":19,"column":0},"end":{"line":19,"column":63}}],"key":"g5jmir8Q4+ANSEdKwIJy+zXvD+0=","exportNames":["*"],"imports":1}},{"name":"./internals/NodeInternals","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":20,"column":0},"end":{"line":26,"column":35}}],"key":"F4zamoEwysYHV6P3i/QfSQO3bPI=","exportNames":["*"],"imports":1}},{"name":"./specs/NativeDOM","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":27,"column":0},"end":{"line":27,"column":42}}],"key":"9AthY4AxLdDxCbVd7pMFoUw/FmE=","exportNames":["*"],"imports":1}},{"name":"./ReadOnlyElement","data":{"asyncType":null,"isESMImport":false,"locs":[{"start":{"line":331,"column":27},"end":{"line":331,"column":55}}],"key":"zI0KNLDwEK2Wax54FqFoyWdYCCs=","exportNames":["*"],"imports":1}}],"output":[{"data":{"code":"__d(function (global, require, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {\n  \"use strict\";\n\n  Object.defineProperty(exports, '__esModule', {\n    value: true\n  });\n  function _interopDefault(e) {\n    return e && e.__esModule ? e : {\n      default: e\n    };\n  }\n  Object.defineProperty(exports, \"default\", {\n    enumerable: true,\n    get: function () {\n      return ReadOnlyNode;\n    }\n  });\n  exports.getChildNodes = getChildNodes;\n  var _babelRuntimeHelpersSlicedToArray = require(_dependencyMap[0]);\n  var _slicedToArray = _interopDefault(_babelRuntimeHelpersSlicedToArray);\n  var _babelRuntimeHelpersClassCallCheck = require(_dependencyMap[1]);\n  var _classCallCheck = _interopDefault(_babelRuntimeHelpersClassCallCheck);\n  var _babelRuntimeHelpersCreateClass = require(_dependencyMap[2]);\n  var _createClass = _interopDefault(_babelRuntimeHelpersCreateClass);\n  var _webidlPlatformObjects = require(_dependencyMap[3]);\n  var _oldstylecollectionsNodeList = require(_dependencyMap[4]);\n  var _internalsNodeInternals = require(_dependencyMap[5]);\n  var _specsNativeDOM = require(_dependencyMap[6]);\n  var NativeDOM = _interopDefault(_specsNativeDOM);\n  var ReadOnlyNode = /*#__PURE__*/function () {\n    function ReadOnlyNode(instanceHandle, ownerDocument) {\n      (0, _classCallCheck.default)(this, ReadOnlyNode);\n      (0, _internalsNodeInternals.setOwnerDocument)(this, ownerDocument);\n      (0, _internalsNodeInternals.setInstanceHandle)(this, instanceHandle);\n    }\n    return (0, _createClass.default)(ReadOnlyNode, [{\n      key: \"childNodes\",\n      get: function () {\n        var childNodes = getChildNodes(this);\n        return (0, _oldstylecollectionsNodeList.createNodeList)(childNodes);\n      }\n    }, {\n      key: \"firstChild\",\n      get: function () {\n        var childNodes = getChildNodes(this);\n        if (childNodes.length === 0) {\n          return null;\n        }\n        return childNodes[0];\n      }\n    }, {\n      key: \"isConnected\",\n      get: function () {\n        var shadowNode = (0, _internalsNodeInternals.getNativeNodeReference)(this);\n        if (shadowNode == null) {\n          return false;\n        }\n        return NativeDOM.default.isConnected(shadowNode);\n      }\n    }, {\n      key: \"lastChild\",\n      get: function () {\n        var childNodes = getChildNodes(this);\n        if (childNodes.length === 0) {\n          return null;\n        }\n        return childNodes[childNodes.length - 1];\n      }\n    }, {\n      key: \"nextSibling\",\n      get: function () {\n        var _getNodeSiblingsAndPo = getNodeSiblingsAndPosition(this),\n          _getNodeSiblingsAndPo2 = (0, _slicedToArray.default)(_getNodeSiblingsAndPo, 2),\n          siblings = _getNodeSiblingsAndPo2[0],\n          position = _getNodeSiblingsAndPo2[1];\n        if (position === siblings.length - 1) {\n          return null;\n        }\n        return siblings[position + 1];\n      }\n    }, {\n      key: \"nodeName\",\n      get: function () {\n        throw new TypeError('`nodeName` is abstract and must be implemented in a subclass of `ReadOnlyNode`');\n      }\n    }, {\n      key: \"nodeType\",\n      get: function () {\n        throw new TypeError('`nodeType` is abstract and must be implemented in a subclass of `ReadOnlyNode`');\n      }\n    }, {\n      key: \"nodeValue\",\n      get: function () {\n        throw new TypeError('`nodeValue` is abstract and must be implemented in a subclass of `ReadOnlyNode`');\n      }\n    }, {\n      key: \"ownerDocument\",\n      get: function () {\n        return (0, _internalsNodeInternals.getOwnerDocument)(this);\n      }\n    }, {\n      key: \"parentElement\",\n      get: function () {\n        var parentNode = this.parentNode;\n        if (parentNode instanceof getReadOnlyElementClass()) {\n          return parentNode;\n        }\n        return null;\n      }\n    }, {\n      key: \"parentNode\",\n      get: function () {\n        var shadowNode = (0, _internalsNodeInternals.getNativeNodeReference)(this);\n        if (shadowNode == null) {\n          return null;\n        }\n        var parentInstanceHandle = NativeDOM.default.getParentNode(shadowNode);\n        if (parentInstanceHandle == null) {\n          return null;\n        }\n        return (0, _internalsNodeInternals.getPublicInstanceFromInstanceHandle)(parentInstanceHandle) ?? null;\n      }\n    }, {\n      key: \"previousSibling\",\n      get: function () {\n        var _getNodeSiblingsAndPo3 = getNodeSiblingsAndPosition(this),\n          _getNodeSiblingsAndPo4 = (0, _slicedToArray.default)(_getNodeSiblingsAndPo3, 2),\n          siblings = _getNodeSiblingsAndPo4[0],\n          position = _getNodeSiblingsAndPo4[1];\n        if (position === 0) {\n          return null;\n        }\n        return siblings[position - 1];\n      }\n    }, {\n      key: \"textContent\",\n      get: function () {\n        throw new TypeError('`textContent` is abstract and must be implemented in a subclass of `ReadOnlyNode`');\n      }\n    }, {\n      key: \"compareDocumentPosition\",\n      value: function compareDocumentPosition(otherNode) {\n        if (otherNode === this) {\n          return 0;\n        }\n        var shadowNode = (0, _internalsNodeInternals.getNativeNodeReference)(this);\n        var otherShadowNode = (0, _internalsNodeInternals.getNativeNodeReference)(otherNode);\n        if (shadowNode == null || otherShadowNode == null) {\n          return ReadOnlyNode.DOCUMENT_POSITION_DISCONNECTED;\n        }\n        return NativeDOM.default.compareDocumentPosition(shadowNode, otherShadowNode);\n      }\n    }, {\n      key: \"contains\",\n      value: function contains(otherNode) {\n        if (otherNode === this) {\n          return true;\n        }\n        var position = this.compareDocumentPosition(otherNode);\n        return (position & ReadOnlyNode.DOCUMENT_POSITION_CONTAINED_BY) !== 0;\n      }\n    }, {\n      key: \"getRootNode\",\n      value: function getRootNode() {\n        if (this.isConnected) {\n          return this.ownerDocument ?? this;\n        }\n        return this;\n      }\n    }, {\n      key: \"hasChildNodes\",\n      value: function hasChildNodes() {\n        return getChildNodes(this).length > 0;\n      }\n    }]);\n  }();\n  ReadOnlyNode.ELEMENT_NODE = 1;\n  ReadOnlyNode.ATTRIBUTE_NODE = 2;\n  ReadOnlyNode.TEXT_NODE = 3;\n  ReadOnlyNode.CDATA_SECTION_NODE = 4;\n  ReadOnlyNode.ENTITY_REFERENCE_NODE = 5;\n  ReadOnlyNode.ENTITY_NODE = 6;\n  ReadOnlyNode.PROCESSING_INSTRUCTION_NODE = 7;\n  ReadOnlyNode.COMMENT_NODE = 8;\n  ReadOnlyNode.DOCUMENT_NODE = 9;\n  ReadOnlyNode.DOCUMENT_TYPE_NODE = 10;\n  ReadOnlyNode.DOCUMENT_FRAGMENT_NODE = 11;\n  ReadOnlyNode.NOTATION_NODE = 12;\n  ReadOnlyNode.DOCUMENT_POSITION_DISCONNECTED = 1;\n  ReadOnlyNode.DOCUMENT_POSITION_PRECEDING = 2;\n  ReadOnlyNode.DOCUMENT_POSITION_FOLLOWING = 4;\n  ReadOnlyNode.DOCUMENT_POSITION_CONTAINS = 8;\n  ReadOnlyNode.DOCUMENT_POSITION_CONTAINED_BY = 16;\n  ReadOnlyNode.DOCUMENT_POSITION_IMPLEMENTATION_SPECIFIC = 32;\n  (0, _webidlPlatformObjects.setPlatformObject)(ReadOnlyNode);\n  function getChildNodes(node) {\n    var shadowNode = (0, _internalsNodeInternals.getNativeNodeReference)(node);\n    if (shadowNode == null) {\n      return [];\n    }\n    var childNodeInstanceHandles = NativeDOM.default.getChildNodes(shadowNode);\n    return childNodeInstanceHandles.map(instanceHandle => (0, _internalsNodeInternals.getPublicInstanceFromInstanceHandle)(instanceHandle)).filter(Boolean);\n  }\n  function getNodeSiblingsAndPosition(node) {\n    var parent = node.parentNode;\n    if (parent == null) {\n      return [[node], 0];\n    }\n    var siblings = getChildNodes(parent);\n    var position = siblings.indexOf(node);\n    if (position === -1) {\n      throw new TypeError(\"Missing node in parent's child node list\");\n    }\n    return [siblings, position];\n  }\n  var ReadOnlyElementClass;\n  function getReadOnlyElementClass() {\n    if (ReadOnlyElementClass == null) {\n      ReadOnlyElementClass = require(_dependencyMap[7]).default;\n    }\n    return ReadOnlyElementClass;\n  }\n});","lineCount":223,"map":[[15,13,29,21,"ReadOnlyNode"],[15,25,29,33],[16,4,29,33],[17,2,29,33],[18,2,293,0,"exports"],[18,9,293,0],[18,10,293,0,"getChildNodes"],[18,23,293,0],[18,26,293,0,"getChildNodes"],[18,39,293,0],[19,2,306,1],[19,6,306,1,"_babelRuntimeHelpersSlicedToArray"],[19,39,306,1],[19,42,306,1,"require"],[19,49,306,1],[19,50,306,1,"_dependencyMap"],[19,64,306,1],[20,2,306,1],[20,6,306,1,"_slicedToArray"],[20,20,306,1],[20,23,306,1,"_interopDefault"],[20,38,306,1],[20,39,306,1,"_babelRuntimeHelpersSlicedToArray"],[20,72,306,1],[21,2,306,1],[21,6,306,1,"_babelRuntimeHelpersClassCallCheck"],[21,40,306,1],[21,43,306,1,"require"],[21,50,306,1],[21,51,306,1,"_dependencyMap"],[21,65,306,1],[22,2,306,1],[22,6,306,1,"_classCallCheck"],[22,21,306,1],[22,24,306,1,"_interopDefault"],[22,39,306,1],[22,40,306,1,"_babelRuntimeHelpersClassCallCheck"],[22,74,306,1],[23,2,306,1],[23,6,306,1,"_babelRuntimeHelpersCreateClass"],[23,37,306,1],[23,40,306,1,"require"],[23,47,306,1],[23,48,306,1,"_dependencyMap"],[23,62,306,1],[24,2,306,1],[24,6,306,1,"_createClass"],[24,18,306,1],[24,21,306,1,"_interopDefault"],[24,36,306,1],[24,37,306,1,"_babelRuntimeHelpersCreateClass"],[24,68,306,1],[25,2,18,0],[25,6,18,0,"_webidlPlatformObjects"],[25,28,18,0],[25,31,18,0,"require"],[25,38,18,0],[25,39,18,0,"_dependencyMap"],[25,53,18,0],[26,2,19,0],[26,6,19,0,"_oldstylecollectionsNodeList"],[26,34,19,0],[26,37,19,0,"require"],[26,44,19,0],[26,45,19,0,"_dependencyMap"],[26,59,19,0],[27,2,20,0],[27,6,20,0,"_internalsNodeInternals"],[27,29,20,0],[27,32,20,0,"require"],[27,39,20,0],[27,40,20,0,"_dependencyMap"],[27,54,20,0],[28,2,27,0],[28,6,27,0,"_specsNativeDOM"],[28,21,27,0],[28,24,27,0,"require"],[28,31,27,0],[28,32,27,0,"_dependencyMap"],[28,46,27,0],[29,2,27,0],[29,6,27,0,"NativeDOM"],[29,15,27,0],[29,18,27,0,"_interopDefault"],[29,33,27,0],[29,34,27,0,"_specsNativeDOM"],[29,49,27,0],[30,2,27,42],[30,6,29,21,"ReadOnlyNode"],[30,18,29,33],[31,4,30,2],[31,13,30,2,"ReadOnlyNode"],[31,26,31,4,"instanceHandle"],[31,40,31,34],[31,42,33,4,"ownerDocument"],[31,55,33,45],[31,57,34,4],[32,6,34,4],[32,10,34,4,"_classCallCheck"],[32,25,34,4],[32,26,34,4,"default"],[32,33,34,4],[32,41,34,4,"ReadOnlyNode"],[32,53,34,4],[33,6,37,4],[33,10,37,4,"setOwnerDocument"],[33,33,37,20],[33,34,37,20,"setOwnerDocument"],[33,50,37,20],[33,52,37,21],[33,56,37,25],[33,58,37,27,"ownerDocument"],[33,71,37,40],[33,72,37,41],[34,6,38,4],[34,10,38,4,"setInstanceHandle"],[34,33,38,21],[34,34,38,21,"setInstanceHandle"],[34,51,38,21],[34,53,38,22],[34,57,38,26],[34,59,38,28,"instanceHandle"],[34,73,38,42],[34,74,38,43],[35,4,39,2],[36,4,39,3],[36,15,39,3,"_createClass"],[36,27,39,3],[36,28,39,3,"default"],[36,35,39,3],[36,37,39,3,"ReadOnlyNode"],[36,49,39,3],[37,6,39,3,"key"],[37,9,39,3],[38,6,39,3,"get"],[38,9,39,3],[38,11,41,2],[38,20,41,2,"get"],[38,21,41,2],[38,23,41,43],[39,8,42,4],[39,12,42,10,"childNodes"],[39,22,42,20],[39,25,42,23,"getChildNodes"],[39,38,42,36],[39,39,42,37],[39,43,42,41],[39,44,42,42],[40,8,43,4],[40,15,43,11],[40,19,43,11,"createNodeList"],[40,47,43,25],[40,48,43,25,"createNodeList"],[40,62,43,25],[40,64,43,26,"childNodes"],[40,74,43,36],[40,75,43,37],[41,6,44,2],[42,4,44,3],[43,6,44,3,"key"],[43,9,44,3],[44,6,44,3,"get"],[44,9,44,3],[44,11,46,2],[44,20,46,2,"get"],[44,21,46,2],[44,23,46,40],[45,8,47,4],[45,12,47,10,"childNodes"],[45,22,47,20],[45,25,47,23,"getChildNodes"],[45,38,47,36],[45,39,47,37],[45,43,47,41],[45,44,47,42],[46,8,49,4],[46,12,49,8,"childNodes"],[46,22,49,18],[46,23,49,19,"length"],[46,29,49,25],[46,34,49,30],[46,35,49,31],[46,37,49,33],[47,10,50,6],[47,17,50,13],[47,21,50,17],[48,8,51,4],[49,8,53,4],[49,15,53,11,"childNodes"],[49,25,53,21],[49,26,53,22],[49,27,53,23],[49,28,53,24],[50,6,54,2],[51,4,54,3],[52,6,54,3,"key"],[52,9,54,3],[53,6,54,3,"get"],[53,9,54,3],[53,11,56,2],[53,20,56,2,"get"],[53,21,56,2],[53,23,56,29],[54,8,57,4],[54,12,57,10,"shadowNode"],[54,22,57,20],[54,25,57,23],[54,29,57,23,"getNativeNodeReference"],[54,52,57,45],[54,53,57,45,"getNativeNodeReference"],[54,75,57,45],[54,77,57,46],[54,81,57,50],[54,82,57,51],[55,8,59,4],[55,12,59,8,"shadowNode"],[55,22,59,18],[55,26,59,22],[55,30,59,26],[55,32,59,28],[56,10,60,6],[56,17,60,13],[56,22,60,18],[57,8,61,4],[58,8,63,4],[58,15,63,11,"NativeDOM"],[58,24,63,20],[58,25,63,20,"default"],[58,32,63,20],[58,33,63,21,"isConnected"],[58,44,63,32],[58,45,63,33,"shadowNode"],[58,55,63,43],[58,56,63,44],[59,6,64,2],[60,4,64,3],[61,6,64,3,"key"],[61,9,64,3],[62,6,64,3,"get"],[62,9,64,3],[62,11,66,2],[62,20,66,2,"get"],[62,21,66,2],[62,23,66,39],[63,8,67,4],[63,12,67,10,"childNodes"],[63,22,67,20],[63,25,67,23,"getChildNodes"],[63,38,67,36],[63,39,67,37],[63,43,67,41],[63,44,67,42],[64,8,69,4],[64,12,69,8,"childNodes"],[64,22,69,18],[64,23,69,19,"length"],[64,29,69,25],[64,34,69,30],[64,35,69,31],[64,37,69,33],[65,10,70,6],[65,17,70,13],[65,21,70,17],[66,8,71,4],[67,8,73,4],[67,15,73,11,"childNodes"],[67,25,73,21],[67,26,73,22,"childNodes"],[67,36,73,32],[67,37,73,33,"length"],[67,43,73,39],[67,46,73,42],[67,47,73,43],[67,48,73,44],[68,6,74,2],[69,4,74,3],[70,6,74,3,"key"],[70,9,74,3],[71,6,74,3,"get"],[71,9,74,3],[71,11,76,2],[71,20,76,2,"get"],[71,21,76,2],[71,23,76,41],[72,8,77,4],[72,12,77,4,"_getNodeSiblingsAndPo"],[72,33,77,4],[72,36,77,33,"getNodeSiblingsAndPosition"],[72,62,77,59],[72,63,77,60],[72,67,77,64],[72,68,77,65],[73,10,77,65,"_getNodeSiblingsAndPo2"],[73,32,77,65],[73,39,77,65,"_slicedToArray"],[73,53,77,65],[73,54,77,65,"default"],[73,61,77,65],[73,63,77,65,"_getNodeSiblingsAndPo"],[73,84,77,65],[74,10,77,11,"siblings"],[74,18,77,19],[74,21,77,19,"_getNodeSiblingsAndPo2"],[74,43,77,19],[75,10,77,21,"position"],[75,18,77,29],[75,21,77,29,"_getNodeSiblingsAndPo2"],[75,43,77,29],[76,8,79,4],[76,12,79,8,"position"],[76,20,79,16],[76,25,79,21,"siblings"],[76,33,79,29],[76,34,79,30,"length"],[76,40,79,36],[76,43,79,39],[76,44,79,40],[76,46,79,42],[77,10,81,6],[77,17,81,13],[77,21,81,17],[78,8,82,4],[79,8,84,4],[79,15,84,11,"siblings"],[79,23,84,19],[79,24,84,20,"position"],[79,32,84,28],[79,35,84,31],[79,36,84,32],[79,37,84,33],[80,6,85,2],[81,4,85,3],[82,6,85,3,"key"],[82,9,85,3],[83,6,85,3,"get"],[83,9,85,3],[83,11,90,2],[83,20,90,2,"get"],[83,21,90,2],[83,23,90,25],[84,8,91,4],[84,14,91,10],[84,18,91,14,"TypeError"],[84,27,91,23],[84,28,92,6],[84,108,93,4],[84,109,93,5],[85,6,94,2],[86,4,94,3],[87,6,94,3,"key"],[87,9,94,3],[88,6,94,3,"get"],[88,9,94,3],[88,11,99,2],[88,20,99,2,"get"],[88,21,99,2],[88,23,99,25],[89,8,100,4],[89,14,100,10],[89,18,100,14,"TypeError"],[89,27,100,23],[89,28,101,6],[89,108,102,4],[89,109,102,5],[90,6,103,2],[91,4,103,3],[92,6,103,3,"key"],[92,9,103,3],[93,6,103,3,"get"],[93,9,103,3],[93,11,108,2],[93,20,108,2,"get"],[93,21,108,2],[93,23,108,33],[94,8,109,4],[94,14,109,10],[94,18,109,14,"TypeError"],[94,27,109,23],[94,28,110,6],[94,109,111,4],[94,110,111,5],[95,6,112,2],[96,4,112,3],[97,6,112,3,"key"],[97,9,112,3],[98,6,112,3,"get"],[98,9,112,3],[98,11,114,2],[98,20,114,2,"get"],[98,21,114,2],[98,23,114,50],[99,8,115,4],[99,15,115,11],[99,19,115,11,"getOwnerDocument"],[99,42,115,27],[99,43,115,27,"getOwnerDocument"],[99,59,115,27],[99,61,115,28],[99,65,115,32],[99,66,115,33],[100,6,116,2],[101,4,116,3],[102,6,116,3,"key"],[102,9,116,3],[103,6,116,3,"get"],[103,9,116,3],[103,11,118,2],[103,20,118,2,"get"],[103,21,118,2],[103,23,118,46],[104,8,119,4],[104,12,119,10,"parentNode"],[104,22,119,20],[104,25,119,23],[104,29,119,27],[104,30,119,28,"parentNode"],[104,40,119,38],[105,8,121,4],[105,12,121,8,"parentNode"],[105,22,121,18],[105,34,121,30,"getReadOnlyElementClass"],[105,57,121,53],[105,58,121,54],[105,59,121,55],[105,61,121,57],[106,10,122,6],[106,17,122,13,"parentNode"],[106,27,122,23],[107,8,123,4],[108,8,125,4],[108,15,125,11],[108,19,125,15],[109,6,126,2],[110,4,126,3],[111,6,126,3,"key"],[111,9,126,3],[112,6,126,3,"get"],[112,9,126,3],[112,11,128,2],[112,20,128,2,"get"],[112,21,128,2],[112,23,128,40],[113,8,129,4],[113,12,129,10,"shadowNode"],[113,22,129,20],[113,25,129,23],[113,29,129,23,"getNativeNodeReference"],[113,52,129,45],[113,53,129,45,"getNativeNodeReference"],[113,75,129,45],[113,77,129,46],[113,81,129,50],[113,82,129,51],[114,8,131,4],[114,12,131,8,"shadowNode"],[114,22,131,18],[114,26,131,22],[114,30,131,26],[114,32,131,28],[115,10,132,6],[115,17,132,13],[115,21,132,17],[116,8,133,4],[117,8,135,4],[117,12,135,10,"parentInstanceHandle"],[117,32,135,30],[117,35,135,33,"NativeDOM"],[117,44,135,42],[117,45,135,42,"default"],[117,52,135,42],[117,53,135,43,"getParentNode"],[117,66,135,56],[117,67,135,57,"shadowNode"],[117,77,135,67],[117,78,135,68],[118,8,137,4],[118,12,137,8,"parentInstanceHandle"],[118,32,137,28],[118,36,137,32],[118,40,137,36],[118,42,137,38],[119,10,138,6],[119,17,138,13],[119,21,138,17],[120,8,139,4],[121,8,141,4],[121,15,141,11],[121,19,141,11,"getPublicInstanceFromInstanceHandle"],[121,42,141,46],[121,43,141,46,"getPublicInstanceFromInstanceHandle"],[121,78,141,46],[121,80,141,47,"parentInstanceHandle"],[121,100,141,67],[121,101,141,68],[121,105,141,72],[121,109,141,76],[122,6,142,2],[123,4,142,3],[124,6,142,3,"key"],[124,9,142,3],[125,6,142,3,"get"],[125,9,142,3],[125,11,144,2],[125,20,144,2,"get"],[125,21,144,2],[125,23,144,45],[126,8,145,4],[126,12,145,4,"_getNodeSiblingsAndPo3"],[126,34,145,4],[126,37,145,33,"getNodeSiblingsAndPosition"],[126,63,145,59],[126,64,145,60],[126,68,145,64],[126,69,145,65],[127,10,145,65,"_getNodeSiblingsAndPo4"],[127,32,145,65],[127,39,145,65,"_slicedToArray"],[127,53,145,65],[127,54,145,65,"default"],[127,61,145,65],[127,63,145,65,"_getNodeSiblingsAndPo3"],[127,85,145,65],[128,10,145,11,"siblings"],[128,18,145,19],[128,21,145,19,"_getNodeSiblingsAndPo4"],[128,43,145,19],[129,10,145,21,"position"],[129,18,145,29],[129,21,145,29,"_getNodeSiblingsAndPo4"],[129,43,145,29],[130,8,147,4],[130,12,147,8,"position"],[130,20,147,16],[130,25,147,21],[130,26,147,22],[130,28,147,24],[131,10,149,6],[131,17,149,13],[131,21,149,17],[132,8,150,4],[133,8,152,4],[133,15,152,11,"siblings"],[133,23,152,19],[133,24,152,20,"position"],[133,32,152,28],[133,35,152,31],[133,36,152,32],[133,37,152,33],[134,6,153,2],[135,4,153,3],[136,6,153,3,"key"],[136,9,153,3],[137,6,153,3,"get"],[137,9,153,3],[137,11,158,2],[137,20,158,2,"get"],[137,21,158,2],[137,23,158,28],[138,8,159,4],[138,14,159,10],[138,18,159,14,"TypeError"],[138,27,159,23],[138,28,160,6],[138,111,161,4],[138,112,161,5],[139,6,162,2],[140,4,162,3],[141,6,162,3,"key"],[141,9,162,3],[142,6,162,3,"value"],[142,11,162,3],[142,13,164,2],[142,22,164,2,"compareDocumentPosition"],[142,45,164,25,"compareDocumentPosition"],[142,46,164,26,"otherNode"],[142,55,164,49],[142,57,164,59],[143,8,166,4],[143,12,166,8,"otherNode"],[143,21,166,17],[143,26,166,22],[143,30,166,26],[143,32,166,28],[144,10,167,6],[144,17,167,13],[144,18,167,14],[145,8,168,4],[146,8,170,4],[146,12,170,10,"shadowNode"],[146,22,170,20],[146,25,170,23],[146,29,170,23,"getNativeNodeReference"],[146,52,170,45],[146,53,170,45,"getNativeNodeReference"],[146,75,170,45],[146,77,170,46],[146,81,170,50],[146,82,170,51],[147,8,171,4],[147,12,171,10,"otherShadowNode"],[147,27,171,25],[147,30,171,28],[147,34,171,28,"getNativeNodeReference"],[147,57,171,50],[147,58,171,50,"getNativeNodeReference"],[147,80,171,50],[147,82,171,51,"otherNode"],[147,91,171,60],[147,92,171,61],[148,8,173,4],[148,12,173,8,"shadowNode"],[148,22,173,18],[148,26,173,22],[148,30,173,26],[148,34,173,30,"otherShadowNode"],[148,49,173,45],[148,53,173,49],[148,57,173,53],[148,59,173,55],[149,10,174,6],[149,17,174,13,"ReadOnlyNode"],[149,29,174,25],[149,30,174,26,"DOCUMENT_POSITION_DISCONNECTED"],[149,60,174,56],[150,8,175,4],[151,8,177,4],[151,15,177,11,"NativeDOM"],[151,24,177,20],[151,25,177,20,"default"],[151,32,177,20],[151,33,177,21,"compareDocumentPosition"],[151,56,177,44],[151,57,177,45,"shadowNode"],[151,67,177,55],[151,69,177,57,"otherShadowNode"],[151,84,177,72],[151,85,177,73],[152,6,178,2],[153,4,178,3],[154,6,178,3,"key"],[154,9,178,3],[155,6,178,3,"value"],[155,11,178,3],[155,13,180,2],[155,22,180,2,"contains"],[155,30,180,10,"contains"],[155,31,180,11,"otherNode"],[155,40,180,34],[155,42,180,45],[156,8,181,4],[156,12,181,8,"otherNode"],[156,21,181,17],[156,26,181,22],[156,30,181,26],[156,32,181,28],[157,10,182,6],[157,17,182,13],[157,21,182,17],[158,8,183,4],[159,8,185,4],[159,12,185,10,"position"],[159,20,185,18],[159,23,185,21],[159,27,185,25],[159,28,185,26,"compareDocumentPosition"],[159,51,185,49],[159,52,185,50,"otherNode"],[159,61,185,59],[159,62,185,60],[160,8,187,4],[160,15,187,11],[160,16,187,12,"position"],[160,24,187,20],[160,27,187,23,"ReadOnlyNode"],[160,39,187,35],[160,40,187,36,"DOCUMENT_POSITION_CONTAINED_BY"],[160,70,187,66],[160,76,187,72],[160,77,187,73],[161,6,188,2],[162,4,188,3],[163,6,188,3,"key"],[163,9,188,3],[164,6,188,3,"value"],[164,11,188,3],[164,13,190,2],[164,22,190,2,"getRootNode"],[164,33,190,13,"getRootNode"],[164,34,190,13],[164,36,190,30],[165,8,191,4],[165,12,191,8],[165,16,191,12],[165,17,191,13,"isConnected"],[165,28,191,24],[165,30,191,26],[166,10,193,6],[166,17,193,13],[166,21,193,17],[166,22,193,18,"ownerDocument"],[166,35,193,31],[166,39,193,35],[166,43,193,39],[167,8,194,4],[168,8,196,4],[168,15,196,11],[168,19,196,15],[169,6,197,2],[170,4,197,3],[171,6,197,3,"key"],[171,9,197,3],[172,6,197,3,"value"],[172,11,197,3],[172,13,199,2],[172,22,199,2,"hasChildNodes"],[172,35,199,15,"hasChildNodes"],[172,36,199,15],[172,38,199,27],[173,8,200,4],[173,15,200,11,"getChildNodes"],[173,28,200,24],[173,29,200,25],[173,33,200,29],[173,34,200,30],[173,35,200,31,"length"],[173,41,200,37],[173,44,200,40],[173,45,200,41],[174,6,201,2],[175,4,201,3],[176,2,201,3],[177,2,29,21,"ReadOnlyNode"],[177,14,29,33],[177,15,210,9,"ELEMENT_NODE"],[177,27,210,21],[177,30,210,32],[177,31,210,33],[178,2,29,21,"ReadOnlyNode"],[178,14,29,33],[178,15,214,9,"ATTRIBUTE_NODE"],[178,29,214,23],[178,32,214,34],[178,33,214,35],[179,2,29,21,"ReadOnlyNode"],[179,14,29,33],[179,15,218,9,"TEXT_NODE"],[179,24,218,18],[179,27,218,29],[179,28,218,30],[180,2,29,21,"ReadOnlyNode"],[180,14,29,33],[180,15,222,9,"CDATA_SECTION_NODE"],[180,33,222,27],[180,36,222,38],[180,37,222,39],[181,2,29,21,"ReadOnlyNode"],[181,14,29,33],[181,15,226,9,"ENTITY_REFERENCE_NODE"],[181,36,226,30],[181,39,226,41],[181,40,226,42],[182,2,29,21,"ReadOnlyNode"],[182,14,29,33],[182,15,230,9,"ENTITY_NODE"],[182,26,230,20],[182,29,230,31],[182,30,230,32],[183,2,29,21,"ReadOnlyNode"],[183,14,29,33],[183,15,234,9,"PROCESSING_INSTRUCTION_NODE"],[183,42,234,36],[183,45,234,47],[183,46,234,48],[184,2,29,21,"ReadOnlyNode"],[184,14,29,33],[184,15,238,9,"COMMENT_NODE"],[184,27,238,21],[184,30,238,32],[184,31,238,33],[185,2,29,21,"ReadOnlyNode"],[185,14,29,33],[185,15,242,9,"DOCUMENT_NODE"],[185,28,242,22],[185,31,242,33],[185,32,242,34],[186,2,29,21,"ReadOnlyNode"],[186,14,29,33],[186,15,246,9,"DOCUMENT_TYPE_NODE"],[186,33,246,27],[186,36,246,38],[186,38,246,40],[187,2,29,21,"ReadOnlyNode"],[187,14,29,33],[187,15,250,9,"DOCUMENT_FRAGMENT_NODE"],[187,37,250,31],[187,40,250,42],[187,42,250,44],[188,2,29,21,"ReadOnlyNode"],[188,14,29,33],[188,15,254,9,"NOTATION_NODE"],[188,28,254,22],[188,31,254,33],[188,33,254,35],[189,2,29,21,"ReadOnlyNode"],[189,14,29,33],[189,15,264,9,"DOCUMENT_POSITION_DISCONNECTED"],[189,45,264,39],[189,48,264,50],[189,49,264,51],[190,2,29,21,"ReadOnlyNode"],[190,14,29,33],[190,15,270,9,"DOCUMENT_POSITION_PRECEDING"],[190,42,270,36],[190,45,270,47],[190,46,270,48],[191,2,29,21,"ReadOnlyNode"],[191,14,29,33],[191,15,276,9,"DOCUMENT_POSITION_FOLLOWING"],[191,42,276,36],[191,45,276,47],[191,46,276,48],[192,2,29,21,"ReadOnlyNode"],[192,14,29,33],[192,15,280,9,"DOCUMENT_POSITION_CONTAINS"],[192,41,280,35],[192,44,280,46],[192,45,280,47],[193,2,29,21,"ReadOnlyNode"],[193,14,29,33],[193,15,284,9,"DOCUMENT_POSITION_CONTAINED_BY"],[193,45,284,39],[193,48,284,50],[193,50,284,52],[194,2,29,21,"ReadOnlyNode"],[194,14,29,33],[194,15,288,9,"DOCUMENT_POSITION_IMPLEMENTATION_SPECIFIC"],[194,56,288,50],[194,59,288,61],[194,61,288,63],[195,2,291,0],[195,6,291,0,"setPlatformObject"],[195,28,291,17],[195,29,291,17,"setPlatformObject"],[195,46,291,17],[195,48,291,18,"ReadOnlyNode"],[195,60,291,30],[195,61,291,31],[196,2,293,7],[196,11,293,16,"getChildNodes"],[196,24,293,29,"getChildNodes"],[196,25,294,2,"node"],[196,29,294,20],[196,31,295,32],[197,4,296,2],[197,8,296,8,"shadowNode"],[197,18,296,18],[197,21,296,21],[197,25,296,21,"getNativeNodeReference"],[197,48,296,43],[197,49,296,43,"getNativeNodeReference"],[197,71,296,43],[197,73,296,44,"node"],[197,77,296,48],[197,78,296,49],[198,4,298,2],[198,8,298,6,"shadowNode"],[198,18,298,16],[198,22,298,20],[198,26,298,24],[198,28,298,26],[199,6,299,4],[199,13,299,11],[199,15,299,13],[200,4,300,2],[201,4,302,2],[201,8,302,8,"childNodeInstanceHandles"],[201,32,302,32],[201,35,302,35,"NativeDOM"],[201,44,302,44],[201,45,302,44,"default"],[201,52,302,44],[201,53,302,45,"getChildNodes"],[201,66,302,58],[201,67,302,59,"shadowNode"],[201,77,302,69],[201,78,302,70],[202,4,303,2],[202,11,303,9,"childNodeInstanceHandles"],[202,35,303,33],[202,36,304,5,"map"],[202,39,304,8],[202,40,304,9,"instanceHandle"],[202,54,304,23],[202,58,304,27],[202,62,304,27,"getPublicInstanceFromInstanceHandle"],[202,85,304,62],[202,86,304,62,"getPublicInstanceFromInstanceHandle"],[202,121,304,62],[202,123,304,63,"instanceHandle"],[202,137,304,77],[202,138,304,78],[202,139,304,79],[202,140,305,5,"filter"],[202,146,305,11],[202,147,305,12,"Boolean"],[202,154,305,19],[202,155,305,20],[203,2,306,0],[204,2,308,0],[204,11,308,9,"getNodeSiblingsAndPosition"],[204,37,308,35,"getNodeSiblingsAndPosition"],[204,38,309,2,"node"],[204,42,309,20],[204,44,310,42],[205,4,311,2],[205,8,311,8,"parent"],[205,14,311,14],[205,17,311,17,"node"],[205,21,311,21],[205,22,311,22,"parentNode"],[205,32,311,32],[206,4,312,2],[206,8,312,6,"parent"],[206,14,312,12],[206,18,312,16],[206,22,312,20],[206,24,312,22],[207,6,314,4],[207,13,314,11],[207,14,314,12],[207,15,314,13,"node"],[207,19,314,17],[207,20,314,18],[207,22,314,20],[207,23,314,21],[207,24,314,22],[208,4,315,2],[209,4,317,2],[209,8,317,8,"siblings"],[209,16,317,16],[209,19,317,19,"getChildNodes"],[209,32,317,32],[209,33,317,33,"parent"],[209,39,317,39],[209,40,317,40],[210,4,318,2],[210,8,318,8,"position"],[210,16,318,16],[210,19,318,19,"siblings"],[210,27,318,27],[210,28,318,28,"indexOf"],[210,35,318,35],[210,36,318,36,"node"],[210,40,318,40],[210,41,318,41],[211,4,320,2],[211,8,320,6,"position"],[211,16,320,14],[211,23,320,21],[211,25,320,23],[212,6,321,4],[212,12,321,10],[212,16,321,14,"TypeError"],[212,25,321,23],[212,26,321,24],[212,68,321,66],[212,69,321,67],[213,4,322,2],[214,4,324,2],[214,11,324,9],[214,12,324,10,"siblings"],[214,20,324,18],[214,22,324,20,"position"],[214,30,324,28],[214,31,324,29],[215,2,325,0],[216,2,327,0],[216,6,327,4,"ReadOnlyElementClass"],[216,26,327,24],[217,2,328,0],[217,11,328,9,"getReadOnlyElementClass"],[217,34,328,32,"getReadOnlyElementClass"],[217,35,328,32],[217,37,328,59],[218,4,329,2],[218,8,329,6,"ReadOnlyElementClass"],[218,28,329,26],[218,32,329,30],[218,36,329,34],[218,38,329,36],[219,6,331,4,"ReadOnlyElementClass"],[219,26,331,24],[219,29,331,27,"require"],[219,36,331,34],[219,37,331,34,"_dependencyMap"],[219,51,331,34],[219,54,331,54],[219,55,331,55],[219,56,331,56,"default"],[219,63,331,63],[220,4,332,2],[221,4,333,2],[221,11,333,9,"ReadOnlyElementClass"],[221,31,333,29],[222,2,334,0],[223,0,334,1],[223,3]],"functionMap":{"names":["<global>","ReadOnlyNode","constructor","get__childNodes","get__firstChild","get__isConnected","get__lastChild","get__nextSibling","get__nodeName","get__nodeType","get__nodeValue","get__ownerDocument","get__parentElement","get__parentNode","get__previousSibling","get__textContent","compareDocumentPosition","contains","getRootNode","hasChildNodes","getChildNodes","childNodeInstanceHandles.map$argument_0","getNodeSiblingsAndPosition","getReadOnlyElementClass"],"mappings":"AAA;eC4B;ECC;GDS;EEE;GFG;EGE;GHQ;EIE;GJQ;EKE;GLQ;EME;GNS;EOK;GPI;EQK;GRI;ESK;GTI;EUE;GVE;EWE;GXQ;EYE;GZc;EaE;GbS;EcK;GdI;EeE;Gfc;EgBE;GhBQ;EiBE;GjBO;EkBE;GlBE;CDwF;OoBI;SCW,qED;CpBE;AsBE;CtBiB;AuBG"},"hasCjsExports":false},"type":"js/module"}]}