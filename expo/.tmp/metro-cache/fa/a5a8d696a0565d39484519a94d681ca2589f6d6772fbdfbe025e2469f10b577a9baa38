{"dependencies":[{"name":"@babel/runtime/helpers/slicedToArray","data":{"asyncType":null,"isESMImport":false,"locs":[],"key":"5y7e5+zC7teYEEC6niD9f5zII1M=","exportNames":["*"],"imports":1}},{"name":"@babel/runtime/helpers/objectWithoutProperties","data":{"asyncType":null,"isESMImport":false,"locs":[],"key":"fnQVLibs90KHiJ7y48fLgPWzDS0=","exportNames":["*"],"imports":1}},{"name":"@react-navigation/native","data":{"asyncType":null,"isESMImport":false,"locs":[{"start":{"line":43,"column":17,"index":1780},"end":{"line":43,"column":52,"index":1815}}],"key":"uE+cRVNnMKkS9OYKR5fpRqPul5s=","exportNames":["*"],"imports":1}},{"name":"query-string","data":{"asyncType":null,"isESMImport":false,"locs":[{"start":{"line":44,"column":33,"index":1850},"end":{"line":44,"column":56,"index":1873}}],"key":"CQ4f6+ZdkmuRCkqw6zIINc/cka0=","exportNames":["*"],"imports":1}},{"name":"../matchers","data":{"asyncType":null,"isESMImport":false,"locs":[{"start":{"line":45,"column":19,"index":1895},"end":{"line":45,"column":41,"index":1917}}],"key":"lD+VV93WPi10A3qv5+9m649ytvA=","exportNames":["*"],"imports":1}}],"output":[{"data":{"code":"__d(function (global, require, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {\n  \"use strict\";\n\n  var _slicedToArray = require(_dependencyMap[0]).default;\n  var _objectWithoutProperties = require(_dependencyMap[1]).default;\n  var _excluded = [\"preserveDynamicRoutes\", \"preserveGroups\", \"shouldEncodeURISegment\"],\n    _excluded2 = [\"#\"];\n  var __createBinding = this && this.__createBinding || (Object.create ? function (o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    var desc = Object.getOwnPropertyDescriptor(m, k);\n    if (!desc || (\"get\" in desc ? !m.__esModule : desc.writable || desc.configurable)) {\n      desc = {\n        enumerable: true,\n        get: function () {\n          return m[k];\n        }\n      };\n    }\n    Object.defineProperty(o, k2, desc);\n  } : function (o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    o[k2] = m[k];\n  });\n  var __setModuleDefault = this && this.__setModuleDefault || (Object.create ? function (o, v) {\n    Object.defineProperty(o, \"default\", {\n      enumerable: true,\n      value: v\n    });\n  } : function (o, v) {\n    o[\"default\"] = v;\n  });\n  var __importStar = this && this.__importStar || function () {\n    var ownKeys = function (o) {\n      ownKeys = Object.getOwnPropertyNames || function (o) {\n        var ar = [];\n        for (var k in o) if (Object.prototype.hasOwnProperty.call(o, k)) ar[ar.length] = k;\n        return ar;\n      };\n      return ownKeys(o);\n    };\n    return function (mod) {\n      if (mod && mod.__esModule) return mod;\n      var result = {};\n      if (mod != null) for (var k = ownKeys(mod), i = 0; i < k.length; i++) if (k[i] !== \"default\") __createBinding(result, mod, k[i]);\n      __setModuleDefault(result, mod);\n      return result;\n    };\n  }();\n  Object.defineProperty(exports, \"__esModule\", {\n    value: true\n  });\n  exports.getParamName = undefined;\n  exports.validatePathConfig = validatePathConfig;\n  exports.fixCurrentParams = fixCurrentParams;\n  exports.appendQueryAndHash = appendQueryAndHash;\n  exports.appendBaseUrl = appendBaseUrl;\n  exports.getPathWithConventionsCollapsed = getPathWithConventionsCollapsed;\n  exports.isDynamicPart = isDynamicPart;\n  var native_1 = require(_dependencyMap[2]);\n  var queryString = __importStar(require(_dependencyMap[3]));\n  var matchers_1 = require(_dependencyMap[4]);\n  function validatePathConfig(_ref) {\n    var preserveDynamicRoutes = _ref.preserveDynamicRoutes,\n      preserveGroups = _ref.preserveGroups,\n      shouldEncodeURISegment = _ref.shouldEncodeURISegment,\n      options = _objectWithoutProperties(_ref, _excluded);\n    (0, native_1.validatePathConfig)(options);\n  }\n  function fixCurrentParams(allParams, route, stringify) {\n    // Better handle array params\n    var currentParams = Object.fromEntries(Object.entries(route.params).flatMap(_ref2 => {\n      var _ref3 = _slicedToArray(_ref2, 2),\n        key = _ref3[0],\n        value = _ref3[1];\n      if (key === 'screen' || key === 'params') {\n        return [];\n      }\n      return [[key, stringify?.[key] ? stringify[key](value) : Array.isArray(value) ? value.map(String) : String(value)]];\n    }));\n    // We always assign params, as non pattern routes may still have query params\n    Object.assign(allParams, currentParams);\n    return currentParams;\n  }\n  function appendQueryAndHash(path, _ref4) {\n    var hash = _ref4['#'],\n      focusedParams = _objectWithoutProperties(_ref4, _excluded2);\n    var query = queryString.stringify(focusedParams, {\n      sort: false\n    });\n    if (query) {\n      path += `?${query}`;\n    }\n    if (hash) {\n      path += `#${hash}`;\n    }\n    return path;\n  }\n  function appendBaseUrl(path) {\n    var baseUrl = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : \"\";\n    {\n      if (baseUrl) {\n        return `/${baseUrl.replace(/^\\/+/, '').replace(/\\/$/, '')}${path}`;\n      }\n    }\n    return path;\n  }\n  function getPathWithConventionsCollapsed(_ref5) {\n    var pattern = _ref5.pattern,\n      route = _ref5.route,\n      params = _ref5.params,\n      preserveGroups = _ref5.preserveGroups,\n      preserveDynamicRoutes = _ref5.preserveDynamicRoutes,\n      _ref5$shouldEncodeURI = _ref5.shouldEncodeURISegment,\n      shouldEncodeURISegment = _ref5$shouldEncodeURI === undefined ? true : _ref5$shouldEncodeURI,\n      initialRouteName = _ref5.initialRouteName;\n    var segments = pattern.split('/');\n    return segments.map((p, i) => {\n      var name = (0, exports.getParamName)(p);\n      // Showing the route name seems ok, though whatever we show here will be incorrect\n      // Since the page doesn't actually exist\n      if (p.startsWith('*')) {\n        if (preserveDynamicRoutes) {\n          if (name === 'not-found') {\n            return '+not-found';\n          }\n          return `[...${name}]`;\n        } else if (params[name]) {\n          if (Array.isArray(params[name])) {\n            return params[name].join('/');\n          }\n          return params[name];\n        } else if (route.name.startsWith('[') && route.name.endsWith(']')) {\n          return '';\n        } else if (p === '*not-found') {\n          return '';\n        } else {\n          return route.name;\n        }\n      }\n      // If the path has a pattern for a param, put the param in the path\n      if (p.startsWith(':')) {\n        if (preserveDynamicRoutes) {\n          return `[${name}]`;\n        }\n        // Optional params without value assigned in route.params should be ignored\n        var value = params[name];\n        if (value === undefined && p.endsWith('?')) {\n          return;\n        }\n        return (shouldEncodeURISegment ? encodeURISegment(value) : value) ?? 'undefined';\n      }\n      if (!preserveGroups && (0, matchers_1.matchGroupName)(p) != null) {\n        // When the last part is a group it could be a shared URL\n        // if the route has an initialRouteName defined, then we should\n        // use that as the component path as we can assume it will be shown.\n        if (segments.length - 1 === i) {\n          if (initialRouteName) {\n            // Return an empty string if the init route is ambiguous.\n            if (segmentMatchesConvention(initialRouteName)) {\n              return '';\n            }\n            return shouldEncodeURISegment ? encodeURISegment(initialRouteName, {\n              preserveBrackets: true\n            }) : initialRouteName;\n          }\n        }\n        return '';\n      }\n      // Preserve dynamic syntax for rehydration\n      return shouldEncodeURISegment ? encodeURISegment(p, {\n        preserveBrackets: true\n      }) : p;\n    }).map(v => v ?? '').join('/');\n  }\n  var getParamName = pattern => pattern.replace(/^[:*]/, '').replace(/\\?$/, '');\n  exports.getParamName = getParamName;\n  function isDynamicPart(p) {\n    return p.startsWith(':') || p.startsWith('*');\n  }\n  function segmentMatchesConvention(segment) {\n    return segment === 'index' || (0, matchers_1.matchGroupName)(segment) != null || (0, matchers_1.matchDynamicName)(segment) != null;\n  }\n  function encodeURISegment(str) {\n    var _ref6 = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {},\n      _ref6$preserveBracket = _ref6.preserveBrackets,\n      preserveBrackets = _ref6$preserveBracket === undefined ? false : _ref6$preserveBracket;\n    // Valid characters according to\n    // https://datatracker.ietf.org/doc/html/rfc3986#section-3.3 (see pchar definition)\n    str = String(str).replace(/[^A-Za-z0-9\\-._~!$&'()*+,;=:@]/g, char => encodeURIComponent(char));\n    if (preserveBrackets) {\n      // Preserve brackets\n      str = str.replace(/%5B/g, '[').replace(/%5D/g, ']');\n    }\n    return str;\n  }\n});","lineCount":196,"map":[[2,2,1,0],[2,14,1,12],[4,2,1,13],[4,6,1,13,"_slicedToArray"],[4,20,1,13],[4,23,1,13,"require"],[4,30,1,13],[4,31,1,13,"_dependencyMap"],[4,45,1,13],[4,50,1,13,"default"],[4,57,1,13],[5,2,1,13],[5,6,1,13,"_objectWithoutProperties"],[5,30,1,13],[5,33,1,13,"require"],[5,40,1,13],[5,41,1,13,"_dependencyMap"],[5,55,1,13],[5,60,1,13,"default"],[5,67,1,13],[6,2,1,13],[6,6,1,13,"_excluded"],[6,15,1,13],[7,4,1,13,"_excluded2"],[7,14,1,13],[8,2,2,0],[8,6,2,4,"__createBinding"],[8,21,2,19],[8,24,2,23],[8,28,2,27],[8,32,2,31],[8,36,2,35],[8,37,2,36,"__createBinding"],[8,52,2,51],[8,57,2,57,"Object"],[8,63,2,63],[8,64,2,64,"create"],[8,70,2,70],[8,73,2,74],[8,83,2,83,"o"],[8,84,2,84],[8,86,2,86,"m"],[8,87,2,87],[8,89,2,89,"k"],[8,90,2,90],[8,92,2,92,"k2"],[8,94,2,94],[8,96,2,96],[9,4,3,4],[9,8,3,8,"k2"],[9,10,3,10],[9,15,3,15,"undefined"],[9,24,3,24],[9,26,3,26,"k2"],[9,28,3,28],[9,31,3,31,"k"],[9,32,3,32],[10,4,4,4],[10,8,4,8,"desc"],[10,12,4,12],[10,15,4,15,"Object"],[10,21,4,21],[10,22,4,22,"getOwnPropertyDescriptor"],[10,46,4,46],[10,47,4,47,"m"],[10,48,4,48],[10,50,4,50,"k"],[10,51,4,51],[10,52,4,52],[11,4,5,4],[11,8,5,8],[11,9,5,9,"desc"],[11,13,5,13],[11,18,5,18],[11,23,5,23],[11,27,5,27,"desc"],[11,31,5,31],[11,34,5,34],[11,35,5,35,"m"],[11,36,5,36],[11,37,5,37,"__esModule"],[11,47,5,47],[11,50,5,50,"desc"],[11,54,5,54],[11,55,5,55,"writable"],[11,63,5,63],[11,67,5,67,"desc"],[11,71,5,71],[11,72,5,72,"configurable"],[11,84,5,84],[11,85,5,85],[11,87,5,87],[12,6,6,6,"desc"],[12,10,6,10],[12,13,6,13],[13,8,6,15,"enumerable"],[13,18,6,25],[13,20,6,27],[13,24,6,31],[14,8,6,33,"get"],[14,11,6,36],[14,13,6,38],[14,22,6,38,"get"],[14,23,6,38],[14,25,6,49],[15,10,6,51],[15,17,6,58,"m"],[15,18,6,59],[15,19,6,60,"k"],[15,20,6,61],[15,21,6,62],[16,8,6,64],[17,6,6,66],[17,7,6,67],[18,4,7,4],[19,4,8,4,"Object"],[19,10,8,10],[19,11,8,11,"defineProperty"],[19,25,8,25],[19,26,8,26,"o"],[19,27,8,27],[19,29,8,29,"k2"],[19,31,8,31],[19,33,8,33,"desc"],[19,37,8,37],[19,38,8,38],[20,2,9,0],[20,3,9,1],[20,6,9,6],[20,16,9,15,"o"],[20,17,9,16],[20,19,9,18,"m"],[20,20,9,19],[20,22,9,21,"k"],[20,23,9,22],[20,25,9,24,"k2"],[20,27,9,26],[20,29,9,28],[21,4,10,4],[21,8,10,8,"k2"],[21,10,10,10],[21,15,10,15,"undefined"],[21,24,10,24],[21,26,10,26,"k2"],[21,28,10,28],[21,31,10,31,"k"],[21,32,10,32],[22,4,11,4,"o"],[22,5,11,5],[22,6,11,6,"k2"],[22,8,11,8],[22,9,11,9],[22,12,11,12,"m"],[22,13,11,13],[22,14,11,14,"k"],[22,15,11,15],[22,16,11,16],[23,2,12,0],[23,3,12,2],[23,4,12,3],[24,2,13,0],[24,6,13,4,"__setModuleDefault"],[24,24,13,22],[24,27,13,26],[24,31,13,30],[24,35,13,34],[24,39,13,38],[24,40,13,39,"__setModuleDefault"],[24,58,13,57],[24,63,13,63,"Object"],[24,69,13,69],[24,70,13,70,"create"],[24,76,13,76],[24,79,13,80],[24,89,13,89,"o"],[24,90,13,90],[24,92,13,92,"v"],[24,93,13,93],[24,95,13,95],[25,4,14,4,"Object"],[25,10,14,10],[25,11,14,11,"defineProperty"],[25,25,14,25],[25,26,14,26,"o"],[25,27,14,27],[25,29,14,29],[25,38,14,38],[25,40,14,40],[26,6,14,42,"enumerable"],[26,16,14,52],[26,18,14,54],[26,22,14,58],[27,6,14,60,"value"],[27,11,14,65],[27,13,14,67,"v"],[28,4,14,69],[28,5,14,70],[28,6,14,71],[29,2,15,0],[29,3,15,1],[29,6,15,5],[29,16,15,14,"o"],[29,17,15,15],[29,19,15,17,"v"],[29,20,15,18],[29,22,15,20],[30,4,16,4,"o"],[30,5,16,5],[30,6,16,6],[30,15,16,15],[30,16,16,16],[30,19,16,19,"v"],[30,20,16,20],[31,2,17,0],[31,3,17,1],[31,4,17,2],[32,2,18,0],[32,6,18,4,"__importStar"],[32,18,18,16],[32,21,18,20],[32,25,18,24],[32,29,18,28],[32,33,18,32],[32,34,18,33,"__importStar"],[32,46,18,45],[32,50,18,51],[32,62,18,63],[33,4,19,4],[33,8,19,8,"ownKeys"],[33,15,19,15],[33,18,19,18],[33,27,19,18,"ownKeys"],[33,28,19,27,"o"],[33,29,19,28],[33,31,19,30],[34,6,20,8,"ownKeys"],[34,13,20,15],[34,16,20,18,"Object"],[34,22,20,24],[34,23,20,25,"getOwnPropertyNames"],[34,42,20,44],[34,46,20,48],[34,56,20,58,"o"],[34,57,20,59],[34,59,20,61],[35,8,21,12],[35,12,21,16,"ar"],[35,14,21,18],[35,17,21,21],[35,19,21,23],[36,8,22,12],[36,13,22,17],[36,17,22,21,"k"],[36,18,22,22],[36,22,22,26,"o"],[36,23,22,27],[36,25,22,29],[36,29,22,33,"Object"],[36,35,22,39],[36,36,22,40,"prototype"],[36,45,22,49],[36,46,22,50,"hasOwnProperty"],[36,60,22,64],[36,61,22,65,"call"],[36,65,22,69],[36,66,22,70,"o"],[36,67,22,71],[36,69,22,73,"k"],[36,70,22,74],[36,71,22,75],[36,73,22,77,"ar"],[36,75,22,79],[36,76,22,80,"ar"],[36,78,22,82],[36,79,22,83,"length"],[36,85,22,89],[36,86,22,90],[36,89,22,93,"k"],[36,90,22,94],[37,8,23,12],[37,15,23,19,"ar"],[37,17,23,21],[38,6,24,8],[38,7,24,9],[39,6,25,8],[39,13,25,15,"ownKeys"],[39,20,25,22],[39,21,25,23,"o"],[39,22,25,24],[39,23,25,25],[40,4,26,4],[40,5,26,5],[41,4,27,4],[41,11,27,11],[41,21,27,21,"mod"],[41,24,27,24],[41,26,27,26],[42,6,28,8],[42,10,28,12,"mod"],[42,13,28,15],[42,17,28,19,"mod"],[42,20,28,22],[42,21,28,23,"__esModule"],[42,31,28,33],[42,33,28,35],[42,40,28,42,"mod"],[42,43,28,45],[43,6,29,8],[43,10,29,12,"result"],[43,16,29,18],[43,19,29,21],[43,20,29,22],[43,21,29,23],[44,6,30,8],[44,10,30,12,"mod"],[44,13,30,15],[44,17,30,19],[44,21,30,23],[44,23,30,25],[44,28,30,30],[44,32,30,34,"k"],[44,33,30,35],[44,36,30,38,"ownKeys"],[44,43,30,45],[44,44,30,46,"mod"],[44,47,30,49],[44,48,30,50],[44,50,30,52,"i"],[44,51,30,53],[44,54,30,56],[44,55,30,57],[44,57,30,59,"i"],[44,58,30,60],[44,61,30,63,"k"],[44,62,30,64],[44,63,30,65,"length"],[44,69,30,71],[44,71,30,73,"i"],[44,72,30,74],[44,74,30,76],[44,76,30,78],[44,80,30,82,"k"],[44,81,30,83],[44,82,30,84,"i"],[44,83,30,85],[44,84,30,86],[44,89,30,91],[44,98,30,100],[44,100,30,102,"__createBinding"],[44,115,30,117],[44,116,30,118,"result"],[44,122,30,124],[44,124,30,126,"mod"],[44,127,30,129],[44,129,30,131,"k"],[44,130,30,132],[44,131,30,133,"i"],[44,132,30,134],[44,133,30,135],[44,134,30,136],[45,6,31,8,"__setModuleDefault"],[45,24,31,26],[45,25,31,27,"result"],[45,31,31,33],[45,33,31,35,"mod"],[45,36,31,38],[45,37,31,39],[46,6,32,8],[46,13,32,15,"result"],[46,19,32,21],[47,4,33,4],[47,5,33,5],[48,2,34,0],[48,3,34,1],[48,4,34,3],[48,5,34,4],[49,2,35,0,"Object"],[49,8,35,6],[49,9,35,7,"defineProperty"],[49,23,35,21],[49,24,35,22,"exports"],[49,31,35,29],[49,33,35,31],[49,45,35,43],[49,47,35,45],[50,4,35,47,"value"],[50,9,35,52],[50,11,35,54],[51,2,35,59],[51,3,35,60],[51,4,35,61],[52,2,36,0,"exports"],[52,9,36,7],[52,10,36,8,"getParamName"],[52,22,36,20],[52,25,36,20,"undefined"],[52,34,36,29],[53,2,37,0,"exports"],[53,9,37,7],[53,10,37,8,"validatePathConfig"],[53,28,37,26],[53,31,37,29,"validatePathConfig"],[53,49,37,47],[54,2,38,0,"exports"],[54,9,38,7],[54,10,38,8,"fixCurrentParams"],[54,26,38,24],[54,29,38,27,"fixCurrentParams"],[54,45,38,43],[55,2,39,0,"exports"],[55,9,39,7],[55,10,39,8,"appendQueryAndHash"],[55,28,39,26],[55,31,39,29,"appendQueryAndHash"],[55,49,39,47],[56,2,40,0,"exports"],[56,9,40,7],[56,10,40,8,"appendBaseUrl"],[56,23,40,21],[56,26,40,24,"appendBaseUrl"],[56,39,40,37],[57,2,41,0,"exports"],[57,9,41,7],[57,10,41,8,"getPathWithConventionsCollapsed"],[57,41,41,39],[57,44,41,42,"getPathWithConventionsCollapsed"],[57,75,41,73],[58,2,42,0,"exports"],[58,9,42,7],[58,10,42,8,"isDynamicPart"],[58,23,42,21],[58,26,42,24,"isDynamicPart"],[58,39,42,37],[59,2,43,0],[59,6,43,6,"native_1"],[59,14,43,14],[59,17,43,17,"require"],[59,24,43,24],[59,25,43,24,"_dependencyMap"],[59,39,43,24],[59,42,43,51],[59,43,43,52],[60,2,44,0],[60,6,44,6,"queryString"],[60,17,44,17],[60,20,44,20,"__importStar"],[60,32,44,32],[60,33,44,33,"require"],[60,40,44,40],[60,41,44,40,"_dependencyMap"],[60,55,44,40],[60,58,44,55],[60,59,44,56],[60,60,44,57],[61,2,45,0],[61,6,45,6,"matchers_1"],[61,16,45,16],[61,19,45,19,"require"],[61,26,45,26],[61,27,45,26,"_dependencyMap"],[61,41,45,26],[61,44,45,40],[61,45,45,41],[62,2,46,0],[62,11,46,9,"validatePathConfig"],[62,29,46,27,"validatePathConfig"],[62,30,46,27,"_ref"],[62,34,46,27],[62,36,46,107],[63,4,46,107],[63,8,46,30,"preserveDynamicRoutes"],[63,29,46,51],[63,32,46,51,"_ref"],[63,36,46,51],[63,37,46,30,"preserveDynamicRoutes"],[63,58,46,51],[64,6,46,53,"preserveGroups"],[64,20,46,67],[64,23,46,67,"_ref"],[64,27,46,67],[64,28,46,53,"preserveGroups"],[64,42,46,67],[65,6,46,69,"shouldEncodeURISegment"],[65,28,46,91],[65,31,46,91,"_ref"],[65,35,46,91],[65,36,46,69,"shouldEncodeURISegment"],[65,58,46,91],[66,6,46,96,"options"],[66,13,46,103],[66,16,46,103,"_objectWithoutProperties"],[66,40,46,103],[66,41,46,103,"_ref"],[66,45,46,103],[66,47,46,103,"_excluded"],[66,56,46,103],[67,4,47,4],[67,5,47,5],[67,6,47,6],[67,8,47,8,"native_1"],[67,16,47,16],[67,17,47,17,"validatePathConfig"],[67,35,47,35],[67,37,47,37,"options"],[67,44,47,44],[67,45,47,45],[68,2,48,0],[69,2,49,0],[69,11,49,9,"fixCurrentParams"],[69,27,49,25,"fixCurrentParams"],[69,28,49,26,"allParams"],[69,37,49,35],[69,39,49,37,"route"],[69,44,49,42],[69,46,49,44,"stringify"],[69,55,49,53],[69,57,49,55],[70,4,50,4],[71,4,51,4],[71,8,51,10,"currentParams"],[71,21,51,23],[71,24,51,26,"Object"],[71,30,51,32],[71,31,51,33,"fromEntries"],[71,42,51,44],[71,43,51,45,"Object"],[71,49,51,51],[71,50,51,52,"entries"],[71,57,51,59],[71,58,51,60,"route"],[71,63,51,65],[71,64,51,66,"params"],[71,70,51,72],[71,71,51,73],[71,72,51,74,"flatMap"],[71,79,51,81],[71,80,51,82,"_ref2"],[71,85,51,82],[71,89,51,100],[72,6,51,100],[72,10,51,100,"_ref3"],[72,15,51,100],[72,18,51,100,"_slicedToArray"],[72,32,51,100],[72,33,51,100,"_ref2"],[72,38,51,100],[73,8,51,84,"key"],[73,11,51,87],[73,14,51,87,"_ref3"],[73,19,51,87],[74,8,51,89,"value"],[74,13,51,94],[74,16,51,94,"_ref3"],[74,21,51,94],[75,6,52,8],[75,10,52,12,"key"],[75,13,52,15],[75,18,52,20],[75,26,52,28],[75,30,52,32,"key"],[75,33,52,35],[75,38,52,40],[75,46,52,48],[75,48,52,50],[76,8,53,12],[76,15,53,19],[76,17,53,21],[77,6,54,8],[78,6,55,8],[78,13,55,15],[78,14,56,12],[78,15,57,16,"key"],[78,18,57,19],[78,20,58,16,"stringify"],[78,29,58,25],[78,32,58,28,"key"],[78,35,58,31],[78,36,58,32],[78,39,59,22,"stringify"],[78,48,59,31],[78,49,59,32,"key"],[78,52,59,35],[78,53,59,36],[78,54,59,37,"value"],[78,59,59,42],[78,60,59,43],[78,63,60,22,"Array"],[78,68,60,27],[78,69,60,28,"isArray"],[78,76,60,35],[78,77,60,36,"value"],[78,82,60,41],[78,83,60,42],[78,86,61,26,"value"],[78,91,61,31],[78,92,61,32,"map"],[78,95,61,35],[78,96,61,36,"String"],[78,102,61,42],[78,103,61,43],[78,106,62,26,"String"],[78,112,62,32],[78,113,62,33,"value"],[78,118,62,38],[78,119,62,39],[78,120,63,13],[78,121,64,9],[79,4,65,4],[79,5,65,5],[79,6,65,6],[79,7,65,7],[80,4,66,4],[81,4,67,4,"Object"],[81,10,67,10],[81,11,67,11,"assign"],[81,17,67,17],[81,18,67,18,"allParams"],[81,27,67,27],[81,29,67,29,"currentParams"],[81,42,67,42],[81,43,67,43],[82,4,68,4],[82,11,68,11,"currentParams"],[82,24,68,24],[83,2,69,0],[84,2,70,0],[84,11,70,9,"appendQueryAndHash"],[84,29,70,27,"appendQueryAndHash"],[84,30,70,28,"path"],[84,34,70,32],[84,36,70,32,"_ref4"],[84,41,70,32],[84,43,70,67],[85,4,70,67],[85,8,70,41,"hash"],[85,12,70,45],[85,15,70,45,"_ref4"],[85,20,70,45],[85,21,70,36],[85,24,70,39],[86,6,70,50,"focusedParams"],[86,19,70,63],[86,22,70,63,"_objectWithoutProperties"],[86,46,70,63],[86,47,70,63,"_ref4"],[86,52,70,63],[86,54,70,63,"_excluded2"],[86,64,70,63],[87,4,71,4],[87,8,71,10,"query"],[87,13,71,15],[87,16,71,18,"queryString"],[87,27,71,29],[87,28,71,30,"stringify"],[87,37,71,39],[87,38,71,40,"focusedParams"],[87,51,71,53],[87,53,71,55],[88,6,71,57,"sort"],[88,10,71,61],[88,12,71,63],[89,4,71,69],[89,5,71,70],[89,6,71,71],[90,4,72,4],[90,8,72,8,"query"],[90,13,72,13],[90,15,72,15],[91,6,73,8,"path"],[91,10,73,12],[91,14,73,16],[91,18,73,20,"query"],[91,23,73,25],[91,25,73,27],[92,4,74,4],[93,4,75,4],[93,8,75,8,"hash"],[93,12,75,12],[93,14,75,14],[94,6,76,8,"path"],[94,10,76,12],[94,14,76,16],[94,18,76,20,"hash"],[94,22,76,24],[94,24,76,26],[95,4,77,4],[96,4,78,4],[96,11,78,11,"path"],[96,15,78,15],[97,2,79,0],[98,2,80,0],[98,11,80,9,"appendBaseUrl"],[98,24,80,22,"appendBaseUrl"],[98,25,80,23,"path"],[98,29,80,27],[98,31,80,66],[99,4,80,66],[99,8,80,29,"baseUrl"],[99,15,80,36],[99,18,80,36,"arguments"],[99,27,80,36],[99,28,80,36,"length"],[99,34,80,36],[99,42,80,36,"arguments"],[99,51,80,36],[99,59,80,36,"undefined"],[99,68,80,36],[99,71,80,36,"arguments"],[99,80,80,36],[100,4,81,48],[101,6,82,8],[101,10,82,12,"baseUrl"],[101,17,82,19],[101,19,82,21],[102,8,83,12],[102,15,83,19],[102,19,83,23,"baseUrl"],[102,26,83,30],[102,27,83,31,"replace"],[102,34,83,38],[102,35,83,39],[102,41,83,45],[102,43,83,47],[102,45,83,49],[102,46,83,50],[102,47,83,51,"replace"],[102,54,83,58],[102,55,83,59],[102,60,83,64],[102,62,83,66],[102,64,83,68],[102,65,83,69],[102,68,83,72,"path"],[102,72,83,76],[102,74,83,78],[103,6,84,8],[104,4,85,4],[105,4,86,4],[105,11,86,11,"path"],[105,15,86,15],[106,2,87,0],[107,2,88,0],[107,11,88,9,"getPathWithConventionsCollapsed"],[107,42,88,40,"getPathWithConventionsCollapsed"],[107,43,88,40,"_ref5"],[107,48,88,40],[107,50,88,158],[108,4,88,158],[108,8,88,43,"pattern"],[108,15,88,50],[108,18,88,50,"_ref5"],[108,23,88,50],[108,24,88,43,"pattern"],[108,31,88,50],[109,6,88,52,"route"],[109,11,88,57],[109,14,88,57,"_ref5"],[109,19,88,57],[109,20,88,52,"route"],[109,25,88,57],[110,6,88,59,"params"],[110,12,88,65],[110,15,88,65,"_ref5"],[110,20,88,65],[110,21,88,59,"params"],[110,27,88,65],[111,6,88,67,"preserveGroups"],[111,20,88,81],[111,23,88,81,"_ref5"],[111,28,88,81],[111,29,88,67,"preserveGroups"],[111,43,88,81],[112,6,88,83,"preserveDynamicRoutes"],[112,27,88,104],[112,30,88,104,"_ref5"],[112,35,88,104],[112,36,88,83,"preserveDynamicRoutes"],[112,57,88,104],[113,6,88,104,"_ref5$shouldEncodeURI"],[113,27,88,104],[113,30,88,104,"_ref5"],[113,35,88,104],[113,36,88,106,"shouldEncodeURISegment"],[113,58,88,128],[114,6,88,106,"shouldEncodeURISegment"],[114,28,88,128],[114,31,88,128,"_ref5$shouldEncodeURI"],[114,52,88,128],[114,57,88,128,"undefined"],[114,66,88,128],[114,69,88,131],[114,73,88,135],[114,76,88,135,"_ref5$shouldEncodeURI"],[114,97,88,135],[115,6,88,137,"initialRouteName"],[115,22,88,153],[115,25,88,153,"_ref5"],[115,30,88,153],[115,31,88,137,"initialRouteName"],[115,47,88,153],[116,4,89,4],[116,8,89,10,"segments"],[116,16,89,18],[116,19,89,21,"pattern"],[116,26,89,28],[116,27,89,29,"split"],[116,32,89,34],[116,33,89,35],[116,36,89,38],[116,37,89,39],[117,4,90,4],[117,11,90,11,"segments"],[117,19,90,19],[117,20,91,9,"map"],[117,23,91,12],[117,24,91,13],[117,25,91,14,"p"],[117,26,91,15],[117,28,91,17,"i"],[117,29,91,18],[117,34,91,23],[118,6,92,8],[118,10,92,14,"name"],[118,14,92,18],[118,17,92,21],[118,18,92,22],[118,19,92,23],[118,21,92,25,"exports"],[118,28,92,32],[118,29,92,33,"getParamName"],[118,41,92,45],[118,43,92,47,"p"],[118,44,92,48],[118,45,92,49],[119,6,93,8],[120,6,94,8],[121,6,95,8],[121,10,95,12,"p"],[121,11,95,13],[121,12,95,14,"startsWith"],[121,22,95,24],[121,23,95,25],[121,26,95,28],[121,27,95,29],[121,29,95,31],[122,8,96,12],[122,12,96,16,"preserveDynamicRoutes"],[122,33,96,37],[122,35,96,39],[123,10,97,16],[123,14,97,20,"name"],[123,18,97,24],[123,23,97,29],[123,34,97,40],[123,36,97,42],[124,12,98,20],[124,19,98,27],[124,31,98,39],[125,10,99,16],[126,10,100,16],[126,17,100,23],[126,24,100,30,"name"],[126,28,100,34],[126,31,100,37],[127,8,101,12],[127,9,101,13],[127,15,102,17],[127,19,102,21,"params"],[127,25,102,27],[127,26,102,28,"name"],[127,30,102,32],[127,31,102,33],[127,33,102,35],[128,10,103,16],[128,14,103,20,"Array"],[128,19,103,25],[128,20,103,26,"isArray"],[128,27,103,33],[128,28,103,34,"params"],[128,34,103,40],[128,35,103,41,"name"],[128,39,103,45],[128,40,103,46],[128,41,103,47],[128,43,103,49],[129,12,104,20],[129,19,104,27,"params"],[129,25,104,33],[129,26,104,34,"name"],[129,30,104,38],[129,31,104,39],[129,32,104,40,"join"],[129,36,104,44],[129,37,104,45],[129,40,104,48],[129,41,104,49],[130,10,105,16],[131,10,106,16],[131,17,106,23,"params"],[131,23,106,29],[131,24,106,30,"name"],[131,28,106,34],[131,29,106,35],[132,8,107,12],[132,9,107,13],[132,15,108,17],[132,19,108,21,"route"],[132,24,108,26],[132,25,108,27,"name"],[132,29,108,31],[132,30,108,32,"startsWith"],[132,40,108,42],[132,41,108,43],[132,44,108,46],[132,45,108,47],[132,49,108,51,"route"],[132,54,108,56],[132,55,108,57,"name"],[132,59,108,61],[132,60,108,62,"endsWith"],[132,68,108,70],[132,69,108,71],[132,72,108,74],[132,73,108,75],[132,75,108,77],[133,10,109,16],[133,17,109,23],[133,19,109,25],[134,8,110,12],[134,9,110,13],[134,15,111,17],[134,19,111,21,"p"],[134,20,111,22],[134,25,111,27],[134,37,111,39],[134,39,111,41],[135,10,112,16],[135,17,112,23],[135,19,112,25],[136,8,113,12],[136,9,113,13],[136,15,114,17],[137,10,115,16],[137,17,115,23,"route"],[137,22,115,28],[137,23,115,29,"name"],[137,27,115,33],[138,8,116,12],[139,6,117,8],[140,6,118,8],[141,6,119,8],[141,10,119,12,"p"],[141,11,119,13],[141,12,119,14,"startsWith"],[141,22,119,24],[141,23,119,25],[141,26,119,28],[141,27,119,29],[141,29,119,31],[142,8,120,12],[142,12,120,16,"preserveDynamicRoutes"],[142,33,120,37],[142,35,120,39],[143,10,121,16],[143,17,121,23],[143,21,121,27,"name"],[143,25,121,31],[143,28,121,34],[144,8,122,12],[145,8,123,12],[146,8,124,12],[146,12,124,18,"value"],[146,17,124,23],[146,20,124,26,"params"],[146,26,124,32],[146,27,124,33,"name"],[146,31,124,37],[146,32,124,38],[147,8,125,12],[147,12,125,16,"value"],[147,17,125,21],[147,22,125,26,"undefined"],[147,31,125,35],[147,35,125,39,"p"],[147,36,125,40],[147,37,125,41,"endsWith"],[147,45,125,49],[147,46,125,50],[147,49,125,53],[147,50,125,54],[147,52,125,56],[148,10,126,16],[149,8,127,12],[150,8,128,12],[150,15,128,19],[150,16,128,20,"shouldEncodeURISegment"],[150,38,128,42],[150,41,128,45,"encodeURISegment"],[150,57,128,61],[150,58,128,62,"value"],[150,63,128,67],[150,64,128,68],[150,67,128,71,"value"],[150,72,128,76],[150,77,128,81],[150,88,128,92],[151,6,129,8],[152,6,130,8],[152,10,130,12],[152,11,130,13,"preserveGroups"],[152,25,130,27],[152,29,130,31],[152,30,130,32],[152,31,130,33],[152,33,130,35,"matchers_1"],[152,43,130,45],[152,44,130,46,"matchGroupName"],[152,58,130,60],[152,60,130,62,"p"],[152,61,130,63],[152,62,130,64],[152,66,130,68],[152,70,130,72],[152,72,130,74],[153,8,131,12],[154,8,132,12],[155,8,133,12],[156,8,134,12],[156,12,134,16,"segments"],[156,20,134,24],[156,21,134,25,"length"],[156,27,134,31],[156,30,134,34],[156,31,134,35],[156,36,134,40,"i"],[156,37,134,41],[156,39,134,43],[157,10,135,16],[157,14,135,20,"initialRouteName"],[157,30,135,36],[157,32,135,38],[158,12,136,20],[159,12,137,20],[159,16,137,24,"segmentMatchesConvention"],[159,40,137,48],[159,41,137,49,"initialRouteName"],[159,57,137,65],[159,58,137,66],[159,60,137,68],[160,14,138,24],[160,21,138,31],[160,23,138,33],[161,12,139,20],[162,12,140,20],[162,19,140,27,"shouldEncodeURISegment"],[162,41,140,49],[162,44,141,26,"encodeURISegment"],[162,60,141,42],[162,61,141,43,"initialRouteName"],[162,77,141,59],[162,79,141,61],[163,14,141,63,"preserveBrackets"],[163,30,141,79],[163,32,141,81],[164,12,141,86],[164,13,141,87],[164,14,141,88],[164,17,142,26,"initialRouteName"],[164,33,142,42],[165,10,143,16],[166,8,144,12],[167,8,145,12],[167,15,145,19],[167,17,145,21],[168,6,146,8],[169,6,147,8],[170,6,148,8],[170,13,148,15,"shouldEncodeURISegment"],[170,35,148,37],[170,38,148,40,"encodeURISegment"],[170,54,148,56],[170,55,148,57,"p"],[170,56,148,58],[170,58,148,60],[171,8,148,62,"preserveBrackets"],[171,24,148,78],[171,26,148,80],[172,6,148,85],[172,7,148,86],[172,8,148,87],[172,11,148,90,"p"],[172,12,148,91],[173,4,149,4],[173,5,149,5],[173,6,149,6],[173,7,150,9,"map"],[173,10,150,12],[173,11,150,14,"v"],[173,12,150,15],[173,16,150,20,"v"],[173,17,150,21],[173,21,150,25],[173,23,150,27],[173,24,150,28],[173,25,151,9,"join"],[173,29,151,13],[173,30,151,14],[173,33,151,17],[173,34,151,18],[174,2,152,0],[175,2,153,0],[175,6,153,6,"getParamName"],[175,18,153,18],[175,21,153,22,"pattern"],[175,28,153,29],[175,32,153,34,"pattern"],[175,39,153,41],[175,40,153,42,"replace"],[175,47,153,49],[175,48,153,50],[175,55,153,57],[175,57,153,59],[175,59,153,61],[175,60,153,62],[175,61,153,63,"replace"],[175,68,153,70],[175,69,153,71],[175,74,153,76],[175,76,153,78],[175,78,153,80],[175,79,153,81],[176,2,154,0,"exports"],[176,9,154,7],[176,10,154,8,"getParamName"],[176,22,154,20],[176,25,154,23,"getParamName"],[176,37,154,35],[177,2,155,0],[177,11,155,9,"isDynamicPart"],[177,24,155,22,"isDynamicPart"],[177,25,155,23,"p"],[177,26,155,24],[177,28,155,26],[178,4,156,4],[178,11,156,11,"p"],[178,12,156,12],[178,13,156,13,"startsWith"],[178,23,156,23],[178,24,156,24],[178,27,156,27],[178,28,156,28],[178,32,156,32,"p"],[178,33,156,33],[178,34,156,34,"startsWith"],[178,44,156,44],[178,45,156,45],[178,48,156,48],[178,49,156,49],[179,2,157,0],[180,2,158,0],[180,11,158,9,"segmentMatchesConvention"],[180,35,158,33,"segmentMatchesConvention"],[180,36,158,34,"segment"],[180,43,158,41],[180,45,158,43],[181,4,159,4],[181,11,159,12,"segment"],[181,18,159,19],[181,23,159,24],[181,30,159,31],[181,34,159,35],[181,35,159,36],[181,36,159,37],[181,38,159,39,"matchers_1"],[181,48,159,49],[181,49,159,50,"matchGroupName"],[181,63,159,64],[181,65,159,66,"segment"],[181,72,159,73],[181,73,159,74],[181,77,159,78],[181,81,159,82],[181,85,159,86],[181,86,159,87],[181,87,159,88],[181,89,159,90,"matchers_1"],[181,99,159,100],[181,100,159,101,"matchDynamicName"],[181,116,159,117],[181,118,159,119,"segment"],[181,125,159,126],[181,126,159,127],[181,130,159,131],[181,134,159,135],[182,2,160,0],[183,2,161,0],[183,11,161,9,"encodeURISegment"],[183,27,161,25,"encodeURISegment"],[183,28,161,26,"str"],[183,31,161,29],[183,33,161,66],[184,4,161,66],[184,8,161,66,"_ref6"],[184,13,161,66],[184,16,161,66,"arguments"],[184,25,161,66],[184,26,161,66,"length"],[184,32,161,66],[184,40,161,66,"arguments"],[184,49,161,66],[184,57,161,66,"undefined"],[184,66,161,66],[184,69,161,66,"arguments"],[184,78,161,66],[184,84,161,62],[184,85,161,63],[184,86,161,64],[185,6,161,64,"_ref6$preserveBracket"],[185,27,161,64],[185,30,161,64,"_ref6"],[185,35,161,64],[185,36,161,33,"preserveBrackets"],[185,52,161,49],[186,6,161,33,"preserveBrackets"],[186,22,161,49],[186,25,161,49,"_ref6$preserveBracket"],[186,46,161,49],[186,51,161,49,"undefined"],[186,60,161,49],[186,63,161,52],[186,68,161,57],[186,71,161,57,"_ref6$preserveBracket"],[186,92,161,57],[187,4,162,4],[188,4,163,4],[189,4,164,4,"str"],[189,7,164,7],[189,10,164,10,"String"],[189,16,164,16],[189,17,164,17,"str"],[189,20,164,20],[189,21,164,21],[189,22,164,22,"replace"],[189,29,164,29],[189,30,164,30],[189,63,164,63],[189,65,164,66,"char"],[189,69,164,70],[189,73,164,75,"encodeURIComponent"],[189,91,164,93],[189,92,164,94,"char"],[189,96,164,98],[189,97,164,99],[189,98,164,100],[190,4,165,4],[190,8,165,8,"preserveBrackets"],[190,24,165,24],[190,26,165,26],[191,6,166,8],[192,6,167,8,"str"],[192,9,167,11],[192,12,167,14,"str"],[192,15,167,17],[192,16,167,18,"replace"],[192,23,167,25],[192,24,167,26],[192,30,167,32],[192,32,167,34],[192,35,167,37],[192,36,167,38],[192,37,167,39,"replace"],[192,44,167,46],[192,45,167,47],[192,51,167,53],[192,53,167,55],[192,56,167,58],[192,57,167,59],[193,4,168,4],[194,4,169,4],[194,11,169,11,"str"],[194,14,169,14],[195,2,170,0],[196,0,170,1],[196,3]],"functionMap":{"names":["<global>","<anonymous>","desc.get","ownKeys","validatePathConfig","fixCurrentParams","Object.entries.flatMap$argument_0","appendQueryAndHash","appendBaseUrl","getPathWithConventionsCollapsed","segments.map$argument_0","segments.map.map$argument_0","getParamName","isDynamicPart","segmentMatchesConvention","encodeURISegment","String.replace$argument_1"],"mappings":"AAA;0ECC;sCCI,2BD;CDG,KC;CDG;gFCC;CDE,IC;CDE;mDCC;kBEC;gDFC;SEI;KFE;CDQ;AIY;CJE;AKC;kFCE;KDc;CLI;AOC;CPS;AQC;CRO;ASC;aCG;KD0D;aEC,cF;CTE;qBYC,4DZ;AaE;CbE;AcC;CdE;AeC;iECG,kCD;CfM"},"hasCjsExports":true},"type":"js/module"}]}