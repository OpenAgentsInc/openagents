{
  "version": 3,
  "sources": ["../../../src/cli/generatedApi.ts"],
  "sourcesContent": ["/**\n * This file was auto-generated by openapi-typescript.\n * Do not make direct changes to the file.\n */\n\nexport interface paths {\n    \"/teams\": {\n        parameters: {\n            query?: never;\n            header?: never;\n            path?: never;\n            cookie?: never;\n        };\n        get: operations[\"get_teams_for_member\"];\n        put?: never;\n        post?: never;\n        delete?: never;\n        options?: never;\n        head?: never;\n        patch?: never;\n        trace?: never;\n    };\n    \"/teams/{team_slug}/projects\": {\n        parameters: {\n            query?: never;\n            header?: never;\n            path?: never;\n            cookie?: never;\n        };\n        get: operations[\"get_cli_projects_for_team\"];\n        put?: never;\n        post?: never;\n        delete?: never;\n        options?: never;\n        head?: never;\n        patch?: never;\n        trace?: never;\n    };\n    \"/workos/available_workos_team_emails\": {\n        parameters: {\n            query?: never;\n            header?: never;\n            path?: never;\n            cookie?: never;\n        };\n        /** @description Get candidate email addresses to be WorkOS admins. */\n        get: operations[\"get_available_workos_team_emails\"];\n        put?: never;\n        post?: never;\n        delete?: never;\n        options?: never;\n        head?: never;\n        patch?: never;\n        trace?: never;\n    };\n    \"/deployments/{deployment_name}/has_associated_workos_team\": {\n        parameters: {\n            query?: never;\n            header?: never;\n            path?: never;\n            cookie?: never;\n        };\n        /** @description Check if a deployment has an associated WorkOS team */\n        get: operations[\"get_has_associated_workos_team\"];\n        put?: never;\n        post?: never;\n        delete?: never;\n        options?: never;\n        head?: never;\n        patch?: never;\n        trace?: never;\n    };\n    \"/workos/get_or_provision_workos_environment\": {\n        parameters: {\n            query?: never;\n            header?: never;\n            path?: never;\n            cookie?: never;\n        };\n        get?: never;\n        put?: never;\n        /** @description Get or provision a WorkOS environment for a deployment */\n        post: operations[\"get_or_provision_workos_environment\"];\n        delete?: never;\n        options?: never;\n        head?: never;\n        patch?: never;\n        trace?: never;\n    };\n    \"/workos/has_associated_workos_team\": {\n        parameters: {\n            query?: never;\n            header?: never;\n            path?: never;\n            cookie?: never;\n        };\n        get?: never;\n        put?: never;\n        /** @description Check if a deployment has an associated WorkOS team */\n        post: operations[\"has_associated_workos_team\"];\n        delete?: never;\n        options?: never;\n        head?: never;\n        patch?: never;\n        trace?: never;\n    };\n    \"/workos/provision_associated_workos_team\": {\n        parameters: {\n            query?: never;\n            header?: never;\n            path?: never;\n            cookie?: never;\n        };\n        get?: never;\n        put?: never;\n        /** @description Provision a WorkOS team for a Convex team */\n        post: operations[\"provision_associated_workos_team\"];\n        delete?: never;\n        options?: never;\n        head?: never;\n        patch?: never;\n        trace?: never;\n    };\n}\nexport type webhooks = Record<string, never>;\nexport interface components {\n    schemas: {\n        AvailableWorkOSTeamEmailsResponse: {\n            availableEmails: string[];\n            usedEmails: string[];\n        };\n        GetOrProvisionEnvironmentRequest: {\n            deploymentName: string;\n        };\n        HasAssociatedWorkOSTeamRequest: {\n            deploymentName: string;\n        };\n        HasAssociatedWorkOSTeamResponse: {\n            /** @description Email of Convex team member who created the WorkOS account.\n             *     This field should always be present when has_associated_workos_team is\n             *     true. */\n            adminConvexEmail?: string | null;\n            /** @description Email address used to provision the WorkOS account. This field should\n             *     always be present if has_associated_workos_team is true. */\n            adminEmail?: string | null;\n            /** @description Name of Convex team member who created the WorkOS account.\n             *     This field is optional even when has_associated_workos_team is true. */\n            adminName?: string | null;\n            hasAssociatedWorkosTeam: boolean;\n            teamId: components[\"schemas\"][\"TeamId\"];\n        };\n        /** Format: int64 */\n        MemberId: number;\n        ProjectDetails: {\n            /** Format: int64 */\n            createTime: number;\n            devDeploymentName?: string | null;\n            id: components[\"schemas\"][\"ProjectId\"];\n            isDemo: boolean;\n            name: components[\"schemas\"][\"ProjectName\"];\n            prodDeploymentName?: string | null;\n            slug: components[\"schemas\"][\"ProjectSlug\"];\n            teamId: components[\"schemas\"][\"TeamId\"];\n        };\n        /** Format: int64 */\n        ProjectId: number;\n        ProjectName: string;\n        ProjectSlug: string;\n        ProvisionEnvironmentResponse: {\n            apiKey: string;\n            clientId: string;\n            environmentId: string;\n            environmentName: string;\n            newlyProvisioned: boolean;\n        };\n        ProvisionWorkOSTeamRequest: {\n            /** @description Email address to use for the WorkOS team admin,\n             *     must be a verified email address associated with the user's account */\n            email: string;\n            /** @description Convex team ID, no WorkOS team exists at this point */\n            teamId: components[\"schemas\"][\"TeamId\"];\n        };\n        ProvisionWorkOSTeamResponse: {\n            adminEmail: string;\n            workosTeamId: string;\n            workosTeamName: string;\n        };\n        ReferralCode: string;\n        Team: {\n            creator?: null | components[\"schemas\"][\"MemberId\"];\n            id: components[\"schemas\"][\"TeamId\"];\n            managedBy?: string | null;\n            name: components[\"schemas\"][\"TeamName\"];\n            referralCode: components[\"schemas\"][\"ReferralCode\"];\n            referredBy?: null | components[\"schemas\"][\"TeamId\"];\n            slug: components[\"schemas\"][\"TeamSlug\"];\n            suspended: boolean;\n        };\n        /** Format: int64 */\n        TeamId: number;\n        TeamName: string;\n        TeamSlug: string;\n    };\n    responses: never;\n    parameters: never;\n    requestBodies: never;\n    headers: never;\n    pathItems: never;\n}\nexport type AvailableWorkOsTeamEmailsResponse = components['schemas']['AvailableWorkOSTeamEmailsResponse'];\nexport type GetOrProvisionEnvironmentRequest = components['schemas']['GetOrProvisionEnvironmentRequest'];\nexport type HasAssociatedWorkOsTeamRequest = components['schemas']['HasAssociatedWorkOSTeamRequest'];\nexport type HasAssociatedWorkOsTeamResponse = components['schemas']['HasAssociatedWorkOSTeamResponse'];\nexport type MemberId = components['schemas']['MemberId'];\nexport type ProjectDetails = components['schemas']['ProjectDetails'];\nexport type ProjectId = components['schemas']['ProjectId'];\nexport type ProjectName = components['schemas']['ProjectName'];\nexport type ProjectSlug = components['schemas']['ProjectSlug'];\nexport type ProvisionEnvironmentResponse = components['schemas']['ProvisionEnvironmentResponse'];\nexport type ProvisionWorkOsTeamRequest = components['schemas']['ProvisionWorkOSTeamRequest'];\nexport type ProvisionWorkOsTeamResponse = components['schemas']['ProvisionWorkOSTeamResponse'];\nexport type ReferralCode = components['schemas']['ReferralCode'];\nexport type Team = components['schemas']['Team'];\nexport type TeamId = components['schemas']['TeamId'];\nexport type TeamName = components['schemas']['TeamName'];\nexport type TeamSlug = components['schemas']['TeamSlug'];\nexport type $defs = Record<string, never>;\nexport interface operations {\n    get_teams_for_member: {\n        parameters: {\n            query?: never;\n            header?: never;\n            path?: never;\n            cookie?: never;\n        };\n        requestBody?: never;\n        responses: {\n            200: {\n                headers: {\n                    [name: string]: unknown;\n                };\n                content: {\n                    \"application/json\": components[\"schemas\"][\"Team\"][];\n                };\n            };\n        };\n    };\n    get_cli_projects_for_team: {\n        parameters: {\n            query?: never;\n            header?: never;\n            path: {\n                /** @description Team slug identifier */\n                team_slug: string;\n            };\n            cookie?: never;\n        };\n        requestBody?: never;\n        responses: {\n            200: {\n                headers: {\n                    [name: string]: unknown;\n                };\n                content: {\n                    \"application/json\": components[\"schemas\"][\"ProjectDetails\"][];\n                };\n            };\n        };\n    };\n    get_available_workos_team_emails: {\n        parameters: {\n            query?: never;\n            header?: never;\n            path?: never;\n            cookie?: never;\n        };\n        requestBody?: never;\n        responses: {\n            200: {\n                headers: {\n                    [name: string]: unknown;\n                };\n                content: {\n                    \"application/json\": components[\"schemas\"][\"AvailableWorkOSTeamEmailsResponse\"];\n                };\n            };\n        };\n    };\n    get_has_associated_workos_team: {\n        parameters: {\n            query?: never;\n            header?: never;\n            path: {\n                /** @description Deployment name */\n                deployment_name: string;\n            };\n            cookie?: never;\n        };\n        requestBody?: never;\n        responses: {\n            200: {\n                headers: {\n                    [name: string]: unknown;\n                };\n                content: {\n                    \"application/json\": components[\"schemas\"][\"HasAssociatedWorkOSTeamResponse\"];\n                };\n            };\n        };\n    };\n    get_or_provision_workos_environment: {\n        parameters: {\n            query?: never;\n            header?: never;\n            path?: never;\n            cookie?: never;\n        };\n        requestBody: {\n            content: {\n                \"application/json\": components[\"schemas\"][\"GetOrProvisionEnvironmentRequest\"];\n            };\n        };\n        responses: {\n            200: {\n                headers: {\n                    [name: string]: unknown;\n                };\n                content: {\n                    \"application/json\": components[\"schemas\"][\"ProvisionEnvironmentResponse\"];\n                };\n            };\n        };\n    };\n    has_associated_workos_team: {\n        parameters: {\n            query?: never;\n            header?: never;\n            path?: never;\n            cookie?: never;\n        };\n        requestBody: {\n            content: {\n                \"application/json\": components[\"schemas\"][\"HasAssociatedWorkOSTeamRequest\"];\n            };\n        };\n        responses: {\n            200: {\n                headers: {\n                    [name: string]: unknown;\n                };\n                content: {\n                    \"application/json\": components[\"schemas\"][\"HasAssociatedWorkOSTeamResponse\"];\n                };\n            };\n        };\n    };\n    provision_associated_workos_team: {\n        parameters: {\n            query?: never;\n            header?: never;\n            path?: never;\n            cookie?: never;\n        };\n        requestBody: {\n            content: {\n                \"application/json\": components[\"schemas\"][\"ProvisionWorkOSTeamRequest\"];\n            };\n        };\n        responses: {\n            200: {\n                headers: {\n                    [name: string]: unknown;\n                };\n                content: {\n                    \"application/json\": components[\"schemas\"][\"ProvisionWorkOSTeamResponse\"];\n                };\n            };\n        };\n    };\n}\n"],
  "mappings": ";;;;;;;;;;;;;;AAAA;AAAA;",
  "names": []
}
