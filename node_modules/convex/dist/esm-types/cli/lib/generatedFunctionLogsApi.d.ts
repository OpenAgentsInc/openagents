/**
 * This file was auto-generated by openapi-typescript.
 * Do not make direct changes to the file.
 */
export type paths = Record<string, never>;
export type webhooks = Record<string, never>;
export interface components {
    schemas: {
        FunctionExecutionJson: {
            cachedResult: boolean;
            caller: string;
            componentPath?: string | null;
            environment: string;
            error?: string | null;
            executionId: string;
            /** Format: double */
            executionTime: number;
            /** Format: double */
            executionTimestamp: number;
            identifier: string;
            identityType: string;
            /** @enum {string} */
            kind: "Completion";
            logLines: components["schemas"]["Value"][];
            occInfo?: null | components["schemas"]["OccInfoJson"];
            parentExecutionId?: string | null;
            requestId: string;
            /** Format: double */
            returnBytes?: number | null;
            success?: null | components["schemas"]["Value"];
            /** Format: double */
            timestamp: number;
            udfType: components["schemas"]["UdfType"];
            usageStats: components["schemas"]["UsageStatsJson"];
        } | {
            componentPath?: string | null;
            executionId: string;
            identifier: string;
            /** @enum {string} */
            kind: "Progress";
            logLines: components["schemas"]["Value"][];
            requestId: string;
            /** Format: double */
            timestamp: number;
            udfType: components["schemas"]["UdfType"];
        };
        /** @enum {string} */
        LogLevelJson: "DEBUG" | "ERROR" | "WARN" | "INFO" | "LOG";
        LogLineJson: {
            componentPath?: string | null;
            isTruncated: boolean;
            level: components["schemas"]["LogLevelJson"];
            messages: string[];
            systemMetadata?: null | components["schemas"]["SystemLogMetadataJson"];
            /** Format: int64 */
            timestamp: number;
            udfPath?: string | null;
        };
        OccInfoJson: {
            documentId?: string | null;
            /** Format: int64 */
            retryCount: number;
            tableName?: string | null;
            writeSource?: string | null;
        };
        StreamFunctionLogs: {
            /** Format: int32 */
            clientRequestCounter?: number | null;
            /** Format: double */
            cursor: number;
            sessionId?: string | null;
        };
        StreamUdfExecutionQueryArgs: {
            /** Format: double */
            cursor: number;
        };
        StreamUdfExecutionResponse: {
            entries: components["schemas"]["FunctionExecutionJson"][];
            /** Format: double */
            newCursor: number;
        };
        SystemLogMetadataJson: {
            code: string;
        };
        /** @enum {string} */
        UdfType: "Query" | "Mutation" | "Action" | "HttpAction";
        UsageStatsJson: {
            /** Format: int64 */
            actionMemoryUsedMb?: number | null;
            /** Format: int64 */
            databaseReadBytes: number;
            /** Format: int64 */
            databaseReadDocuments: number;
            /** Format: int64 */
            databaseWriteBytes: number;
            /** Format: int64 */
            storageReadBytes: number;
            /** Format: int64 */
            storageWriteBytes: number;
            /** Format: int64 */
            vectorIndexReadBytes: number;
            /** Format: int64 */
            vectorIndexWriteBytes: number;
        };
        Value: unknown;
    };
    responses: never;
    parameters: never;
    requestBodies: never;
    headers: never;
    pathItems: never;
}
export type FunctionExecutionJson = components['schemas']['FunctionExecutionJson'];
export type LogLevelJson = components['schemas']['LogLevelJson'];
export type LogLineJson = components['schemas']['LogLineJson'];
export type OccInfoJson = components['schemas']['OccInfoJson'];
export type StreamFunctionLogs = components['schemas']['StreamFunctionLogs'];
export type StreamUdfExecutionQueryArgs = components['schemas']['StreamUdfExecutionQueryArgs'];
export type StreamUdfExecutionResponse = components['schemas']['StreamUdfExecutionResponse'];
export type SystemLogMetadataJson = components['schemas']['SystemLogMetadataJson'];
export type UdfType = components['schemas']['UdfType'];
export type UsageStatsJson = components['schemas']['UsageStatsJson'];
export type Value = components['schemas']['Value'];
export type $defs = Record<string, never>;
export type operations = Record<string, never>;
//# sourceMappingURL=generatedFunctionLogsApi.d.ts.map